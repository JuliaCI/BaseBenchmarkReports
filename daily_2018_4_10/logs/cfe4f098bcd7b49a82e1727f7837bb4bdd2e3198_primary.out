cset: moving following pidspec: 21663
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.675367855 seconds)
loading group "string"... done (took 0.498404819 seconds)
loading group "linalg"... done (took 9.529563779 seconds)
loading group "parallel"... done (took 0.175252898 seconds)
loading group "find"... done (took 6.392176829 seconds)
loading group "tuple"... done (took 2.10403494 seconds)
loading group "dates"... done (took 1.435488023 seconds)
loading group "micro"... done (took 0.197288762 seconds)
loading group "io"... done (took 0.542906768 seconds)
loading group "scalar"... done (took 58.212607898 seconds)
loading group "sparse"... done (took 13.972373612 seconds)
loading group "broadcast"... done (took 1.78124552 seconds)
loading group "union"... done (took 10.597274676 seconds)
loading group "simd"... done (took 3.581628018 seconds)
loading group "random"... done (took 13.333724541 seconds)
loading group "problem"... done (took 2.210680858 seconds)
loading group "array"... done (took 24.458015661 seconds)
loading group "misc"... done (took 1.154130761 seconds)
loading group "sort"... done (took 3.720997027 seconds)
loading group "collection"... done (took 22.14084398 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.612594865 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128526914 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.205060698 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.225452097 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.222464003 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.163780654 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156777305 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.236358531 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.535929801 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.200265221 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155001646 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.420571935 seconds)
done (took 6.025017066 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25547363 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.245208306 seconds)
    (2/2) benchmarking "String"...
    done (took 0.166517832 seconds)
  done (took 1.119892474 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077167916 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.161522093 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.10954989 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.09596192 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095482069 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110978012 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094799784 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111676441 seconds)
  done (took 1.494421674 seconds)
done (took 3.658068403 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.495822651 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.865789959 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.502145765 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.145100315 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.313834717 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.293690066 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.26915198 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.199962291 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.09263249 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090403132 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176060631 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.390779884 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.396458631 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.943596087 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091163479 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.110731428 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.118522835 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.763996925 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08193595 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.121278849 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.499550758 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.192883185 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115666656 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106706057 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.192395494 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132893811 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.15874228 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103208247 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.663078145 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.13224617 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.179822465 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098015656 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.157416191 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.185916899 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.214006913 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.097909098 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.6807852 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201179955 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100806136 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102076755 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671889801 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.117959285 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.186421729 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10670836 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.090688959 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.178755307 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.101821917 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.094353244 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094903499 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087536611 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.164598416 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.43713448 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105670735 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.170331759 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093545287 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.683823918 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098737064 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.275767512 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127189755 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093486795 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091250281 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088753215 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.161185283 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095707108 seconds)
  done (took 19.946386527 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147987369 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.167530317 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079154364 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157443482 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122968128 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081282202 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.103143816 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079012227 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126375901 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181674643 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140461186 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.155280579 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094305647 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091727653 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.148154003 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.232443944 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109815057 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122155525 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090601225 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.0903652 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140470997 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098300396 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109490797 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093602207 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171373107 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205331782 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109524383 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123020576 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091263158 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096921613 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14412122 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145438249 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09422294 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089878107 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.190452648 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107787442 seconds)
  done (took 5.257248855 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.223406459 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104264661 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.228504401 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.199115147 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.133935579 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.184111879 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.168138686 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255743805 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.199699161 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184097575 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115748634 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114361818 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081336218 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082333343 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095263402 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.465444615 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14911545 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.193062313 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166762419 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116789167 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083974259 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362277367 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101547907 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.086531085 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113272629 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064830929 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.202133783 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095632569 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.129622588 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083862854 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.123634066 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133471211 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195188305 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.1876455 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125020291 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141889158 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096424212 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.089556523 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.225723138 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.12361192 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085826877 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079014012 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.133689099 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131780703 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116529993 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.108878036 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.111573463 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223189895 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.104661961 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114766057 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.062142626 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195107938 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.125400935 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085552396 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293987975 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.129015852 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101121949 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.102536107 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.093515762 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.802159723 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.116555227 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082125566 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09794579 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0965839 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079347034 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.447062293 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109510412 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.292156226 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086454699 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158751099 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097400366 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120304684 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087389182 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104166131 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11029237 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086359125 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097128056 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087590739 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079695379 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.107094241 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114248619 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.100258607 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086562928 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081027775 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16231802 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09885534 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108561521 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12778544 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.092147044 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.104312381 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112948866 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098441728 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.089456616 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.165271797 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099440176 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.132742698 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113985926 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130511984 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.105222302 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.232523566 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08298022 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123508288 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101757903 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127420227 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102905052 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081833017 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103509535 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079942699 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081871369 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162448315 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089239908 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081560428 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.107305736 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094834271 seconds)
  done (took 28.614984281 seconds)
done (took 54.528378293 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.441649778 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082359829 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081900348 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101066536 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083466843 seconds)
  done (took 1.576685689 seconds)
done (took 2.339161605 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.324240248 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.201743059 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103109827 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.189383564 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086816765 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.195119295 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.182145166 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.10103432 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206631823 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084937982 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.18524516 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084850172 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104735645 seconds)
  done (took 2.837839294 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101141694 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10407522 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10102078 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117620018 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083942363 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099839602 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118224239 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105743729 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100072858 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110940071 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084185257 seconds)
  done (took 1.886214195 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098379899 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102232212 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090677171 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114543031 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083867859 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096939787 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113601609 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104621169 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096629029 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110692905 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085252367 seconds)
  done (took 1.861561976 seconds)
done (took 7.342625464 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.071587001 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.566784135 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.147483254 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.211288117 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.344979097 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.236254347 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.568848513 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.153786799 seconds)
  done (took 14.213603704 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.166514389 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.112295538 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093398059 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094876814 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092969158 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.108927956 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091747791 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.093625225 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.115054267 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092323065 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.093736502 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.107148085 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096525426 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.091133779 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.110585926 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092972104 seconds)
  done (took 2.483609434 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142938029 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.140992372 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099056611 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100550736 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.11310038 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099205689 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102309463 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.116043865 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095532674 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095233083 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.118533314 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099080843 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098516475 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.110020743 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099038868 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116844842 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.110527148 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.098667572 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116159424 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.117495681 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101093036 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096261704 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114501542 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098778224 seconds)
  done (took 3.451236912 seconds)
done (took 20.914443549 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148024762 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10238414 seconds)
  done (took 1.019388888 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.141340193 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156921965 seconds)
  done (took 1.070122929 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112986822 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090872814 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13765835 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103838974 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091799609 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107632435 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11621356 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.108025579 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092390134 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091797254 seconds)
  done (took 1.827162098 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096586218 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095350044 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.122499228 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.136076769 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.116409507 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094544737 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095509713 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.093459731 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11404951 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090637981 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095473206 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.125453989 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096601653 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126917794 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095946128 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.215386018 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116652508 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095082753 seconds)
  done (took 2.798285849 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092839898 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092210616 seconds)
  done (took 0.960432527 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095552754 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091134039 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09240105 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109059019 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090986334 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090115576 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107325601 seconds)
  done (took 1.453924847 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.497702584 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.261840844 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.357022741 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10899861 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.149223823 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.349952801 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.152668331 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104601307 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.124342667 seconds)
  done (took 2.917166362 seconds)
done (took 12.824648329 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093298506 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.222536436 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.60561177 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114812097 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090688478 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159302703 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.284474231 seconds)
done (took 2.350753601 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344804447 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.139542536 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081962584 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089383039 seconds)
  done (took 1.432117748 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08271078 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099200323 seconds)
  done (took 0.963653811 seconds)
done (took 3.182400149 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089569011 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.122268595 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.107277922 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089954361 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.088658228 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.088379125 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.107174576 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090132185 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087975702 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.107558446 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089650948 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.088184953 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.088676782 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106084293 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088639533 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088041787 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105657779 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.08934193 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089070468 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087976905 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.104921421 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089184623 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088982826 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.104950679 seconds)
  done (took 3.103539579 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108107786 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091242552 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10967502 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094633934 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.09261589 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110857794 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093715487 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090558221 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.110103926 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091152869 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093672623 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.110181527 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.091288095 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095169679 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107933163 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095403342 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093275846 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107468921 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093013844 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093335162 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.109697547 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092057762 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093338959 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109816043 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.094325219 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093965556 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.108046134 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.092208543 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094717462 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093675745 seconds)
  done (took 3.735400109 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.099423715 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087129882 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089656025 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115335907 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087435413 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089078241 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104067245 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.087582103 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091558178 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089118602 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.10981498 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089282595 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086228569 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108493499 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091495876 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093957258 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115481729 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.087780185 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086431969 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090190963 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109983927 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.08723977 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089754847 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.10759981 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089419265 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087289276 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.107799568 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.090971906 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091293761 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08942293 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110469093 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09311211 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089863683 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.116416439 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094307885 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089435282 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.112701766 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.087404209 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090755273 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086754844 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.103891431 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.089574737 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.088421404 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.114544844 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.090523803 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090879364 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.087407837 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.108417733 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.090602301 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095385892 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.103658958 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.087236352 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091671751 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.109605204 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.093613196 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087860691 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091239983 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.10464159 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.091412744 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089737039 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.103982018 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.087710466 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094976149 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090124386 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123806564 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.09629534 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.103956387 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.093344768 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091970533 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095208945 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.109849076 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101311075 seconds)
  done (took 7.71098142 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.10295225 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098954225 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.091147879 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.109505366 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090396518 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090906742 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113854237 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091929872 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091668605 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114750369 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092106239 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091396385 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108329829 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09252956 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091039246 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091296224 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114397272 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091148273 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090491199 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108603725 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092109142 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095614735 seconds)
  done (took 2.949262723 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.240573648 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0972179 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140615055 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125260246 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109365743 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.12143182 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095437473 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096504702 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112827385 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100895911 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099534233 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113150393 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109654718 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116054312 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10062777 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101755526 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112901804 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103109031 seconds)
  done (took 2.892216642 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105517625 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09344808 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.129841984 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09339956 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093042449 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.113052969 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099695351 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111653579 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109987754 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093419727 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099293239 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109021274 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094128188 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093210266 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093723573 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110953673 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093996736 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092378448 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116739882 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097358941 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.114723067 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100221776 seconds)
  done (took 3.055954863 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106888593 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092805773 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127109124 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096939049 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091990164 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109180381 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.098987315 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092887636 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.117391325 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093469215 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094181716 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091745915 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124179352 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092664255 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097085499 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111516382 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092848084 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092045116 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109988452 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092508272 seconds)
  done (took 2.823399397 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.17071444 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127723709 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110791378 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118087232 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127124036 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110449264 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13594908 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109854281 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108701757 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137571218 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108547976 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108818305 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136013338 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115021507 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126764867 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118273902 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134760918 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117873107 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10908118 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126978548 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121520802 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125613631 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118436986 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108788603 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126371411 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109451604 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108218859 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13233933 seconds)
  done (took 4.210256837 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091042669 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091198973 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090528352 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107808846 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091344088 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091334011 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.108311884 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.092214636 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091736825 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090735048 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109299838 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091406685 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091266043 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.108490903 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092649915 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092059053 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090911235 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108922772 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091629815 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091158253 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.106972422 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091722626 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090888968 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09084309 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108594502 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091891601 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090825054 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107965423 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092793952 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091455588 seconds)
  done (took 3.677109493 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105313 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102274388 seconds)
  done (took 1.010553331 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100716413 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106138055 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090794109 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109499707 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099586493 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091068008 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11741396 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097872724 seconds)
  done (took 1.617068802 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.140889958 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.161112833 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.09563299 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.103198674 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.16212936 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.15190751 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132164735 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095659854 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107963396 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085224864 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.15493547 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084676169 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092707696 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107090866 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093525177 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098014154 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.11054154 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100781112 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.09851245 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.110980358 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0984428 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097229892 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112914733 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103322054 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086691612 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111875009 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097040231 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102812899 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107789472 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094744303 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091144233 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.111108185 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095376315 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096331805 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092638139 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.162272732 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098699291 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107905093 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092697942 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096318325 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.144086327 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093473904 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093987647 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110044042 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095069497 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.09622893 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.114957621 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093536063 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08439511 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.10619234 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093486236 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08767152 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.10974468 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093931205 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092857987 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116795859 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094605099 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089735602 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.106629133 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088906092 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090670583 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106450371 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097825684 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095452921 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111180588 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093691569 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092067996 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.111183825 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095290467 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093763948 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109578041 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10922835 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094045593 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.11497411 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097183715 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.092972009 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106564184 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098287242 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091899665 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111265199 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096776492 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122087748 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112309505 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089578836 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089109355 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.117644214 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095061446 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.094902828 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085117766 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11998771 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.093913995 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093672719 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.103808946 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091422933 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08838191 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.116024784 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086338018 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09304474 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.110552857 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.097925242 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098370775 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109117573 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095325577 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097144419 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116189463 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091953576 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.135721311 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10906525 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088605159 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094278738 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115833627 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087670732 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092238736 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.110832848 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090935239 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089259071 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.115243446 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093474622 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093891624 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.114581433 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095906262 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094686839 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.112526664 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093289147 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089599366 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.11368334 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102611914 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094743584 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.11277735 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094649267 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092983262 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093277675 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.115342364 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091629818 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09832795 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109719157 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.092981343 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093939857 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.115604707 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094745191 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088673253 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110998204 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095300749 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092295326 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.114072441 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.09480664 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088640861 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103667734 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.095097336 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088677171 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.112807876 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101557396 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090752264 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.113895873 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090399483 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100793443 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107841848 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098970942 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095411054 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.097787375 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116185745 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086626459 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089947677 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.115043798 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096408634 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090011388 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.112765635 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093419264 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099520583 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.106255581 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097616796 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.095471138 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10817848 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099635279 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095293209 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.095518619 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.109356037 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133314725 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.12314951 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10008378 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093260016 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092503301 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.11675297 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092872608 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096874698 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117954078 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097762056 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090555983 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.111669184 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098807671 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089923222 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.115416801 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092166238 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094004439 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.105572488 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.094888943 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08569793 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.115737137 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097336491 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098064308 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.116484985 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096269682 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092854342 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121538865 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090960343 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097004666 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085392347 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.126942081 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104007315 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098512196 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117828715 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094736847 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092107535 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.114747923 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101919432 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095963254 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.112498948 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094774349 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087374049 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.106645713 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.099412628 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096013093 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089378348 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.111874063 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094704435 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095709663 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.11078487 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087101284 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096503345 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116250144 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089351375 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09441618 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10939847 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092257783 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10104554 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.106334593 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089676286 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096095152 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.117727946 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094912714 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092907189 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.115240451 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099706362 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096332342 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.114590208 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09243273 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101865049 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110468525 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093784961 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089662098 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095460488 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.107208781 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096058843 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093706233 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110256734 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090553471 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096635247 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119037873 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100109938 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091862559 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.117406414 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.099637707 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.09997515 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111026728 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.099006856 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089073823 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105735337 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.09020299 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086261324 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.114308281 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092024576 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.098425068 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092315874 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112396341 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.097927165 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095802419 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.111490581 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.098293252 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123212921 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089178402 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087334046 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110408712 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094233267 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.090361576 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.108970899 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096975359 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095239239 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.097428748 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115589673 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090287591 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094284634 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.118986531 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091302547 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.099265465 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.117814017 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100779057 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091123016 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.117157693 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.09115825 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097658153 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.106910616 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093815867 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092422716 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112919916 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092106984 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091748197 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.108572091 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08754043 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090609102 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.118114767 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.094196239 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.09744239 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.11253309 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093454682 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091415453 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089195391 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.118801241 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092443919 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100089078 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.114305956 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087733361 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088008582 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.116713875 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094242143 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.098350332 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.109604654 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098367195 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100121417 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.115891926 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09529404 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102004452 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101739983 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.118858911 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099439671 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087098182 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.111569608 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098005188 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093161148 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.115577056 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096260387 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08720852 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115514103 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.09929053 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094165392 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111887078 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088674177 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094301545 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.119111282 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097799568 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098242355 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095174193 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115439579 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08975723 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09665325 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.118854271 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094989221 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099542973 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113828677 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.09813009 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091438129 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.119406805 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094975961 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089171015 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.107029699 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.09242878 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.099095115 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.106963537 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098750007 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.098883766 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090584428 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112243298 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099082205 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.09034028 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116997954 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099347821 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092637304 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123463413 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096544348 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092311358 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.118309296 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099570125 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087159288 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.111930895 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093967925 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100649169 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111405417 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100262019 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094821693 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11775726 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097797575 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.098830147 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099690516 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.118533859 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.0880683 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10048048 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11713309 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.096409354 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090844983 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112525918 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090084549 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093250341 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.119038074 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09224184 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101451471 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.119501272 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093557081 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092975538 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.119235255 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094211665 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100118883 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090034061 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116216084 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087841752 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096324195 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.113965683 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.101013543 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091400066 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.109019153 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099222712 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.098801004 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118196508 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097582838 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.099058306 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.107352894 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08939025 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096857158 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.110534275 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103863683 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0977538 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.112216619 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093952792 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097171791 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.094579329 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120051547 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08888828 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091663791 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.114812608 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096140897 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093004554 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.10872382 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.09847389 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09264467 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116587787 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093401933 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.088686671 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.113879632 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101758335 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092330472 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.111139961 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093553358 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100809778 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112200724 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.092260098 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08880113 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119088807 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097900668 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099417914 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.110841858 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095608223 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093138323 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.115647087 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104492904 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092812708 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113395149 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094641121 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099217016 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118436123 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089423532 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093199907 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103000845 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118356683 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.095955179 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097722095 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.114274784 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102037127 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10083085 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.116890924 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090189764 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089970741 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.11338732 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089286701 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096683699 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119438464 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094194926 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092443256 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118099427 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099257212 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097122206 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096610825 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.109263088 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101915636 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091669331 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117741664 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089038135 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.089428131 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.116548482 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101110744 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093426219 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.115555096 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097344702 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096926894 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089900083 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.112937248 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098496003 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09835958 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.121017117 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094664216 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093981644 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.117922281 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10456847 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097934318 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.11413556 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104035918 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.101123371 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11601439 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096279144 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098836093 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.121242921 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097532643 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101788687 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.111984359 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095006357 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102184859 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.120643448 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105228866 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095117526 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.109383454 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.09999667 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093159876 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.109237455 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.100978362 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10186073 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.119994898 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096586775 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092876698 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121794727 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102732161 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094857548 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.112540181 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.095203659 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099689485 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09302414 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.119610532 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092688404 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10190283 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.12325305 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102697858 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103737428 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.110715673 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101182816 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097337849 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.123424804 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096915621 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090369724 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.109135213 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100414709 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103051357 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100940936 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.11921818 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100624674 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099368829 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.116763667 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096907218 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093412644 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.123470405 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100934627 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097355596 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.116658949 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095983923 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096768302 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.11708831 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103278007 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.101634361 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.115697857 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105410658 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102092627 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094414127 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.113054983 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097045249 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098301151 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.116693581 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100241057 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093723895 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.110549314 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101489422 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102374595 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1148276 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103353116 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102651547 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115139662 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100617612 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103574995 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.121493089 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098485016 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096858844 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098661624 seconds)
  done (took 61.642974442 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14833601 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104764338 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118281577 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098846494 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116991804 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119458346 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099673001 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100201439 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119008024 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108372522 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097659635 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117521659 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115291712 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138405686 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117356863 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108016673 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117969161 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100672376 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098689344 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119068423 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114052992 seconds)
  done (took 3.230933724 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116083367 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112343146 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.13064551 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113100095 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124907842 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.111041718 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109997605 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.131348887 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114093865 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126414287 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115795635 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109891974 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126207863 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108003201 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106262764 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127158388 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113713608 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125344624 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11109595 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110777389 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126962365 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111012242 seconds)
  done (took 3.434716668 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129347114 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101508196 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096338951 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118163055 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101954943 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097705045 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121409109 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.09995707 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.1063068 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.112999374 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.090415039 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093840478 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096857191 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119867745 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094303384 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098204469 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126383736 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102445142 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103693679 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.117192451 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091075078 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099776497 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098738191 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109338687 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104194169 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102830095 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.118548166 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101717792 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089230968 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101646211 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.119945403 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092772507 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089787996 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.109564352 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089798318 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10222281 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.120477772 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.09935336 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099298165 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090004743 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.119123055 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103650815 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090807773 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.118038505 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.099378595 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.09353047 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100709551 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.119076501 seconds)
  done (took 5.858232086 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.363508851 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164794583 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.1021055 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135880568 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133645002 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.10786932 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.123612145 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136559033 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100422435 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123645228 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114549257 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.13384591 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103618983 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104772135 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.122939552 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103415097 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104116471 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.11916676 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108042766 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10123793 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.12549769 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.103901077 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110692461 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131459562 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104537363 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100682978 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121777756 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105370733 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.129123531 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.10816766 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105102431 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.125531083 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.112371828 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104251171 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.12214044 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.103788055 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.11271605 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123117156 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103389597 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099648833 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.122734944 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.104659771 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104017441 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.133714283 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103760388 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.12236832 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103196783 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100053443 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.130525294 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.103861647 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108857057 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.132749131 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105250458 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10284454 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125502095 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.115942903 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.121469789 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102999922 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.103850289 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.130288964 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102267915 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104791651 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.13211614 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103167679 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107353397 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.132917917 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.104355822 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104557771 seconds)
  done (took 9.007240916 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134522654 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106534305 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134467379 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114800603 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104856041 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127278049 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106025648 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.125428937 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10693451 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111663435 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126585263 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.199628618 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123554162 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110830303 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105674234 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128784712 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10647707 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125604926 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108296818 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106619261 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.125525258 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115805196 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106712182 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134567636 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117980911 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122631238 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107036914 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106332002 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135968615 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106486582 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116510394 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126605838 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106505564 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133826751 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.118125368 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105757118 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.120916796 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106891777 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105788274 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126207523 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103554477 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133586994 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107575206 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103931393 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126607241 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.108180655 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113837581 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.137466389 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111537352 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130363243 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.106758872 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113832243 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126835953 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107075319 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113598045 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.141208965 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11426139 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134848675 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106697549 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.133440851 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116284484 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120043431 seconds)
  done (took 8.239662478 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10098624 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099581456 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09833388 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118572756 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100080275 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098960978 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118218163 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.100110217 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099673941 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099188948 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119917278 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099363194 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09964959 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118050541 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.100662257 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099200695 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099050576 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119358454 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099993148 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099864518 seconds)
  done (took 2.9589804 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110517318 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116888501 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120536904 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108674741 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101902823 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127396732 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102785119 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101736601 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122534434 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103739939 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109754959 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130042745 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103021617 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107597592 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130158109 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109072363 seconds)
  done (took 2.678338728 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121726247 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117593651 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.187225768 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103693117 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123221728 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109594073 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.10192396 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.124179871 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.1025046 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106691407 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.127600074 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105941246 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102012058 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10222253 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123355511 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106299777 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10008387 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125500886 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101953261 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.187059972 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.10626886 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103582285 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.12356769 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106051503 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10314294 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128246054 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107597947 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10140567 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124301131 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103888441 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105110988 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130488047 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102758113 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106774599 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.12237861 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104580914 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102563725 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.121403938 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107118586 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102596783 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103797867 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124990024 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102180611 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103754496 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.122088104 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103891277 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10064826 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.12914247 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104676366 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104941585 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.122915173 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109897508 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106222491 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.131329399 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110059825 seconds)
  done (took 7.148932846 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113432181 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10394804 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133066539 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101373007 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103097278 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103247512 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125256349 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105828893 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103222609 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121912678 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103925178 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103924614 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.12350437 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104862013 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103823528 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124784332 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100799184 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103295201 seconds)
  done (took 2.861853475 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10877514 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102041754 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106612273 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124260355 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10317392 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102459464 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122934591 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102015053 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101535595 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.121987146 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102835468 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102481468 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100699625 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123643321 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102435128 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101852075 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123951317 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101948369 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103161596 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121288897 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103655312 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102213567 seconds)
  done (took 3.265730006 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113657721 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.183429936 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108105201 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.194411592 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099187812 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097707789 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.129801968 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100012476 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.1148971 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120731102 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098465886 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097790964 seconds)
  done (took 2.338382628 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131834595 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139024559 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124101927 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103964022 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111065352 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129312634 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107354164 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106031144 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135751656 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117670556 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127042937 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115333891 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113918716 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138046337 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111740802 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132359544 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108103916 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10793111 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124436283 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124304685 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10655984 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136755519 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107352416 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127846664 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107880416 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11532603 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135809076 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120011088 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128187707 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11537263 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109913982 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128650628 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116257698 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137862493 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104522087 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115366174 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128236455 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124156219 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131849528 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116404321 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103677243 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131527573 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114976059 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111698202 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136409885 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10805861 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133261591 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108290515 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107556742 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151348604 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111854841 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137944008 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112357847 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114508317 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136803339 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129200443 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140679244 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116084838 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133877404 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119929649 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135541716 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113343138 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115732258 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140824376 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112951749 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135976301 seconds)
  done (took 8.923208012 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146414333 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103575888 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129943833 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120027587 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137341555 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108209902 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107814969 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129430743 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108929549 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105009546 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173114709 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110649083 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136514208 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117392906 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107765093 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129496578 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10797245 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115912658 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126779446 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129604817 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129022984 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116715787 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136648035 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117249508 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118221274 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133850721 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108554391 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128393075 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109998926 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108488946 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134673847 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110393927 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115911033 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125948062 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117788237 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107712966 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129388819 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114088506 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128741266 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113135634 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116324031 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145050563 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109087607 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128425536 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120937253 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109294195 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130105654 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106956459 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108864876 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126278805 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121715165 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140295997 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12078386 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116562129 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130035087 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108337007 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107702662 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130455011 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108981062 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133420176 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116860926 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108168449 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153072627 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108301026 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129700768 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117850042 seconds)
  done (took 8.895860366 seconds)
done (took 168.054514368 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.149816688 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.186082013 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.144699947 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.179254868 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.09466436 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12849551 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.148233929 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.147133043 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093384887 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.116363395 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.09429931 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096312116 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.184741979 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09470997 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09397201 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.118833471 seconds)
  done (took 2.954176525 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.193826979 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.305467543 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109757868 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120659485 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102744431 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098886396 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120139951 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101636713 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099244884 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127914283 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099506334 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095425057 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12736629 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095495643 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099147847 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.11910211 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106886695 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099115535 seconds)
  done (took 3.112786418 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120475848 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143111932 seconds)
  done (took 1.159782905 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129553185 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.213177054 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.281236169 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169276606 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120385586 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140696454 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147660117 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134472537 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188044693 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134068735 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112094117 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.118793605 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.125479964 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104814289 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138114083 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097573065 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127087488 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136090283 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114641373 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100064034 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145328163 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103623017 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.125743154 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11509611 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178117588 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135253021 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103284698 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.123589174 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.10180611 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114318165 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.130080899 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117025545 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.133198604 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.157564527 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124596649 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.154463321 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.12853347 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.100870992 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113134258 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.122317525 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104093136 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.125780618 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.114547712 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097409585 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.124560981 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.108647139 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103612413 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.125834159 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10835813 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106987513 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.130240681 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107235693 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.174129547 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.106218632 seconds)
  done (took 7.893404063 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.862817665 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140408588 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100145223 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.013692669 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152002524 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113962572 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.884924227 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.123758803 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256950347 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.885318636 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114105246 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.136977201 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240715302 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.281669041 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.270299079 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358603222 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.723487498 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.13577889 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131212038 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163194489 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110277744 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125784609 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.144301574 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.522552365 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102432053 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099739382 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131076645 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113720123 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17899843 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101319357 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104052768 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197986736 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.296590103 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210490593 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100948294 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122789774 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100000645 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18598216 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27534313 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220758634 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.195319016 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098307174 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099418214 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131837106 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121576516 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097269667 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179364226 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192400884 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193543785 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104255719 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135789248 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1123035 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12942749 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.158111506 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12153466 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362044952 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.368255741 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099872222 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13310058 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115902671 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270375822 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124305707 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23796632 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128923473 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216126805 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122510112 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.843807106 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.165087718 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123149982 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108302659 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.1306549 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107644314 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108865378 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191164125 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.505027795 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115104115 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104766844 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123373552 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23612221 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102004191 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100431026 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183595433 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100942424 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131925187 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115266087 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135465481 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189522256 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251265521 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13634393 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111530325 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12707079 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115752428 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101927553 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.233454992 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231129307 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177909047 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233826157 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111511134 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18419717 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186372196 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10943249 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190466723 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108035234 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139899788 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109051632 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224435264 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.158507845 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105351496 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.129685158 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110858065 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.158651183 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104717223 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110844746 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189876533 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.559989536 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186305448 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.098232988 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10613742 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134272049 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159278319 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131975081 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266239286 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111397346 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187813207 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108647854 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.122080583 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109339777 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.182509214 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11199864 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132824 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109188025 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132150132 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.259692618 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222196749 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.137998841 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253113178 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.197317232 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109645516 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193356058 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110629454 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.18973398 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112887507 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132811608 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102610787 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.83600522 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137715569 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.111032019 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107293182 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.210533823 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100107307 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125917357 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102564144 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098065403 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817149869 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127059584 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100388098 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103419354 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129656508 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110811924 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110502154 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129414806 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157468212 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.269928934 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114975804 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.13000862 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101692375 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.180456848 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103015817 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102385344 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123578515 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102701815 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11055662 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128928224 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104564707 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193629815 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.180741262 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.233620776 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.638055964 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101595865 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101710371 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26701426 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102414464 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327871818 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132688486 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.238953602 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186330097 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101096382 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362795255 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187932072 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185881874 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128288177 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19178323 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099827942 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110302871 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.183802167 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10212095 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131937595 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.154018023 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141310903 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.11478077 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.300905498 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102305748 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253636864 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099930779 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190235465 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103522633 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109184805 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.351907492 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103138448 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119372075 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.181328532 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128535059 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103600803 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.679176414 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102290084 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1356873 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110219282 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.237548797 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.18703238 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1103853 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135619726 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115759796 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182633771 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.234753176 seconds)
  done (took 48.207966656 seconds)
done (took 64.222015711 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.266071858 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176996039 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.282550501 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177703006 seconds)
  done (took 1.894368977 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.241061617 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.158354404 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.199097537 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.120836988 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.229552639 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099092299 seconds)
  done (took 1.972169818 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.17578978 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167970319 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145233237 seconds)
  done (took 1.413177888 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199691422 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214983261 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.32394672 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254656564 seconds)
  done (took 2.005433879 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.261979791 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115740121 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124291833 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.205586839 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.221300452 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.204316954 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123125868 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174706483 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128349802 seconds)
  done (took 2.520909112 seconds)
done (took 10.728127484 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.294818647 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.163835222 seconds)
    (3/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.365419843 seconds)
    (4/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.216577952 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.224765863 seconds)
    (6/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.243473421 seconds)
    (7/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.0936983 seconds)
    (8/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.308492672 seconds)
    (9/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.303195384 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.109876122 seconds)
    (11/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.189686837 seconds)
    (12/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.083746888 seconds)
    (13/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.191967513 seconds)
    (14/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.280283712 seconds)
    (15/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.294548956 seconds)
    (16/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.304529377 seconds)
    (17/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.250861012 seconds)
    (18/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.27629571 seconds)
    (19/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.115943313 seconds)
    (20/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.192799018 seconds)
    (21/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.2578424 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127813691 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.2056077 seconds)
    (24/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.122814237 seconds)
    (25/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.105277448 seconds)
    (26/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.166763804 seconds)
    (27/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.167155816 seconds)
    (28/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.264325399 seconds)
    (29/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.162186 seconds)
    (30/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.145546793 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.13125187 seconds)
    (32/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.085865645 seconds)
    (33/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.194142299 seconds)
    (34/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.171340811 seconds)
    (35/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.087303652 seconds)
    (36/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.180615902 seconds)
    (37/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.07748114 seconds)
    (38/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.189091345 seconds)
    (39/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.15819509 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110478871 seconds)
    (41/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.253247181 seconds)
    (42/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.1256228 seconds)
    (43/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.098211614 seconds)
    (44/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.08289989 seconds)
    (45/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.227266962 seconds)
    (46/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109289206 seconds)
    (47/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.187271454 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.119256165 seconds)
    (49/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.133296682 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.103612614 seconds)
    (51/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084526358 seconds)
    (52/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109515711 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.126356312 seconds)
    (54/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.152546879 seconds)
    (55/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.078976708 seconds)
    (56/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.219774775 seconds)
    (57/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.085499841 seconds)
    (58/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.082602869 seconds)
    (59/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.210137952 seconds)
    (60/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.163153645 seconds)
    (61/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.132406615 seconds)
    (62/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.130906905 seconds)
    (63/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.134607357 seconds)
    (64/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.165827045 seconds)
    (65/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084928762 seconds)
    (66/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.176363055 seconds)
    (67/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.125538613 seconds)
    (68/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.148037778 seconds)
    (69/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.107172555 seconds)
    (70/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.150633871 seconds)
    (71/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.20956648 seconds)
    (72/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.078988224 seconds)
    (73/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.136778504 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.120326784 seconds)
    (75/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087150573 seconds)
    (76/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.084098393 seconds)
    (77/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.103597897 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.100601199 seconds)
    (79/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.109411422 seconds)
    (80/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.102557495 seconds)
    (81/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.156548005 seconds)
    (82/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.132462913 seconds)
    (83/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.104661801 seconds)
    (84/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107898758 seconds)
    (85/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126410632 seconds)
    (86/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.079642235 seconds)
    (87/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.131108399 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.113539857 seconds)
    (89/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.080329915 seconds)
    (90/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.268149429 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.113055242 seconds)
    (92/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.15439154 seconds)
    (93/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.077500719 seconds)
    (94/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108625489 seconds)
    (95/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.130444457 seconds)
    (96/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.103581699 seconds)
    (97/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.164338925 seconds)
    (98/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.079827803 seconds)
    (99/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.127895877 seconds)
    (100/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084779552 seconds)
    (101/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.179613789 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.127360708 seconds)
    (103/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.083606019 seconds)
    (104/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.108902847 seconds)
    (105/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.079388023 seconds)
    (106/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.102595164 seconds)
    (107/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.111907555 seconds)
    (108/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.106641736 seconds)
    (109/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.085359268 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.126352908 seconds)
    (111/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.1079689 seconds)
    (112/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.132837518 seconds)
    (113/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.148814689 seconds)
    (114/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.081345293 seconds)
    (115/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.083643117 seconds)
    (116/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.082936648 seconds)
    (117/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.083924513 seconds)
    (118/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.134418668 seconds)
    (119/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124461478 seconds)
    (120/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122533748 seconds)
    (121/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.159865668 seconds)
    (122/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.165991409 seconds)
    (123/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083533276 seconds)
    (124/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.142429061 seconds)
    (125/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109731376 seconds)
    (126/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113039769 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.135731002 seconds)
    (128/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112346312 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.103037028 seconds)
    (130/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.123838498 seconds)
    (131/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.105241956 seconds)
    (132/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.085053948 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.125359263 seconds)
    (134/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11139266 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103206236 seconds)
    (136/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.080067298 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.125558642 seconds)
    (138/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.077947474 seconds)
    (139/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078118698 seconds)
    (140/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.127924146 seconds)
    (141/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.103600058 seconds)
    (142/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.081829501 seconds)
    (143/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.132619612 seconds)
    (144/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.07694322 seconds)
    (145/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.076563744 seconds)
    (146/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.133914795 seconds)
    (147/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.084655327 seconds)
    (148/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.103013206 seconds)
    (149/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.123779318 seconds)
    (150/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.102426068 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.103659752 seconds)
    (152/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.077881481 seconds)
    (153/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.132944852 seconds)
    (154/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.084040693 seconds)
    (155/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.077357145 seconds)
    (156/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.107124562 seconds)
    (157/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.10254437 seconds)
    (158/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.085239266 seconds)
    (159/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.078124582 seconds)
    (160/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.159475969 seconds)
    (161/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.108825297 seconds)
    (162/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.083178368 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123733636 seconds)
    (164/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.191426596 seconds)
    (165/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.078492363 seconds)
    (166/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.078583098 seconds)
    (167/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.085254681 seconds)
    (168/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.206526493 seconds)
    (169/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.078092255 seconds)
    (170/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.100229607 seconds)
    (171/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.083608703 seconds)
    (172/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.099896398 seconds)
    (173/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.07844463 seconds)
    (174/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.077224624 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.099821749 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.124573603 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.104557427 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121993745 seconds)
    (179/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102707061 seconds)
    (180/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.135316202 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.1022828 seconds)
    (182/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.082581707 seconds)
    (183/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.102136417 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.105264853 seconds)
    (185/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.084581057 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.101923463 seconds)
    (187/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.134544635 seconds)
    (188/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.101030637 seconds)
    (189/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.111957996 seconds)
    (190/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.104885977 seconds)
    (191/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.078071597 seconds)
    (192/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.08465114 seconds)
  done (took 26.334361562 seconds)
done (took 27.262936432 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.204714502 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.125725424 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.11010548 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10969986 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.200768155 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117109706 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.149707039 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112294924 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120280289 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.133566872 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100784758 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121960113 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.132390568 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.179200575 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112044166 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.128661552 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101613814 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.120344152 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.149577654 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127289705 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.202197383 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104302708 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119222287 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.127346208 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.176238163 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129101473 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111521956 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110473525 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.147572474 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112698515 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110195229 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.126611631 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127732986 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.126817044 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125001751 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112408376 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101914556 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083703567 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.135801584 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112830277 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.123013652 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.136198563 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112112899 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102539502 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.136170775 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111535115 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101724551 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.138272699 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101447601 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110988888 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128752754 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127475307 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109863693 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.124554185 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101815827 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102702778 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.144904122 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102777066 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12454264 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125410378 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.103948057 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102489766 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113248674 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126699214 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111433323 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101569708 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.138153735 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.113545778 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109794862 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129369278 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103383765 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111131093 seconds)
done (took 9.860081492 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108086855 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148234256 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.200212542 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.211306547 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.13094015 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142524027 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117415426 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126129718 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138582036 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122735378 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.139024032 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.158849456 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.183213178 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.143003335 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118023416 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.13880886 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114907272 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111747548 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.20767693 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127326148 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152125529 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.1194481 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128448101 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.146091906 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106971664 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.15442334 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11140167 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114550174 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129500881 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.125832127 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126548266 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.131761635 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.110312432 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124301858 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.147661646 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117357099 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118087258 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.138388695 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108429463 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106638602 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139355051 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122402041 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.130612982 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.120290554 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114483314 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.145216743 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114893504 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119248173 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.131120054 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114800704 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107368784 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156028845 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.11962185 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122701953 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.144804149 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120301761 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.118804517 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.142582928 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111475426 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119057034 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.131824123 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108291907 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108097335 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.152732578 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110386431 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.143407314 seconds)
  done (took 9.635416467 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127952164 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.1364095 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141491165 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117544883 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111945642 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125469146 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101168429 seconds)
  done (took 1.82684811 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.10557921 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185466108 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209456649 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209608419 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.206254077 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.194960026 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150524283 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102667401 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13647488 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.138900413 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186026556 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.237934861 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11205398 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.143408176 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.212862214 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.103477146 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.21388177 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.103251612 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116331677 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211640153 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119215545 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.158903948 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115978639 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102379609 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.205352158 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.10440452 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.257551751 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14654794 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112762057 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117224058 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.141809854 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.182108679 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.207686069 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116686839 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13569531 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.185039702 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.206765623 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116828592 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.220480124 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106869075 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.206373201 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116436559 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.143625621 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.11747025 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117240711 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.19524965 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122453805 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.143559643 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116868579 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.21545168 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.114138951 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209703192 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114650496 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116484433 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.137702978 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118699216 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123027112 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.142785441 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.190178915 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.145620562 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184142515 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.211740924 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.208134891 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.211067483 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128591709 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210188964 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.179382645 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.141153299 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113087723 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118857407 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.211970856 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11566271 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.140551755 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.175515095 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146348601 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.186456752 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.211284687 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113943967 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.142469857 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.106762165 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115231161 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.128682684 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.176399718 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141159709 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.134545134 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121285941 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141462472 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.118370848 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.106754236 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.152431281 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.116319356 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.137826554 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123242671 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11699337 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146608721 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.191160503 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.140020253 seconds)
  done (took 15.79050439 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108255979 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104580085 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108098034 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129506015 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104956871 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104330638 seconds)
  done (took 1.643469326 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.144438787 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117644789 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.151221144 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118950386 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.185423211 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.19021585 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.219323314 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112093525 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159635783 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127591761 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.215812871 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.192457222 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.21734343 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119603519 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.219635208 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.144057138 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.195371692 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140587704 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127556258 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114477963 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.142760995 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121935085 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114873587 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.207050047 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118425139 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.14536361 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112711521 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125515627 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.15127786 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.11463768 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.140334156 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.144049361 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111308103 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.135901216 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.196712274 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.137023906 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114190058 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120624226 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.145706515 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11978567 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.219445311 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115808185 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123757695 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.14695244 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112418816 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109898881 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.147238642 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112436809 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.22138704 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120587423 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.146316477 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120452551 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118854684 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.146330346 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.11246962 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112494056 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.146488256 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.197085178 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.147906245 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111266047 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.142433737 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120591783 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112664902 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.148470905 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.12010698 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120591398 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.135448583 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120776958 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115467528 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.142856358 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.1223565 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119307547 seconds)
  done (took 11.237816903 seconds)
done (took 41.10475175 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.652346029 seconds)
  done (took 2.635419788 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.889813253 seconds)
  done (took 1.876554763 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.708724004 seconds)
  done (took 18.726914673 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.427781905 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.465749775 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.157756785 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.146949844 seconds)
  done (took 3.18376875 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.822830849 seconds)
  done (took 1.833087281 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.328119594 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235565294 seconds)
  done (took 1.555826543 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.722254168 seconds)
  done (took 1.728723049 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.503559664 seconds)
  done (took 2.497275964 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.285297249 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.241077164 seconds)
  done (took 1.531080244 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.604361193 seconds)
  done (took 1.608961024 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.75551417 seconds)
  done (took 20.760732052 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.258721809 seconds)
  done (took 1.27021356 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291423198 seconds)
  done (took 1.303436445 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.500004822 seconds)
  done (took 4.515106023 seconds)
done (took 66.02941435 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.118965822 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118070908 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.140738061 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.116931655 seconds)
  done (took 1.494403919 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125673125 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118692651 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.146009461 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118222836 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123345813 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.141961301 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.117676025 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120787837 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116791078 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144052721 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118955282 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117281774 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145930021 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117826041 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115679651 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145110459 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120798146 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117138211 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143600392 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119059046 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118459577 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145482716 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121708366 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120022631 seconds)
  done (took 4.054353515 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.117513895 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108585863 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109454487 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132083418 seconds)
  done (took 1.485616423 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127275751 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130717395 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153069664 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126844668 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128598361 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152767979 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11782071 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113834306 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142764179 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126069298 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132367465 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156225774 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129679797 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.144915349 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127729776 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112147429 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.14208654 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130228094 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124668488 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.151085614 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119354138 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124014516 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.147615666 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.126369429 seconds)
  done (took 4.198511368 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.193711462 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128168751 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173860998 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161180382 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.176732448 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115992989 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.143226441 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148918661 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124741279 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.144278877 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.120924644 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162024988 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.149482965 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120409334 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118400884 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.149310474 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130804508 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.14736594 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.165461947 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122620782 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149417734 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.129409265 seconds)
  done (took 4.196518941 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.123903275 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109097593 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.128487074 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.110818048 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122454406 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.135329076 seconds)
  done (took 1.755695142 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.110135101 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103241603 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103109898 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127483187 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107859704 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102664114 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.126500785 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.103883401 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104288925 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101980178 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129919803 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102614071 seconds)
  done (took 2.338803833 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.33162927 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.109910815 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135553231 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111583544 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113465906 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105696325 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145198166 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107780014 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.269649451 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102731956 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.132496078 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.194650385 seconds)
  done (took 2.884779595 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201935382 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147335675 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25046764 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.378259273 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18381333 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186840488 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275647821 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188300367 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.202365316 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137435111 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209960708 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158704778 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178192837 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182402711 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165835653 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.155128549 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188496404 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204116372 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167286807 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236899731 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155459453 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199128175 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18625892 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174588885 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138413113 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186860914 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11824142 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153398323 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165047647 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189528705 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196504107 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150572718 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141454141 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215245449 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252404465 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200107718 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270118697 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132000824 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.193024355 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.188222356 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255693176 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166364983 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212178623 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151985758 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128450395 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209157446 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177650459 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.182576995 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.158301884 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143790972 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207731258 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178070255 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201482024 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134120489 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318535532 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159601235 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141231631 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205322091 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186679291 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225811388 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203294367 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122618706 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202907994 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215697896 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211396489 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168043408 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161446099 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151709868 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164208231 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.232329493 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206789051 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158715232 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.231977972 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157179197 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169662149 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198935102 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153365948 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230292474 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197913099 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.11883778 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174070986 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135529851 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124911648 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.213793441 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120734348 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241482325 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130861208 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.34179342 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21138506 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153930792 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186946569 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184549917 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162064016 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172231042 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101693819 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141187212 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.186399889 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154808685 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155821635 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154464499 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165799155 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124740033 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149849541 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.149379415 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166838349 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.159124203 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161222456 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195309719 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129742351 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205100075 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146008136 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.18864854 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165860982 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217547019 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156247235 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133234101 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243503931 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167272458 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.162384736 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173531766 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222512257 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.174522966 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13578683 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189090254 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193615542 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170634774 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196711138 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164121601 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133481971 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.165599556 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170574219 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188032505 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151694999 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153855627 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.164854808 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216760556 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124631165 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1661998 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179032834 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159420544 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124114501 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161055852 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136426664 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139665073 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.174766979 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137176551 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179656938 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16326952 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19116138 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154559111 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160750709 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170402876 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157919168 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.166812398 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17490979 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118336626 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.200621007 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194787785 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156522319 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17857808 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.190027741 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209344434 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171435793 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155298298 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181734038 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155955747 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.12046822 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187828282 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171154928 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189034346 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.186993561 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208161648 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.190418552 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.188630946 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149020151 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194331536 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.181588904 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183793347 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142478389 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19924437 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167726807 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.147626573 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123589063 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126456893 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163556313 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129581521 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162635738 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176580717 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1907298 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204741983 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167339266 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164190592 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190082801 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.152408032 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157539233 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203177291 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137420809 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.216748985 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215648381 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17583226 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16688276 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161571107 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.14705774 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127220832 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.131863828 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189635165 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137071282 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16287898 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14058162 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219006482 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171212158 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175910951 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217587639 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163712943 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225683509 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118564654 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.1870634 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167597756 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194463754 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184292388 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157770302 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.159251136 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220419611 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139438358 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219650299 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195715097 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177766352 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221579786 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.162197537 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160554035 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146144009 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188439301 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136856469 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19080572 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146276431 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157032799 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151222559 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.164513944 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141207546 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212265027 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142354888 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204537227 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.156801872 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198306055 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123562654 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169089868 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174607512 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1724046 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104689874 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196127442 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193449032 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176861601 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154514543 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200412159 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129068069 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.338431722 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215212047 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175013908 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164272353 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137864322 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199578587 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161648654 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188326934 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183793544 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170145669 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232503909 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167664741 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.170057924 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131080807 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147449177 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178593817 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136978846 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.179762125 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.158889591 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.170968638 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213461442 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136052168 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194907877 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175115185 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.169523245 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.150229617 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13739453 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252082884 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197278762 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170492749 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.192329963 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190351206 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182581294 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122504265 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153936727 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131374593 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212953296 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128941181 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2026793 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.20528791 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185393671 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200208225 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188417117 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142330548 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127756613 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194163793 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148087366 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215477124 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162017576 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137636992 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216914691 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126363389 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129353172 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189298369 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304623162 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146961205 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198064627 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105433649 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.302120227 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129359885 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130436386 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190104366 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194928022 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134760306 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181322422 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20058393 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14054384 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190515401 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133718577 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208977217 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212305787 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164755504 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203206057 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.144554582 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191886679 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186011638 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173070679 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17224046 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.146290002 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155942121 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220822548 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.207731415 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131753177 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196862729 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167869246 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197949205 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172170426 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166970324 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181031233 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156813532 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165350678 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166445774 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12620627 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184845486 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.178361667 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157020294 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174183445 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198082996 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129618051 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15590394 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146843324 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191487761 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141083339 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.156460761 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183280402 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.156516526 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180348463 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235020368 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129929779 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194850895 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14573099 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158126809 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13816977 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143420713 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159639562 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172663972 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208298338 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.131361476 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205751111 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164839111 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191071818 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15448162 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1723383 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.332660025 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.155056741 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189175038 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178031941 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194675093 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178694159 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201778736 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169515634 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176458178 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163561087 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176177888 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.217755806 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192602223 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165471807 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158919796 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142652176 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137643839 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.16337214 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151483503 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196471637 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140224209 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.163104458 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.166222441 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172411775 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.146490294 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140715035 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227053671 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177930037 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185997862 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214995389 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135489072 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203533433 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204062121 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128694119 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.191681269 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170513894 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172868778 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151250484 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132643769 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.166114933 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238972202 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126383806 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158101431 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200331307 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195308278 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173414922 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134423051 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206326632 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16731574 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174296011 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126239217 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.181025882 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170380502 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162622558 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126015361 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200173224 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158171636 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.192932667 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14158835 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.202420494 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194410187 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.151006876 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134476084 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30507687 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159258461 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222878623 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13488401 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166051292 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144465892 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184895084 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.163791893 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197987103 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.130793171 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128437067 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.17375992 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157694993 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.168536553 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168398694 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213479702 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159072881 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211977556 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131275776 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281957679 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141083846 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200414807 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115263979 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.155745402 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140476452 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134932441 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170614954 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210088702 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213361551 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.191143512 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.146841621 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164301963 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126207973 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129505275 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193778121 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149321858 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195577047 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14638127 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.131466554 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139382222 seconds)
  done (took 85.977585479 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166256346 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15271708 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168974713 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223024495 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193882143 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289686894 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229302336 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24532956 seconds)
  done (took 2.778283907 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.123667259 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.159996012 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141505188 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143336381 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110737541 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.443322639 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158330702 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.119892589 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160308157 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.151738987 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.13520823 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.552192843 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116195429 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143137139 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121952723 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.134347746 seconds)
  done (took 4.013213898 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.12528275 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545664255 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.954741643 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.29319684 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.260623873 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.202807775 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.746302594 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.19786125 seconds)
  done (took 12.430867283 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.156297238 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.143661963 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.370157456 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.272155912 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.205204241 seconds)
  done (took 2.263007501 seconds)
done (took 130.875103317 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.128219164 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122516564 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121031166 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152575993 seconds)
  done (took 1.62185258 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.181224424 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089814877 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092136689 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117330014 seconds)
  done (took 1.593478969 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.507826884 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091449101 seconds)
  done (took 1.737775173 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.154487684 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134938856 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164351752 seconds)
  done (took 1.575925086 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.147343174 seconds)
  done (took 1.258004575 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.129394228 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126314439 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.231705904 seconds)
  done (took 1.603974145 seconds)
done (took 10.50659242 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123129733 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.930991973 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.43229231 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131922762 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710833042 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.425878638 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.421047509 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175111643 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173290894 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138283127 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131004174 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688817981 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.431064327 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.875083148 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.418101066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.875128511 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.692940395 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110965066 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145613046 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111418381 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.428360654 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109615626 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111362526 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111326708 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.71740077 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418300501 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.1082243 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.919125436 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109164598 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.13980257 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.400136192 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109318464 seconds)
  done (took 20.925895591 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121972758 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.166718495 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145774505 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111811261 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112906093 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139469204 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122036745 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123205736 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203063375 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109393259 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160301087 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.1097237 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114251879 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138374424 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135199769 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108316984 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.140968263 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111872674 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117275752 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139524223 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.131497824 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108740498 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141117037 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112205568 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109074828 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159664197 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109967902 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121624751 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138055804 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114247212 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11381729 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139109522 seconds)
  done (took 5.254562585 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.163046794 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173934641 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147504373 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147315157 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186436749 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111972338 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.224459548 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148805562 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207857607 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110168199 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13140281 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139388507 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150134121 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110407367 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164452465 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110360734 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.138709651 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113903832 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11825883 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.138415827 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.133533332 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109170128 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.139344544 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114078064 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110948744 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161215177 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110967929 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12268962 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137915998 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114944697 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115107266 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138972183 seconds)
  done (took 5.562382493 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.130066787 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125329765 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131354932 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.161992916 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120450058 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122825979 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153494077 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120514208 seconds)
  done (took 2.18824511 seconds)
done (took 35.047744566 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.139082738 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127865256 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.127865847 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151906513 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.18665422 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.145298068 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.125294282 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115769847 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.150239107 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129372474 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109147794 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.114943104 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156759152 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.118662304 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.218005285 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.124264111 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.223420753 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.189551926 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.146458283 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123519665 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116707372 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.222841587 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121218835 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.143888176 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.190512633 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111990238 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.212857473 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.1190205 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.149187531 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112710755 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.21938159 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.121923525 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115588234 seconds)
  done (took 5.994209419 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.21114239 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.120223482 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149868274 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118645724 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119636343 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147601937 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.208075192 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.148471832 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119037758 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.11877534 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117044011 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.220538956 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.124692933 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.145236354 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121520922 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.108961105 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.238359826 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120567432 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.109814447 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.122843996 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115517129 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117913096 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.24867676 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.114839192 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.146567749 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.119417236 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123461256 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122938956 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.149652181 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120197444 seconds)
  done (took 5.405610881 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.130804371 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132057803 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.164642396 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18512875 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.148038325 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.16046076 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139173875 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133532186 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.169742537 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113378032 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127454506 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177245104 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129011798 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122178081 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146780226 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131430151 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135538737 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143282489 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12102255 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128537977 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.162994419 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130563654 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135702959 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.149516322 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111220076 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119842386 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.153033316 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127650872 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120480488 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.157332661 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.114946103 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116499029 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.14442329 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.149195004 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114277211 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.156700455 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139571829 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124401079 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.156477799 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.145579358 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115939698 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.144321204 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138872713 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.195360971 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115518868 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125845743 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.152901569 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.128832709 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111855213 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131005556 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.185675576 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113194443 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.163216107 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112705567 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111617072 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121015712 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.143967611 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117197291 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127592671 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.145341773 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138706098 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120835726 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.154395936 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.116198051 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123987716 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.140833861 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113019886 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116959368 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.168301107 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121570939 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.14894098 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.142084348 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126616385 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125325728 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.151831304 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126567689 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113017905 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123905716 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.153735542 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119908828 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125702684 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.145844357 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117313712 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129571003 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.163665808 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128899057 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123980931 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.156473094 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.1175901 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.11427214 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.15994057 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115320282 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.117572368 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.156085058 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115039424 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117660027 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.155179744 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12646848 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111455075 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.166764868 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.118563705 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.112891141 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137732169 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.146526578 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119019341 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122880507 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.18509998 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113415209 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123898409 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.157521935 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.113234192 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120382792 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.146527559 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.112862442 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131312769 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.159498619 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12147798 seconds)
  done (took 16.968287277 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.321998373 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.302185586 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.184806754 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.243057686 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.127136556 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.236695319 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.299715968 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.302464615 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113570417 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.18400385 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.166755026 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.272020265 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.144672278 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.142808648 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.304615709 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.35898309 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.173061413 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151586846 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180310541 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128318066 seconds)
  done (took 5.487819427 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.136826352 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148141511 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165729054 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.1421797 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123937021 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159055145 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11391395 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136758189 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.154271055 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123823124 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115537753 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159212625 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12725903 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.13084193 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159305787 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145500081 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120802996 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149381789 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136612483 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117896692 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.130927808 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139613271 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.150803539 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.137146334 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132766952 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.152833394 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.113276556 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119525441 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.11943111 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.151484459 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.11848629 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.163314297 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.121911403 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104842604 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125507583 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.157964626 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.120809879 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116277299 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.147890501 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.119076378 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128578297 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.155912179 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12386723 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097479275 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13276554 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.137037937 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.13025499 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126138769 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105397307 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.162749774 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126729693 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.12834668 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.150914533 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.137300464 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119881142 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.160753839 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12661717 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128281481 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.149103894 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113039817 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111856242 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.146808172 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.124452706 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129739745 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.15430126 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135822581 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130720953 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.142674649 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.11897733 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.11709364 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.146872343 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.128690691 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.133412896 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.152506252 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.122078574 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125524672 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.150521651 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.094192507 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124159831 seconds)
  done (took 11.70405392 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.145740697 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121760801 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.160287541 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.150926669 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125208022 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.149189653 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.123129847 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135150436 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126409151 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.159189117 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128165874 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126560836 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166016505 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125366315 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121787118 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160174072 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126977839 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.181419016 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.133883593 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142106729 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.156391928 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119896884 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126066916 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.154172946 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143349295 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.1257849 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172280197 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.126928359 seconds)
  done (took 5.097202027 seconds)
done (took 51.784420679 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.293814942 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.47566695 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.252539364 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.254801507 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.292600023 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.25807559 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.254741329 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.269146615 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.638976673 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.227913586 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.255227575 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.265158737 seconds)
done (took 28.889899999 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.33558756 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.794230304 seconds)
    (2/2) benchmarking "String"...
    done (took 1.557652491 seconds)
  done (took 4.493881469 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.244061578 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.248045487 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.497590594 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.246350694 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.270044534 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.243058449 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.260557923 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.248504565 seconds)
  done (took 16.156479194 seconds)
done (took 26.374582783 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.295231904 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.427977897 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.481410954 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.255599958 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.256018453 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.242829103 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.247667324 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.257570034 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.250511776 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.256477239 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.659409432 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.518630476 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.259878507 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.626700826 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.256561148 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.24647636 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.260183493 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.47727438 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.247922653 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.280563757 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.221298103 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.22385573 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.269547899 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.24608036 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.251718073 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.261494503 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.278516686 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.248713199 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.422370152 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.267752662 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.276166058 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.249839034 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.271165177 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.245765855 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.250118223 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.249347664 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.424872176 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.252356647 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.230809179 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.269959838 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.426667193 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.245632268 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.254362585 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.256765067 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.245368547 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.288717651 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.23190011 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.37244382 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.268434971 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.256975621 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.329888867 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.61159435 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.24628876 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.259141123 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.257535766 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.455368309 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.259814935 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.296047701 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.272152353 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.257343084 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.257059099 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.250518022 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.312891448 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.250617691 seconds)
  done (took 146.522155728 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.248103789 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.250610331 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.249759347 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.252794366 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.245187769 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.245416567 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.248544181 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.246722538 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.246713935 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.245616768 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.246855437 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.247237802 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.250866599 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.207636835 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.260575382 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.276933664 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.251484178 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.264442827 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.256986694 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.251978833 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.27321916 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.248829832 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.247521344 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.247147484 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.28864099 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.315890859 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.277746417 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.276539406 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.256974072 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.253037386 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.290165182 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.298766657 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.853874812 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.102387317 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.270037561 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.272167837 seconds)
  done (took 81.911846839 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.25180583 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.253687679 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.251943377 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.283291086 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.248877261 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.826186152 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.824687752 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.222709279 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.971229808 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.604133278 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.462251128 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.248180045 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.344628331 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.263335332 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.252077906 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.268348911 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.278670695 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.254564052 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.255784807 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.827263752 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.267064459 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.441725735 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.431249755 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.266709947 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.287759368 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.64460351 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.247646716 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.28830416 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.585355595 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.299652368 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.250537892 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.594021757 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.241810327 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.249917323 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.36597109 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.251700438 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.284003707 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.25314191 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.535676762 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.249255015 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.255283268 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.253993832 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.255804227 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.892357753 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.254699508 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.831322589 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.257087674 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.196556216 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.251026877 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.255011177 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.156037044 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.893087266 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.249571746 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.253635965 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.257463732 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.253438027 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.254429833 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.256069922 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.288251764 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.167485888 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.346572406 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.257041558 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.259529342 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.286566461 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.25422919 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.392782033 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.255434688 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.486503027 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.312940405 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.353889805 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.831198645 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.257199225 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.351856652 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.368635883 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.25240027 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.25385336 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.257331774 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.256483146 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.368543797 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.249579514 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.939692737 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.250822754 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.432246177 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.267439631 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.614399844 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.356160392 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.253795748 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.6097087 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.256193758 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.256617973 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.952552423 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.346305861 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.252631564 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.255050735 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.255647944 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.939605618 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.832196198 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.485870698 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.260015227 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.826572681 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.259923034 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.117266053 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.809398165 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.888215278 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.253581436 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.367625482 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.430614759 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.270082474 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.256763152 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.616596109 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.259720705 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.317444727 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.254569857 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.659729515 seconds)
  done (took 379.17197438 seconds)
done (took 608.752511099 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.146080394 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.08714797 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.240536065 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.096970153 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.084941549 seconds)
  done (took 11.807283719 seconds)
done (took 12.961707491 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.451980953 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.447766302 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.318537702 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.453610065 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.288457656 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.466418804 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.431628826 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.272720386 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.372253167 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.33632108 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.363771388 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.309710765 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.290584514 seconds)
  done (took 18.956165585 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.542943018 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.266147288 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.322205954 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.515089769 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.304399222 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545673256 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.567413674 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.267834052 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.408834937 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.307517825 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.282020607 seconds)
  done (took 18.484504061 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.551044244 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.268189273 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.325911324 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.522514295 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.304644755 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.546014767 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.563569818 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.268961842 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.413956078 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.287370915 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.283229973 seconds)
  done (took 18.490188306 seconds)
done (took 57.087966517 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.298654265 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.35822083 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.296040981 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.279078501 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.279490382 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.278182566 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.279321616 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.277834871 seconds)
  done (took 11.499402713 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.280986271 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.280005919 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.279524594 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.27891179 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.280227609 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.280104305 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.281026244 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.27802284 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.278581032 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.280403321 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.278449147 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.280021439 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.279276877 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.277411201 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.27768747 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.279083233 seconds)
  done (took 21.625712943 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.28110967 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.279453017 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.280280986 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.2794641 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.279599379 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.280074074 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.279645261 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.279147662 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.279280442 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.279779049 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.281544043 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.281626058 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.281661929 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.281367719 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.282321053 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.281356207 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.281252944 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.282529209 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.285723994 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.280293787 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.280062893 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.280333639 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.281915291 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.281284147 seconds)
  done (took 31.897142699 seconds)
done (took 66.180269156 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.263162995 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.28199687 seconds)
  done (took 5.703083777 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.338298637 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.338657944 seconds)
  done (took 3.835670022 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.281687916 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.282359995 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.282003124 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.280050573 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.280066185 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.279440834 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.281331165 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.281001649 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.283012758 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.281030583 seconds)
  done (took 13.969511904 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.283395599 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.284679791 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.283433953 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.284421645 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.284838622 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.283334341 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.281242223 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.282724709 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.282699962 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.282980908 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.285866511 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.283139783 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.282088866 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.283048698 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.283121051 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.282849319 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.282747313 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.282558471 seconds)
  done (took 24.256895984 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.29699532 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.302580932 seconds)
  done (took 3.756918956 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.413717676 seconds)
    (2/7) benchmarking "second"...
    done (took 1.325488314 seconds)
    (3/7) benchmarking "month"...
    done (took 1.388141031 seconds)
    (4/7) benchmarking "year"...
    done (took 1.380787463 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.325796497 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.305404906 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.324810818 seconds)
  done (took 10.62315386 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.285161753 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.500740679 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.629650068 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.290582253 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.284527441 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.289292207 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.490864729 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.289338203 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.289604265 seconds)
  done (took 13.508768319 seconds)
done (took 76.813345899 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.277773955 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.29269252 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.301525709 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.279462 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.620723862 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.286734713 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.270861273 seconds)
done (took 16.492585474 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.259090963 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.248795333 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.26304068 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.289597628 seconds)
  done (took 10.219518521 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.26870207 seconds)
    (2/2) benchmarking "read"...
    done (took 1.594478209 seconds)
  done (took 5.027031894 seconds)
done (took 16.409141586 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284179474 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.28612233 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.286504192 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.284262219 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.285496315 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.2851068 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.284823918 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.286264967 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.285995128 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.283358172 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.287762838 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.286253369 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.286837784 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284413901 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285713434 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28617271 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287286605 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.286468631 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283567902 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285353754 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.285390206 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288505426 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.28640733 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.288818448 seconds)
  done (took 32.023588753 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.287546965 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.289779619 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.288382405 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.28860996 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.289177194 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.288667811 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.287708215 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.285001879 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.287858267 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.285002566 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286789903 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.285978218 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.284153297 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.286672672 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28562742 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.286851745 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.286772856 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28528421 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288127896 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.287399279 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.286914245 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286686732 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.2873747 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28675354 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.289218339 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28718821 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.289663727 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.287285068 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287819781 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.287798861 seconds)
  done (took 39.780415195 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.289930268 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.287534018 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.289646841 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.287025289 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.287366482 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.287438529 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.286977274 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.288700087 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.288816649 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.285545191 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.289252443 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.287620828 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.289709948 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.289904398 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.288821066 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.288355311 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.288428995 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.287975419 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.288496397 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.290198888 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.288857633 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.288479743 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.28925138 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.289981531 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.288351822 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.28922707 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.289795142 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.289206072 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.289110701 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.288013672 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.289202605 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.29035965 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.288440792 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.289646128 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.28695585 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.288257215 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.290650799 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.291700588 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.288902851 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.28736876 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.288401512 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.289026859 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.288980261 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.289046624 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.291175561 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.289774914 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.2910377 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.290114137 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.290735608 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.291169968 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.288621382 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.288849773 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.289700287 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.290304976 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.291738211 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.293043429 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.289545946 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.290503429 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.289500752 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.291893021 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.293769239 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.291227706 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.291562982 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.290944675 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.291067448 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.291811795 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.2918872 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.290566743 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.290190778 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.292576528 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.291238009 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.291859039 seconds)
  done (took 94.016428329 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.293384965 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.29461389 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.291705098 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.292101921 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293426573 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.295901117 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.292806723 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293954076 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291964935 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.29316063 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292754503 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293688526 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294036772 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.29535952 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294787286 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.296305585 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.294304497 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294440283 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.294212805 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29497202 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295302904 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.295143039 seconds)
  done (took 29.636445503 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292928495 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295771698 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.294256892 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.294043524 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.296765604 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.294610583 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.295065855 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.295511459 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294448705 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295206929 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293120446 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29445983 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.297295935 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295023079 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293380241 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.298552652 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294574513 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.296254226 seconds)
  done (took 24.480724541 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.295565961 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.293941091 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.295061516 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.29402366 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.295922018 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.295615203 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295598381 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.294998132 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.296498561 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.296400447 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.299155629 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29731619 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.295807215 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296363913 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295775803 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.296554664 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.295610466 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296026672 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297020319 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.296821568 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.296906721 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295718877 seconds)
  done (took 29.683372617 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29572301 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295525013 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.29596931 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.294811778 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.297835524 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.296983602 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.296803553 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.298989543 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.298429483 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.296090771 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29636775 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.297837171 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.297234304 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296488277 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.297009305 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296687807 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.297556403 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.297703116 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304756522 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.299470411 seconds)
  done (took 27.118761139 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296632042 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295610054 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.296711009 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296483093 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297416525 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.297289781 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297322095 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.298368049 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29833517 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.299656459 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.298455042 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.297629244 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29903363 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.298726939 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297891902 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.299051066 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.298466424 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.298597063 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.298875264 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298165166 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.298747401 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.297544745 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.299411096 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.299620105 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.298847527 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.298814233 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297141326 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.299359534 seconds)
  done (took 37.522402277 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.299467617 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.299197348 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.30217047 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.301329952 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.299975963 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.298514908 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.300218826 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.299248317 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.30081366 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.300345692 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.301716926 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.301784464 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.302488262 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.302499616 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.302022422 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.297868635 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301136033 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.300503103 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301078541 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301522292 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.299859524 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302314314 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.298574327 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.299338708 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.3002606 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.303244294 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.300550639 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.300054582 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302554893 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.300443679 seconds)
  done (took 40.195806342 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.320574567 seconds)
    (2/2) benchmarking "in"...
    done (took 1.320321468 seconds)
  done (took 3.816679699 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.301939029 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303381012 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.298878377 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.302110794 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.301677471 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.303743684 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.303281058 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304053977 seconds)
  done (took 11.593132402 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.295454228 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.303340029 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.302346357 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.301257988 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.303690512 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.293989915 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.301354893 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.307925413 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.296128038 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.294132467 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.296018197 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.296448828 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.299533608 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.298207378 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.294783694 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.298207245 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.306867554 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.304908544 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.305900725 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.305192747 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.306362659 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.297834671 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.30270419 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.309002543 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.295078545 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.302702248 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.302581536 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.307698681 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.298139617 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.3012489 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.297496023 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.305737075 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.306121922 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.306915821 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.303340454 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.305844651 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.304149358 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.303821095 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.305894901 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.310081342 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.30416224 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.302976463 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.297868577 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.302308172 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.30388594 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.309296692 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.305450283 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.304587244 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.297411771 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.299830745 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.307185354 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.297472173 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.307340137 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.303932837 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.303725577 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.30856964 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.311214387 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.297750139 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.29915411 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.305427994 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.314442276 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.308085655 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.306188037 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.310267288 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.302714346 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.304781096 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.311283581 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.310138042 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.30782361 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.30586621 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.30717119 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.315494146 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.310025516 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.311682224 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.307163453 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.306207247 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.302034493 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.309021064 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.309868235 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.308980854 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.313613643 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.307563104 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.301839765 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.304894559 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.30085942 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.313289297 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.306693693 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.308214257 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.296978646 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.310055937 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.317566978 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.309021788 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.298599047 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.301121132 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.304182031 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.309754963 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.300220858 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.305033644 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.311838181 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.308873009 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.309252686 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.300052347 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.306185356 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.314729416 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.309083463 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.311829434 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.313069659 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.302684326 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.31341695 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.31362116 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.309742148 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.300428683 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.305912098 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.313140898 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.301605421 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.306420472 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.313857289 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.304148675 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.313733359 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.310754401 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.306865512 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.311155723 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.318106364 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.311653937 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.306129448 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.313479749 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.309163571 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.308060674 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.316178871 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.313933688 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.312966461 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.309156069 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.317111541 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.306207665 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.31535996 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.306522105 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.315086568 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.31486769 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.311412702 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.309761508 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.312929834 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.307933622 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.310587456 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.314916274 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.315774031 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.310077907 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.320638595 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.311560848 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.310774044 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.316375973 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.31624749 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.312430405 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.308830776 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.316726128 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.305729065 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.314361718 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.304874128 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.313620948 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.310769486 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.312716338 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.315000454 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.302998392 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.306350371 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.316818191 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.312674317 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.312135531 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.315954019 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.313857153 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.313571549 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.306438033 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.312885951 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.305306575 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.307230371 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.315615315 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.312745181 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.318390015 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.310102554 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.320470104 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.313871038 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.313502848 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.306011408 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.309905325 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.317951739 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.314452968 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.32165491 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.315211815 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.312696473 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.307826776 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.311292115 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.315581766 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.304480112 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.315755565 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.31934278 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.319883763 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.308853766 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.316851141 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.30618657 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.31504189 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.313228656 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.322566242 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.315519525 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.316620253 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.307715674 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.320721612 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.311440598 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.31662615 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.307751868 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.322313446 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.316939768 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.316265337 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.315895518 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.311028254 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.314145426 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.320464769 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.318306047 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.314426568 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.307720941 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.321483941 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.308481612 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.311143786 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.32181425 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.315233533 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.317983715 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.325183997 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.314139432 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.322103371 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.316939923 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.311982378 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.319504711 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.315459829 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.318126803 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.322018601 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.31989859 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.314114342 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.325620427 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.319503573 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.312412768 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.318826141 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.326065567 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.318735541 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.309968694 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.320414599 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.320779373 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.31803001 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.318618358 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.313938121 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.322759095 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.322596673 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.326640313 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.314475433 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.323257178 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.317337581 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.323969642 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.317617007 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.321428648 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.319036524 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.323374792 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.326240246 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.32080981 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.316694322 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.322297499 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.319067471 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.319127921 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.31204144 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.322457746 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.320439128 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.320158558 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.319676706 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.317541437 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.322160397 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.313425054 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.322620912 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.31467207 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.327966133 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.33302257 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.321215497 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.327156328 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.324501482 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.324324991 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.322655024 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.314869612 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.316669242 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.318616851 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.316224918 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.314878519 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.324456847 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.316863224 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.324141985 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.319312596 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.320310225 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.324071977 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.323388731 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.315747161 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.325082051 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.321102957 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.322488092 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.313022337 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.322851013 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.318296377 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.323496094 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.320210238 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.316245334 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.329474694 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.323796362 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.320995319 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.317152291 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.316343343 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.31564729 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.317716923 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.326959273 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.313852463 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.325120503 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.315070414 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.321517788 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.316729581 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.32529948 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.332428254 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.315977631 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.326061091 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.325083334 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.315563731 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.316503475 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.327682569 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.32591219 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.333620712 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.313773374 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.32777046 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.323553643 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.323297212 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.322891334 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.328175801 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.325118951 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.326952937 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.328056687 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.327106141 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.320883181 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.324204815 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.333307068 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.324535078 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.325117857 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.317010759 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.3266054 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.333104405 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.320629805 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.323908974 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.322254985 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.326167168 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.325962019 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.325137743 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.324771858 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.322748678 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.329433125 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.328281161 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.327004801 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.325233583 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.329362921 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.332898661 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.32879704 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.334956281 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.31959185 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.334068457 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.324216138 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.31942729 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.321406163 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.323746883 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.328236865 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.316322734 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.327278269 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.326502497 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.322906229 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.32749541 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.330911872 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.31787521 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.32618816 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.333017321 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.31698935 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.327815163 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.32695398 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.318163639 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.327200507 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.326762869 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.317357436 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.321035383 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.321045804 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.328604269 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.321810546 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.331783056 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.319499523 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.331417384 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.325507566 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.328412837 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.330463893 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.325334667 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.319738422 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.329521709 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.3272806 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.33972346 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.324281359 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.326925443 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.323216725 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.334088076 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.337812539 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.325817337 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.333563883 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.330544832 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.323793835 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.32717869 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.332005441 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.323186743 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.335287908 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.321472675 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.324393753 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.324271523 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.33042973 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.334195011 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.333964422 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.320410851 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.32358382 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.33260181 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.330502519 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.329939157 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.325793179 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.334335287 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.323030789 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.32145234 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.332088961 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.327199411 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.335145504 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.323111925 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.327139645 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.328144911 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.33384195 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.331594033 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.329580969 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.320056214 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.321963982 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.336681679 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.332603504 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.325724306 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.323128489 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.334390827 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.321429376 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.328015885 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.325917249 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.326245274 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.325279373 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.334524244 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.324237292 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.324654896 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.326051241 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.33441799 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.336636724 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.334298315 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.323383739 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.339285258 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.33959844 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.339823899 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.322039486 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.328193413 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.326021227 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.333971447 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.335071974 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.325246201 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.338185299 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.339710758 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.334377579 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.331185773 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.334579728 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.323984709 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.334405322 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.330737371 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.330457002 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.339472259 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.327785672 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.339187298 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.334983405 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.334991589 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.325014579 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.327712725 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.328833994 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.326750177 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.336917624 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.332351755 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.339651119 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.333093531 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.341311964 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.334379332 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.336732808 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.335838294 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.327559667 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.336533742 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.325682371 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.335965892 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.337409693 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.327527594 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.337176632 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.334253033 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.325856449 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.329422015 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.337154571 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.33318797 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.329536014 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.334706602 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.337899984 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.345409877 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.338155473 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.326243737 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.332325325 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.339454035 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.33876948 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.334040128 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.327963461 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.343909412 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.34876289 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.327432968 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.331564933 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.337224716 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.344785761 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.335775329 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.338548209 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.332935981 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.335876706 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.34028852 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.33501495 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.338562187 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.34239981 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.329424717 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.337664382 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.329652563 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.331259219 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.336852612 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.348145978 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.33856708 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.327584487 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.342731102 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.347721223 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.334851246 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.346391347 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.343018128 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.336653736 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.343189257 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.329146233 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.341358952 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.333000669 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.343411868 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.33713955 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.339443284 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.340299767 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.329064939 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.340122585 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.345212021 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.349403975 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.337984942 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.331530971 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.333993757 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.338472838 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.341576471 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.338294438 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.341048178 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.339791445 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.341606691 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.331624556 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.34936869 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.352603484 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.342551342 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.342294433 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.338591351 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.339607265 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.342245014 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.33508788 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.340198599 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.342603137 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.342395734 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.334352942 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.348132361 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.337728427 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.333456156 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.333758437 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.334169565 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.344078523 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.348243575 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.359016624 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.342083816 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.342913429 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.34359074 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.341799014 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.333623393 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.346345899 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.342277293 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.333508154 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.335579968 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.344798596 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.339369903 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.34014456 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.334589348 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.345582095 seconds)
  done (took 788.759197448 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.341489352 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.341178333 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.340465952 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.343049719 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.342393807 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.342297971 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.342549306 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.341072016 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.34268976 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.342980727 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.341491654 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.343226359 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.342900938 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.34606376 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.342099534 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.341603506 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.341946964 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.34229954 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.340804671 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.342733602 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.342193955 seconds)
  done (took 29.396693645 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.344069586 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.344800128 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.343859563 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.343277249 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.345053149 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.343893768 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.343209237 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342949565 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.344859954 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.344322925 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.343262318 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346627858 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.345253446 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.342332651 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.344950874 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.346689833 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.346129688 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.345252527 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.344604744 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.347934463 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.346252976 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.346004025 seconds)
  done (took 30.794784144 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.342941897 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.346331454 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.337010268 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.348660254 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.345133694 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.344828631 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.345436655 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.341580424 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.34487277 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.336190504 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.338512085 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.340476116 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.341255379 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.346160926 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.341046824 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.349342524 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.345979587 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.345470693 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.343886635 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.344327547 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.349255621 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.355644989 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.345501065 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.336504943 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.348075346 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.344684226 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.346157588 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.346435475 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.336408255 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.348662533 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.343854482 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.338563176 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.34741516 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.350422366 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.339879049 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.348737718 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.350041375 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.347155198 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.349227298 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.342865444 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.354929862 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.34850751 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.349955698 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.359246013 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.347165081 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.339176722 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.353349505 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.345926247 seconds)
  done (took 65.796796935 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.348085032 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.345724318 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.349328003 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.348080913 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.347085125 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.349802834 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.349391363 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.349883983 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.349653999 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.34747219 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.350164761 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.351403772 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.348389086 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.351741837 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.350145517 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.351780624 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.345490986 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.351419957 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.348459049 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.349349171 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.352527707 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.351752342 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.353997825 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.350109716 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.348042474 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.350562293 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.349997275 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.349816549 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.351629247 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.351997493 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.346600504 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.349586721 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.348541556 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.348369452 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.34671286 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.348665576 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.349151014 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.351574041 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.348556885 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.34953288 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.348814248 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.349799663 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.350847949 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.349925367 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.350906254 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.3486821 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.347040006 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.35026889 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.350366289 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.349007749 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.348695775 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.350875592 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.350988733 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.349278061 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.349273101 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.350702644 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.34812346 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.349986704 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.351795019 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.351809883 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.349851462 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.350962749 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.348315358 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.349818291 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.348082432 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.351019408 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.349416123 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.347924438 seconds)
  done (took 92.98821281 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.349879362 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.351747991 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.35045997 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.350074423 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.35132089 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.348431209 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.349839298 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.349548367 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.349913092 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.350678677 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.350526632 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.346883239 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.352013465 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.34974623 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.352861037 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.350997687 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.351552804 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.349427887 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.351502241 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.349969025 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.353904912 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.350245203 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.349589055 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.351677204 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.351217765 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.351961638 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.351066428 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.349776736 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.348987815 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.350785066 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.35013054 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.350200634 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.351628555 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.350556181 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.351200766 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.352630145 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.351486069 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.351406948 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.349073584 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.350659015 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.349041276 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.350786502 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.350334576 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.350912756 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.349718034 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.352488118 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.350852398 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.349799665 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.350625984 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.352239263 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.350922609 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.349495825 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.351921085 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.34829815 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.348020673 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.350989429 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349227148 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.351159482 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.34979061 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.349911798 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.350724774 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.351750844 seconds)
  done (took 84.950350965 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.35230774 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.352774324 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.35168877 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.35066059 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.351045108 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.351564766 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.352509013 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.351204827 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.350728211 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.352373212 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.352716647 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.352134982 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.353688601 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351692929 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.350828273 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352075998 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.352428553 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.351478368 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.352337622 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.351649373 seconds)
  done (took 28.253700652 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.350553202 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.352735202 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.349635471 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.349776191 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.349362464 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.3479741 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.350677042 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.35049917 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.34991167 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.349758025 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.350514425 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.349989744 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351390357 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.349995865 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.350458399 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.351263468 seconds)
  done (took 22.819402197 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.351596131 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.351469303 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.351740288 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.349618681 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.34854652 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.351902183 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.349853258 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.350386492 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.35086479 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.350898316 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.351618026 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.351857449 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.350475756 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.351808495 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.351275101 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.350635917 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.352365509 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.352266095 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.352830029 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.353431058 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.352406079 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.350674775 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.353212236 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.352727867 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.353798639 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.352545217 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.35227929 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.35394737 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.353088641 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.352391265 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.353027032 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.350767582 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.351758609 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.353670464 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.35333821 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.353053185 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.352394355 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.353176831 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.35215365 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.352299831 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.353428926 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.352753743 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.353308526 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.352190813 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.352691527 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.354130808 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.354769985 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.353717647 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.350929363 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.35409098 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.353256982 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.354906956 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.352112335 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.353046688 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.353830393 seconds)
  done (took 75.594495639 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.355030115 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.354143952 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.354588554 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.355287005 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.354033407 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.351915597 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.355194417 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.354131537 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.352152044 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.356183738 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.355157858 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.358619505 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.355592768 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.355587229 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.355002925 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.3563947 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.357429298 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.35570832 seconds)
  done (took 25.609476655 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.355945671 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.356119778 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.356249761 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.354809374 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.357156412 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.357445631 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.354389707 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.357409543 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356877995 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.357097387 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356443731 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.355793224 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355391524 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.357772813 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.35823431 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356380484 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.356418296 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.355840926 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.357191341 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.357079942 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.357571534 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.354445712 seconds)
  done (took 31.061333398 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.345912358 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.348250478 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.345591965 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.358619051 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.354576789 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.347180732 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.347303027 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.34723985 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.361810369 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.375242754 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.367004194 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.354176488 seconds)
  done (took 17.472635054 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356949068 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359858945 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.357394706 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360325111 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358843113 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359083018 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359551348 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358197461 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360344257 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359081436 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35873721 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35990345 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358314365 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358815979 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356748373 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359149074 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357884435 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359256106 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357785009 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359442551 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358556331 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359265325 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35689011 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363297344 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356934613 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360758068 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360215914 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360533281 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358941852 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35863958 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363428102 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358960262 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360841948 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359552627 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360110439 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361461489 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360161552 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36201391 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359278773 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360647713 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.359859749 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359554086 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362580234 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360540765 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361462114 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360806012 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360187302 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360477689 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362660606 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360971652 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361780357 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361873053 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362491689 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360667052 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359941641 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361567882 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360711942 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362592507 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361534811 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36603941 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361420688 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36268904 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361552447 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361297169 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361947173 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360460849 seconds)
  done (took 90.993970665 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362364635 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.361174099 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362123927 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362471052 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360400066 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363037035 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364470721 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363279836 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360814966 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361464517 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36175068 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361458343 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360979649 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36218392 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358855231 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359618137 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360749699 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361584714 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360448659 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36327508 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362136341 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361909734 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363238395 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362829675 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361554341 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361119739 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362188531 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360392434 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.364373395 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362531053 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361372795 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364191853 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36224213 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.359474087 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362531202 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361148481 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362378693 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363469998 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362660208 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362911638 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361213534 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363000575 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362041045 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36242367 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362744142 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360948459 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361308871 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363690934 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361085092 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362622192 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364656313 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365291384 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363907309 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36418469 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.364441462 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364618858 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362484725 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361484669 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362251646 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.364917003 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363227895 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362368986 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365054049 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36384178 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361908255 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360791223 seconds)
  done (took 91.139738171 seconds)
done (took 1846.662315095 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.5187695 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.470750376 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.350104322 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.362877051 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.348359148 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.351175803 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.36027273 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.347612482 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.352646164 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.35309606 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.355002757 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.545494968 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.388161597 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.349222355 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.353363823 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.451469925 seconds)
  done (took 27.482753149 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.382709496 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.356283946 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.471248777 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.350618993 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.380131563 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.544331672 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.408149047 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.361604564 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.525239773 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.370250097 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.353537766 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.372875693 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.359533182 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.354394244 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.371799703 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.546991066 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.601785155 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.349551697 seconds)
  done (took 29.685063504 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.802305355 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.360910142 seconds)
  done (took 5.387900664 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.376709646 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.358854747 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.355463503 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.355608668 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.346356206 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.357451617 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.358174694 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.353902712 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.358745239 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.476097224 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.354072466 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.37311588 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.356582586 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.356153774 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.365894567 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.404243871 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.498184067 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.366453239 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.364843889 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.363466879 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.357929202 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.449877629 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.394749202 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.361677917 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.479907758 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.356892164 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.358623906 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.364256096 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.47487906 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.368188924 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.357258536 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.355746476 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.357139892 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.319266633 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.882503705 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.357230519 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.376201881 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.368656357 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.36591121 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.490613926 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.357650791 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.367185302 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.35080197 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.8861784 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.469285318 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.477116071 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.346699954 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.354537006 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.3581374 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.42356502 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.359990155 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.358584286 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.416300512 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.160368664 seconds)
  done (took 86.613282412 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.407728267 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.351829897 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.53520214 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.374591066 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.363496119 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.35281626 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.354985114 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.63522926 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.373217998 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.35098322 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.6665659 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.973443917 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.355194406 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.416024629 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.388465054 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.404050027 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.356240901 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.368959575 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.357095234 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.354819662 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.923024296 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.354446724 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.352744026 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.440152246 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.393148331 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.897482957 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.354830828 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.370714854 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.357740613 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.34965757 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.945755679 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.354952907 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.438497535 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.348399676 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.641457433 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.752677673 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.709348024 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.359660761 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.403162796 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.35530972 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.377291271 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.887057116 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.733916836 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.355835545 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.353484648 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.882171456 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.35651229 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.364436447 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.353837753 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.62313696 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.353269877 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.355112387 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.35526098 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.365282913 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.356195471 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.430136232 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.412917769 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.90065983 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.357582095 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.351398484 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.36843722 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.354838997 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.36053022 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.353298089 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.359240623 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.729922069 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.615623922 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.361797364 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.732378193 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.933904772 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.356005781 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.02307879 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.356396081 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.38365309 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.401728222 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.356784311 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.358483152 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.896926402 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.359807885 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.350383012 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.711294734 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.35866935 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.658532315 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.368383421 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.356792246 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.942941701 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.369955307 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.403644285 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.358527397 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.355211792 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.35388977 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.36036159 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.644731629 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.403648562 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.356975149 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.357233059 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.38772752 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.353586056 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.365145222 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.364647972 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.00499712 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.366106211 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.354682303 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.374799048 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.355672522 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.357588693 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.356567876 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.358927135 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.638447639 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.355135717 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.374243509 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.356785994 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.351707409 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.356526547 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.447846461 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.363357802 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.669377816 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.360848439 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.353972217 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.363744032 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.367776518 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.376205173 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.353233989 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.368124751 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.354471102 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.655878631 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.370556039 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.368377227 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.356168838 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.357576125 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.36377314 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.352532929 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.414654007 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.357562085 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.144831107 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.366238418 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.371917846 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.357259081 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.362795346 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.357264164 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.358518069 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.356330336 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.661088207 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.643028861 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.605904741 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.353422578 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.356614251 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.167809277 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.362817018 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.540326683 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.373470861 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.356115683 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.636808854 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.580111512 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.357800687 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.352409384 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.359923622 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.633930116 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.358928906 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.68581084 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.955417276 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.359200795 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.369827589 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.151872131 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.170960833 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.354050079 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.35992382 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.64964033 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.369030238 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.355777881 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.354964075 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.356067865 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.352206142 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.363539201 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.358864716 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.360612448 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.359525137 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.641450744 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.550007323 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.367461223 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.35939323 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.879570679 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.376481018 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.353643277 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.36460341 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.358160373 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.358513541 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.40831808 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.359711371 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.359195475 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.357077062 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.361066128 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.904472067 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.350088575 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.355965189 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.551139281 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.089418092 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.35200281 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.356967024 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.352820001 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.408848081 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.902269224 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.390489958 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.65182689 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.355814626 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.395691462 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.355469853 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.36830747 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.906797657 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.360675996 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.358063313 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.087878682 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.35048825 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.837603843 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.351172888 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.358890462 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.017305217 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.352001334 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.358819157 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.360519605 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.351491909 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.676679165 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.358990067 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.36194791 seconds)
  done (took 504.099368019 seconds)
done (took 654.496356738 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.356171373 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.358980008 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.359942076 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.358892686 seconds)
  done (took 10.665685028 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.375610358 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.360579047 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.375559023 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.361959723 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.375904028 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.364281154 seconds)
  done (took 9.444744171 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.357268717 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.357730713 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.358611169 seconds)
  done (took 8.306826478 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.563613145 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.378910665 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.702470867 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.368455411 seconds)
  done (took 9.244832978 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.37528762 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.375972494 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.374832683 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.377434018 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.3786916 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.376664424 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.379173218 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.377456029 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.375770964 seconds)
  done (took 13.621574234 seconds)
done (took 52.516923418 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.567426484 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.518703255 seconds)
    (3/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.704932008 seconds)
    (4/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.778393844 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.424439079 seconds)
    (6/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.51024279 seconds)
    (7/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.429710872 seconds)
    (8/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.51530399 seconds)
    (9/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.336839505 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.395021629 seconds)
    (11/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.349186366 seconds)
    (12/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.779641209 seconds)
    (13/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.42619912 seconds)
    (14/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.514195475 seconds)
    (15/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.602745178 seconds)
    (16/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.334170802 seconds)
    (17/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.361605869 seconds)
    (18/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.550407784 seconds)
    (19/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.357113934 seconds)
    (20/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.441154787 seconds)
    (21/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.600910932 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.436057239 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.507611634 seconds)
    (24/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.509147147 seconds)
    (25/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.468283304 seconds)
    (26/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.350079265 seconds)
    (27/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.452135138 seconds)
    (28/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.661843728 seconds)
    (29/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.516012893 seconds)
    (30/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.360844776 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.445304584 seconds)
    (32/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.339083914 seconds)
    (33/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.369261478 seconds)
    (34/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.474513675 seconds)
    (35/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.706058121 seconds)
    (36/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.489344197 seconds)
    (37/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.452521495 seconds)
    (38/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.338162888 seconds)
    (39/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.39549257 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.429513395 seconds)
    (41/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.464238433 seconds)
    (42/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.591512854 seconds)
    (43/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.47762528 seconds)
    (44/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.654639144 seconds)
    (45/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.512431331 seconds)
    (46/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.396963277 seconds)
    (47/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.342367917 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.613524057 seconds)
    (49/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.402122713 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.51290969 seconds)
    (51/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.340809333 seconds)
    (52/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.398877879 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.511028526 seconds)
    (54/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.635329062 seconds)
    (55/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.597219553 seconds)
    (56/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.570996825 seconds)
    (57/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.343922878 seconds)
    (58/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.607723504 seconds)
    (59/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.440429456 seconds)
    (60/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.342803137 seconds)
    (61/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.393195842 seconds)
    (62/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.452895946 seconds)
    (63/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.442931572 seconds)
    (64/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.531727776 seconds)
    (65/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.351460005 seconds)
    (66/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.475026486 seconds)
    (67/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.445848153 seconds)
    (68/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.447080542 seconds)
    (69/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.468233325 seconds)
    (70/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.450109994 seconds)
    (71/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.426940072 seconds)
    (72/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.517089088 seconds)
    (73/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.432249175 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.36366073 seconds)
    (75/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.339024078 seconds)
    (76/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.377351648 seconds)
    (77/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.593485467 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.476343073 seconds)
    (79/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.398936717 seconds)
    (80/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.466154922 seconds)
    (81/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.390194949 seconds)
    (82/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.394519228 seconds)
    (83/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.478373616 seconds)
    (84/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.448269734 seconds)
    (85/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.439162038 seconds)
    (86/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.582470888 seconds)
    (87/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.48158741 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.470282971 seconds)
    (89/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.519387998 seconds)
    (90/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.512154398 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.478386828 seconds)
    (92/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.519551419 seconds)
    (93/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.344262264 seconds)
    (94/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.399577007 seconds)
    (95/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.377419166 seconds)
    (96/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.426048549 seconds)
    (97/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.449320546 seconds)
    (98/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.378633329 seconds)
    (99/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.367902835 seconds)
    (100/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.568312021 seconds)
    (101/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.659216611 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.370033711 seconds)
    (103/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.528962905 seconds)
    (104/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.40845733 seconds)
    (105/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.592125585 seconds)
    (106/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.594663133 seconds)
    (107/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.403049897 seconds)
    (108/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.54236494 seconds)
    (109/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.346384771 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.485308098 seconds)
    (111/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.470728594 seconds)
    (112/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.44178231 seconds)
    (113/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.488613879 seconds)
    (114/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.488828324 seconds)
    (115/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.590074461 seconds)
    (116/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.656868547 seconds)
    (117/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.36672879 seconds)
    (118/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.394038146 seconds)
    (119/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.499894091 seconds)
    (120/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.456789201 seconds)
    (121/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.348623909 seconds)
    (122/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.34006297 seconds)
    (123/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.675147562 seconds)
    (124/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.389717353 seconds)
    (125/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.399593716 seconds)
    (126/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.398666677 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.472392781 seconds)
    (128/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.432961109 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.368397232 seconds)
    (130/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.477573567 seconds)
    (131/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.366787077 seconds)
    (132/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.34808797 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.47640671 seconds)
    (134/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.39946848 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.527065528 seconds)
    (136/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.45294516 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.462624471 seconds)
    (138/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.344384256 seconds)
    (139/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.351725522 seconds)
    (140/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.451629497 seconds)
    (141/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.576934115 seconds)
    (142/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.343360917 seconds)
    (143/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.539297003 seconds)
    (144/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.355250416 seconds)
    (145/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.357031776 seconds)
    (146/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.404554241 seconds)
    (147/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.526881506 seconds)
    (148/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.368418698 seconds)
    (149/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.43716043 seconds)
    (150/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.549963759 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.607144817 seconds)
    (152/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.397309386 seconds)
    (153/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.414918873 seconds)
    (154/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.345699909 seconds)
    (155/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.454948823 seconds)
    (156/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.413302963 seconds)
    (157/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.597465074 seconds)
    (158/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.496505338 seconds)
    (159/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.459626189 seconds)
    (160/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.347839976 seconds)
    (161/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.557121997 seconds)
    (162/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.573810889 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.482843601 seconds)
    (164/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.357273039 seconds)
    (165/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.43029931 seconds)
    (166/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.348470536 seconds)
    (167/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.35161982 seconds)
    (168/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.586548096 seconds)
    (169/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.353543333 seconds)
    (170/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.451199275 seconds)
    (171/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.590869395 seconds)
    (172/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.348977392 seconds)
    (173/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.351206747 seconds)
    (174/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.355653083 seconds)
    (175/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.477525035 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.473019464 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.491427319 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.573433409 seconds)
    (179/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.370468396 seconds)
    (180/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.436785848 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.507597717 seconds)
    (182/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.573168537 seconds)
    (183/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.463801635 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.614034928 seconds)
    (185/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.540502587 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.466314508 seconds)
    (187/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.444597877 seconds)
    (188/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.441103335 seconds)
    (189/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.514064521 seconds)
    (190/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.488485247 seconds)
    (191/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.348497989 seconds)
    (192/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.593270273 seconds)
  done (took 330.298493471 seconds)
done (took 331.534062181 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400799777 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.46773711 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.377086621 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.377754389 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379235381 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.375886562 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.399544471 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.37974924 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.392591026 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.395420129 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.378051515 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.389187046 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.394830337 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.392101855 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.412949367 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.38051825 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.379955136 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.390188438 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.395224077 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.398357677 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382946574 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379197392 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.405128539 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.376801887 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385200711 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384738892 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.382482874 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.378716767 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.387296232 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.396248613 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.371073785 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.39969303 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.397727282 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.392070721 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379989693 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.390226305 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380473572 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.46592178 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.402508938 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.392455314 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.389881282 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.396156952 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.385241409 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.386390084 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.392472189 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.408970899 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388981955 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.395539819 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.384174463 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.369161588 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.401175775 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.39443565 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.391798872 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.369153095 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.372663678 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.410243082 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.391738831 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.400683086 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.388881722 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383607714 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.413915313 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400244769 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.391554949 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391636563 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.38830468 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.396031673 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.391670961 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.398386403 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.389449713 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381807593 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382050945 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.388857819 seconds)
done (took 109.451223647 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.506221876 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.375387055 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.536911581 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.388611945 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.546949018 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.505265236 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.386357374 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.39040221 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.388844406 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.181636838 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.388899087 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.388600235 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.380111384 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.387921313 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.506496411 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.390442098 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.389769661 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.084650857 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.392477298 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.519399048 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.382710519 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.390695821 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.389727476 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.183844187 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.378810643 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.37566947 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.51790227 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.388632431 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.084197839 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.375318846 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.378095727 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.08404228 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.519360642 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.409821034 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.399516273 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.399930338 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.549688671 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.388936341 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.505059032 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.506308798 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.539363731 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.429934917 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.373799202 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.378604216 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.394444462 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.393660723 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.390196354 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.418236296 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.380642817 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.389405115 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.084297232 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.400783517 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.399208437 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.39275607 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.391453937 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.414160382 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.391361139 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.395157358 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.51985805 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.394571996 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.506179382 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.187493003 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.184011998 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.393763507 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.379175237 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.393324879 seconds)
  done (took 111.805449489 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.454040526 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.458275906 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.491076697 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.382963344 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.431596346 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.492156948 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.382960276 seconds)
  done (took 11.34323762 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.390420835 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.392294068 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.432955129 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.432704995 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.391974284 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.560282115 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.39201254 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.395444551 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.39501035 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.437248765 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.394513202 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.393807147 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.400752585 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.38206152 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.432215548 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.394358429 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.5062121 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.388317765 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.396789364 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.539076833 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.394352324 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.403529619 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.435276895 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.399746199 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.394568872 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.392067825 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.169703491 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.395443751 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.393166787 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.394276595 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.394210589 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.450863679 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.398320206 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.385257135 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.395091354 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.501176018 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.398007427 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.395329341 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.398327466 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.387841722 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.396618485 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.396106405 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.398101237 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.394490113 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.398802265 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.414097317 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.396039133 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.39705151 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.394180311 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.394992664 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.438553937 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.395236707 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.394927802 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.396968217 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.440177723 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.406160915 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.398590491 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.39581955 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.397912603 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.3974265 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.538866003 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.440511424 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.398846948 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.434671186 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.395044824 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396911248 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.398269952 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.399122918 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.481158458 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.398064125 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.436611423 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.397512983 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.569672679 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.414970509 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.398440861 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.39298905 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.390925398 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.399382066 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.388594403 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.396736587 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.396660619 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.391792474 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.395153774 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.396063631 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.395516931 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.549299787 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.494949416 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.396835008 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.403982747 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.398166817 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.397982418 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.440452271 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.399163708 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.398915175 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.439436857 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.507970712 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.443412975 seconds)
  done (took 143.331701478 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.402246988 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.403601328 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.393056804 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.417264996 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.389595871 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.390940241 seconds)
  done (took 9.650106233 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.390255135 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.401143392 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.400452008 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.399301885 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.401456241 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.399888225 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.400499922 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.391414083 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.40581102 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.400412388 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.403240746 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.399869742 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.402117238 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.399637345 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.400451851 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.402152176 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.399690969 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.400227723 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.399823709 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.399448352 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.387561927 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.399505586 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.403552873 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.392946915 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.405748724 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.402859147 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.418736538 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.402055644 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.404722681 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.40186732 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.404362641 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.402737718 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.394678326 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.396822024 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.405358968 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.396066931 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.406367505 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.406775577 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.403198673 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.405009884 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.400627429 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.405379125 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.404469977 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.40319925 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.394928829 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.39691574 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.405649389 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.420186072 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.407259461 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.402241388 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.404740123 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.403617344 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.405618726 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.402310375 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.397999015 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.398609028 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.407244372 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.405427605 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.402206187 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.396444526 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.404866616 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.405723532 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.395734428 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.407045513 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.403782705 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.404953587 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.397798337 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.407746353 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.40177646 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.402312956 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.406686376 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.405145203 seconds)
  done (took 103.202274499 seconds)
done (took 380.577870573 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.796783618 seconds)
  done (took 4.055047527 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.655285467 seconds)
  done (took 3.916853201 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.572085774 seconds)
  done (took 22.102987083 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.454928921 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.454778936 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.39222988 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.363050767 seconds)
  done (took 10.918582226 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.624438846 seconds)
  done (took 3.85974305 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.375164079 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.360675539 seconds)
  done (took 5.972699802 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.52535929 seconds)
  done (took 3.755439806 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.654836267 seconds)
  done (took 3.884700124 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.382751093 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.36038133 seconds)
  done (took 5.982148799 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.337521225 seconds)
  done (took 3.56126556 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.975374719 seconds)
  done (took 21.199046066 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.364657134 seconds)
  done (took 3.585009137 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.363692734 seconds)
  done (took 3.578814321 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.702049854 seconds)
  done (took 5.918094145 seconds)
done (took 103.550555473 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.334575941 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.337239951 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.338367649 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.334625393 seconds)
  done (took 10.561649786 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.410767174 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.413953146 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.42189549 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.410923036 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.406412904 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.419319264 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.378429745 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.391902299 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.405341373 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.405138019 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.418794302 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.408625105 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.419262081 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.377918326 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.405918346 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.418978088 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.409806913 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.427285826 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.380044474 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.402332824 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.352783686 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.4089031 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.402460178 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.351831234 seconds)
  done (took 34.865481537 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.840759019 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.410083878 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.49376183 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.392308419 seconds)
  done (took 7.351347312 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.452997277 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.454362616 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.474985378 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.515781688 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.555343324 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.468538618 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.375929111 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.370660804 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.356381684 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.456517775 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.536136738 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.45296897 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.668917104 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.347162113 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.66456443 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.347599396 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.347094039 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.453674514 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.498817049 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.529328635 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.346741586 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.450737687 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.454879656 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.452195923 seconds)
  done (took 36.246739879 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.355617674 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.36537102 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.350331998 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.36435954 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.35065942 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.351558153 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.350304179 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.355180318 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.34991264 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.348001914 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.349173165 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.363226625 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.349854604 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.349037276 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.355096126 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.351016713 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.349792077 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.358516566 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.358153302 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.350651343 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.349677449 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.357409894 seconds)
  done (took 30.995384403 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.333768095 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.331344654 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.683026801 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.589790036 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.33211347 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.331081533 seconds)
  done (took 13.815805077 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.400273293 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.535694038 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.336763646 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.664048897 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.748526073 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.342578882 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.338171116 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.569532404 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.845507533 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.833716516 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.388714632 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.405769347 seconds)
  done (took 19.624124063 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.333374372 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.335450033 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.34629371 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.350178047 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.389262058 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.343121294 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.348065197 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.334439522 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.391832849 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.396017864 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.344929672 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.392920552 seconds)
  done (took 21.522811536 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425220368 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345781456 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.345407831 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407586046 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343743618 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337994144 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.400007868 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.033165553 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.350132167 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617616418 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343038479 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430920764 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.597120575 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346222508 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.349053824 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.288227234 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573052691 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807801748 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352736005 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348205958 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380356697 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362760064 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.359737859 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.539896613 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.351326128 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347999696 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.61956242 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347099641 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616219082 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.589398217 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592619085 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353179253 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627795778 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971363813 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455805149 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537890722 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342561989 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365776191 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.326168614 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.357201819 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350155196 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345951886 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585313527 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349176183 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.344127358 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345566285 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040188674 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.349620544 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.339399901 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343001324 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.582649691 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42142269 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.345467561 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.335678197 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358597085 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340051029 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.347467928 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455245046 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975133589 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348318674 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346446116 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.341683874 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.32965256 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358172723 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963642385 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.348462297 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.3471918 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.344195795 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342114094 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.333254629 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361620254 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3402381 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.353884768 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338185073 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078705194 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34403864 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34186981 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853702093 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341995834 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.341259439 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.566741509 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341236797 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340205155 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.343080693 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.343678927 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039236678 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348872805 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.310454093 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379282382 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.032179101 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.532096873 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362059329 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372227913 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.56603339 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.31055209 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342929666 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.354884775 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346494088 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358146551 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.037369459 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344026343 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.342703336 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59061881 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.553905807 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344504988 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.283292299 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78588486 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343251921 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.371121675 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.344222662 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.532967745 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.931908092 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593191936 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34750789 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377876928 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345382816 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107990686 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345598201 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.350320958 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.349427473 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614405997 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.11581029 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345914628 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416014283 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345729938 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.346928451 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344068379 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347246183 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343010761 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.513841736 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348044624 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587687099 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.347657187 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345755622 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.349456163 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344277369 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.344598274 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.565511285 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343695607 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619501728 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343985138 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344710712 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338391472 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.556459432 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.353594385 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.351820941 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.684836517 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344826809 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.344497291 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588670957 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380412523 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454915573 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376574579 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.344465419 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.594700776 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.350123807 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.349626613 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347626792 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349442075 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35341229 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.355055831 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33696106 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951031705 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325911753 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344910827 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345915785 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.363003926 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420014346 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35611792 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.537344197 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.350594292 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348863466 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.355044951 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.348912999 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.56906541 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591727707 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.362258576 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.524237135 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.788885909 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.939821702 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364399188 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.348547347 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.347254767 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.348263869 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349616132 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348789957 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.348693444 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539490453 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599257432 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356450007 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.946414912 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352841595 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348090398 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.356484417 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594208679 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.36122851 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351250473 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.349414832 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350302176 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353933249 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.594650695 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572441035 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.363959791 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348238784 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.866363958 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.357784737 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351683747 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34916759 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37719612 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350326988 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21874575 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68843198 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34490609 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595057962 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352933074 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.385079238 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.351315074 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351608663 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368580081 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.37259587 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360894281 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.541502423 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.36098793 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35409607 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9871944 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109491725 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895962349 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354611783 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.353135016 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352260301 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.04996417 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353080902 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352692176 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590113531 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048147906 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350669246 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789221913 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.359980449 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.071044918 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595360678 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581285227 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353990055 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.353736186 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612491886 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.564911288 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38388706 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359749273 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350781317 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.316236485 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886311981 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355770968 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5274423 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048726707 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353607343 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352631553 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.37343 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.366765139 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.720790068 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354270434 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354374598 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346323934 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.367528927 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22645311 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356150668 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352494097 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981625273 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357243494 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.803353152 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354880334 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.546255121 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.601458137 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.576732069 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.356384793 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.362435709 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.600182414 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600663237 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357970811 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3580219 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897064172 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.207069328 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.364363674 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356461124 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121504689 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360539812 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622340883 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.369019059 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.351557723 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361095244 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.354714871 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354564928 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.356566184 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360404365 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329875783 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812218209 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.361297939 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34840786 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378627017 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355238115 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.599408061 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.373672968 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.949844712 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581469002 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350890666 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387214245 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.360883606 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354072709 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.323431339 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354196444 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35585295 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355294435 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.573898365 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.358552491 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.328325398 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.416920101 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.568484089 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356194856 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357319665 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557771441 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.35752933 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.362380316 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128207885 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38317939 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356506449 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351463303 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360368788 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386839775 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431916379 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547822936 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.603820814 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.605961552 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.725815601 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357601817 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352982986 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.375161333 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441270758 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369792703 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.354157806 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.357711091 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954944917 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110987735 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.957332112 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602254508 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35471425 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371621446 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358017398 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595793775 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358590489 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63599226 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361336151 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.343028467 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375909953 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35610003 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36598849 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569729157 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632905623 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356869347 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371020124 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35877891 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.359449452 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612419919 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.565974246 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82133569 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870375398 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354992377 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.36872421 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.060311015 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634208381 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358880059 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359693196 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359720848 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.362254985 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.384208908 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.369577468 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364738835 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578778613 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607548846 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981186631 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604867131 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.538186568 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.274159816 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370937027 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.603692958 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.192282214 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.551565363 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965625111 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.054807229 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607820855 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435546059 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553900116 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.364798336 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599269057 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.362932382 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358370525 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360796315 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361289527 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.36117762 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.606505976 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960209787 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609210733 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.368098536 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.370044805 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385532317 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.553974353 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.583474774 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071224929 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577810594 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612669962 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366678141 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363554013 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969728224 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.60697898 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358244214 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.363809253 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564160488 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361129631 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396898679 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.23312168 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.362387068 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882263016 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.569959872 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384539965 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366473949 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.060494095 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96431302 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.362422588 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822966207 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359606855 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373660411 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632756179 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.370477395 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373458957 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639138288 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.368499328 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369845585 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54945725 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.958370234 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.094020747 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.361993713 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376498521 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.361931553 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36569594 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388636539 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360440703 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360721617 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.735460595 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.366726366 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365616502 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374726565 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.367655389 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365316979 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.360852303 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365814838 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.367724996 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.353260277 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.334751466 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.367148983 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477612632 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881207628 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36335765 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.979914623 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.701213056 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.61205369 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370213136 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.332697686 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.372923113 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369194474 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367630475 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360076186 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375112349 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881795128 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.371824274 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.609943522 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368728644 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.579734901 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580983387 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373691879 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.554195695 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378952634 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379541519 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.337540645 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366908455 seconds)
  done (took 968.553372856 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.397234382 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.361227451 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.362780117 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.409244701 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.35594899 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.355728628 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.35920002 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.411326162 seconds)
  done (took 20.250874671 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.366063002 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.36458745 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.364778236 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.364408667 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.365437458 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.88397337 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.352070976 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.363877141 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.380588412 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.362213933 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.355990988 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.012963212 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.366300241 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.361673823 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.364645481 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.363826341 seconds)
  done (took 32.233701337 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.012128428 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.678749915 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.789541621 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.361594768 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.364272439 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.362331724 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.464796227 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.364938628 seconds)
  done (took 25.637345598 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.373895021 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.373826907 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.374378462 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.374103334 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.375115468 seconds)
  done (took 8.110605343 seconds)
done (took 1230.987706742 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.37830143 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.374396243 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.377654968 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.379317836 seconds)
  done (took 6.748066967 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.338913553 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.338479777 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.343576648 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.356495868 seconds)
  done (took 9.616266321 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.028833977 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.860700008 seconds)
  done (took 5.13147927 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.892375537 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.876389664 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.872470258 seconds)
  done (took 6.8806807 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.647814265 seconds)
  done (took 2.887258803 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.330824908 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.353381509 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.062771345 seconds)
  done (took 7.987950954 seconds)
done (took 40.492886253 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.362362956 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.118828028 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.519376265 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.363596505 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.518961727 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.519031232 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.614920656 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.364263089 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.367177792 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.364031209 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.368840389 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.534917682 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.59952328 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.123655523 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.599486883 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.124787436 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.52221618 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.365824533 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.36412623 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.356358186 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.604535129 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.36229055 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.370375689 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.356581367 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.516378976 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.507026124 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.363982592 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.131916525 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.364269053 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.358502218 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.520163503 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.366430907 seconds)
  done (took 82.1342671 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.365528915 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.35683268 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.365167449 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.359369657 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.375104648 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.364201416 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.358206434 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.357828439 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.358248656 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.357184339 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.365998816 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.357507938 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.361972274 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.367726163 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.358359009 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.373196704 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.359891138 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.358344728 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.374155549 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.373222431 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.359972911 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.360700939 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.377202115 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.361029312 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.38720985 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.360480211 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.377722161 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.361162322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.360389429 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.361134971 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.368150547 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.384448173 seconds)
  done (took 76.932284648 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.367412481 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.366259065 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.37464866 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.368094664 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.360968694 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.368552153 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.370225336 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.366018596 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.370662537 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.372082138 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.359710542 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.360445083 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.36070432 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.373780152 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.362733946 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.360588586 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.370541946 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.367508351 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.366876419 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.379957485 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.360773901 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.362207821 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.370569826 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.360681709 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.374897133 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.362750873 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.372058121 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.362207717 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.364393213 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.358186178 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.381674886 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.367785619 seconds)
  done (took 76.991055917 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.608339233 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.382321795 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.38751175 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.37804792 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.389153014 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.385291621 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.377254362 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.615756528 seconds)
  done (took 14.768322975 seconds)
done (took 252.065381476 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.377992692 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.853992332 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.40130087 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.376007589 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.401986507 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.405783015 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.591910876 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.402934902 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.594950561 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.387904863 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.402767878 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.379893365 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.129003527 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.517592973 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.168241754 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.281460629 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.209871251 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.365888418 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.910194586 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.652288036 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.401163399 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.374679056 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.167582583 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.225355896 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.360030244 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.446090615 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.46715512 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.599303564 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.533928763 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.448600831 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.856679956 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.375308265 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.389949436 seconds)
  done (took 63.703986911 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.3749109 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.387288571 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.388299629 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.388491019 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.386699881 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.388071947 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.375922185 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.386508367 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.38666394 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.38753882 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.386879615 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.386738569 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.3874063 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.388176669 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.388995145 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.361873097 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.380201342 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.387124641 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.378417677 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.360460443 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.389180897 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.387221512 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.388391628 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.388210348 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.386470794 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.388652369 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.387074513 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.389587766 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.387650709 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.387222315 seconds)
  done (took 42.786658016 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.387173741 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.933153433 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.08631121 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.387941914 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.379405415 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.38449812 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.65065803 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.390566449 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.384304389 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.385226065 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.82906846 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.385042535 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.414217692 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.108802799 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.384263825 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.389310859 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.389638358 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.38249084 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.948727952 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.385789142 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.653827822 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.391322046 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.65323134 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.395571064 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.386259393 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.383025839 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.386838593 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.182530837 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.393599248 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.835695736 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.098906594 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.645555312 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.087238067 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.144040748 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.100942879 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.391802449 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.393515711 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.83345537 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.377670652 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.380850781 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.650735236 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.378277264 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.104775051 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.053687712 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.395142614 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.392326508 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.210365149 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.822096118 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.605397568 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.391294858 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.143949765 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.378854573 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.394498786 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.386058288 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.612487186 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.387516745 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.386284231 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.219883309 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.382671078 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.655728385 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.393842963 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.386419596 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.953986072 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.378263412 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.964994505 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.386853072 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.395425001 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.388319013 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.118585195 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.387774085 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.078216284 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.396696391 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.392513011 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.835098686 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.941306497 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.270330742 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.389491279 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.958013582 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.121679626 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.668692678 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.389557884 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.170426235 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.673348844 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.390323568 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.399167958 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.396653568 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.395700504 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.46217548 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.653957782 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.00561254 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.068285265 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.208383921 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.653524437 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.397603871 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.388263839 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.226538612 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.396567878 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.396542991 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.113073093 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.080944487 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.398852328 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.39522266 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.062595065 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.397311902 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.658789213 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.394855808 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.152361475 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.388683007 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.507538392 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.399410689 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.397056938 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.391972034 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.661826012 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.392396717 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.398313951 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.059250885 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.846988239 seconds)
  done (took 192.885164517 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.382330814 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.377229107 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.384511759 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.374853226 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.381497075 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.390738859 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.382080301 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.38244999 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.386682093 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.382489422 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.383142025 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.391515296 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.390276627 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.38139071 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.394909754 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.376779057 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.381629153 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.392950832 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.37739042 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.383530639 seconds)
  done (took 44.933781523 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.397244372 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.922241759 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.885135549 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.400256537 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.399119979 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.391173032 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.442226701 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.400605587 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.397932201 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.673188772 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.549368528 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.399576687 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.399894094 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.398493048 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.884779218 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.375049494 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.675448787 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.921803407 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.40194938 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.923652029 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.373926343 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.400529999 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.390703285 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.925512081 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.686963572 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.660255888 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.447705029 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.924718909 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.400924501 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.401522179 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.925662149 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.404302484 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.392375375 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.909182171 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.402348232 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.419100918 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.403209324 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.44804821 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.447735525 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.678753624 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.931159267 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.668620159 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.414179683 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.569211781 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.395539315 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.373666021 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.935818474 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.404842808 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.37609712 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.406426541 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.408424125 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.900471405 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.395512165 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.897229782 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.40415806 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.402553949 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.926289329 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.898335549 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.89117939 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.554157534 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.394607578 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.663046362 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.405065452 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.939241137 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.404997769 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.405063458 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.405037515 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.556007225 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.928382591 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.662490976 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.682075515 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.67857054 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.40416368 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.458219893 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.403678319 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.68002825 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.457186919 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.807521083 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.679509079 seconds)
  done (took 125.710703469 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.65376149 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.500448744 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.760379159 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.964613538 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.882468473 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.524906593 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.501307536 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.630253978 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.410549766 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.505959572 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.026497837 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.488310513 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.15845276 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.459341308 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.505782346 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.518757594 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.78156581 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.330897216 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.038220282 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.99795941 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.399912196 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.506236175 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.897531017 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.609559646 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.391786401 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.975758138 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.312631934 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.902171382 seconds)
  done (took 52.899982378 seconds)
done (took 524.165848263 seconds)
SAVING RESULT...
DONE!
