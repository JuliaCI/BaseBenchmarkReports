cset: moving following pidspec: 25816
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.147225403 seconds)
loading group "string"... done (took 0.628169764 seconds)
loading group "linalg"... done (took 9.5763055 seconds)
loading group "parallel"... done (took 0.168299684 seconds)
loading group "find"... done (took 2.405111609 seconds)
loading group "tuple"... done (took 2.299028615 seconds)
loading group "dates"... done (took 1.393015267 seconds)
loading group "micro"... done (took 0.629281379 seconds)
loading group "io"... done (took 0.669327759 seconds)
loading group "scalar"... done (took 53.177022124 seconds)
loading group "sparse"... done (took 13.415126148 seconds)
loading group "broadcast"... done (took 1.327041645 seconds)
loading group "union"... done (took 2.53118555 seconds)
loading group "simd"... done (took 3.517587801 seconds)
loading group "random"... done (took 13.314057232 seconds)
loading group "problem"... done (took 2.181011908 seconds)
loading group "array"... done (took 23.249010543 seconds)
loading group "misc"... done (took 1.522729068 seconds)
loading group "sort"... done (took 3.705837584 seconds)
loading group "collection"... done (took 20.359929254 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.898774759 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.173670352 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.237665016 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.560406209 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.304593965 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.199671292 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.184363922 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.201432896 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.624396455 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.227273319 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.189773913 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.40209858 seconds)
done (took 6.987566702 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.293939278 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.092493905 seconds)
    (2/2) benchmarking "String"...
    done (took 0.232532071 seconds)
  done (took 0.967114782 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.094115737 seconds)
    (2/2) benchmarking "String"...
    done (took 0.14029597 seconds)
  done (took 0.88040441 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.130217032 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.201836782 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.14501232 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.129085413 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.147719226 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.143856782 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.129596707 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.144703668 seconds)
  done (took 1.68595867 seconds)
done (took 4.603319294 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.521353539 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.911294922 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.56353069 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.216405922 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.341700765 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.358367394 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.309774875 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.267979383 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.129894381 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.113611944 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.234190436 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.454301537 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.46480075 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.963275824 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.097210189 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.149761177 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.197233539 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.806657074 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.178136068 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.152958113 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.535225664 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.250799973 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.156144587 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.14777306 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.225599468 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.163776039 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.167961781 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.142414821 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.717218177 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.171623204 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.237403894 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.122680765 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.166673463 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.198876145 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.276729813 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.149408748 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.719391569 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.239364642 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.125413025 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.138962451 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.721923295 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.15734833 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.248764288 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.144636147 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.111701142 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179177058 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.142244018 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.116998835 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.147388662 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.138841964 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.197385698 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.49608417 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.14482398 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.234187379 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.147784568 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.730687598 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.136911043 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.313563543 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.164982658 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.146518342 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.129952333 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.128609902 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.1958788 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.134699536 seconds)
  done (took 22.567449158 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.245369677 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.250067152 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.117766707 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.201279245 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.181762581 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.120940918 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.144679537 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.118429737 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.167775161 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.219388532 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.180155999 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.253453004 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.132708664 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.129957405 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.225187263 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.290847244 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.146660437 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.161621067 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.145212487 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.135339122 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.184653962 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.134324367 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.150033608 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.134066897 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.21004205 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.24494556 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.159692797 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.162378658 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.144529548 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.136551957 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.181764891 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.20090449 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.116343177 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.143223659 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.21569634 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.162769031 seconds)
  done (took 6.923688052 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.273726435 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.142227903 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.302648149 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.143705983 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.226875388 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.189241245 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.21967987 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.231829632 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.328008922 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.375059674 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.202196895 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.166067546 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.151339118 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.118974461 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.134211904 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.117701393 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.872319859 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.210471231 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.179293836 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.226552582 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.153134972 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.136970495 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.410191347 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.125147467 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.139202266 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.132801143 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.10916256 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.261394065 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132403018 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.515377103 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.139551929 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.134799169 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.169220572 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.246527481 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.161941205 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.17637981 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132647083 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.139952622 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.247945084 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.233805579 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.15635927 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.117329355 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.135323593 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.154566667 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.169517225 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.145512872 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158752724 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172372862 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.125432839 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165535377 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.165511909 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.234053576 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.218500099 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.124210457 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.316594482 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.163227895 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.137263718 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.147297268 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.87626456 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.161236536 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.137616512 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.117843288 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.150130894 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.135278318 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.511401481 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.162152465 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.414538254 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.123220708 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.198014402 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.149612298 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.155876707 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.123707224 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.139967467 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.126757532 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.161577398 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.126412875 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136613707 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.125955393 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.135545855 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.128908026 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.15863345 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.124912261 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.136595801 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.186885397 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.138435047 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.134159062 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.162045225 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.163053561 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.1285422 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.141283452 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.152569617 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.136064082 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.128124202 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.259577033 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.135850878 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.159753278 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.15068197 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.170052136 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.142386653 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.348282235 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.122451587 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.178734115 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.138328012 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.152954362 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.151535683 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.12369007 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.140891775 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.119601452 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.139444187 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.187146906 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.141681371 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.120367923 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.143999192 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.133573864 seconds)
  done (took 32.236215577 seconds)
done (took 62.372842438 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.48266797 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107693947 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.127591119 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108349333 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.127457599 seconds)
  done (took 1.679825423 seconds)
done (took 2.389775087 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.226844976 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.327069785 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.24006206 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.155025036 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.206959979 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.2043786 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.193176012 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.203984591 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.211506758 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.21052191 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.138512468 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.228489848 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.218236576 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.190701269 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.138501507 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.243159825 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.20268584 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.194381263 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.239049215 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.143596033 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.137705897 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.160257505 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.141944875 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.143125951 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.141237809 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159291499 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.146288386 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159391149 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.135141458 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.14387924 seconds)
  done (took 2.332431471 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.167939037 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.14180034 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.137028259 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.150910824 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.139133906 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.143330503 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.138521056 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.156247634 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.146375143 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.156726636 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.135664802 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.144552409 seconds)
  done (took 2.309437151 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.118442436 seconds)
done (took 9.637765662 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.23020591 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.81808129 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.195364505 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.304572564 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.37272714 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.315452891 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.666871751 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.247824402 seconds)
  done (took 15.980151928 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.161145321 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.237900188 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.155217442 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.132741543 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.151861302 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.136533197 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.153557226 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.132670332 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.146485976 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.137182384 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.132291672 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.149091723 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.137078233 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.152283097 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.132748726 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.152456701 seconds)
  done (took 3.180224939 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.177148039 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.175508563 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.138801245 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.159071678 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.135419747 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.157477401 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.142934599 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.15760513 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.135779514 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.151673716 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.143199814 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.155963151 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.13860417 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.151435454 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.13858204 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.174919006 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.138235118 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.156115995 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.157891648 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.155930892 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.155321322 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.137929807 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.154062762 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.140447927 seconds)
  done (took 4.418569033 seconds)
done (took 24.299162238 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.195309579 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.142622164 seconds)
  done (took 1.06691217 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.208048259 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.224232897 seconds)
  done (took 1.168180381 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.153891193 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.147763263 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.163865817 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.161624604 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.134113184 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.148647352 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.158511233 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.150604749 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.132945916 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.149980973 seconds)
  done (took 2.242946725 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.136170712 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.152258772 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.149291148 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.218016439 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.157204204 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.137052202 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.152016435 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.137160171 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.154424713 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.133064048 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.153271137 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.151750058 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.153113569 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.151171771 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.15321298 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.138486356 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.160313675 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.136950399 seconds)
  done (took 3.461967397 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.13301337 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.133665151 seconds)
  done (took 1.007537999 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.136370446 seconds)
    (2/7) benchmarking "second"...
    done (took 0.131832665 seconds)
    (3/7) benchmarking "month"...
    done (took 0.151682275 seconds)
    (4/7) benchmarking "year"...
    done (took 0.150431767 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.133332591 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.131811239 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.15033946 seconds)
  done (took 1.725267781 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.577758126 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.267108418 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.394887126 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104147043 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.155080598 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.369487255 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.155988562 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.105561445 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103816359 seconds)
  done (took 3.001833966 seconds)
done (took 14.410953968 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.134779157 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.328877782 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.644672162 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.171489045 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.132374 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.208454353 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.383956526 seconds)
done (took 2.752118544 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.351061348 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.20971591 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.118680638 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.135797964 seconds)
  done (took 1.558357398 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.124822669 seconds)
    (2/2) benchmarking "read"...
    done (took 0.140430149 seconds)
  done (took 1.016933362 seconds)
done (took 3.327140188 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.152342936 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.149501967 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.13694063 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.152676059 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.137532286 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.152466573 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.136501368 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.149619235 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.137370502 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.149156477 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.136636047 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.151800935 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.134033771 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.152023529 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135850297 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.152658968 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.136813294 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149933021 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.135126183 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.153319995 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.137109223 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.150396758 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.136579774 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1518592 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.136765599 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.151951463 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.134320046 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.14999497 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.136352368 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.153233606 seconds)
  done (took 5.075244845 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.139118045 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.242211042 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.1490582 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.139555216 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.146332571 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.132803579 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.14566925 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.135189321 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.150034341 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.132349005 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.151298098 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.132265979 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.149144362 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.134042562 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.149756115 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.135863723 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.157512919 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.132945305 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.148608708 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.134416705 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.134820721 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.150099998 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.13219048 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.150125817 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.132948862 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.147187349 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.132242188 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.149164898 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.134341213 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.148485621 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.13561084 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.152790619 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.133909232 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.15790807 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.13654734 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.148878578 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.140112235 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.128369416 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.151966768 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.129341391 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.147800425 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.132281196 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.15054203 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.138548867 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.148885771 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.133890908 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.149269687 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.134355185 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.150711552 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.135946256 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.146072365 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.134707773 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.151199379 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.135844135 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.134492641 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.14849638 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.133156762 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.149147021 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.133970363 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.15200363 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.129166929 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.147884381 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.137806892 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.150970006 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.148718753 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.156887867 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.133228559 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.151590223 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.134631056 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.15525557 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.135521058 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.160200647 seconds)
  done (took 11.102045866 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.133459008 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.132831534 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.150877002 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.133009785 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.152051532 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.13598043 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.150392284 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134309853 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149647826 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133757265 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.150187599 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.13425947 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.149798983 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.134352664 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.132872158 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.152135895 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.133289933 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.151348011 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.134051168 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.151963217 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.135538945 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.151252843 seconds)
  done (took 3.881025448 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.277916957 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.141382893 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.201645088 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.146258315 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.170169146 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.164493968 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.139627431 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.157099552 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138902771 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.159653476 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.143015399 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.157598228 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.151806159 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.163829477 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.161943519 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.144223197 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.15751658 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.144418256 seconds)
  done (took 3.687994882 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.134021762 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.132278106 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.152827346 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.13314003 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.151413747 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.135360136 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.152026197 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.134412793 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.151351624 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.1341001 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.151856193 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.135986919 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.134239263 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152037593 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.13441631 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.152567913 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.134103617 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.152956199 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.135679463 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.151569399 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.134831499 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.151815007 seconds)
  done (took 3.903464187 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149755166 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.15329978 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.155138206 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.15636069 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.13530166 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.154012933 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.141377699 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.153208824 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.143417657 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.153962346 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.136253188 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.154722755 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.15135307 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.154066063 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.142919104 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.153191401 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.138284079 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.153009915 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.137336946 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.1357495 seconds)
  done (took 3.723330734 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.227444476 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.171410827 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.169434402 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.16073989 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.171073869 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.153091444 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.178374172 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.152176903 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.170768479 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.179675046 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.152404158 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.169165175 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.162399056 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.175043487 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.152128001 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.178183367 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.158096799 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.177413473 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.169861993 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.152149277 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.180738812 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.151580052 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.177412811 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.149932614 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.170748762 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.169860081 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.152856593 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.173302755 seconds)
  done (took 5.484558918 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.148320412 seconds)
    (2/2) benchmarking "in"...
    done (took 0.162172454 seconds)
  done (took 1.087449305 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.138718529 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136153668 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.156283825 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.135972173 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.155071965 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.136666986 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.155471958 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.137413872 seconds)
  done (took 1.929185609 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.247251911 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.252810154 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.142087213 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.166068195 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.251456606 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.232130699 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.17185168 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.161115138 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.138008142 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.149800496 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.246536375 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.128299747 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.155245916 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.133052285 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.15707543 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.1418002 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.155942565 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.145149183 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.162231294 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.138438044 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.160064715 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.141345668 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.157701474 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.146312104 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.150368469 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.138289694 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.159640071 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.147767001 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.152689578 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.137290365 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.153595141 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.135659683 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.158281131 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.142321029 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.164302001 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.251802431 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.141808311 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.153340083 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.135535544 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.162539424 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.180143572 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.138991946 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.157850266 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.136030807 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.158260624 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.141519026 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.159532835 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.138331787 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.128476954 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.151075331 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.13805973 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.150997255 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.136302845 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.156222137 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.136393173 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.162347418 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.137695488 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.152838882 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.132398712 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.151690574 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.134982291 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.151951675 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.138123498 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.160586186 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.137041482 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.157147202 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.136377183 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.15970843 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.137463171 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.15869562 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.136795193 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.171534613 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.14018182 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.161819866 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.141723015 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.157949326 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133660139 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.161971952 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.136252799 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.157660159 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.139641486 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.179051238 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.138861169 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.15362347 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.132435768 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.164139129 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.137493696 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.160036976 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.129649107 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.164865418 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.13912801 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.157735091 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.129936353 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.156069078 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.133008391 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.159981047 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.129915115 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.157113497 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.136602817 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.161389029 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.142611455 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.156372185 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.138032873 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.162819384 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.143118646 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.156160377 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.207893004 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.135050825 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.152816129 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.1402882 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.162891905 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.133946798 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.136113008 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.157658919 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.134621719 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.154345718 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.14234989 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.157338001 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.140831261 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.161060369 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.139152794 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.160251997 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.140068355 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.157357314 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.134584024 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.161985151 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.146955206 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.159208316 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.139399414 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.159198112 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.13859177 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.157664374 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.151666131 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.154627415 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.142387131 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.155218992 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.138234256 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.159073644 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.143193555 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.157858809 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.133972376 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.15569095 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.13894753 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.158317742 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.140378303 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.159005901 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.133758251 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.150092399 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.138408512 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.154335034 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.139802072 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.166299057 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.134624977 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.161110829 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.13551366 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.166109813 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.136141884 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.162278225 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.14162936 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.162324362 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.143909025 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.15037547 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.137327052 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.159878015 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.141656604 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.154078677 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.140726403 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.158773144 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.14780135 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.152092805 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.143824504 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.150960624 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.138015604 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.162526089 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.142318213 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.141256423 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.154330675 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.170576677 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.170436505 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.163444677 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.1400392 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.158170736 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.143885135 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.157922677 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.145741013 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.14469714 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.165217013 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.136876813 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.158762588 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.144424329 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.154531992 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.140511005 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.158263072 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.1400762 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.151880785 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.140478143 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.152529667 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.143726905 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.161246769 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.143846479 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.16474301 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.141993499 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.15816796 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.14955198 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.15555506 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.142636052 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.15375087 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.145256681 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.16868831 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.144888203 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.16474011 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.14205905 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.156827222 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.140891121 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.168427205 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.14263485 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.159152863 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.141237966 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.151692862 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.132989582 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.164617157 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.14245694 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.156038848 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.140593403 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.159895342 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141189543 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.157252832 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.13371413 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.162211799 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.143772285 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.154311958 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.13980954 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.153743096 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.138041425 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.165784455 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.13317698 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.15407675 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.142536094 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.164318232 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.140164465 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.157616789 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.143442043 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.163510013 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.145396211 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.141554504 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.157529698 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.147406341 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.159856948 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.139526449 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.157493182 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.14312639 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.15426197 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.141023025 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.162342727 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.136954122 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.15671003 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.142805436 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.166091818 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.144739513 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.159237551 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.144552888 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.16493884 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.145766587 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.158443211 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.144944253 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.156095559 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.133277433 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.157346752 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.133054799 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.16144763 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.135931553 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.162913329 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.139023517 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.157752687 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.144417783 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.163360739 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.139268939 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.164795 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.151502915 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.15448875 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.133258448 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157594394 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.140089934 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.157283446 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.136544682 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.161467672 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.142443399 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.163897933 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.143421077 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.155602448 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.141368318 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.16780939 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.137725845 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.165979304 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.147598598 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.165588137 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.138202107 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.165296084 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.138920467 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.16407132 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.135475763 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.159098144 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.140773784 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.158945261 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.138080176 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.157680977 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.138744618 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.153032105 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.138028661 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.165396987 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.140637605 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.164029891 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.141796336 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.157552904 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.137790471 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.155690248 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.147367701 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.158524673 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.149459147 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.140363953 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.154466106 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.133430827 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.165728906 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.140626355 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.166649702 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.134915065 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.165545271 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.146051132 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.164666604 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.141237211 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.169557855 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.148155495 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.165507797 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.145920532 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.15550449 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.1379952 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.165168623 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.140543619 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.164863715 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.142981954 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.155765701 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.143278413 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.1662554 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.142859262 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.159824967 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.135036563 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.162346528 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.147460079 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.163501893 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.145157757 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.163099487 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.143520946 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.155768837 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.145670738 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.164792243 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.142445743 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.165589999 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.142430596 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.164155311 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.140718865 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.165045044 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.144332729 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.135085606 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.155358456 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.137938141 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.167687477 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.135189235 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.166195674 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.14603957 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.16029721 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.14001693 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.166499007 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.137444523 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.164208708 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.147511762 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.160132911 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.149687982 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.163590251 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.139442836 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.164819978 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.147761928 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.15574672 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.142038311 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.159364081 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.148969546 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.159665819 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.147032764 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.160705215 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.147410427 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.164368273 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.146436716 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.165847462 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.148746167 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.156011748 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.149234169 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.164153012 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.145349157 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.157531204 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.141951784 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.155835996 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.142421262 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.16682592 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.141809962 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.16973633 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.150943224 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.159198605 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.141224212 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.166620817 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.143348873 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.168395062 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.140090748 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.163570045 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.137465433 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.163884493 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.142491441 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.167907042 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.140233443 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.135840175 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.168480095 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.147072883 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.167695453 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.145786187 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.171101583 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.137779214 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.157891138 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.145710478 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.161669086 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.151921769 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.167647664 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.141558312 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.162959838 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.145235692 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.165659886 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.150702805 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.15903983 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.141063772 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.164093832 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.144607794 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.162880176 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.13926554 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.167935122 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.142376531 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.165707366 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.143274208 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.158379679 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.142748793 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.170870139 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.143107223 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.160619521 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.142304483 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.170426936 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.144536132 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.160881953 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.138974176 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.169177559 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.145262694 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.168862316 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.141290179 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.164315937 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.141780269 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.164661953 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.151732415 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.16252242 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.144310745 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.161444734 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.15105349 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.168481802 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.138501685 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.16069204 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.155395935 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.168170322 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.147489574 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.166909549 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.144585335 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.171741515 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.152418214 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.167769766 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.13894338 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.158188279 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.143820668 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.156623074 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.148413888 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.167439477 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.145155923 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.161107334 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.150038536 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.147323877 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.167398698 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.147565807 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.160609271 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.151109171 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.161962723 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.147843044 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.160638316 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.138499579 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.166594965 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.150686935 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.163292809 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.146680886 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.166824129 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.148029925 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.16001726 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.142947627 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.167218779 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.149416212 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.170908849 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.143785382 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.162601666 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.149379742 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.175108327 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.146982459 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.164114842 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.151650343 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.172024444 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.145869372 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.163705852 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.148817954 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.170738002 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.148551832 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.171411778 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.143478187 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.165266103 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.153142237 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.171631308 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.15503039 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.164937298 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.13948285 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.168825673 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.143645478 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.159026934 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.150123635 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.171376702 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.151290146 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.166152937 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.142726019 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1732546 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.150164424 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.165908208 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.144259115 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.163087489 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.151250109 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.162470057 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.149581489 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.162306175 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.153427057 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.150630321 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.172843315 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.152193655 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.161331153 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.149496972 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.1686006 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.152411966 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.169121785 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.139062337 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.1615146 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.14822529 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.172853281 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.152078866 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.169410805 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.149584458 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.170704405 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.146687856 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.166282124 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.143013045 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.17356115 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.150741317 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.167219042 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.148193225 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.164351662 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.146417288 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.166945002 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.15181786 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.173311594 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.147996189 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.175435391 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.154018773 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.163956661 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.142991978 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.165696987 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.149201376 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.167474419 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.150920386 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.163647861 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.141400937 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.170581136 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.154716949 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.164049316 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.153559789 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.173369974 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.145761502 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.148327058 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.175238437 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.150050332 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.168420318 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.14615027 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.17042136 seconds)
  done (took 92.10564512 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.195267534 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.175246378 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.148865552 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.169401934 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.165848149 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.171686315 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.148256982 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.170201116 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.14942296 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.180039295 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.149072366 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.168030367 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.16338429 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.190378435 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.186695696 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.159064517 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.168816805 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.150447483 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.168589121 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.150860354 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.184614085 seconds)
  done (took 4.388819717 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.14940412 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.147868798 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.169566504 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.149239925 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.168777923 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.14786546 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.168925117 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.149346218 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.170099457 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149031532 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.168467192 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.150699359 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.14914306 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.16921289 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.148465172 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.17043655 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.148895996 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.169301018 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.148980391 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.169654319 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.149505947 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.169694764 seconds)
  done (took 4.356461759 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.171772378 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.151124688 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.170816493 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.148537041 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.17292877 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.148694174 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.175109593 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.149457691 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.179789054 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.144850329 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.163173516 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.14436609 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.170010193 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.148997505 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.163398588 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.149904167 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.178256294 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.1530553 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.175906486 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.149654862 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.162672352 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.149815664 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.171375702 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.143151824 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.153837046 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.176041414 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.15327159 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.174177366 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.140604316 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.174722726 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.150599829 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.164549696 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.141193481 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.162366353 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.140972041 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.173308132 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.152469027 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.17043908 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.151203818 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.16108075 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.152291672 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.153598533 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.163631879 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.150308587 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.173339104 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.144202238 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.175099616 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.149607491 seconds)
  done (took 8.517304779 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.178667054 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.207982808 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.152762132 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.202080975 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.18728791 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.160509152 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.176148547 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.179746731 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.175647046 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.153601759 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.190613825 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.164497018 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.178336577 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.158520584 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.177010308 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.153987064 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.176597152 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.153015814 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.18025376 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.152754784 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.179882161 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.176227231 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.164703201 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.183810127 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.156330295 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.175158396 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.154782559 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.177537555 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.164804347 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.179685751 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.158636073 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.181656126 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.1842525 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.155458193 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.173676969 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.156491228 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.185988569 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.156851309 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.176027097 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.153232858 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.176601402 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.158389883 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.177285413 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.166817687 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.176419132 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.156202008 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.1770445 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.151821949 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.186358388 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.1562063 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.18281272 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.164165329 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.178561151 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.176210735 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.159163182 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.185814687 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.156825934 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.174289705 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.156354646 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.1835298 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.152908869 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.178165251 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.165738127 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.176827008 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.160052095 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.186854883 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.155883862 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.178599972 seconds)
  done (took 12.585569249 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.18482596 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.180252379 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.167773816 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.187406719 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.15876076 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.180749265 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.158586471 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.179604282 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.158807623 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.185810894 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.180009242 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.291333566 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.162278672 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.185388683 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.159283495 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.179803734 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.159721857 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.180339649 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.158968519 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.181636933 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.158423675 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.188049778 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.15915569 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.187666103 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.418371172 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.157190543 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.180764077 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.159644022 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.189511789 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.159402099 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.19171092 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.159281974 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.180283145 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.188813728 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.170673594 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.180330426 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.153744708 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.179231787 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.159007109 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.180457642 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.157536754 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.188577714 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.159620666 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.177784568 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.158166548 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.180631982 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.167226107 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.19126331 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.184785229 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.16347685 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.180746454 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.165526245 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.179999903 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.157534712 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.186945977 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.194780745 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.166746579 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.187550783 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.158924253 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.187385324 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.186919009 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.173679113 seconds)
  done (took 12.039892766 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.153954312 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.152131176 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.176512462 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.153016654 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.175710816 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.152611258 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.174710979 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.152660061 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.173212678 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.155224638 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.174872264 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.154357971 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.173167373 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.154349213 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.152958747 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.175742333 seconds)
  done (took 3.51191334 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.171590444 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.191144744 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.253592199 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.156650792 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.176994005 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.16171183 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.1758907 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.157657525 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.174105564 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.161097531 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.177881993 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.158288015 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.192495861 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.156877605 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.175345526 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.158344366 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.173671595 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.160122059 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.175078239 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.236106816 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.182687212 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.15719514 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.178693883 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.157957156 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.179802336 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.157910498 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.185570282 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.154902622 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.179599607 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.155224835 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.178694609 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.160315176 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.175729591 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.159142992 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.178613201 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.155019414 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.17736578 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.156034295 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.179270237 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.15459959 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.179852279 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.155080589 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.178632166 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.157319967 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.175410473 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.155408916 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.175912897 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.160841623 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.178596158 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.155640356 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.178157264 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.15980704 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.181357083 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.16357111 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.184572505 seconds)
  done (took 10.359302871 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.167984245 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.178830677 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.169394983 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.175372853 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.157798944 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.179634833 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.158379899 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.157756083 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.180021047 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.154068065 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.180562081 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.157609457 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.181388004 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.156898807 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.181178481 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.157143745 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.176411986 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.157372375 seconds)
  done (took 3.942863993 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.155158094 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.154325275 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.177540536 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.1541976 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.177366317 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.154993856 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.177061937 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.155049231 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.176974943 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.155112684 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.17597598 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.155232981 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154438786 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.177155235 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.153641964 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.177481941 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.154215035 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.176342333 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.154125664 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.175928081 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.155098261 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.176927036 seconds)
  done (took 4.545559743 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.168181894 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.281473667 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.184793285 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.291116931 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.152595862 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.17546432 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.161334416 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.176968885 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.189091508 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.154090033 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.172257925 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.153749365 seconds)
  done (took 3.179511545 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.183872943 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.214184052 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.157419109 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.180168514 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165860048 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.183265315 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162166712 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.184389963 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168680486 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195420962 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.181802461 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170300734 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190543519 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168116159 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.189052402 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165421874 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.182843925 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.160491535 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.179750918 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198417066 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16293308 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.190625753 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.16200911 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.182426429 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.162784754 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192548958 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169142319 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195336714 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.182904913 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171924109 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.18860369 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162867285 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194134688 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172232168 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.18248062 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168435282 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.18522862 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198693028 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16739018 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192642655 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.158721602 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188537111 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169269807 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190115852 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191805792 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.164549573 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188227545 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163313933 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.184276388 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182286271 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189260992 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190928143 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169032597 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192351179 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169757796 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.205143995 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194921919 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170188962 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.189956338 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171788492 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193304784 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166424506 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192267631 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194589339 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168442481 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192548545 seconds)
  done (took 12.827076863 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196704334 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.180794298 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.163370844 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197474875 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.170735548 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.18616454 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161967803 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185459598 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.162337041 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.182491873 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.226692323 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163944472 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193315407 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169676101 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.186374169 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.16359923 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1850591 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191520725 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162019837 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.20488725 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16251524 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194019639 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16972792 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.194460515 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195774425 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16776881 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186273987 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163397383 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.185191133 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.163803535 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.191906864 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.162640927 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193599376 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.159658235 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193959249 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18441535 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165915264 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.189468655 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163574104 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.189433073 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.170463543 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.201060105 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164000644 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.186820522 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.19651724 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1640195 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.185303243 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.162869424 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.185159005 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.161783316 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196958402 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.173827472 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.198135121 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193210961 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164857231 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.185766491 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16431391 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.18524153 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16324398 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190708676 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171477606 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18703864 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.20550684 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166002052 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.186758183 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171604166 seconds)
  done (took 12.830651466 seconds)
done (took 225.814323803 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.318002133 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.349921616 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.148361761 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.438723362 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.148818374 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.856839664 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 5.121930746 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.231175923 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.173815374 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.149537257 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.172677289 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.168985071 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.525520759 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.149572045 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.171888782 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.186808729 seconds)
  done (took 32.246665298 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.349876229 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.39648592 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.165010696 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.177411038 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.155692869 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.180502037 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.153253357 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.17955835 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.153870563 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.183401436 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.154090576 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.174239296 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.18069712 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.154087314 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.154018795 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.179973253 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.181756894 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.156207994 seconds)
  done (took 4.375906985 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.174005584 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.22326683 seconds)
  done (took 1.351482562 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.185987166 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.271688284 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.375571351 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.228962698 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.174623793 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.196543565 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.225940727 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.168327393 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.267040105 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.166152493 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.190318779 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.175588054 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.181199763 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.183394883 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.172021979 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.175276934 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.182744862 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.192746556 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.169208948 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.181588772 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.17931376 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.178788148 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.160241432 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.193203107 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.257475748 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.167967794 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.180290907 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.155164825 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.180310163 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.169102605 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.187435745 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.170639735 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.190196448 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.235809339 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.157248972 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.23148161 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.183614961 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.155682626 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.193346697 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.155217905 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.1831329 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.179479935 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.168129262 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.174241616 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.1561793 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.1819969 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.155888343 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.178002601 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.164849117 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.181131344 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.163598104 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.186538736 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.23311634 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.15816606 seconds)
  done (took 11.160910662 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.989521503 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.202817999 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.180882582 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.142327283 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.201124046 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.169304224 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.00764881 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.181632547 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.308335182 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.082726768 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.19661793 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.165787436 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.300305318 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.341656664 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.366263916 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.418615514 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.84082966 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.192819964 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.188065015 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.223378476 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.185157733 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.173901036 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.195554156 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.500713653 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.157570784 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.179351471 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.16128417 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.18835905 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.234588609 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.15741242 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.183386245 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.258681813 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.353532571 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.271911155 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.155279279 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.179211646 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.155863948 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.245214266 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.350123586 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.279120782 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.248928464 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.154198218 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.17782141 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.162013 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.194497692 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.153823258 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.240235477 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.253162005 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.252634879 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.18383154 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.16489949 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.188697841 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.159837126 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.238539247 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.178635178 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.420424589 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.444998082 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.15654051 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.185741811 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.17049584 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.326527935 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.18341955 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.298259003 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.203197218 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.274222993 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.179120903 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.85872055 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.246857748 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.156382375 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.186226856 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.162306073 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.186793574 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.160104648 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.240591763 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.480757441 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.186230857 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.163102185 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.179611007 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.28564791 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.158135658 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.179840475 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.238797871 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.159121312 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.185575626 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166654555 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.187145935 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.251857068 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.3330189 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.164010342 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.187471059 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.162451383 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.191102257 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.157914351 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.290764075 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.313172661 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.235946015 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.289493137 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.162879574 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.242461753 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.246226791 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.183466364 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.249710447 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.164521387 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.191930962 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161858648 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.309975854 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.196773886 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184950099 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.162585602 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.188001499 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.221921052 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.161976123 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.187666148 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.248825908 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.543180545 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.247631776 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.15583362 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.184525903 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164412161 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.242205066 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.187825586 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.324157545 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.180846937 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.246254549 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.186908262 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.155135429 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.188567553 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.244431971 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.16555741 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.189037403 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.182990434 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.168314751 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.341529763 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.282287378 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.18967738 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.308869524 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.257970368 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.162546005 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.253500236 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.188361902 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.248010201 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.167801711 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.186763607 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.159406846 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.889650218 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.169189828 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.188385554 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.163545982 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.265604879 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.180808488 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.162046499 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180795109 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.157076493 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.851127285 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.186303866 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.156553348 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.184601096 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.164475633 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.188445218 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.163981446 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.187670124 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.24178512 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.308059187 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.190713987 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.161991081 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.184147261 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.240273436 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.159467834 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.184265501 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.15845861 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.181770017 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.165317538 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.188359297 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.161175036 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.249360103 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.239321198 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.319118754 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.643387146 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.157799928 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.183523789 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.306050084 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.181670089 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.391381791 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.186514864 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.300202387 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.243868095 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.156106451 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.444253221 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.244757486 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.242563321 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.186626369 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.252599143 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.156323673 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.189178624 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.24255862 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.158927663 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.191350928 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.241035079 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.167222834 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.189634362 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.328281823 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.184564296 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.30915811 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.157017515 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.252402668 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.18349783 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.164960508 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.41548365 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.160044681 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.193078638 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.241455878 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.164215934 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.182168436 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.945165287 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.160084959 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.192005622 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.164476575 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.322926333 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.243076654 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.166053251 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.190814094 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.167949465 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.240798072 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.290704204 seconds)
  done (took 61.005231725 seconds)
done (took 111.085514227 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315050947 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.227309904 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.418036629 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230596286 seconds)
  done (took 2.238067853 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.335417897 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.209294141 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.29441478 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.181453619 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.301037078 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.156998196 seconds)
  done (took 2.478590809 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.229500618 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.224974627 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.22476584 seconds)
  done (took 1.681763564 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.265252557 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.266104762 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.408262637 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.320057354 seconds)
  done (took 2.322346597 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.334425493 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.173205026 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.21389491 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.286642936 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.303002937 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.26572317 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.206237262 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.209902555 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.214893675 seconds)
  done (took 3.243609146 seconds)
done (took 12.967745694 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.211450107 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.21360824 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.177873193 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.195457754 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.188161476 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.215331076 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.186351642 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.212002752 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.185446149 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.196666295 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.183672832 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.194052984 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.301401322 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.185874804 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.194540411 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.185914723 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.195212197 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.194470886 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.212803767 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.191510242 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.193042493 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.191792385 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.171524704 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.199278273 seconds)
  done (took 5.773018676 seconds)
done (took 6.779765383 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.300470541 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.151998171 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.167405001 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.195251281 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.286191656 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.175461082 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.211124324 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.16980917 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.205835584 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.169356356 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.182290799 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.180757869 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.193377391 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.296746845 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.171324133 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.186625974 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.159091055 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.206331883 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.20179254 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.209838647 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.286352255 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.160389698 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.205305524 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.159414237 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.283403774 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.189256328 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.168764803 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.196004761 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.181997814 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.195788039 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.168882778 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.184793917 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.184369163 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.209679454 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.158843363 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.194025451 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.15993822 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.156140624 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.170065859 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.19340501 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.184275574 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.19270454 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.170733833 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.185104511 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.171612273 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.192798078 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.161243369 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.196452347 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.160185077 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.193335538 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.164801806 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.207682335 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.171721534 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.159957045 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.1839218 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.161089289 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.204894059 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.159006617 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.208023577 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.159385449 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.186552365 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.159537616 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.197445463 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.159437169 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.194374961 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.161231677 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.195701337 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.171360679 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.194176268 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.16291265 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.185580984 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.16868292 seconds)
done (took 14.563608966 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.165375192 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.226852122 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.304639896 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.305357906 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.187895255 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.203090355 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.199005987 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.184782282 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.195952194 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.179393334 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.220644166 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.192273908 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.304669672 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.202976796 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.176003186 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.199824695 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.171343348 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.193409416 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.303704228 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.208650299 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.184033661 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.201753817 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.186625533 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.202982112 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.164108031 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.211857595 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.166932076 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.198469443 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.165100411 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.206646665 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.185306077 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.19042166 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.19181271 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.183900176 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.204782091 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.176721473 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.200864586 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.174401941 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.189318728 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.166179931 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.195848612 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.181290594 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.189287093 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.177995857 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.19889789 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.180772382 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.197095611 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.177615975 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.190025447 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.173346247 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.190435636 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.188878405 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.203903919 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.182453931 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.202873045 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.176506317 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.202787187 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.177162606 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.193767459 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.177990493 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.190897596 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.171883855 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.192663065 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.186699132 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.19393839 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.176066016 seconds)
  done (took 13.962996287 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.184689599 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.220481811 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.175508923 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.202579474 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.171460219 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.186390922 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.1587106 seconds)
  done (took 2.339149868 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.163040858 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.319523488 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.307690046 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.307512612 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.300619168 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.345159925 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.184868725 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.187832132 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.197337864 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.197739426 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.320288484 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.372096482 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.198792454 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.175484503 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.336468146 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.162903158 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.312437312 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.293377586 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.200981449 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.312809166 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.176955129 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.220505983 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.199411087 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.16373583 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.312665153 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.18780001 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.363140153 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.178178299 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.198093206 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.1744962 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.203254057 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.262848127 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.315265825 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.175397452 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.19660501 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.311517991 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.305808251 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.201180964 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.361945077 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.192426122 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.300962977 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.177451809 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.203414044 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.17831653 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.202425448 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.299270799 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.18193938 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.204529054 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.176237643 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.322449555 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.201402819 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.318757093 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.199890582 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.178806043 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.198903353 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.180497649 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.209757377 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.1768261 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.319901098 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.206899035 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.31132692 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.312374725 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.306491006 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.312654317 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.214194909 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.318746523 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.295748569 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.175244576 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.310933554 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.206798841 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.313722562 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.203251888 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.176905152 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.303382227 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.208602544 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.31708748 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.316352154 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.174128741 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.203088732 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.191298659 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.177641714 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.163070087 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.328733396 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.178264613 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.201067458 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.181736006 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.202783799 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.180435456 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.305792402 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.213831012 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.177061764 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.203260482 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.182292758 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.205195036 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.204824451 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.319873181 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.175320082 seconds)
  done (took 24.156323217 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.166610072 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.164231817 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.193980502 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.164782633 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.190474054 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.164239181 seconds)
  done (took 2.123272221 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.203131385 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.204389455 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.188171987 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.203915128 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.226992237 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.305991825 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.314524946 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.201927618 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.222813493 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.191853555 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.309478733 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.310947568 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.310716604 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.207777192 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.314164164 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.18117216 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.316075646 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.203329574 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.18829505 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.204177418 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.177687687 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.211604378 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.176222621 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.29820834 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.208232802 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.179851391 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.200551541 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.189580742 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.215959168 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.197088161 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.184941404 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.203911229 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.172357503 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.198913662 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.316561163 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.171435826 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.201693014 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.181636834 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.209688802 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.17998262 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.312083852 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.205452164 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.185897194 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.210102672 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.17339021 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.199197606 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.181480382 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.19849339 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.316086065 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.207282378 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.183883451 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.206957348 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.181608885 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.207250796 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.172762976 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.198800005 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.182152883 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.314923498 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.211075599 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.171634653 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.208825748 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.179279276 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.202219602 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.183799979 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.20666419 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.181664566 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.197997704 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.18050606 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.204371349 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.17983623 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.208207461 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.20484524 seconds)
  done (took 16.523279028 seconds)
done (took 60.130965954 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.591515476 seconds)
  done (took 2.67320561 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.225887603 seconds)
  done (took 2.303342417 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.87110016 seconds)
  done (took 17.982071484 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.479424658 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.40710677 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.080156318 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.236381869 seconds)
  done (took 3.282155986 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.127819598 seconds)
  done (took 2.222042149 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.465017176 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.339574763 seconds)
  done (took 1.891379717 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.804044142 seconds)
  done (took 1.905257096 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.936059606 seconds)
  done (took 3.025384382 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.357048545 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.279654403 seconds)
  done (took 1.734708528 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.712108934 seconds)
  done (took 1.814788801 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.378638804 seconds)
  done (took 16.481707782 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.313182764 seconds)
  done (took 1.41762983 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.355046175 seconds)
  done (took 1.46313902 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.487923508 seconds)
  done (took 4.593208735 seconds)
done (took 63.880240591 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.18120184 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.207826113 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.18493884 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.20531192 seconds)
  done (took 1.871215702 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.185608154 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.202755318 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.185826733 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.203302908 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.187732729 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.204308147 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.180364678 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.207390919 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.179565626 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.180160783 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.207242424 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.178134326 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.208652869 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.177613785 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.205068322 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.181676333 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.210399201 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.1781125 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.208326858 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.180093493 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.207742721 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.180055652 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.210401321 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.182538583 seconds)
  done (took 5.735985448 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.17719305 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.169620386 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.200408102 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.168867296 seconds)
  done (took 1.830500872 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.191368257 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.218697086 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.193284297 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.215682574 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.195313347 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.217890699 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.180007444 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.203491892 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.179069853 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.216392006 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.196281771 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.222121777 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.193010837 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.21187132 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.191402134 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.203835369 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.184034783 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.220412213 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.189449551 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.221773949 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.18408701 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.215832244 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.178657627 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.218822504 seconds)
  done (took 5.958665143 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.256630176 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.220152867 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.205176185 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.253441506 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.234372935 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.179996295 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.235074206 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.185884229 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.211250385 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.188156739 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.206732256 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.227248839 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.212923493 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.181338797 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.209456207 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.185582828 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.216635498 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.183873764 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.248193974 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.210357783 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.186114654 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.219002553 seconds)
  done (took 5.77308815 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.330527105 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.173046808 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.197781342 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.169624015 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.210828907 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.174502479 seconds)
  done (took 2.371464654 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.171717598 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.165296242 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.194915489 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.165266875 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.196784542 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.165320872 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.192344063 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.166249399 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.192255771 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.16610412 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.191058675 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.166098185 seconds)
  done (took 3.254828861 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265301108 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212699337 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.344536088 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.453911544 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253381315 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.248584247 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.368548188 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224376785 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.270327436 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227401065 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272797446 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225691847 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244033145 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276644597 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20622222 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.242347888 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262317854 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272137103 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234377878 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307220766 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246625466 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.266421527 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.256093186 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240344233 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.229074272 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227717357 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.212954667 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191824841 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257047295 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259433071 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.269305642 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243418911 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206586052 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277854215 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319466578 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.270923762 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.357101284 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.225794771 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.249339427 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.257873985 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.321474452 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234171016 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282528209 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243876308 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192225808 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284733057 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241659473 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.275044537 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.197527186 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.233904686 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272884948 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242785907 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.260983358 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229801345 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.38900113 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197898794 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.233662631 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26873394 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277775326 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295049597 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244538926 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.214824518 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.260498436 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285880892 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311301219 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.204244308 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.256545167 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.215521618 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227396517 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.300712482 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275274868 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25288118 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.283701402 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193915431 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267779352 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259878908 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244704815 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27213767 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264096255 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.210108724 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213805228 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226043784 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187876222 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.283090795 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211526636 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.309679542 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194801237 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.268485155 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267976942 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215095895 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.253198031 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251471823 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224887011 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.239663305 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.153691297 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236132453 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.248707573 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220518181 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222379481 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239764914 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202919662 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.216606305 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21592078 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.215417216 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262332216 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.190112133 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251981454 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263609678 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.1972181 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273911438 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237606771 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.228941367 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260533978 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293176869 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192989058 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.224757334 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315125538 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263445403 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.199484196 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263061658 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.294485158 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.233754977 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198974241 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258123533 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286198975 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207447797 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294824711 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232630689 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197270731 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.222448312 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267389395 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.250504091 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.224618382 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220495942 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.229193155 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279799283 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.220242727 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20088376 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27617617 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22699487 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187036175 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229104281 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226354456 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.208064232 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.244074987 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.200736995 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247375309 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261858794 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.230627713 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249566497 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227934376 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265685548 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195284077 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.263361244 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239629147 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.184826613 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.267079267 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294939025 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191698837 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273035788 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.254262119 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269109243 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265530531 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194220641 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.27518502 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191343564 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.215306767 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254402162 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235918319 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.256315525 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.288405148 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267282026 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.258684253 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.257648937 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214673608 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263885925 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.280356838 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249006816 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.204344892 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.266473054 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261497184 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.184905281 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.214463367 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.192299698 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230458784 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195183554 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230730161 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275282516 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255652788 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.265114977 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234765079 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233980096 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.28883235 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.19040092 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255396429 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.269747049 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202679933 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.286515733 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288777673 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274103793 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204007599 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258427404 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.213120113 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191898876 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.227888182 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223416016 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.231365054 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.228092668 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207348844 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.289542459 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26447527 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212440732 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.307485468 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230120426 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.299146941 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.214296461 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.225662178 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260034437 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263635334 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.249636633 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227321569 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.25103719 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.260684363 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238237764 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286604821 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263492705 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245975882 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287404003 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.261041347 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222138876 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208611066 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254395641 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201673066 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.254276465 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.234492988 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19479722 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242315769 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.201285573 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233800705 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28047981 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238461264 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270570934 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.220691759 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262069272 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217367116 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209389498 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.270337781 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238243459 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.16154141 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258035202 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283055676 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215889311 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248112632 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262539463 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195284467 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.408776708 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275286694 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234182781 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.230306542 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232012564 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237834983 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.253646278 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254480123 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.277030736 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206571545 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.303764698 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.2669898 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.201799242 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224989617 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.240926338 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215360556 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.223402014 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.243743741 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.231673841 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.239011563 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286104187 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202020587 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.268360458 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274935224 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.209983688 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.241989269 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232508284 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323986205 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236616365 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267321719 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.262539421 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.25604675 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247591481 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220282237 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191072794 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.228201252 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.279454661 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194836878 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274837695 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.256289712 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272408297 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270656938 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226196466 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237890901 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.191622799 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.264014182 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243955302 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272749944 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201296476 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.232777964 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282268602 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.183642818 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227248958 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.223875854 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.383119364 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243529692 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265008468 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.162550475 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.377632131 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.222745846 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199398849 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252172751 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263898325 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.200129026 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.278336121 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244124135 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236168099 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.253541988 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200947384 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.269542609 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275327426 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262931281 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270140684 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.212571183 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.257679284 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25144275 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237322579 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240916437 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.241499912 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225468308 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292622028 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.271364023 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.196930389 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267064993 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267000539 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.268189229 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237854465 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235482654 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27806887 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195292888 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262912686 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233746492 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191483246 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257131776 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.257044752 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197710575 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269499058 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270865948 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195984286 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223458631 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242125097 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235294991 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237249009 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.195302019 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280839801 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.226927163 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279787932 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307952261 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19637997 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.264175028 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207648423 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228366232 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233048169 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21137177 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227368172 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.243121071 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274814796 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.195112495 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269703518 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262431774 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260544764 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218630268 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.238240299 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.363885873 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.194506558 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29231044 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245770288 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291839919 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215582209 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275096412 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.267089593 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216945165 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262384358 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243692257 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.287571706 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262739041 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.268054228 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197215092 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239573836 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233654804 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.199950574 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.248646026 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236028757 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239669456 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.233176932 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.235503402 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241333435 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.242243399 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208365787 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.301246457 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.248819027 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286723087 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.252395732 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.23605095 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276353407 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269828318 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195631412 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.260713978 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267286448 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210231461 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250516635 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.201230074 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.234602258 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316093667 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.191665697 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258082552 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274907175 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.266493604 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241140563 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.233340111 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.276720146 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207604862 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27512894 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222579658 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.217968257 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.270731542 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199793128 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.225112817 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.26978276 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228185171 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.264751532 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.240403639 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.245258713 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296722425 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.189800907 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232501858 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.381364556 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258631667 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290983308 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.191607272 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202669644 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24400683 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257108125 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.260581264 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241720176 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.227482607 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196936737 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.243688377 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.242234219 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.196804789 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.269695716 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248636816 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253354153 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284593531 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.200976815 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.355900818 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.23945352 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241495156 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.20496329 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.196691014 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238883868 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229958 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210532303 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.273196315 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316145491 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.263932385 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.21434622 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.234062724 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.193073389 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228761528 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.258432874 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21752608 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269140401 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245093271 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.162472467 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238593917 seconds)
  done (took 119.318041048 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244286222 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.241167692 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.253017233 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.309476998 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.28009929 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.37971471 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.315684794 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.333648811 seconds)
  done (took 3.591934605 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.188536015 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.23320025 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.241489291 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.185498619 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.207904026 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.579651792 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.233545344 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.218287984 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.228489126 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.220595294 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.207179731 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.636032124 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.215680213 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.214547311 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.217507038 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.178396819 seconds)
  done (took 5.444694111 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.313975951 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.724620678 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.097573681 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.412037123 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.37371215 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.293972391 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.918517769 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.286916969 seconds)
  done (took 13.672106134 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.239997485 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.272024099 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.516216041 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.408281411 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.284211844 seconds)
  done (took 2.975214525 seconds)
done (took 172.891590614 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.19292719 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.191830382 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.224148114 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.195055376 seconds)
  done (took 2.041108863 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.251159018 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.149884105 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.184769209 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.148926356 seconds)
  done (took 1.990124851 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.46912844 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.149674088 seconds)
  done (took 1.895229419 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.214705553 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.234298703 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.205468411 seconds)
  done (took 1.92273727 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.206317812 seconds)
  done (took 1.468433163 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.188723315 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.187782025 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.373904586 seconds)
  done (took 2.014168732 seconds)
done (took 12.58624757 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.210921959 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.021733098 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.647777402 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.201455746 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.817646891 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.468283301 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.500484531 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.248205393 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.271300156 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.209880225 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.212509139 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.791282902 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.483597938 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.943709082 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.468994667 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.944249549 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.79422865 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.181565215 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.215805579 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.182039235 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.478330478 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.178944763 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.20998538 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.181518174 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.790352384 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.486379125 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.209084453 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.957152952 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.209304525 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.189160417 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.499074792 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.18049277 seconds)
  done (took 23.629474763 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.182049175 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.26781923 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.236077672 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.213308902 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.187535331 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.21276828 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.192496784 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.225155069 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.310837928 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.180869781 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.233688904 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.179284947 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.216899707 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.182068139 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.235314851 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.180619892 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.213382051 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.182022076 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.218935192 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.181859948 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.233008333 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.180339597 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.212630252 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.180959813 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.210039369 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.198380326 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.211157044 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.193382584 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.2112739 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.191065451 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.216761103 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.181362363 seconds)
  done (took 7.922442714 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.223852143 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.277890489 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.237652169 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.25106932 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.266575676 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.184407687 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.301848776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.248467359 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.287827063 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.212911536 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.203126273 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.212172576 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.221246503 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.213425837 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.205816721 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.212254193 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.183977342 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.212606329 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.216847049 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.185344652 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.23464605 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.181903414 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.213213584 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.183698868 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.210828573 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.202148022 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.211174262 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.193989086 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.212463929 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.192470923 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.216731488 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.182583761 seconds)
  done (took 8.268947722 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.195538959 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.195611659 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.236741735 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.235410938 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.192772372 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.194309074 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.228773073 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.191309924 seconds)
  done (took 2.950180256 seconds)
done (took 44.026651689 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.204754788 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.227095442 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.205239661 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.196300518 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.372148081 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.1895031 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.231136374 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.189886306 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.194653727 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.237908564 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.181361405 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.221443292 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.201072142 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.225653882 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.344353031 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.19660434 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.379944405 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.345939178 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.189952707 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.228377267 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.191112651 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.347184598 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.227257471 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.191209237 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.328182512 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.185216695 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.368461177 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.193823791 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.19232223 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.215142612 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.346772612 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.223821503 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.191696278 seconds)
  done (took 9.227453015 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.294074111 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.225987301 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.192482227 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.22342776 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.192847401 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.222478405 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.32822929 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.691660689 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.223293442 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.191457825 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.221582446 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.28101185 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.22859599 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.187279872 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.225380021 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.171646663 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.331006846 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.222244199 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.184774976 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.155344152 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.218584169 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.190238473 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.341984116 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.218967776 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.192499407 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.189507745 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.226701512 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.19476556 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.225197195 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.193932774 seconds)
  done (took 8.480006353 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.197622245 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.20404171 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.242483782 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.289428545 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.222419358 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.235321353 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.208149812 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.235768559 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.212814236 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.217867104 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.200940361 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.252678556 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.201368321 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.229513296 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.184256103 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.23302385 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.201479166 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.216216289 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.19371667 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.236944748 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.205116131 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.233837679 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.207069092 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.228767638 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.183649718 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.225471547 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.195839342 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.228661645 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.194412319 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.23231828 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.187206059 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.22080199 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.187270674 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.252193871 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.185932352 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.230263 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.204842121 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.229583802 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.198865325 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.250133164 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.186851572 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.220009078 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.211309936 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.274042217 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.186551755 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.227952743 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.186835102 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.232693103 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.183501602 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.236173396 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.22735595 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.218430474 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.237023767 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.186213738 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.183192913 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.226116751 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.185128638 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.221887368 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.200916628 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.219382896 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.205672107 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.225828512 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.196753305 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.220173769 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.196633979 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.217529116 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.185152492 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.22194074 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.213127424 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.226265369 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.223240629 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.21888937 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.197901274 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.230750076 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.197199821 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.23056786 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.184812655 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.230136035 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.197234276 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.222046901 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.200808903 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.221050517 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.186954075 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.234392082 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.206645229 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.232244789 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.196930562 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.229574222 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.188125164 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.219155202 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.202999561 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.219376384 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.18941792 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.231156666 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.187047232 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.221789334 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.197249188 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.226654346 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.184308373 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.244761836 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.190226306 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.185618359 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.244174489 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.18909726 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.222689001 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.19603072 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.26034046 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.217554546 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.197210816 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.197329106 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.22082414 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.194191729 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.221292292 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.185354379 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.234850101 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.20214979 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.226574687 seconds)
  done (took 26.298929394 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.443668346 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.431919341 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.288007439 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.516680099 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.199323989 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.352584596 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.467676414 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.436569063 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.220301235 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.221180483 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.277819295 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.400021275 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.221895554 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.214613669 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.475048953 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.51847558 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.215990973 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.258368577 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.25615879 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.201453274 seconds)
  done (took 7.932870338 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.196245108 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.253025801 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.210276802 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.237473475 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.198061573 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.235662208 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.188399538 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.240418192 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.199014873 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.226370508 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.191303054 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.224673728 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.202205533 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.201489946 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.235744515 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.208913219 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.230291507 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.191735323 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.241929069 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.191895739 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.196781835 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.211279762 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.229344107 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.208882141 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.236206936 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.196746434 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.21825155 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.191625309 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.226445168 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.19604211 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.223497395 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.195493031 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.226122138 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.168427925 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.230470354 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.203053441 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.224535163 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.191437462 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.192028819 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.222315494 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.201205368 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.231716544 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.195830896 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.193830083 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.206768263 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.171905584 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.233933418 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.199085435 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.201620265 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.207852726 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.232963764 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.20240148 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.227379262 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.209883465 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.225851008 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.20516823 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.231262065 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.203019994 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.224631577 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.186374994 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.217055302 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.190552199 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.227720511 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.202962883 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.232938367 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.196932535 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.227249354 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.189480396 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.222732746 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.192884187 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.189972009 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.233799236 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.240082512 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.198176709 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.194412381 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.230705479 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.195643344 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.191078745 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.196212388 seconds)
  done (took 17.991274018 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.213332693 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.229488382 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.20597936 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.252525542 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.200649382 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.22591667 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.198996254 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.237987288 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.203586699 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.205623726 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.234705125 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.232832568 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.210684946 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.230861902 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.199480521 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.235636581 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.200441384 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.258054414 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.19964986 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.247806226 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.203499436 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.226144999 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.20150921 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.232183043 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.217639562 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.23362202 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.214796023 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.233451237 seconds)
  done (took 7.528801158 seconds)
done (took 78.73970687 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.519908056 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.658273502 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.428976555 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.43055996 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.454983213 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.445870256 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.428379146 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.426728066 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.960298876 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.404054857 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.429881487 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.428850416 seconds)
done (took 31.393057684 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.481231843 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.13500196 seconds)
    (2/2) benchmarking "String"...
    done (took 2.147296654 seconds)
  done (took 5.613668523 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.122735699 seconds)
    (2/2) benchmarking "String"...
    done (took 2.13604642 seconds)
  done (took 5.578384571 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.420789809 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.417450484 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.532116526 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.420321609 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.419979578 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.417628261 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.41787664 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.420585989 seconds)
  done (took 17.366816881 seconds)
done (took 34.78587573 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.443460477 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.719873647 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.700813976 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.407354738 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.422768086 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.441092616 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.423426872 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.476846977 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.42641483 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.403890848 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.836561885 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.720473082 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.43233352 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.846503812 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.404564347 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.42574817 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.441026844 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.765439429 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.421980134 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.408084999 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.404631607 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.404882325 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.441059906 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.436725897 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.429148648 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.425968512 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.438417213 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.420419774 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.717382803 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.463412021 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.469379143 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.422545498 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.437175158 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.428088904 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.430399083 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.435577373 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.725410894 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.428594358 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.409034364 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.435373616 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.723242681 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.433010871 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.421625095 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.435909433 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.408460705 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.458453732 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.409748025 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.539277623 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.448009075 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.434186425 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.459188394 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.853297091 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.432637513 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.445719094 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.425693909 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.783580551 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.444485231 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.527604109 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.448431722 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.448450154 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.423767079 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.422665918 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.464189261 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.436761142 seconds)
  done (took 158.823811977 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.425059112 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.427518396 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.426956552 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.430765523 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.427756061 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.425794409 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.423256223 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.423358182 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.428325964 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.457535212 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.425442878 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.423425904 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.427917517 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.390770656 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.431798457 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.44165209 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.425303738 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.425829133 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.447407021 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.425650026 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.44413634 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.424686677 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.425703532 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.424963928 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.465760804 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.491742779 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.42509843 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.450882877 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.432255476 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.427032466 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.473430309 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.475057217 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.081073957 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.29404221 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.439519081 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.446401096 seconds)
  done (took 88.509536894 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.427258519 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.427250171 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.427553375 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.427786281 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.45811757 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.428057356 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.022745793 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.010621581 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.49104945 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.783280866 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.807835645 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.662465344 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.427203773 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.519246427 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.438734475 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.430010882 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.523830032 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.455408623 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.427672174 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.427572356 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.028281493 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.443692209 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.454757225 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.607141043 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.426671447 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.463320755 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.825420638 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.429442807 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.461168197 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.764322842 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.462128342 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.428994663 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.764758949 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.546201648 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.542322588 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.432627579 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.461165755 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.428372643 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.714586051 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.42956935 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.429542177 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.429694619 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.431674826 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.06182082 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.429001554 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.016864029 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.43105977 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.405414074 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.431298219 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.430720342 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.956995902 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.082135911 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.429459123 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.429809436 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.432386532 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.430459202 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.431642411 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.463812711 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.896212426 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.31294154 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.43290488 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.434931787 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.465747168 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.43201515 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.46339386 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.430151265 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.562483323 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.491047187 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.625894354 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.034316353 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.434781101 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.432499652 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.527040762 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.548952549 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.430491489 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.432881085 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.432829851 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.432040869 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.542898199 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.432096176 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.226977 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.610011511 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.435277822 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.813750608 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.432164592 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.528278904 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.431406528 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.778239295 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.432821901 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.432096576 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.153108779 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.527900356 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.434226244 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.433519163 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.434302543 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.226987896 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.017017059 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.711496963 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.435142183 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.286681615 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.434564737 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.380303233 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.009595295 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.063486228 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.436163404 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.54507701 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.61253286 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.434352113 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.435026867 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.814319168 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.435393002 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.489908794 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.431507702 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.834839022 seconds)
  done (took 403.991662358 seconds)
done (took 652.649042852 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.417313532 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.418823848 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.419800633 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.419964556 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.419815052 seconds)
  done (took 13.429869019 seconds)
done (took 14.765480701 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.436234005 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.439102397 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.437207988 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.204334754 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.435914979 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.439046116 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.438062892 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.437374147 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.439620184 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.440036745 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.177855079 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.438010319 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.438332751 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.355946105 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.184505814 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.438936075 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.30118025 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.438990794 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.437108571 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.733472157 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.443087654 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.500487896 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.702235823 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.48056955 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.753843365 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.777044672 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.445518609 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.614447105 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.457183572 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.456222469 seconds)
  done (took 20.698573173 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.288289211 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.725139412 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.445291926 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.52270875 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.719742152 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.482221077 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.732706668 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.770120533 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.447864941 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.620453925 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.458497164 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.455664768 seconds)
  done (took 20.715789502 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.162012513 seconds)
done (took 92.559797588 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.475378763 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.543321715 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.472125424 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.453954964 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.453529713 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.452725525 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.456186556 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.454242769 seconds)
  done (took 13.098766771 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.452462145 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.451157816 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.450394733 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.452349323 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.453455224 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.451850288 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.451822154 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.451669529 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.45306299 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.451712595 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.451896032 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.453315335 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.453253981 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.453631466 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.45259623 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.45319688 seconds)
  done (took 24.576009801 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.455868713 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.453585611 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.452361264 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.452140408 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.45394747 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.455195099 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.454189598 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.452696248 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.453544743 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.451836849 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.454418337 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.454375201 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.455082543 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.456050618 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.453939809 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.456197065 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.45409806 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.454152614 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.455332474 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.454271682 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.454753715 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.45310567 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.453229418 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.45379927 seconds)
  done (took 36.236195249 seconds)
done (took 75.250423279 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.440449452 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.441213139 seconds)
  done (took 6.218784598 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.510861967 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.516155222 seconds)
  done (took 4.368565323 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.455843806 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.455466052 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.454532471 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.455141356 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.455498996 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.456026418 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.454430591 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.45398426 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.452554487 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.454417221 seconds)
  done (took 15.888457504 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.45458277 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.454671528 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.454159404 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.456163546 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.455220029 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.452852533 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.455054407 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.455027846 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.454676217 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.455492867 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.453586217 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.457369315 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.457234229 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.456884355 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.455736617 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.457725522 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.454972889 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.45622611 seconds)
  done (took 27.538759786 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.471314276 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.474230477 seconds)
  done (took 4.287484588 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.58323074 seconds)
    (2/7) benchmarking "second"...
    done (took 1.499058907 seconds)
    (3/7) benchmarking "month"...
    done (took 1.561172322 seconds)
    (4/7) benchmarking "year"...
    done (took 1.552030056 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.49728538 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.478621965 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.499529741 seconds)
  done (took 12.013980078 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.454210286 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.73948525 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.916675805 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.617315711 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.447481096 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.471404929 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.442380722 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.473219402 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.470896426 seconds)
  done (took 16.3760351 seconds)
done (took 88.033479612 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.444196052 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.533297862 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.466688194 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.460688643 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.75513205 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.473530843 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.4470208 seconds)
done (took 17.926890172 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.432683122 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.439233268 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.436509242 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.463398994 seconds)
  done (took 11.115307364 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.445446158 seconds)
    (2/2) benchmarking "read"...
    done (took 1.767083746 seconds)
  done (took 5.556213688 seconds)
done (took 18.017822372 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.458821365 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.461115543 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.460135329 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.459257736 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.461784972 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.459583041 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.460253889 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.460002523 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.458765143 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.458677817 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.459764931 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.460619169 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.45970995 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.45985797 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.459466389 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.459799611 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.46036239 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.460556525 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.460546813 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.460113896 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.461974344 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.45950615 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.462562378 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.460544542 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.461451277 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.459695354 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.459759931 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.461101908 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.458398627 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.462041549 seconds)
  done (took 45.151745647 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.466676765 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.467585192 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.460202547 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.461267984 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.457012844 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.46267216 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.459983425 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.461691194 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.461142142 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.464270431 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.461959987 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.464771436 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.462259424 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.460828432 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.464525059 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.457434094 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.461498119 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.463371964 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.462128435 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.463814908 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.458769242 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.462693302 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.462463554 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.461300576 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.462467544 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.46162833 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.460220434 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.463266916 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.461645739 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.462903761 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.459791792 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.461942892 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.461716025 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.460328133 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.462020325 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.461469965 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.466837804 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.470120088 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.460579787 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.463155252 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.462512775 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.463402188 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.463793657 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.461779579 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.463631586 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.466054777 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.463460288 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.463366415 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.463863172 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.463325316 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.461397157 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.46285258 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.461879789 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.460372282 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.463806715 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.465357608 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.465734632 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.464064919 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.465221334 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.466736574 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.464600328 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.463930632 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.465498764 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.46606314 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.463571047 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.465466449 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.463507816 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.467070256 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.467283124 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.463939436 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.465259676 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.465673148 seconds)
  done (took 106.693366624 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.464665975 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.464407349 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.464732004 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.466095571 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.46383524 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.464153846 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.465589502 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.465002341 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.464532859 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.466571502 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.465465002 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.468936575 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.464669789 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.463576985 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.46454091 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.465992539 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.466215165 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.464726693 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.466029285 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.465382672 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.468310763 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.464492484 seconds)
  done (took 33.588505883 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.464517263 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.469255254 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.465434382 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.465520365 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.469687313 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.467759576 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.469058583 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.464120181 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.468046821 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.466748439 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.468990752 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.465751188 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.470459459 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.465958032 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.468666711 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.469819978 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.463040971 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.472995414 seconds)
  done (took 27.765873247 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.468123306 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.463214222 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.467254907 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.466103068 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.471029086 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.467990861 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.467598361 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.46985703 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.468818722 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.468213392 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.471791694 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.471807272 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.469146283 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.467086588 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.471330905 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.470881191 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.467636097 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.468390433 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.467334525 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.470636528 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.468994357 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.469882215 seconds)
  done (took 33.667339912 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.472032944 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.470345335 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.47133846 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.470759177 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.470219025 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.469990522 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.469888331 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.468332366 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.472906249 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.468120635 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.469355768 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.468907827 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.471937094 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.470879426 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.471939882 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.470258648 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.471822056 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.469876011 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.470381836 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.46663734 seconds)
  done (took 30.756779936 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.472336117 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.471814552 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.470355312 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.472617108 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.473546809 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.470637064 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.472915777 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.470868619 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.473525597 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.472789385 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.47254182 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.474623283 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.474005207 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.470575127 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.473720768 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.471929601 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.472319346 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.475423442 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.47542036 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.474310256 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.476183223 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.475442603 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.472875549 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.471657551 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.473237637 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.472918892 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.470597731 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.47272057 seconds)
  done (took 42.594200665 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.492491409 seconds)
    (2/2) benchmarking "in"...
    done (took 1.490733846 seconds)
  done (took 4.339867442 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.472425669 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.474385899 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.473903217 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.474841528 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.474044107 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.473921126 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.473184282 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.472950396 seconds)
  done (took 13.14485511 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.469134024 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.477771202 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.474539272 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.476165733 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.477206498 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.470569465 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.479648917 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.478620651 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.470570974 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.472346934 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.479380167 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.47365571 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.476036858 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.473755822 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.473564712 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.475689424 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.477242656 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.476371195 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.474081471 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.477601175 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.478131731 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.474236149 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.478793562 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.478044218 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.473954926 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.484309248 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.478556077 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.481278523 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.471570121 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.479317855 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.472959337 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.481321916 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.475584215 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.478483079 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.479240843 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.478606732 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.484096173 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.481822386 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.48515649 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.481968647 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.477583162 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.479628543 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.47613429 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.479090037 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.480766253 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.482605369 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.480144118 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.477737209 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.476432213 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.481558738 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.483950533 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.475543438 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.48123065 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.480343352 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.481734542 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.488326924 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.487767029 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.47923377 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.481292251 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.485453061 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.493063132 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.491141992 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.483684817 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.485887291 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.486377789 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.486523189 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.490481045 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.487399094 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.478884289 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.480419188 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.486624072 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.493448225 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.49427238 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.48488527 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.480805079 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.481325958 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.478150918 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.483483238 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.486713557 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.486777625 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.48606322 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.482707815 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.482820538 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.48769065 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.480448971 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.483364292 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.481965059 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.480959932 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.477222744 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.490164888 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.490420827 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.483393744 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.478661506 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.479902882 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.482140354 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.48529118 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.475797963 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.481034262 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.484280913 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.482219122 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.481757642 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.480658108 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.486909101 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.48777821 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.48329218 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.489228468 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.488947218 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.481946247 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.490898192 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.490010076 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.48241811 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.478987219 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.487089781 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.485582372 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.484720488 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.489756297 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.489798191 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.483672883 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.4885395 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.48573805 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.486438973 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.494160313 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.489427573 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.485802875 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.483285236 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.492245955 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.483829555 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.486415928 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.4898326 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.483889041 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.486615106 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.484812785 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.492307963 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.483247123 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.489593181 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.484338648 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.490580733 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.485754206 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.487091712 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.48338131 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.490792607 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.487527854 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.490145104 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.490486092 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.494200652 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.4868039 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.496887821 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.489990453 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.490700297 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.490007249 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.489823353 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.489451543 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.485128881 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.49009287 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.484490354 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.492788382 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.481953842 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.493267973 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.487173843 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.486725976 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.489852116 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.484056323 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.488774606 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.491522601 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.491173295 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.489195039 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.491260963 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.486318021 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.4892323 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.484747566 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.489989336 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.483085204 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.488923934 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.494451685 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.485303174 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.491129201 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.487739212 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.495879376 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.488538678 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.485700281 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.487086706 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.493885358 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.494232008 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.496041921 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.495496254 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.490681108 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.487651077 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.485274311 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.488521616 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.492928985 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.488449289 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.497900958 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.499038615 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.502136798 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.488752641 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.496475781 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.486822699 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.496001586 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.493670845 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.496242847 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.491011733 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.48984731 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.48860359 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.494947727 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.48952921 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.495353516 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.488226789 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.49422403 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.493606096 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.490866508 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.493939607 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.488115801 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.491339533 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.492626501 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.491585984 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.488791724 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.489528095 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.496107649 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.487417946 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.491552227 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.49505271 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.49230588 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.496985412 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.49901306 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.492357847 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.502159276 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.495702575 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.492725701 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.495635865 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.491786775 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.492573006 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.500399693 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.497481324 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.493499294 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.50499754 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.496799538 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.492217836 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.498019469 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.499643218 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.495086138 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.491143387 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.501332396 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.492958697 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.493011351 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.493572714 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.492035682 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.49569889 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.499399485 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.50307692 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.49100714 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.498900216 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.493373246 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.497703223 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.494552442 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.49891962 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.496808824 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.500194315 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.502802597 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.49470023 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.49249766 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.498972128 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.494310926 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.490906298 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.494332371 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.500932018 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.501183825 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.497756825 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.498259147 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.496559226 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.497232505 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.49283409 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.496590246 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.494864941 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.510203997 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.518049647 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.500842387 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.502300268 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.500380158 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.503190205 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.501496891 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.495462911 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.498297926 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.499578148 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.497412151 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.496283938 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.501724592 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.495527871 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.502274414 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.501001432 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.503121948 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.501717026 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.498532018 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.496269207 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.500496597 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.498789402 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.498436093 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.491094528 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.500657231 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.498716427 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.504922327 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.502243956 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.499353584 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.508644428 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.504850901 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.49936611 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.499594184 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.49694057 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.495772754 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.500851096 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.502167103 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.497871499 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.500730883 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.497312177 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.503111683 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.50168983 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.505936044 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.50686732 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.498855802 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.506209937 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.495165739 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.496548023 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.497714885 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.502616424 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.506539254 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.511514087 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.49753544 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.504367171 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.502060624 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.4998107 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.49870251 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.500656699 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.499728028 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.502426612 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.509234308 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.505978372 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.501173189 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.509062101 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.510138789 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.500882271 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.500822509 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.496381187 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.505168213 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.510672636 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.498868318 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.505094676 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.502367216 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.50488447 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.503329494 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.502576658 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.502818991 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.504201427 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.510585283 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.510486263 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.507614199 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.503581553 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.509698317 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.511150389 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.509720483 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.514004505 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.497945313 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.507242106 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.502271544 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.499768769 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.501980038 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.500654027 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.507122851 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.497991324 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.50870558 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.501442391 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.502403178 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.50907721 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.512488953 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.499803271 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.506692684 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.512346629 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.501111831 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.504067729 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.503800464 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.499592584 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.506225646 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.50538895 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.498460467 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.502645456 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.508709161 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.509746562 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.500947283 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.507471239 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.501605902 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.509974161 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.506065438 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.505966556 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.505728541 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.505648635 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.499931972 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.507218928 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.507821672 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.512618792 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.502795942 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.5110898 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.50689312 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.517715426 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.51540797 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.505403388 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.512685035 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.509830393 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.503056628 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.508546014 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.513372176 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.505075304 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.507046744 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.500726113 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.507628173 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.508672653 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.510396081 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.513490393 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.510372972 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.500941843 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.504703003 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.508799508 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.507551399 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.508199153 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.507056414 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.514273196 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.504575021 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.504387878 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.511620046 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.505617411 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.51422425 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.506062609 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.511541983 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.51041589 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.51246458 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.508803693 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.507839676 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.502277335 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.50616497 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.517378544 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.512936373 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.511695912 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.511891428 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.512529949 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.505162264 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.511246337 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.51402189 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.508095724 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.506326097 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.513031793 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.50674402 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.50753206 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.508708164 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.512829843 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.51755141 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.513808269 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.508259768 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.51908203 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.519905934 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.51663387 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.505177151 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.508503579 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.510182083 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.512513637 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.512308586 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.50701173 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.520616918 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.517274412 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.51550626 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.512658395 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.514308086 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.508728767 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.513991673 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.508595504 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.509881867 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.518770393 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.513001695 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.52024531 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.511199959 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.50698998 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.507377583 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.509143863 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.512060513 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.512671505 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.514840948 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.512729523 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.517347169 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.516542551 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.516269599 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.515726044 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.511821838 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.512225459 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.508603987 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.51432584 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.508475885 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.517191389 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.517107307 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.508449911 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.516963499 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.513557123 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.508143995 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.518074051 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.51824657 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.51340674 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.511873394 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.516538431 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.518433091 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.52255645 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.514429095 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.511312402 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.515134014 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.518323147 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.515263958 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.513598631 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.511270185 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.528549623 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.52551593 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.510163861 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.516717367 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.520173193 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.52270611 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.512805124 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.51375813 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.514525689 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.517674818 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.518794464 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.514046936 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.518532445 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.524018316 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.514267326 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.518213315 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.512060003 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.517398149 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.520860827 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.523926569 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.515088431 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.514073617 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.530150121 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.526208986 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.519458907 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.531420788 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.525718249 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.5226616 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.518637139 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.510317053 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.519688649 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.517299892 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.520229805 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.517424479 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.515513122 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.517877982 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.514425373 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.521313803 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.529344902 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.524338056 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.518875345 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.513427771 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.513930182 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.519160148 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.51744383 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.52086195 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.516677574 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.517905404 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.515786147 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.515790096 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.533361333 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.536248995 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.523458024 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.519041677 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.517183214 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.521165762 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.525435772 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.520811867 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.524272538 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.519861624 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.518583421 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.520290323 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.524890259 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.519543629 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.513885114 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.51855034 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.519544977 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.523684287 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.530015489 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.539629326 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.522656995 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.525482117 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.522791789 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.518168088 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.517879397 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.525721964 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.521006065 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.518494275 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.520872113 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.524374682 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.521846269 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.51806542 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.515360029 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.524831668 seconds)
  done (took 895.396731228 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.5212815 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.518383806 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.521019727 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.522845655 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.522329347 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.522801981 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.520196096 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.521183405 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.521242457 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.523401748 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.521224517 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.52215418 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.522683659 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.524116766 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.52190946 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.522475959 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.523687311 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.521736469 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.522536873 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.522673733 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.523537306 seconds)
  done (took 33.36040215 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.523118269 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.522588814 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.524323799 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.524294186 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.521254971 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.519101503 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.523339207 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.523663863 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.523557041 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.523546823 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.525286162 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.523261937 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.522473672 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.523942328 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.52259012 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.523621308 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.525662499 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.521409539 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.524875747 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.523947904 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.523977769 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.521961197 seconds)
  done (took 34.910436432 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.52491065 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.523350579 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.520924525 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.526450084 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.525572769 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.525235072 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.524546516 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.52557235 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.525256151 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.520109289 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.520570426 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.520612608 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.524783781 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.532331271 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.522361216 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.530801501 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.524108362 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.526106497 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.525458824 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.524641897 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.529895101 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.536020723 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.524800609 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.520622836 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.527739005 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.526872375 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.526376279 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.527085823 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.521288271 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.530712743 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.52480904 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.522645803 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.532541701 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.530143302 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.525750395 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.53034871 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.526769892 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.525855269 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.52705857 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.528739934 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.537610374 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.529464509 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.531220108 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.535171222 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.528444903 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.525822735 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.532444094 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.527111503 seconds)
  done (took 74.686953394 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.525014824 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.527733756 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.527640809 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.528494884 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.528176796 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.528552866 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.529911676 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.529290452 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.528888132 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.5282754 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.528708993 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.529033315 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.528121314 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.528741688 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.529829231 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.527454136 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.527171869 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.527657682 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.527011106 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.528965003 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.528044347 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.529032936 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.528721805 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.530388728 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.528459362 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.527940838 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.531738106 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.529259923 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.528511899 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.530659739 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.528389023 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.530312692 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.531065982 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.530155136 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.529381744 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.531556822 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.53079318 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.528103306 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.53035122 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.530984245 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.530691027 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.530969288 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.531316494 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.531258971 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.531729142 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.530770749 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.531536641 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.531549397 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.530663682 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.531607394 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.530837183 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.531085806 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.53297355 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.530087362 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.530695155 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.531754166 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.533152782 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.531857702 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.531708632 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.533187955 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.532382104 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.531824042 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.532507686 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.532719547 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.530469281 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.531789255 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.532352746 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.530765583 seconds)
  done (took 105.44846973 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.532324808 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.532477253 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.530718749 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.533464365 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.533086992 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.53520014 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.534451437 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.532136109 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.532794147 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.533661827 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.533368172 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.535019488 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.534082693 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.533735436 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.53436983 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.533992491 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.533177517 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.532337044 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.533533946 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.532523435 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.534007363 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.533617227 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.535587039 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.533604819 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.532825018 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.533982774 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.536648446 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.534417761 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.534344287 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.535506333 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.535108718 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.533909964 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.535033497 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.536386338 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.533882096 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.535369459 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.535147085 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.53572758 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.534753592 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.536619216 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.535098775 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.534180005 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.534354782 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.536628098 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.536823459 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.536286176 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.534956852 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.536376126 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.536738022 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.536537081 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.53855446 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.538056556 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.536360674 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.535662816 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.537665065 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.536296615 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.538027603 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.536899949 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.536991852 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.537982141 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.538290315 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.537516729 seconds)
  done (took 96.577298454 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.537797503 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.537338652 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.538239964 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.533685779 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.53778744 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.538978357 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.537628907 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.537316744 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.537292339 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.537588957 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.53929664 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.534189715 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.535312912 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.537174145 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.536912756 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.537709795 seconds)
  done (took 26.003760727 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.539912841 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.537091796 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.538137807 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.53698315 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.536934324 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.538131531 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.537198787 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.537680262 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.539817176 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.537626606 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.537655751 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.538461919 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.538404803 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.540234119 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.538577938 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.538211618 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.538036061 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.539481258 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.539610653 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.538917167 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.540708935 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.541735161 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.539699302 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.537847463 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.541870139 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.539027139 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.539425608 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.540395267 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.541784034 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.540080003 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.542048913 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.540319618 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.541773436 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.542247898 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.5416379 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.5401635 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.542013167 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.542043612 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.540971929 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.541547026 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.540928347 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.543135653 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.540586199 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.539518322 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.541125751 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.539084614 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.540844841 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.542066675 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.540052781 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.541278082 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.542310677 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.543282446 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.541860409 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.541697141 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.540668604 seconds)
  done (took 86.116367805 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.541173152 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.541495154 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.541719504 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.542077416 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.542946038 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.540169429 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.542435548 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.541842265 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.541586619 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.542510223 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.54197718 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.543263674 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.54341298 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.542553558 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.545068016 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.54167249 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.545317529 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.543415885 seconds)
  done (took 29.179884843 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.541319694 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.543099128 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.544192581 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.543679072 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.544867869 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.545073781 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.543712173 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.544036999 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.544110033 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.54678946 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.545778177 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.544947414 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.544977511 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.580835236 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.545617941 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.542504214 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.544806591 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.543205485 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.544084853 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.544905338 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.54437358 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.545536309 seconds)
  done (took 35.42692234 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.54038813 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.540537977 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.539359241 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.553514484 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.548555479 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.539516215 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.540414636 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.537050974 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.555700471 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.563091463 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.564392097 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.546877534 seconds)
  done (took 19.98492439 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.545321228 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.546149053 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.546687692 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.543614087 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.545474753 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.545199822 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.545826227 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.545973325 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.547723955 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.546152204 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.546280275 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.546350483 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.54645012 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.545131684 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.545693046 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.545813554 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.546716101 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.545929297 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.546208524 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.547748003 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.546107777 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.545818616 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.547873367 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.544954329 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.548344868 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.548068845 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.546961143 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.547657351 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.548674816 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.546250664 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.548374656 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.547383271 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.547615807 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.55013208 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.548326201 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.547909765 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.547871332 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.547388165 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.547108731 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.54918724 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.547615207 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.548352351 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.548747883 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.548691694 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.549277532 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.548449628 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.549851202 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.547869216 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.549836249 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.548532111 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.549410687 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.551412657 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.54908333 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.549533186 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.549938462 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.550698452 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.550231605 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.550856764 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.55056086 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.548723173 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.549901254 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.549971639 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.549959571 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.550970421 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.549254516 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.550621818 seconds)
  done (took 103.581752592 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.548721885 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.551771535 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.5493344 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.550855634 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.550251855 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.550491307 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.548150549 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.550402449 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.55154209 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.54980053 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.552079468 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.550669085 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.551124815 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.551567333 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.551272988 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.552818222 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.550724856 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.55331555 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.551959711 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.551338437 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.552592962 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.551035679 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.551812195 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.55187237 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.552135126 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.550638943 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.552466511 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.550134184 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.552638572 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.552372294 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.552289505 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.55313947 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.550683315 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.554085328 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.552656985 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.550914135 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.552680292 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.551764289 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.554098224 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.553876407 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.552980858 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.55422835 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.553339348 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.555211954 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.552427278 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.555782654 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.552791539 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.554526078 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.554806186 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.553032767 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.554020197 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.553317784 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.552136303 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.552820222 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.554148292 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.553986293 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.553521419 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.553517189 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.554714204 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.553977034 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.554850339 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.555251096 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.554819487 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.554451218 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.556003748 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.554503862 seconds)
  done (took 103.891956253 seconds)
done (took 1983.610109712 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.546119597 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.543101099 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.549145767 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 11.759908509 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.548892375 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.210302869 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.135417659 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.549007567 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.552003276 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.549259394 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.548132867 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.541373766 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.878619068 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.549906087 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.550807275 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.544977828 seconds)
  done (took 58.982606407 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.581283875 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.558525339 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.681996409 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.554519231 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.580135799 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.764576949 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.613164194 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.55524101 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.745952324 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.556985669 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.548819608 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.57873313 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.555827375 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.545546263 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.577471478 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.767668486 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.835996338 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.547287359 seconds)
  done (took 33.5765374 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.057547515 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.569389738 seconds)
  done (took 6.055137808 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.576918796 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.556569196 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.559653952 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.55487758 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.546721605 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.547503918 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.554671619 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.554768556 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.547246072 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.696572587 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.556532535 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.56895906 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.557053477 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.557492991 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.560270511 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.60280566 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.683676424 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.561394414 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.557928861 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.561392631 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.557459707 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.743600072 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.603759487 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.56176129 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.697427942 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.549527632 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.56131759 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.569026225 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.705226662 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.563204344 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.555464005 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.554803531 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.557003583 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.557560612 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.11902759 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.549858331 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.588407692 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.565263053 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.56160431 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.703031394 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.55865783 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.562736756 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.550760982 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.116850426 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.677943368 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.781884121 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.550559937 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.561146174 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.559043226 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.706331601 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.56128784 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.559567278 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.622354031 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.551778047 seconds)
  done (took 98.245086888 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.5731104 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.549361926 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.736114267 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.574895973 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.549871314 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.548016193 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.567378914 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.873443606 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.61076887 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.550486696 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.888598976 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.222786426 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.550957568 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.625581684 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.607348255 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.592829923 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.551217468 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.550496437 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.553637107 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.55057741 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.143231998 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.555850963 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.551219856 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.706765744 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.595647091 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.139333475 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.552711075 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.551525733 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.572436466 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.551980006 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.192487354 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.558965173 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.61900612 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.552831343 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.860979583 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.989650172 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.95074443 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.554734401 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.593030098 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.55470248 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.550535104 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.139125206 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.971472034 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.551605008 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.553481075 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.141711243 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.553884509 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.5554194 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.551859416 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.829168392 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.553881266 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.554568353 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.556038408 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.551693796 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.554255003 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.622175947 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.598586496 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.141017775 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.553694553 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.555099023 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.553736601 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.556955782 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.557578361 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.559767568 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.558946422 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.975507327 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.723969184 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.55513679 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.972620975 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.190083945 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.555113706 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.287138857 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.556460869 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.560058977 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.630412896 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.556124807 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.555689781 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.137608391 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.579083068 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.557191228 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.952311061 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.558873528 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.880934035 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.57304056 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.55886687 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.182781748 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.565418221 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.625214753 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.556717004 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.556321856 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.557460264 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.559983977 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.863372519 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.624918612 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.559361691 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.557302313 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.570454612 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.556040981 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.557691873 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.565328811 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.275091948 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.570741401 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.556731519 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.558565914 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.557794902 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.575885228 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.559491863 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.55667605 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.844683156 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.558910522 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.576404668 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.560238866 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.558889646 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.562517778 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.714237127 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.566112017 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.909308643 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.566161431 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.559030154 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.562338293 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.55839491 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.567372213 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.5606309 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.582459145 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.541253051 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.879887574 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.585647025 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.559385749 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.560729132 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.560157459 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.559975848 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.559512405 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.617669138 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.563462839 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.408172321 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.570489935 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.577537328 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.558846907 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.568282461 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.561064149 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.56924522 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.562259376 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.895571369 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.869929199 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.752169351 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.562751359 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.561071176 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.396673839 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.563543506 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.749009073 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.579703049 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.560433263 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.865764403 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.743771144 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.564939131 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.562958298 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.563551345 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.855609523 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.562365834 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.900461291 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.219292494 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.564317556 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.564903665 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.394851847 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.312741867 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.563729453 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.567479018 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.881185569 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.580848814 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.563066719 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.562769536 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.564247447 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.576129788 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.568587721 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.572469854 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.563770312 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.562621889 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.679206443 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.762109923 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.580875537 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.568301966 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.145521801 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.577269762 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.563898204 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.571651445 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.567830055 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.56332789 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.595756329 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.565662922 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.607768834 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.565632277 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.572013614 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.181002788 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.564334192 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.566245667 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.762936405 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.355570409 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.568102358 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.566420772 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.565446226 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.606665684 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.177959418 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.619165826 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.918597784 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.568209674 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.609638248 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.565091609 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.613158946 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.17848335 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.567934564 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.568014419 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.344191614 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.566974962 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.254412171 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.566822741 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.56512154 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.279802112 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.565962372 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.572575531 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.566244378 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.569754144 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.883693548 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.567437459 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.594474828 seconds)
  done (took 550.600811612 seconds)
done (took 748.887790795 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.568191605 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.570911938 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.572163209 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.571401817 seconds)
  done (took 11.728316596 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.582763815 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.581669481 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.580262093 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.574279305 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.58082828 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.575866502 seconds)
  done (took 10.923441287 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.568614265 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.572132392 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.570268783 seconds)
  done (took 9.15740482 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.803358761 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.569895974 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.967836929 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.580896794 seconds)
  done (took 10.370521843 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.582870265 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.582934486 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.582870518 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.581819621 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.582973326 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.581473913 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.582583814 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.581273058 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.582038995 seconds)
  done (took 15.687053564 seconds)
done (took 59.314435395 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.646559769 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.65114518 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.581241618 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.60897315 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.696324464 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.655305816 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.657977823 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.662024633 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.655053589 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.606227597 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.648934488 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.597119321 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.652847215 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.768786253 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.607002174 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.651570293 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.599644291 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.742900394 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.649471369 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.609638635 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.676263526 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.606592543 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.608862273 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.572063102 seconds)
  done (took 42.861132203 seconds)
done (took 44.312030539 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.607864304 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.670517565 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.58163383 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.583770359 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.584206126 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.572682609 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.603331485 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.583684896 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.595132031 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.596289324 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.575455547 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.59278763 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.598865339 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.593424666 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.617468125 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.585767097 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.582832192 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.590575568 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.597252104 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.600049896 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.584964777 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.584695313 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.609338207 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.583369296 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.59307042 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.591783333 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.590179258 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.582023412 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.590287042 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.596790679 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.585449924 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.589994122 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.599947703 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.595197706 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.586871441 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.593795769 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.587509703 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.673758385 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.603502759 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.594561144 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.590901202 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.600141892 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.590487497 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.591177551 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.595538998 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.610992758 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.595968761 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.601601665 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.586957319 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.587900352 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.606471848 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.595403067 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.59198075 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.587395997 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.582059636 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.598570277 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.593392198 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.607054755 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.592263333 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.587574825 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.61948437 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.608512938 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.595917998 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.594726601 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.591782841 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.601140092 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.594067161 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.60104267 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.591178999 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.588026388 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.589064512 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.593030115 seconds)
done (took 124.354705557 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.707283676 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.582003757 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.745041336 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.588623051 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.752851947 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.707937721 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.587790633 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.589628772 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.58940567 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.389023246 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.588160259 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.589621409 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.582359023 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.588116585 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.707040467 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.591198767 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.588156124 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.289667931 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.58954435 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.726271804 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.586300813 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.590464204 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.591363141 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.38190444 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.58205375 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.577268201 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.726797743 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.590235866 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.282889922 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.577777631 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.580264537 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.279656053 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.726809115 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.608526222 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.600413306 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.599678413 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.752987613 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.593346309 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.712430926 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.713081101 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.74804435 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.627571066 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.578739373 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.583533736 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.593125636 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.592755434 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.591245928 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.617508348 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.583210498 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.591179602 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.293037565 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.60348392 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.593694489 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.593642025 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.593047166 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.624081973 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.594273134 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.594299725 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.730096479 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.593813016 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.713305434 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.386253692 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.39320415 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.592730738 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.586217295 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.593553918 seconds)
  done (took 125.375319172 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.657960988 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.661821832 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.707174856 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.588493016 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.640236019 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.709979824 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.588540344 seconds)
  done (took 13.011582978 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.5958702 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.593835927 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.638336563 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.63761237 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.593682073 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.763187663 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.594878388 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.6002814 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.593534229 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.641601828 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.597024172 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.595638852 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.603420996 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.590073789 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.636265436 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.60069358 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.70272709 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.592079163 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.594920427 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.745661183 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.594559674 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.603994988 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.640392394 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.602922253 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.594957579 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.596204037 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.347343266 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.595220684 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.595154147 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.596408906 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.597042234 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.658437115 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.597159737 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.59029034 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.59645477 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.705293998 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.598227535 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.596366251 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.597439785 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.592214243 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.597618193 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.59793204 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.596942454 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.595946575 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.598094054 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.617686605 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.599520876 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.597004125 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.598967076 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.598394066 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.642489029 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.598181086 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.596842613 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.598439612 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.646160708 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.605078609 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.59780343 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.59917572 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.597122193 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.598499974 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.749306668 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.641539258 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.597766335 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.641108967 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.596367199 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.59833355 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.598049418 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.597327353 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.683112049 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.597113351 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.643177279 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.6008627 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.774355169 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.617900618 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.603182392 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.599465801 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.596896545 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.599025935 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.591862118 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.600068595 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.599280738 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.596190329 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.600597523 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.600564766 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.598077319 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.753619757 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.70383494 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.600568694 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.610108581 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.601208683 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.601087642 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.647315891 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.60091324 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.601939603 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.643000354 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.711677034 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.646999481 seconds)
  done (took 163.191599827 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.608500286 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.606732432 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.599883666 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.623773687 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.597019799 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.59611911 seconds)
  done (took 11.097570987 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.598115251 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.604652569 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.601950682 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.600713259 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.601358252 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.600887937 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.604287716 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.598959078 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.604301906 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.603240188 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.602862618 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.604824378 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.603020861 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.605331244 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.604335755 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.603124421 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.604297831 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.600691183 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.60304947 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.604421985 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.593882018 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.604075111 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.604044259 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.600578078 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.608148206 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.603016483 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.622705582 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.605788036 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.603355971 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.604721095 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.605990354 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.605538756 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.603462353 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.605596683 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.608005119 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.601194152 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.609943763 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.603693339 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.604370955 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.604694645 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.605645187 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.605150382 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.604446604 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.605779771 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.602528931 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.605213979 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.609371942 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.624456165 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.606037482 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.606867283 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.605574222 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.607720217 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.606093288 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.606722995 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.602432067 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.60432332 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.612013125 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.606699459 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.609003419 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.603193933 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.60960964 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.607619948 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.602490066 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.610942298 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.605159947 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.608529741 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.604730568 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.610620782 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.608254397 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.606555704 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.608057487 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.605854388 seconds)
  done (took 118.052204645 seconds)
done (took 432.183585208 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.934671362 seconds)
  done (took 4.405408121 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.710212855 seconds)
  done (took 4.182054453 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.321913359 seconds)
  done (took 24.799007347 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.69294925 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.599836333 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.5991359 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.601821738 seconds)
  done (took 11.964632322 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.159991005 seconds)
  done (took 4.629918356 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.601625519 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.61028626 seconds)
  done (took 6.684250591 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.957375323 seconds)
  done (took 4.42869362 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.397168509 seconds)
  done (took 4.87297404 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.617747247 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.604775415 seconds)
  done (took 6.700533251 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.581568425 seconds)
  done (took 4.053518546 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.492220333 seconds)
  done (took 18.96293646 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.61367824 seconds)
  done (took 4.086085676 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.651695396 seconds)
  done (took 4.120579694 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.490778926 seconds)
  done (took 6.961785045 seconds)
done (took 112.32428016 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.595679446 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.599954438 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.595231855 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.595373825 seconds)
  done (took 11.857818912 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.67347643 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.670677992 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.681769448 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.665115968 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.667267675 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.673679929 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.634935128 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.635314839 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.663280448 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.660975884 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.67848256 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.666349823 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.675099341 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.635852925 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.661195971 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.678129184 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.665885111 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.681911722 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.636170129 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.662837768 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.611021423 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.669420267 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.664170017 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.612132184 seconds)
  done (took 41.297241291 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.099543858 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.675087906 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.759877757 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.655866242 seconds)
  done (took 8.663129059 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.715792257 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.718131138 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.734618525 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.769718491 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.817184999 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.729502707 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.635401448 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.63509461 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.62124966 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.715694373 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.794564078 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.7148917 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.929362754 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.611141923 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.931785881 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.610698937 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.612033162 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.716198865 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.769115664 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.797362716 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.610171831 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.716115139 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.7184673 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.715454838 seconds)
  done (took 42.814497019 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.619402262 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.62791435 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.612138973 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.628772926 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.613914147 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.613608126 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.614892774 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.619728574 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.614093302 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.613254678 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.612889425 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.626112252 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.615140124 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.614310313 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.620946589 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.617313264 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.616282181 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.619941293 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.62210824 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.614659812 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.615501312 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.620960096 seconds)
  done (took 37.069607001 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.602343104 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.601608618 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.95651411 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.859088963 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.60347598 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.608466119 seconds)
  done (took 15.707262817 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.68778634 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.831859143 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.60961878 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.014193538 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.098866897 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.611582576 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.61092516 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.876215834 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.240310404 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.246072741 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.656960209 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.686625291 seconds)
  done (took 23.646421633 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692980326 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.610676819 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.615358953 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.627774327 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.61133436 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.611029354 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.637094437 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.106614836 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.61658199 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.88651812 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.609536072 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6938889 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.857646123 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612281182 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.614365826 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.601692908 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.838374804 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.190225538 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.614768967 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.610899976 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643733007 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.61127705 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.63068362 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.840921326 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.613202992 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.613346954 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.874564259 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.612281213 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933534013 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907136494 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909438828 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.615641426 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.889414929 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072101178 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.72117153 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839129464 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.616412018 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.631431743 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.627893893 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.628140019 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.620026337 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.616383896 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915976545 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.617554524 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.61054288 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.624418302 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117366485 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.620862366 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.611703117 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.614617451 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911960446 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69623622 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.618546428 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.615095157 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606658224 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61484551 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.620274598 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734560599 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251649883 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.623479973 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615999236 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.618760186 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.609619685 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.619094328 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.319326617 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.62333055 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.620255439 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620217736 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.613757166 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.615073017 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640592424 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.614179252 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.6336672 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61346714 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44584805 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.615303356 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.615667014 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236654133 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.617023754 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.621916441 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844732247 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.615585278 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615603358 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.616880093 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.617276489 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.472572836 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.623662123 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.594264217 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649049536 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.116468921 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.844325718 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.638460409 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.645606574 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.838710662 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.594293641 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.617603757 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.616866915 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.618852924 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.63976211 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.11716958 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.619151394 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.624270672 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864444094 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.828147861 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.620766043 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.608157992 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119861596 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.615920116 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.650463632 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.618393924 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.849099775 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.297500248 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920881817 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.619077058 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.654956294 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.617247594 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.537432561 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.620397959 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.627375391 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.619267092 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.924524802 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.554100606 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.620598651 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692792345 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.622118984 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.621516425 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.618750173 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.621502503 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.618205913 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.835286481 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.632934472 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.918129625 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.623154963 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.620148133 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.618321159 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644028453 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.62095928 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.841670293 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.621075885 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.899664108 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.620794327 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.622227246 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.621390699 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.84335954 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.622867298 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.628588147 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961238273 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.631957079 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.636653559 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920625719 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.657642401 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.735457634 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.655890749 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.638003538 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.872619598 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.628402282 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.62718082 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.621373187 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.622900554 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.627448554 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.631062066 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646604263 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305112317 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.602720503 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.627885691 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.624015686 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.638183636 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695807729 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629802097 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.85217898 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.621131751 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635133503 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.630476578 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.622781838 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845151963 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920469006 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.621362039 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.797820483 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.127194015 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.300343862 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639850539 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.623136457 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.623104135 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.622678157 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.625833888 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.623624448 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.6249103 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853650804 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924781397 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.645251484 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.307006026 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.629920517 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.623934363 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.631295923 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91867784 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.636514274 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.627688284 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.631462391 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.624548659 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.633469812 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.921979944 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84591177 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.641060457 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.624844806 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.142766304 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634101724 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.627248792 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.627033258 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.656001817 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.623962515 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203171833 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968878774 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.631032588 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922875846 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.629859575 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.646460625 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.62684069 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.630422146 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63847787 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.657901916 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.637644771 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.856302322 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.62890845 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.628645283 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267361258 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46471177 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.250685319 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.649231089 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.638486752 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.631124184 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.131410961 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.627496727 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.628078017 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.898171679 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.135372857 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.628555726 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136545465 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.644722393 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.488511166 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923950304 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854861943 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648353196 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.62981428 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944521207 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.841217649 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.657052786 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.632650692 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633660684 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.611286074 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.210290801 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.642242625 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.809548234 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136620009 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63400121 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.629966574 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.680838154 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.630108445 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071388522 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.62876575 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.629681916 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.645798006 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.640843111 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214178317 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.634731371 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.631209671 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.3315463 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.640671925 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.144679473 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.632294125 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.864352383 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.929551565 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.913999752 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.639261441 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.635085123 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.87602839 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927691232 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633357432 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.636842888 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.253028448 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.490962545 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.639147194 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633477959 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.545623661 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637685102 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957646871 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.649754462 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.646875478 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636622066 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.633789307 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634177986 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.631205605 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.639997203 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.612890155 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.197564022 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.635433686 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649325921 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666051002 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635536193 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.880539661 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.650976432 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.314366496 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.859843586 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.638495066 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.666503561 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.639177717 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644650025 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.614348356 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.635522321 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.63602394 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.725695037 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.856877587 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.654634466 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.612895227 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.677000637 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.846811652 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.633760824 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.644885398 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877758866 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.635342402 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.641314079 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473557395 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.665194825 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.64008503 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635485399 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.646529604 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670348835 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.709039349 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867959289 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.932844122 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.933023941 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.078780922 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635779831 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.638185082 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.650015585 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716357276 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65110722 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.651218103 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.636218022 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315155082 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479273102 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.326777839 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937071376 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.641803505 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647262499 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638330916 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880277848 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.636554156 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911942368 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636875735 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.63433508 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.658429953 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643271085 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639821311 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855937449 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.914694315 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.636069859 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650894112 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637436289 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.63857093 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944033645 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.85315958 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.219991044 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260507242 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639860511 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.636912139 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.154022233 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915040559 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639440979 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.639938199 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639641359 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.653956177 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.642327934 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.648852179 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64626672 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864577046 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93639496 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112541263 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.93589528 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.665070736 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.510451618 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654356948 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.888835377 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470666056 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.871044694 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327795879 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.436476027 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892866942 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715712367 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874558212 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.641051106 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877281652 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.655525355 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.640742173 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644587475 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640725584 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.641078189 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.937581256 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327331949 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89580301 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.647167974 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.652850367 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.669195317 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.873108028 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.863980962 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.498422697 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.861856964 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946372749 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.650338936 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.642442273 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332677202 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944185739 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642677657 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.647778878 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885103723 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.642141706 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679743418 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.517996964 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.642330789 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266324397 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.856109578 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.664882383 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645045873 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.444712858 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337004616 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.660973133 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.211142324 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.645947859 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644326108 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.925646281 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.6532526 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.651791044 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.936105744 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.650925335 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.650312401 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883549462 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.328042988 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.515006694 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.665466663 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651435517 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.647311291 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647008773 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.709973208 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645562802 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.645571185 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.093282433 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.648447055 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64515898 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65710111 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.660082889 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64965882 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.648029715 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645107036 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.653018153 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.668128535 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.630183005 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.65361405 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77849018 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232427842 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.649080528 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.320500826 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.981435063 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.893843716 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.652833681 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.628750973 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.653209815 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646716217 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.64713035 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648044585 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.640870673 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274168449 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.649218491 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.949241459 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655606861 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.862840807 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862056096 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.655185674 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885544385 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652177387 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673529806 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.626541939 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649776071 seconds)
  done (took 1106.83830802 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.688654537 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.670343441 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.685458434 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.661541093 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.699348315 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.705975472 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.683699886 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.678675377 seconds)
  done (took 22.983712314 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.652791218 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.651326836 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.64975584 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.653936075 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.65762471 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.172919741 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.649528929 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.654709289 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.670038121 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.656920768 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.64879229 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.333274984 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.653988253 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.644067035 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.657372169 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.655339257 seconds)
  done (took 37.180148649 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.948636262 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 3.055815793 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.070846869 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.647294634 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.688484393 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.663174836 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.108410795 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.650744274 seconds)
  done (took 30.344764096 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.660105397 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.659985564 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.662539709 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.660415823 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.66151402 seconds)
  done (took 9.817028276 seconds)
done (took 1389.695133051 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.654772708 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.657991572 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.65751212 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.657428579 seconds)
  done (took 8.13940765 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.629635631 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.629780802 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.631924077 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.645739397 seconds)
  done (took 11.049790208 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.063721351 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.249301729 seconds)
  done (took 5.826441716 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.652875626 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.416015381 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.401594118 seconds)
  done (took 8.982137908 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.953910943 seconds)
  done (took 3.467612598 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.083578395 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.167983132 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.647841834 seconds)
  done (took 8.414563453 seconds)
done (took 47.394440363 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.644533046 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.405240684 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.804360945 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.646665148 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.810924472 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.803507622 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.900231889 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.647609671 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.655654359 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.661126704 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.648488088 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.810590858 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.888177649 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.40808486 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.889196718 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.411388664 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.809794543 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.645927654 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.645354603 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.65202688 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.893198436 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.661522853 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.646734452 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.649022141 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.809966284 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.792249704 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.650612197 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.412576173 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.660005106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.6609436 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.791804489 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.648350244 seconds)
  done (took 91.580621771 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.648000504 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.646021881 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.649083012 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.654548069 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.648301876 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.650482949 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.669326001 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.650832316 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.648773599 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.663029209 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.662187149 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.650685945 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.666757466 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.657036152 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.652874772 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.652670354 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.652338054 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.658583758 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.651189361 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.650554429 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.675401971 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.650061019 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.649759785 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.653111078 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.650190193 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.65222838 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.649941424 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.666668007 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.656535291 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.651022189 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.652450125 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.650549449 seconds)
  done (took 86.458718176 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.657956823 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.651289912 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.670001854 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.6503738 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.650515297 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.652360794 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.672066744 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.657880986 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.660422725 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.656937872 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.670592347 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.651244661 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.654148179 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.651039936 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.652633783 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.650463438 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.651778459 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.668538938 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.652581434 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.667536219 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.657601121 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.661566846 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.65944805 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.649528406 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.670297319 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.655114392 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.675324146 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.652534343 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.657426551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.667385575 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.654020592 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.671268342 seconds)
  done (took 86.599506224 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.892768381 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.663989815 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.669187208 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.658611154 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.668339132 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.664285743 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.660221852 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.896957306 seconds)
  done (took 17.294392723 seconds)
done (took 283.447667725 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.664784184 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.660578445 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.686728266 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.658749913 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.682916076 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.685494496 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.881888565 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.687656039 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.872340015 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.677429223 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.68039982 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.66199643 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.566557686 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.799440177 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.657911567 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.660581396 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.653055246 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.658123137 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.662357964 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.905198739 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.690482022 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.657698193 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.662458053 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.665317796 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.641989886 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.737640506 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.739451679 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.825654252 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.787607678 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.734739978 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.661493247 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.664533243 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.673723644 seconds)
  done (took 75.727329246 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.665971261 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.670802856 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.670005297 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.669912962 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.668547495 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.668940076 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.663639186 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.671312108 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.670716481 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.669929958 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.667738975 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.671010623 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.671839211 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.668457104 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.67059539 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.651070163 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.663790765 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.672244528 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.664592255 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.652263066 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.671248391 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.671334103 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.671549915 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.670439461 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.669554718 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.668872027 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.670839995 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.669959613 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.671697032 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.6704833 seconds)
  done (took 51.574646254 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.668984351 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.6589174 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.663576054 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.674549951 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.668134321 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.671522973 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.000064487 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.672488754 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.670695267 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.670860969 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.660607195 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.693370462 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.720440401 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.67129786 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.672504183 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.673997152 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.6739914 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.670937971 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.662386937 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.683553237 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.008623086 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.675501116 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.00351563 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.683904304 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.675200973 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.672245272 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.673161866 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.661671648 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.669862824 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.665284238 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.623212565 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.000881748 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.674588281 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.663793267 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.603505855 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.679867626 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.674885529 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.662830851 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.671526168 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.670585205 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.001260085 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.672074227 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.674521325 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.668127551 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.672055067 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.676014924 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.662358432 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.664732531 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.953195568 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.678578274 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.664425218 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.673861552 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.676068808 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.674353648 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.954504263 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.674849922 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.670113469 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.673917149 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.676626965 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.004616169 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.67838713 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.673547492 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.66484528 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.671454786 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.664180318 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.67599452 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.68928861 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.673802853 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.680384281 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.676039254 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.668003832 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.674514786 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.67843901 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.667213745 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.688951156 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.667207959 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.677790868 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.668115851 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.666761978 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.004229709 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.676809466 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.666676988 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.016723368 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.679159899 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.679835812 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.681420723 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.679008568 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.777115189 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.004197304 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.606516818 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.707072762 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.672938358 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.004581512 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.683812093 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.67579848 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.679611307 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.679548472 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.679712169 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.67514658 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.66871988 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.697370961 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.688397639 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.676252308 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.677636079 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.010498499 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.68152558 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.67379769 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.676330396 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.74534876 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.679974217 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.689556642 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.679486097 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.01841218 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.68090322 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.680583847 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.672329866 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.668045387 seconds)
  done (took 240.014016319 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.672565858 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.671019508 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.677864162 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.669645597 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.668824863 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.678103294 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.67236148 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.67183995 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.67775216 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.672221199 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.672593357 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.680031072 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.679210988 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.669497617 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.670795191 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.672530865 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.670787743 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.676966701 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.67531752 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.672897139 seconds)
  done (took 51.006557012 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.682802696 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.321792363 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.294301259 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.684605332 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.68162479 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.679108624 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.742373204 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.684163184 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.685360909 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.019152 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.881166706 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.686711275 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.682473926 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.68373289 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.298938179 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.66721724 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.025855053 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.325173474 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.685511285 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.325460544 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.668234831 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.683798792 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.677680749 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.324341618 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.031261679 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.013447562 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.747444552 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.328001647 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.724965266 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.683625561 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.326317655 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.684484396 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.681409143 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.313738157 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.687371865 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.699687993 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.682845523 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.749898583 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.747881434 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.024348148 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.32881017 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.021710383 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.69965301 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.863642248 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.687423568 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.66888234 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.328910057 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.687459929 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.670909133 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.684003443 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.69362309 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.306179407 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.683168467 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.306629465 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.68491338 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.68589221 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.324134857 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.307951262 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.304104737 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.882288317 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.681865592 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.015372568 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.689079456 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.334149248 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.687506429 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.687060989 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.689005489 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.885110841 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.329484963 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.020347974 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.030235006 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.030940784 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.689695842 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.753519244 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.690118247 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.032271411 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.756608853 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.11607336 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.03134898 seconds)
  done (took 151.725717471 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.988844894 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.786950989 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.107578436 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.304661297 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.22726911 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.835437516 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.807887322 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.948176032 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.698580382 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.787428733 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.412013603 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.785066386 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.486046245 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.759471314 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.795438604 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.825146506 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.134516463 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.678210828 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.375585958 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.392406056 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.684576123 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.796971093 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.485735921 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.079187514 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.689930069 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.46356527 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.679600216 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.25057155 seconds)
  done (took 62.807463201 seconds)
done (took 634.378977737 seconds)
SAVING RESULT...
DONE!
