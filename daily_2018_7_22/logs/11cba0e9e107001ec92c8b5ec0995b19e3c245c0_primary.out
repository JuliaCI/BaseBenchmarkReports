cset: moving following pidspec: 27249
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.382500791 seconds)
loading group "string"... done (took 0.505110165 seconds)
loading group "linalg"... done (took 8.456633403 seconds)
loading group "parallel"... done (took 0.175360111 seconds)
loading group "find"... done (took 1.369094709 seconds)
loading group "tuple"... done (took 1.956869401 seconds)
loading group "dates"... done (took 1.341278841 seconds)
loading group "micro"... done (took 0.205640733 seconds)
loading group "io"... done (took 0.568739524 seconds)
loading group "scalar"... done (took 42.008180524 seconds)
loading group "sparse"... done (took 12.835601446 seconds)
loading group "broadcast"... done (took 1.042092881 seconds)
loading group "union"... done (took 14.073443671 seconds)
loading group "simd"... done (took 4.871703658 seconds)
loading group "random"... done (took 10.06186325 seconds)
loading group "problem"... done (took 2.096469357 seconds)
loading group "array"... done (took 23.518114314 seconds)
loading group "misc"... done (took 1.076419486 seconds)
loading group "sort"... done (took 3.544091441 seconds)
loading group "collection"... done (took 20.888981092 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.582814424 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13426995 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14519065 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.173827381 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.205336444 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.138651082 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159544817 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.462369982 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.032308887 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.214728484 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141913743 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.526895959 seconds)
done (took 5.67788114 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.228338611 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.073965333 seconds)
    (2/2) benchmarking "String"...
    done (took 0.128285952 seconds)
  done (took 0.910122149 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074389989 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.172973675 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092059457 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.108597304 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.107651386 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.091302513 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.107545182 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107718255 seconds)
  done (took 1.49766042 seconds)
done (took 3.428740974 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.775272562 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.816929249 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.5170695 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.123918608 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.154260702 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128531493 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.309104238 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.157033856 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.1110875 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.112291021 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174020263 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.36691219 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.481511608 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.953135626 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092679151 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.130461579 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.080698444 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.699106353 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078197892 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.115396216 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.513034025 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.10956833 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114887013 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12485557 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.213384066 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113647892 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.180775602 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10695598 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.664701448 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.099157583 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.181485803 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096924889 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.163075134 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.226642162 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.076395673 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.105710251 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667194584 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.186946478 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.108758766 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.096639353 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.670632393 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075918929 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.192477711 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104675084 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.107915601 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.185498871 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.098519711 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.091229316 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081174738 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.10109885 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.156924623 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.462444924 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103583856 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.142409729 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093077024 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.69381166 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.091269632 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.153351647 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126246321 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.111149821 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.096959852 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.091865954 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16859178 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096056887 seconds)
  done (took 19.576742914 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.117213988 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139653438 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.093893827 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138040017 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13854979 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09417808 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083230765 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076133008 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126324847 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181425708 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134287508 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.141912725 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071741889 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.095078668 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.100365114 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24986879 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.116551618 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100579492 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.094514189 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086847644 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136555021 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.107440904 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.090738431 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107430961 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16470634 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20078409 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105124854 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120677128 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091953433 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09872656 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141157904 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.161225969 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074731098 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09221945 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.179001671 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.104084711 seconds)
  done (took 5.082662843 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193219261 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.100000099 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.202192005 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.172552821 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145287377 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.163594585 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.159599384 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246028281 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118545738 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.236121144 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176661072 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12868568 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097356338 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092953616 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079207797 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.09520842 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077804897 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.745418901 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.122644973 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.164585707 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121442134 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102513775 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.079155489 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.370274847 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096982803 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.076353052 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099471046 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068075477 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165924219 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099942994 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.076034075 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.223804655 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118218032 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086108633 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129729247 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192484102 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124960661 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.130271455 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082592802 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095173805 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.196121961 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085941017 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092802739 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103772119 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131707973 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131547706 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096387085 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.087156579 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.241071432 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079340957 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113497946 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.051950246 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199338919 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094522322 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09582681 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.338234743 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094630383 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082457346 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095121619 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.295159422 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130181201 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.093559609 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076840964 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100866818 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077753377 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.39523565 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101633836 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.242573373 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078538046 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.152010372 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096777732 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100700618 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.07820057 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099936813 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083207031 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115103207 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.076934846 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076101043 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094799133 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.075213312 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099365551 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111343451 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081716911 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.093050127 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145031846 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116894071 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096210479 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123117223 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08196276 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094058281 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125181192 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078165117 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.078762032 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.135664261 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100519912 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111068068 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079942254 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.139527165 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095613994 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.191147851 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093529096 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104981276 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098096126 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125319562 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115450806 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076042064 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098008 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074289482 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094103667 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144475018 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.093788915 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077743067 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.097422002 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089206861 seconds)
  done (took 23.561523709 seconds)
done (took 48.928837489 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.377658654 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.110601061 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.108585466 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106808939 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.106529372 seconds)
  done (took 1.595375107 seconds)
done (took 2.355121003 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.318557672 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.194717514 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083836419 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.170061193 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.101452469 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.175124275 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159446929 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114819089 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204325639 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080397585 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164177441 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.097223253 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083856046 seconds)
  done (took 2.733991243 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090501588 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115760517 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078646476 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088536133 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090201451 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089203007 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104841796 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116336573 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103670725 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081424428 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087732518 seconds)
  done (took 1.804541392 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08961126 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.096648158 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079558043 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087896458 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089539518 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088339494 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105434894 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099806835 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105902611 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083222522 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092784137 seconds)
  done (took 1.788960663 seconds)
done (took 7.075256626 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.093441419 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.665950256 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.121012451 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.16776725 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.311745138 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.218016947 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.629077505 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.129533816 seconds)
  done (took 16.286496243 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.108001027 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093974979 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07567984 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.10979831 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.077633991 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.095496841 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.075987443 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.093029664 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075644084 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.076854802 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093927851 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.074448848 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090881605 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078153907 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.095215854 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.075558095 seconds)
  done (took 2.208442179 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111378874 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111151315 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099106597 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.084807876 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097309551 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079622529 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099943398 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081447506 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094455544 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079990313 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09969091 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.082435593 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097872285 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.093549558 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.082153869 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.099919813 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.079412939 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.097879563 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.082477766 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098883761 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.083574521 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09584606 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.082183418 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099740842 seconds)
  done (took 3.078985774 seconds)
done (took 22.331143417 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162234898 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.0804137 seconds)
  done (took 1.000935129 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098233954 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11570578 seconds)
  done (took 0.983457151 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.103875737 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093782905 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.130903552 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093791348 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093881606 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076535412 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12569769 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094124034 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078119956 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093328686 seconds)
  done (took 1.75321032 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08190327 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081668653 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101932457 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.113923368 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.087454342 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095846432 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.081168267 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.096686825 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08220256 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091621645 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.084034675 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11425001 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.099993052 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097080609 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.098319056 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082338409 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103151717 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097412683 seconds)
  done (took 2.456704372 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078228913 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078860086 seconds)
  done (took 0.927534428 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081260758 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092315314 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08005628 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097559126 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076843108 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075595894 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09286327 seconds)
  done (took 1.369548751 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.468285555 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.177919586 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.318924527 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110944515 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.129562251 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.336666062 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.130025791 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108325903 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107963687 seconds)
  done (took 2.697564055 seconds)
done (took 11.954479827 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.08950973 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.13056072 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.471660443 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111664339 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.073870304 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.141381052 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.251104866 seconds)
done (took 2.042497865 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335143176 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.12187271 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084715199 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.076907477 seconds)
  done (took 1.387017677 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077409012 seconds)
    (2/2) benchmarking "read"...
    done (took 0.08262137 seconds)
  done (took 0.935417257 seconds)
done (took 3.099221297 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076692283 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.075966134 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.10698362 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.072494977 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.096405949 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.072542153 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093115066 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.072797943 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.075399472 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094752653 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.074655465 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.093014713 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075606384 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091547033 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073632649 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073647811 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092750087 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.073195046 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.209656437 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072775228 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075236096 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.091290555 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07289441 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091757743 seconds)
  done (took 2.929112628 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102040127 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094875426 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081725662 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09982522 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080618715 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100511623 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.08257343 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093841491 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.081885596 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095873038 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080073676 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.097887893 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.077677551 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.097447356 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078012439 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.098343493 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.081823266 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094220675 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07915734 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.097782363 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.082105804 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094997002 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.080559093 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099484057 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.097891229 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080576023 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.096793236 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.077672609 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099821182 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08061366 seconds)
  done (took 3.464638096 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.082578712 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07266429 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092229596 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.085039247 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090088953 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077672431 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.089636001 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.074239337 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07809036 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09193037 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07991441 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091392005 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.074526233 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077996801 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.096099602 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.080320548 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110798235 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.073703961 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09172212 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078639006 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097168126 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.073870624 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076447839 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.091740793 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.073829135 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.090432587 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.074247895 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073137747 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092097742 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.073565482 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09602326 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080163056 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091093681 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087276675 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.080164158 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091168831 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.082160066 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.091300092 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078331595 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091384946 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.074155211 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.073461908 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.092063577 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.0853913 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.09423186 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.07635179 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091538398 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.078713996 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077266864 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098344003 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.073165434 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091425438 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079259768 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095902243 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.079664982 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.072704268 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092756453 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.073073736 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095445242 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073886498 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072763106 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090465514 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.080261542 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091809678 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09653168 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100440026 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.07191018 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.094666861 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.076143429 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096746076 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.077708561 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107685536 seconds)
  done (took 6.886870989 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.07858293 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100867112 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075283093 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07418814 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088467409 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073265027 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097407704 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073010039 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091898543 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090926946 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090467205 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073871239 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091194322 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076963643 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073082269 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091792618 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082601247 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088885571 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.072628809 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094974975 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07388174 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097102603 seconds)
  done (took 2.635990898 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.217801658 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101140485 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136172042 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091333444 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110913631 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109877404 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0808511 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101911048 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080977688 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102608284 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084613512 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098945775 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111638138 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083425171 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101110549 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083995803 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096634403 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101548347 seconds)
  done (took 2.680158232 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.089438219 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092651309 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099273641 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093597456 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.075429796 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095607386 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08198678 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108568616 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.079070375 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095266138 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088036532 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097760621 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08045084 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095735133 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079850626 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094758256 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.079573405 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094773567 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088046074 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102378509 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083180372 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105862503 seconds)
  done (took 2.786927485 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09379547 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096894023 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098530047 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098863931 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074509115 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096287497 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084988567 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.095842037 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087958303 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095413518 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076131445 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094811051 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083422769 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093195866 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.081862557 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093051257 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077632829 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093356964 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077285954 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074732574 seconds)
  done (took 2.556614615 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117764319 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108099278 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08962593 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122251686 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107517123 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09106028 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119502005 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090420033 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108241411 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102777304 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109308271 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090153497 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118564264 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115649543 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089623799 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119504253 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118702172 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100930942 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107804663 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089707618 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120526049 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107543224 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100799143 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106991515 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089989158 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107566641 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091044181 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114379008 seconds)
  done (took 3.751733525 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076390938 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076518004 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093255428 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.075013319 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092400048 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.075241412 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.075201201 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.093233848 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077333349 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09274022 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.077421814 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.076041184 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094992714 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.076826264 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094829405 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.077757888 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076672581 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.092486253 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074172557 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091800166 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.075852101 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075755471 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093434595 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072726256 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090404848 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.0753359 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073290049 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090239837 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074894194 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089995687 seconds)
  done (took 3.264955762 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.084087383 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099537271 seconds)
  done (took 0.973800022 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07438191 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110822914 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073000774 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078628892 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09906389 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075767358 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.103148606 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098562393 seconds)
  done (took 1.506002779 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.101754653 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.11492873 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082342094 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108126415 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094344403 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.113089843 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156786297 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.081731661 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.101809454 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.077023936 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112286797 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.076609592 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.101885571 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081868898 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.084877094 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109526588 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.077283323 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103424033 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.083599955 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096584883 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0821526 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110008226 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104163876 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.084179261 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.078379614 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106171956 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.107922738 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.088074611 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099641848 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.0891717 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.101491365 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.070046481 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081004134 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099111201 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.076867548 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111987761 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093143606 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099279211 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.085229773 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100122689 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085147575 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092644383 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086134141 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.101383212 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088841539 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100110536 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082337924 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092394019 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.076905395 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.097794408 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.074416192 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09787724 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.070986456 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.1038474 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085484523 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112166691 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079494903 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.098797568 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.081157127 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.098064839 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.083889319 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.098433263 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086900998 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097888043 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085868894 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.10388011 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085382341 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074982835 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.087984376 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.077163252 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.103838014 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100575736 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105681928 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099795261 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083069237 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.077181995 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100190649 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083354761 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102707059 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.087593445 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099347046 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083466895 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104136506 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080023992 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.098510228 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.08364848 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097339332 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.079821273 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.095363043 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097324825 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097151697 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.07674951 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.095567166 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087896238 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.099358293 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.080106444 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.094503551 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086687173 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.070571834 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100451737 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082726975 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100503254 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.088762625 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100454295 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082225105 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.103350922 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087527324 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09993055 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.079554638 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091232564 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082577231 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.096594641 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.085072023 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.08892018 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081987357 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.09845321 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082726777 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.104611833 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.0789637 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099294345 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087056036 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105925158 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078837295 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.073371232 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.098978032 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081224498 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104520981 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.087683298 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097211177 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.074971774 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093616851 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084584058 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099064629 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08321057 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10030743 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082234977 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.088130059 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.077929123 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099443149 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.087012413 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.097720847 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083122873 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104464005 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083767904 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098394131 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087362963 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.097497618 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.076835475 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103624894 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08140911 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075220667 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104467385 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.080381158 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097133021 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.081042479 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105210637 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.081819084 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100751115 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079188268 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099351305 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083003493 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.094888634 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082660465 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09735971 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.089161775 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.099067531 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075157284 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.073532727 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10087513 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.07752318 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098381655 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.077307076 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101198364 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083100235 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096132563 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.080521606 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.098879799 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092108907 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108670168 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082644605 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.102088245 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088095538 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099187381 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084357056 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098640578 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083456213 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.082632333 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.104120589 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.084005835 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100028586 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.081077035 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.092314964 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083389207 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104900915 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.077457865 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095839329 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.076765769 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099701653 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.088060319 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.09973159 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.082760406 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078821671 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101472866 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105310796 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.080989257 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.080642303 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.095451254 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.080555293 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104685142 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.082779951 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101030101 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.088585565 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101239478 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.075252892 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105364383 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079158569 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.103524444 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.075075074 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.096000066 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.07821987 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.0829596 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100780732 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.079437816 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.088996452 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086564787 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105812018 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082553133 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.09643863 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.081287847 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10896726 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.079491363 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103131157 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.081236011 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.103036056 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095258327 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.095981469 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.080928602 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.107720509 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081374172 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089136208 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.084393387 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097246775 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.076356121 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.078826638 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09747427 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090803838 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102605278 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.082761269 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.089419392 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.081098339 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097200626 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.077856759 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.075676025 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.104305342 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.100023267 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.080984965 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108415625 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083269218 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101410964 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082881088 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099248069 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.082699651 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.082978364 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101529014 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.082599819 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.098888845 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.078138699 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.100309359 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.077079712 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095977964 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.080440282 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099231016 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082897567 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10128288 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.080706762 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104915667 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.082306199 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100909656 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099403399 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.096943025 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.078310362 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101354828 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08392049 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.099888489 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.081076201 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094512229 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08767082 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100624192 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087843866 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.099352676 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.073652783 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.082318373 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.099786378 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.082841067 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102169435 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083804861 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.099102338 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.08099504 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.100163966 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090898005 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097640875 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.088681684 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102627626 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084502852 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.100753522 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083426267 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.098124124 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.077051631 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.100312026 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.08378267 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.10082901 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.080148967 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.102501863 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.082098372 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.080607928 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098261457 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.083323637 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100737726 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083176488 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.090201362 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.077584482 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.095992547 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083003411 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105121468 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.082894027 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.098590211 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.07997596 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082866173 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.09893073 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.073402321 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10356515 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084219064 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102227156 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090988439 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.095928694 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.082141264 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110033224 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.071949112 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097863965 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.078089806 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.097219269 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087398844 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102682771 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.087708889 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101503256 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.077942495 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.074056702 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102081983 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.079364487 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.09033876 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.077813567 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103749371 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.080037224 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097922901 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082557498 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08479395 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102639834 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085123893 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098930061 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081072398 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101541001 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.074305271 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.09774849 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.078086657 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.1004906 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.082894505 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.097251306 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.075157363 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081265588 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100646089 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.081823205 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100432101 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.081031639 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107194007 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0818646 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.100583327 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087551907 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.0904015 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.082389082 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100146132 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082006086 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.076761224 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.101970484 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083177587 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102561818 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.086762567 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100805838 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08381146 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100490438 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.078509924 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101050564 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082183267 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101048076 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.078328982 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102318767 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088653211 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097313232 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.082932554 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101831174 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.079858433 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.08420826 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102393526 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.082691894 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105294002 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.082633584 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.100890525 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.086445903 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101342073 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083004453 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102449757 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.080610906 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105099468 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.078454749 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107693378 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.08323219 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102673781 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081382754 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.097471221 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082275278 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100137568 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080866506 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.086980799 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103342657 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.077430623 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.09714733 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.078785335 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.101116159 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087576818 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106980189 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.082219145 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102781461 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.075918905 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.093879844 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083988451 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.097481327 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.080623075 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.083885106 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105341378 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.082087036 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.097871094 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.080041783 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.106241515 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085606939 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.103607221 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.078848837 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.103482576 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083469552 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.1016372 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.080458093 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100837199 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084848966 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.103350054 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.081992101 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.097894537 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091554564 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106153437 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085367752 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.099515649 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084526205 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100612225 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.076243354 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102167081 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.082809359 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1040093 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.082868737 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081680538 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111801843 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.077804832 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100691608 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087905846 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10026577 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106342554 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.076164813 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083035054 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104043696 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08389008 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095923237 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.078313923 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.097729693 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08295233 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.096540708 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076456833 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111159683 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.088665769 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.101372801 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080286862 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080009695 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.095717424 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.076425729 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.097169021 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083812995 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.100185681 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09050825 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.097273905 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.078844596 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.094851035 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082652766 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101439632 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.084145583 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.074552237 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09579686 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.078726062 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.102329367 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089647056 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100728711 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082639776 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102939042 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.082965682 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098693819 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088549176 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.093460437 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08413718 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113432713 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083733078 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10439338 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.085779728 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107864703 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083716668 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.095690804 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083932952 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10280765 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08309564 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102382691 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086486534 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116753744 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083587169 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.097102032 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.080468649 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08146018 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.098069408 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.089060901 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103569471 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084306809 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.103553667 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.081762046 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103672983 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088657327 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103662443 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.082921795 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.102519075 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.080718502 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101226501 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.080311486 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099440369 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084452688 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103293664 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082543403 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103874359 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.078482847 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111186498 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.089933441 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103586254 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.075270235 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079115228 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.09844958 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077280736 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103804075 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.076759842 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099590473 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081152234 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.080532294 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.104406733 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083851299 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.101527016 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084116988 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101093483 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072036659 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.10557964 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.083113457 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104112618 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.074874088 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102291529 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084235668 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.106019822 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088881588 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099191537 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08309416 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.10067651 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085365454 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.076845239 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.104815759 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081062507 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.100836115 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.079211523 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101527091 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.08457372 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103169563 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084666739 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104127571 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.083396855 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.105831901 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08623381 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.094540299 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.075210369 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.085118389 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098899447 seconds)
  done (took 55.169320742 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14336385 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082985736 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072800817 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093228749 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119894314 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078635019 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073470599 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097005555 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077838586 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107231678 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073592042 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092590698 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114522207 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.100747286 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118150191 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107218375 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073248203 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097269839 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073863736 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097170653 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094510272 seconds)
  done (took 2.832779082 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.098633369 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110971061 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109537897 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095760755 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104703018 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091899862 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109232343 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110714814 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095966933 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105099951 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114472997 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091596143 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.106095495 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105374756 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086313277 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107662387 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114718384 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085780302 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.112234661 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090042944 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109285378 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10858978 seconds)
  done (took 3.10647222 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.089731866 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.0813589 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.105784414 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.072692202 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101339182 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.073137973 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.106365799 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.075272626 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105669742 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.082408686 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.079185988 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.102068983 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086819172 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.093022005 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.080067742 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.094482425 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.086807636 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10076884 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.082942084 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.076518019 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.120959317 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.095115044 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.076993409 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.099662011 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091747955 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102058402 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.081851006 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.081452268 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.098794463 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.081587069 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.09467143 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084621046 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104965886 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.080853355 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.098594949 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08170279 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.081999007 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.096452842 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.079202279 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.104595776 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.077594369 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.102295107 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089516782 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097855239 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.075725113 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08296374 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101662339 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.073028621 seconds)
  done (took 5.155452593 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.11352502 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130924145 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101413741 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140353598 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.116302112 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091667071 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102823514 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140898306 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.075950523 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.10063617 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.098874995 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.116002277 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101900162 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088236656 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101815198 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.081600967 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103307971 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077665205 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10583943 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.077849975 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107066715 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.085348474 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.115120588 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.113871673 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.086452141 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101005573 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.077716939 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107521986 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112650634 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.088700355 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107627427 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109537608 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.097091122 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.099954846 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.078083956 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104383667 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.117871921 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08353462 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103402469 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.076499526 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103940588 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088712048 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104489108 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.099100193 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102711554 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.084047225 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10219466 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.075270527 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113693826 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104238185 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092906831 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115462083 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106402519 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084093251 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107271093 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.096620565 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101624554 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080095201 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.10594019 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.112218919 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.076376902 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106383768 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.095316433 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.10458248 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110683763 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.095618723 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.102636006 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.085734703 seconds)
  done (took 7.789150364 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111520681 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107503362 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09775442 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119840586 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107058159 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087365312 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107385162 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.08631417 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107252371 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115640932 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087189623 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.155746536 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.104399137 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093842062 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10698118 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.086971427 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107165423 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086807189 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107467537 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106766083 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.088364044 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119123924 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086578675 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118163892 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119904184 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084014201 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107293265 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106869659 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09976117 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106428565 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119033978 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.08801798 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107071843 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.098562563 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.120673306 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107185722 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081722337 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10695356 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.086761303 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106928762 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084539292 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119907012 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107043633 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.08447182 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107282603 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.088104877 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119252239 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.121787325 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093147639 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115607334 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.107006275 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099025912 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108043925 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106735564 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.099238618 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.127226765 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118411629 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118345889 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08873556 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119396789 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119017239 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127411277 seconds)
  done (took 7.385399898 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111083422 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113820884 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119270072 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074214045 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096771738 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087005206 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096074486 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.077133916 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115185054 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093018638 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11574024 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106502783 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09030064 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115941007 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105736287 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090495714 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106137483 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086205401 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114311964 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105957698 seconds)
  done (took 2.873593051 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.087767411 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119342413 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080479443 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106072843 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082626407 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106407508 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.08171413 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102215396 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080387568 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102436873 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092696981 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112158059 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079613819 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107339503 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111214855 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.086952978 seconds)
  done (took 2.397208954 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100186652 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120285604 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.124983679 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084557784 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.076091217 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.104355488 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.081509299 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.095847435 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.076109627 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107248466 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085524109 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105122231 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082338892 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.096768175 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.080320047 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104964663 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.075235188 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082239518 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102401107 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.124513237 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.084701981 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.101774205 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.08309336 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.101543684 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.081933493 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.104878523 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.086220273 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.096352236 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.077385103 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.081807065 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102607584 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.106353793 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.075975796 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.0831564 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.097892189 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.076149628 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101398119 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.082025289 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.105180288 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.081925625 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.097799989 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.08160226 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.101509908 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.080671728 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.094823924 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.083438621 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.074137349 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105736679 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.080672009 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102951023 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.081261107 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107798072 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085620231 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.111209366 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088808316 seconds)
  done (took 5.962319536 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096832078 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103843512 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084748986 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096799585 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083047539 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107738799 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08362138 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.081560095 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101799741 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07615969 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102562598 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084006882 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101591437 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082964729 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102584224 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083243634 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094735997 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.081754396 seconds)
  done (took 2.515696245 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084364997 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078120951 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107520939 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078807543 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099716204 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08141489 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095949766 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078697877 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097633154 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.078902539 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07855703 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101957112 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077265121 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.102098258 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079688497 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099165889 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.081038266 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097515076 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079381499 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075001555 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102004452 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077752485 seconds)
  done (took 2.801643604 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.096481654 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.131069764 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.094133084 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.141388951 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.082777649 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.104899463 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.091722322 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.104816497 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.121356514 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.083732779 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.102947722 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.084105665 seconds)
  done (took 2.107980211 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104470252 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136790598 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080741496 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102870943 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093486413 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105487241 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084091838 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105322226 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119463699 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118965495 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085457744 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11884722 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118441924 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096118892 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113625937 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113776021 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085576132 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104718924 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081077023 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127869839 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104551665 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099460044 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105022767 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084807983 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10550383 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117146869 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09950492 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118969549 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104870282 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099082732 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114892755 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10451436 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098954755 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118637871 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102374478 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098785437 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105660285 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129136776 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094726858 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11718879 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101817327 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094647347 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118891067 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112837836 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099955036 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105617628 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092101814 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106880436 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105478609 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134113146 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0949318 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117815502 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113905516 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100405358 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11988186 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134177974 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119259485 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116819977 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09431539 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11979739 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11669587 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093620321 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117062259 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118733871 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113824516 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096791465 seconds)
  done (took 7.954045305 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120027376 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102319825 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085402872 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120645008 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117324449 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085104087 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106625029 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104907383 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086333991 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102367132 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151368656 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085817477 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117751083 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116851793 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085515454 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105123695 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08585867 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117188163 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08150954 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134237223 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106367971 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117578322 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097247483 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119210461 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119100635 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114433088 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086660155 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106040447 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085393892 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105786644 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092889518 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106347161 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117020157 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082112999 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117065082 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084774667 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106362177 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112907934 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085869734 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114344507 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117638107 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107165256 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106599406 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105889397 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098426071 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106170292 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085391018 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102599534 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085835731 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102843208 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118439985 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098724563 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120303684 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117713753 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10605782 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085896821 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105608288 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086485462 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106002655 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094265532 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117783792 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105387276 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133787559 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086743084 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105671941 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097352654 seconds)
  done (took 7.772490546 seconds)
done (took 150.040716559 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099153424 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136848293 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094607354 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.163053457 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08080617 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.136213025 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114557637 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.115780084 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080571821 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.080194727 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101711174 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.083483577 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.167289382 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.080507412 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.101231395 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.084936208 seconds)
  done (took 2.590457419 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.177719125 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.283157194 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100634383 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107626835 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.086738469 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.10481329 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085620236 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.108525157 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.082540369 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.113276329 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.083405755 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.104054268 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.093356855 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.103901405 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.083156019 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.103396824 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.093102169 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.10589134 seconds)
  done (took 2.901905828 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111772089 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14540699 seconds)
  done (took 1.134207185 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117788925 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181136672 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.292832296 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.13383407 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.366454386 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.124220137 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157291003 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100343818 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.218767368 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.104947966 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125489754 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.107528756 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.11271232 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.114053259 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.089891226 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.107723725 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.135521418 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.089166595 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.108851008 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.089407711 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.132549528 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.087778074 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.113322296 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.088597228 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180884095 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.124320497 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.108524774 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087917006 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.10891874 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.088368259 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112818422 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.122534778 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.102270763 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.1876722 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093032151 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.180763203 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09460291 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.10635539 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.088550152 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.106735767 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.091576243 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.111911072 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.101681336 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.107829015 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087082466 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.116167602 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108333771 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087563889 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115440478 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.0955696 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116082044 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113263615 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.16102933 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.116050313 seconds)
  done (took 7.59810361 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.789672024 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14884721 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086123486 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.893447228 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115669799 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123489135 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.792794503 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105826801 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.260957136 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.781168752 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124649133 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098160052 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230731882 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.248273796 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.14828301 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.33637571 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.670896163 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.122500202 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112777049 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.14794633 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11451608 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135595869 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.104144856 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.425918967 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.108623005 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08554876 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118667389 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.097645628 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18028317 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087087656 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111024586 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.181184993 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.263934339 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201494788 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.087090529 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.105496384 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.084882594 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.166029759 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271225019 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215794568 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.153824556 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104244568 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08468436 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120993729 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128025476 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.082563843 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161001876 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.170684984 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193669198 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089846786 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120560292 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094793614 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120253824 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.158358998 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.105838182 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.342335919 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320700365 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107565367 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093770298 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126770913 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267243183 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085562106 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224752152 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133849923 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191274068 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106919807 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793048799 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.18579864 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085423472 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.116618073 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.094064725 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112642445 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.097151781 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164852205 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.403220112 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123488727 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.089507923 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107075522 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206216652 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.107774943 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08505317 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161608037 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110236547 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094089658 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12377051 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122033755 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170030648 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.247354961 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122562372 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094563536 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113521633 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119858203 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.087500564 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215270261 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218768102 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.156253864 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.215691872 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121233249 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.16049577 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163098902 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120795507 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.168916381 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115969237 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126114929 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099005914 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215730473 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.139387196 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086580909 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113153818 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092468415 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.142226018 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110372289 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.093760641 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166219545 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480640386 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.164240585 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.081802172 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112128954 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094549079 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181719031 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09392493 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261423174 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095621102 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188351305 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093318779 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.104325769 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.094717691 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161669673 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12326015 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118127461 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099368934 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1163955 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.248003561 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221334643 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102283516 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24351671 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.179682169 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095713269 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193052757 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094693651 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167145416 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118521346 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119467314 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.08806107 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808864959 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.098004836 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115906099 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112517427 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162242373 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107529657 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087043093 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108044439 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082670548 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812030708 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088146675 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105871699 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087741193 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117700956 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093848114 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114534372 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091191976 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180846179 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.212489842 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121038237 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11526754 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.086158772 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159388385 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.109930464 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086830247 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.107690916 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.086438124 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11706709 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090980047 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108892909 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170425717 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.157512953 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221827136 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.581930563 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.108155382 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086000082 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232393389 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085250904 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.307409154 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115886679 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.202996383 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188281998 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084333024 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.337696909 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167229466 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185727813 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088699407 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191756638 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084223717 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.113668543 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.160266967 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086114697 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115830888 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.157063984 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124163957 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100286808 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.152258645 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085178587 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.2526248 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.083081683 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.167303635 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110530069 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098705978 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.309323955 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107765027 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106507234 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.159259685 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113704836 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.085780036 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.862800198 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085731951 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119508676 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095657877 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223646804 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163193551 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11665111 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115143906 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099734487 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.18210342 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.214192633 seconds)
  done (took 43.524488439 seconds)
done (took 58.629627927 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.305308805 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.257728588 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.255246676 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.214094333 seconds)
  done (took 2.006591972 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.176292703 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.124263146 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.141972122 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.104603673 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149353743 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.082862198 seconds)
  done (took 1.685107792 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.430370017 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.357614369 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.330173032 seconds)
  done (took 2.031510145 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.244616603 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.266090679 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.317177978 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.422136142 seconds)
  done (took 2.264761953 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.200540575 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.098585341 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.118971043 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111895523 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.167312345 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.194140145 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.13867236 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.146047389 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104048995 seconds)
  done (took 2.234659952 seconds)
done (took 11.134111159 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.170492171 seconds)
    (2/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.093023596 seconds)
    (3/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.270287331 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.13105636 seconds)
    (5/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.220019827 seconds)
    (6/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.225526211 seconds)
    (7/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.218711755 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100185097 seconds)
    (9/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.261613308 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.090914764 seconds)
    (11/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.128760249 seconds)
    (12/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.226918244 seconds)
    (13/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.124277562 seconds)
    (14/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.102871327 seconds)
    (15/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.115360571 seconds)
    (16/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.08722141 seconds)
    (17/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.120467561 seconds)
    (18/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.216345645 seconds)
    (19/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.093656267 seconds)
    (20/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.12150203 seconds)
    (21/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.091801099 seconds)
    (22/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.121969076 seconds)
    (23/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.083582834 seconds)
    (24/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.093052505 seconds)
    (25/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.09820591 seconds)
    (26/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.202770797 seconds)
    (27/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.191348753 seconds)
    (28/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.237445288 seconds)
    (29/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.166742838 seconds)
    (30/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.202292119 seconds)
    (31/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102624124 seconds)
    (32/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.18428939 seconds)
    (33/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.218069619 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 0.218168753 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118494002 seconds)
    (36/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.133167598 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.145303637 seconds)
    (38/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.098852258 seconds)
    (39/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097031909 seconds)
    (40/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110824398 seconds)
    (41/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.094492927 seconds)
    (42/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.213110925 seconds)
    (43/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.148372778 seconds)
    (44/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.262968826 seconds)
    (45/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.216067101 seconds)
    (46/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.206118959 seconds)
    (47/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.200181988 seconds)
    (48/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.120304281 seconds)
    (49/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.128478025 seconds)
    (50/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119570839 seconds)
    (51/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094654797 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.1133419 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.111936092 seconds)
    (54/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121428895 seconds)
    (55/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.120400302 seconds)
    (56/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.090533848 seconds)
    (57/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.145255754 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.085989248 seconds)
    (59/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.112054684 seconds)
    (60/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.219420368 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.115288971 seconds)
    (62/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.17776384 seconds)
    (63/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.120489922 seconds)
    (64/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.18696987 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.099077685 seconds)
    (66/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.194802454 seconds)
    (67/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.102885323 seconds)
    (68/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.123108202 seconds)
    (69/286) benchmarking ("sort", Float64, false)...
    done (took 0.171057321 seconds)
    (70/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.176050195 seconds)
    (71/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.072599809 seconds)
    (72/286) benchmarking ("sort", Float32, true)...
    done (took 0.22592527 seconds)
    (73/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.178550173 seconds)
    (74/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.183532544 seconds)
    (75/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.132435445 seconds)
    (76/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.193835302 seconds)
    (77/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.089233973 seconds)
    (78/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.219526554 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.106598198 seconds)
    (80/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.176470083 seconds)
    (81/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.090701606 seconds)
    (82/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.089221193 seconds)
    (83/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.097024866 seconds)
    (84/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.07079599 seconds)
    (85/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.120927571 seconds)
    (86/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.133310756 seconds)
    (87/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.11181282 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.138843651 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089909802 seconds)
    (90/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.121340783 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.090254891 seconds)
    (92/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.113929053 seconds)
    (93/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.08397361 seconds)
    (94/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.07128557 seconds)
    (95/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.116050584 seconds)
    (96/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.180286032 seconds)
    (97/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092368504 seconds)
    (98/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.11244442 seconds)
    (99/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.088062561 seconds)
    (100/286) benchmarking ("sort", Int8, false)...
    done (took 0.188270801 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119156531 seconds)
    (102/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.075469518 seconds)
    (103/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.11324634 seconds)
    (104/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.096886292 seconds)
    (105/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.098641501 seconds)
    (106/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090841563 seconds)
    (107/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.179860211 seconds)
    (108/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.072487125 seconds)
    (109/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.160802493 seconds)
    (110/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.07193119 seconds)
    (111/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.095670811 seconds)
    (112/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.160367525 seconds)
    (113/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.165643353 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 0.194967522 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118941356 seconds)
    (116/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.189611148 seconds)
    (117/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.18821015 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.112967814 seconds)
    (119/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.106172306 seconds)
    (120/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.183013739 seconds)
    (121/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.094296367 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.099628563 seconds)
    (123/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.111719578 seconds)
    (124/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.077810015 seconds)
    (125/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.110491656 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.096187455 seconds)
    (127/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187766532 seconds)
    (128/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.12233177 seconds)
    (129/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154532178 seconds)
    (130/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133134147 seconds)
    (131/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.116843106 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094523594 seconds)
    (133/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.10997648 seconds)
    (134/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.106512404 seconds)
    (135/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.110989721 seconds)
    (136/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.08313635 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.083522046 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.115096927 seconds)
    (139/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.160033864 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.117185307 seconds)
    (141/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.112149357 seconds)
    (142/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.106556075 seconds)
    (143/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.134865661 seconds)
    (144/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.090855521 seconds)
    (145/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120379581 seconds)
    (146/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.074006257 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119549093 seconds)
    (148/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.075576986 seconds)
    (149/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.13352315 seconds)
    (150/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.158567262 seconds)
    (151/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.078298039 seconds)
    (152/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.091108832 seconds)
    (153/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.179210521 seconds)
    (154/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.110117955 seconds)
    (155/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.130694315 seconds)
    (156/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.113410534 seconds)
    (157/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.151092053 seconds)
    (158/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.072632028 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.13955645 seconds)
    (160/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.074815979 seconds)
    (161/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.112760461 seconds)
    (162/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.07512681 seconds)
    (163/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.074597091 seconds)
    (164/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.094708907 seconds)
    (165/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.07272654 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11334497 seconds)
    (167/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.138651915 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.114697214 seconds)
    (169/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.083555204 seconds)
    (170/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.179610916 seconds)
    (171/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.179709404 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.0962542 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.114521842 seconds)
    (174/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.075361726 seconds)
    (175/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.095325844 seconds)
    (176/286) benchmarking ("sort", Bool, true)...
    done (took 0.215035526 seconds)
    (177/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.087766849 seconds)
    (178/286) benchmarking ("sort", BigInt, true)...
    done (took 0.243962385 seconds)
    (179/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111017925 seconds)
    (180/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.071196171 seconds)
    (181/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.080508161 seconds)
    (182/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.096907207 seconds)
    (183/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.07305741 seconds)
    (184/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.109186248 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.090683612 seconds)
    (186/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.110420327 seconds)
    (187/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099087987 seconds)
    (188/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12026561 seconds)
    (189/286) benchmarking ("sort", BigInt, false)...
    done (took 0.225505544 seconds)
    (190/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.122863552 seconds)
    (191/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.103661657 seconds)
    (192/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.181720768 seconds)
    (193/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.15431076 seconds)
    (194/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.241551814 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.114867857 seconds)
    (196/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.085736763 seconds)
    (197/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.099613126 seconds)
    (198/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.099379407 seconds)
    (199/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.113948655 seconds)
    (200/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.072272714 seconds)
    (201/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110532557 seconds)
    (202/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.07261615 seconds)
    (203/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.096853681 seconds)
    (204/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075378506 seconds)
    (205/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.184728437 seconds)
    (206/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.079258762 seconds)
    (207/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.115953586 seconds)
    (208/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.07300518 seconds)
    (209/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116109799 seconds)
    (210/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.075290615 seconds)
    (211/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.170162486 seconds)
    (212/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.091413356 seconds)
    (213/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.131192672 seconds)
    (214/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.073190646 seconds)
    (215/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.095368197 seconds)
    (216/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.109101187 seconds)
    (217/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.110477262 seconds)
    (218/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.079647163 seconds)
    (219/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121071076 seconds)
    (220/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.088531172 seconds)
    (221/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.130484818 seconds)
    (222/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.087319377 seconds)
    (223/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.112908218 seconds)
    (224/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.088951303 seconds)
    (225/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.118461316 seconds)
    (226/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.090628987 seconds)
    (227/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.107636325 seconds)
    (228/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.124155924 seconds)
    (229/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107996002 seconds)
    (230/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.12176833 seconds)
    (231/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.095276005 seconds)
    (232/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.080324634 seconds)
    (233/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.090452308 seconds)
    (234/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.096953848 seconds)
    (235/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.073996611 seconds)
    (236/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.097436971 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.090703231 seconds)
    (238/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.120986983 seconds)
    (239/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.073166459 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.114427475 seconds)
    (241/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.078783071 seconds)
    (242/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.071427068 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120588284 seconds)
    (244/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103241061 seconds)
    (245/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.110702093 seconds)
    (246/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.086359994 seconds)
    (247/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.11083961 seconds)
    (248/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.108343554 seconds)
    (249/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.097264345 seconds)
    (250/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.09017792 seconds)
    (251/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.113831568 seconds)
    (252/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.086865783 seconds)
    (253/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.097303374 seconds)
    (254/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.089587782 seconds)
    (255/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.116707222 seconds)
    (256/286) benchmarking ("sort", Int8, true)...
    done (took 0.216504558 seconds)
    (257/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.08420131 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.115150106 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.092778913 seconds)
    (260/286) benchmarking ("sort", Float32, false)...
    done (took 0.171553155 seconds)
    (261/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.075522201 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109620078 seconds)
    (263/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.0734199 seconds)
    (264/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.096552761 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086070532 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.113809968 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097904895 seconds)
    (268/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.123724558 seconds)
    (269/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.092223027 seconds)
    (270/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134167368 seconds)
    (271/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.076630217 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.112354809 seconds)
    (273/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.078950836 seconds)
    (274/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.071497684 seconds)
    (275/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112082687 seconds)
    (276/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.075855668 seconds)
    (277/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135175659 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.090460136 seconds)
    (279/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.131815026 seconds)
    (280/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.084350613 seconds)
    (281/286) benchmarking ("sort", Float64, true)...
    done (took 0.228508686 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.110830799 seconds)
    (283/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.08031501 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.115602865 seconds)
    (285/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.073970336 seconds)
    (286/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115545048 seconds)
  done (took 36.327235407 seconds)
done (took 37.248103007 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.098532363 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150467972 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09437287 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137376857 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097393134 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.123589087 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.092628417 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.120597423 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.096740287 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123194482 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.096143258 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.103315671 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09424438 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.11850068 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095304411 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140686037 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.121222779 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.090556474 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.0865792 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.110128231 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.08631197 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.1112984 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.088643636 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.102630169 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.095988266 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118035995 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.090278222 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119617211 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087387615 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109954109 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.08574842 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115573306 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085400272 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121122898 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.088972169 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.11090518 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09544206 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093590817 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113035344 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08755358 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116441226 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087385017 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115078656 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.092155416 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.112235034 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.086484858 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11142967 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.097921854 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140184361 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088347922 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.116823764 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.094326434 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.118429409 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.090937029 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.109529117 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.0878019 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.112080791 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115275099 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.111520119 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088322012 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116689917 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.091711783 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.109902251 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.086953086 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.087056059 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.118471723 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.095094391 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110831189 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.094487144 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.114017307 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.083401607 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.111504289 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.085827573 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109016623 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09395508 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.119154874 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08218118 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.087307121 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.115059601 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.089660393 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110250064 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085622544 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113214561 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.087916179 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.109412499 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.079973776 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.10894134 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.089557262 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110587617 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.087114773 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.089660567 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.11501767 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.08842987 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.119082508 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086065465 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.111855341 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087983113 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.112173165 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.088980716 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.109596812 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.083568091 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11061764 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.092078269 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.083885081 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.111690749 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.097475193 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110353512 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.089914623 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.110996375 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.086109409 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124324869 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.094082326 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.112471113 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088652891 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.108270451 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.090107539 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.10938974 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.085541148 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.10887696 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087194871 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.113052546 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087400203 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085758856 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.114011011 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.097536544 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.108080868 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.086281749 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11026182 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.105374827 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.114475562 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.087850153 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.109454814 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.086579264 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.105984664 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085882486 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.085301011 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.114891892 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086521253 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.111539078 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.087117228 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.112108009 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.088571274 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11332096 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.088728637 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109342197 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.080752396 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088682697 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109958996 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.088321367 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111739655 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.086994134 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.107362519 seconds)
done (took 16.406913082 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.096198201 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18604467 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.145714575 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.148171623 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.120797958 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.130164928 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123562595 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.143297668 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.096528689 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14179758 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.1425149 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109219049 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149572387 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.1202334 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.105817819 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.119493569 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.09344429 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.129491469 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.152441339 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.11395435 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145304106 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.121769542 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.115165696 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139757947 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118522103 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.123523596 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.121482443 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.118877224 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.097693581 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.127605872 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110994942 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122479575 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.096114384 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.13140278 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.126220443 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.094038294 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.130139625 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090186527 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.120517586 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.095133633 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133489683 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.130862451 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092002818 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.127230947 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09404534 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121985535 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.118048698 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.093120266 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.120319426 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.089958297 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125869813 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.11465622 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.118369429 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123533977 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.095444334 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119511033 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.096776521 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.123177559 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.096274047 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122566938 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119828432 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.097512747 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125189047 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.135463019 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.094450271 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121389668 seconds)
  done (took 8.823475669 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109475542 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.146534202 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10048064 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.126770064 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.121596402 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.083964418 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.083351113 seconds)
  done (took 1.74876356 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.085538573 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.139289024 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116978304 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142500337 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109593395 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.146779604 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126890216 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.085093262 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133578136 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.095018576 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.138343297 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164381953 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.085450058 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122108755 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119146446 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.110291372 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.144541977 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.085151323 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092396647 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.141763437 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115107915 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.107223943 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.123416041 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.088340786 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.131876966 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.087584173 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.175448614 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12254289 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08457635 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115842217 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090113407 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.179852381 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13200398 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.095434052 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108332336 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113248028 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130551069 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089452138 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.135127907 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.089783045 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.131107162 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090988299 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116703748 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.11543845 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.09214976 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.09950368 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120891871 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.118230033 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.09035696 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.138384975 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.096302991 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.131764743 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.086471653 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.114392532 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.095507902 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116480426 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098705567 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115399498 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.113210637 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117606416 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110825977 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13740436 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.131782312 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111378024 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127961671 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.10797581 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.13078808 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.090834731 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11819412 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094744368 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136865404 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114229934 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.095761176 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125636983 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09362198 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.139054372 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.11261681 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115830031 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098855597 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115491726 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.087533287 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.111646143 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.101670818 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114608686 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.087636086 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128426216 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097108526 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116136184 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089899342 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.133031413 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.089370552 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.121578743 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.120288141 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089395868 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125833996 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.113972874 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.121210005 seconds)
  done (took 12.046356909 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.088522427 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.087535018 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.117909916 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.088498834 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.112704482 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.088092331 seconds)
  done (took 1.570381345 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11627271 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115222811 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.101595911 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.11805342 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.128753276 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.134772975 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.135926453 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095661611 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.132557388 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.100798053 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.135111822 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.112562624 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.141022924 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118824788 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.111048355 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119542257 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.110440007 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116534678 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.099584477 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115870349 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.103550847 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119553263 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089650084 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134342754 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094866097 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.118738521 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11897397 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101474702 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126207909 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.096983998 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118582991 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.093532065 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11997211 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.096491345 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.136437937 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.093265921 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114191102 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.096306901 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.120623892 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.094042671 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.137899476 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090618144 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124663395 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096335904 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.121053291 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119683239 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096068684 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118055164 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.110836443 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121457416 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.09541716 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119662775 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.093941513 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122432141 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.093946811 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121687606 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095895089 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.137030258 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.092904696 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.119443454 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.090218863 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119900273 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096700972 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118983986 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120217766 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096984974 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120150255 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.089727885 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089966017 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118007717 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096086735 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.115407124 seconds)
  done (took 9.045444389 seconds)
done (took 34.200673852 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.668077805 seconds)
  done (took 1.654855555 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.820544043 seconds)
  done (took 1.808599087 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.524550601 seconds)
  done (took 18.541334571 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.46550487 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.555968095 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.993529821 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136448873 seconds)
  done (took 3.135302285 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.962019566 seconds)
  done (took 1.972778404 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.293742035 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234392757 seconds)
  done (took 1.521529929 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.81245743 seconds)
  done (took 1.819030135 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.497625969 seconds)
  done (took 2.496628058 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.342285707 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.195663509 seconds)
  done (took 1.548230555 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.563093682 seconds)
  done (took 1.563966867 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.093216052 seconds)
  done (took 16.102420457 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238283941 seconds)
  done (took 1.258248248 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.292917549 seconds)
  done (took 1.298786766 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.575910298 seconds)
  done (took 4.579051077 seconds)
done (took 60.301507783 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09685905 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.099371745 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.125571505 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.096708479 seconds)
  done (took 1.41789727 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10147695 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120778303 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.097578085 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119639212 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101598893 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.120939144 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.092922555 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.16414644 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.0936187 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.121616249 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.094491821 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119279913 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.095701378 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119969655 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.091381764 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.121005485 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.095932441 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120515291 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.095170695 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.12029501 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.091442284 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.120373696 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122626636 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09287484 seconds)
  done (took 3.649605411 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.096950382 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090968454 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.11881573 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.09050888 seconds)
  done (took 1.410391973 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099957323 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132920419 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106453002 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126015324 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.107065435 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.132613397 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.089749591 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116156189 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.091973483 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12560635 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090589001 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.136777447 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131971097 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.084895293 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101058986 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113529033 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.086698385 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132295102 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100189555 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126365122 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.08885042 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125510397 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.096919335 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.130412209 seconds)
  done (took 3.691967499 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169983961 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128148598 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139357203 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095700731 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165127112 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141515221 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089252288 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140222908 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08904091 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.127767419 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.092073793 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.167164843 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.098564732 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117941441 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.089683354 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.122312518 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124234402 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.0983515 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.116831662 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.104603264 seconds)
  done (took 3.434513262 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096331258 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.089272526 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.111766276 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.087523088 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121682847 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.091688429 seconds)
  done (took 1.622506809 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.08580282 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.085396856 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.111858769 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.084060407 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115301151 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085583126 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.084675051 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.111588932 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084181594 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.110774286 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.084760567 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.082983687 seconds)
  done (took 2.150523269 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.379609842 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114333227 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.089792285 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11348417 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.09410377 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.11389468 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.10155709 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.114789242 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117566341 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.114991335 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.087396284 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.117828782 seconds)
  done (took 2.583670981 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204593835 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093351501 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261193091 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.349198638 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153676535 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163340806 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277355534 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162057619 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.181170026 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13563029 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191252133 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155201413 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124240985 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17487902 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137436621 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.174816519 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174393055 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197308531 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146261448 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201652929 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161362428 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164756741 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177155619 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149232605 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108266029 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156682564 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117376611 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099551088 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170443055 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16771539 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171796694 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148524902 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137961421 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198319417 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2097839 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203402084 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.30490102 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10429093 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.185456663 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.17755481 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251699152 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111093039 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219133104 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153197393 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100440003 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179507814 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154719568 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177821887 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.128676751 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110639057 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207641521 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172670696 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.177300777 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107249429 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.328578376 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119394998 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143677154 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180423948 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184235353 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187075474 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165131992 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118354766 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183440389 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17833874 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176846633 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143139365 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.16324396 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095440985 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172626388 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191116769 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175065845 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161710025 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.212479339 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104875985 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162023476 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166638326 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152041914 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175759355 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158107049 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.091712933 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148309513 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134684997 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098808943 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.185035106 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093083993 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226623486 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106404637 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.186597427 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201483907 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156124336 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15881896 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161403456 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163590679 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144071523 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.089696285 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144534297 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158822846 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126621239 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130057502 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155108648 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140586596 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.09752682 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151341924 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.094107665 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156809269 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132990283 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165740136 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162549169 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099422345 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163465222 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148027076 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.156146285 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168647151 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18239254 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102806096 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130471143 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19076496 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158147415 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103955027 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171426662 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182592041 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.16333371 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136594396 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167991121 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190459353 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140152869 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185661694 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110420597 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131203763 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.14834006 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15739715 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153800962 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126843057 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127845268 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.149924479 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18960836 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098039883 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134834411 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171778146 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096520534 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126704523 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140339055 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105564052 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140379187 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146216372 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106385552 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154394501 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158763852 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150707354 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157855078 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111821848 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217443442 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103085675 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.158469417 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144862356 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.090336777 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.175977714 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180434358 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126653099 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194431713 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.165717019 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219988596 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134167776 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129679451 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176139456 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09815466 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117937348 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165871456 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159278772 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158871348 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179741086 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190974317 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163323828 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151059964 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147126322 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163816942 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.14217971 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152990372 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.143300087 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160777007 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165018806 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.091743175 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122139779 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124425593 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112362246 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128747236 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102383639 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178663717 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160861713 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212343501 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157428322 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111702017 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178409402 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123804071 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162664733 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.169672752 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10908523 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.180514191 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176722616 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164487989 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141605184 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173035705 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089464092 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121482837 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.130011693 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16236541 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102098717 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132188347 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112793473 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179039686 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171391084 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147900295 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228455837 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165597271 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188213068 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.092160964 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16235822 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16775193 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15540303 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.154923085 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12962474 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.157572548 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172684849 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11146222 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185329644 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159995687 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165671338 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222840302 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.126233196 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128481638 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147565954 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164119566 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109913291 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163476811 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144657134 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105247363 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150972803 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132836199 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095054303 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20429465 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113668237 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205234302 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.126047194 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170527784 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124391664 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14057699 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131583025 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144016639 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.114865243 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166809046 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183460056 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14200296 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127323813 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171900979 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126871772 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.30682557 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184403038 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181367848 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1357634 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140275631 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130140584 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156636797 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160453922 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1761716 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142262331 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176912031 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155938024 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.112164128 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133279163 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14448399 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119195023 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.148815586 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.130033134 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150164043 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112143952 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180244253 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140646045 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155995721 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163081116 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.118280739 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147077934 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141134196 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197264199 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155970848 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174438499 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.124128705 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.16272306 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196076437 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122186526 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098727101 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.124320705 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17712788 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101841909 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156646564 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.209211371 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196292749 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156158691 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163428339 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107348764 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119127417 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127212251 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147598869 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223106445 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111478953 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13281257 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186813149 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.148594784 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098956977 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161360371 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283899306 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140217202 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172173062 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.086141648 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.303616516 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096687157 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128300615 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128347582 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167192816 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137187521 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.17929475 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135588437 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141322715 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159058967 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13588412 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187045873 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202156177 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167923594 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172110703 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.142037623 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155878784 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161381031 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173302185 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112713832 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.143573904 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159933738 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179233444 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.185352508 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.102481916 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159828239 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160392594 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15771594 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170117374 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132228884 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197022285 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12848894 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164095796 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109437056 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121689756 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155181218 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.182395304 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103713471 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170379798 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1565582 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130804207 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09531517 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149828995 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155460979 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139409051 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098018581 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174498762 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.123971466 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159783901 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146711928 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128904728 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152564529 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114345398 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136065598 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140602091 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142835363 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104658582 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167454891 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179682682 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.099829756 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173169214 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176181652 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160775449 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15767409 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142447535 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664193835 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.097512808 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178955191 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145343181 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182124372 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14573049 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134702759 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157851494 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148731932 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166939285 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14841489 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.220469336 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16482076 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.127023141 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128875702 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143245821 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111879281 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129655312 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149036727 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162029759 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109131483 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135539587 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154992551 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113485227 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.14100217 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136059316 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179251692 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115732252 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178457266 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178707503 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135865022 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164896649 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172474218 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128696381 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157838136 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139305974 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139838273 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149091466 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.128579796 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103645698 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178405982 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.092665173 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157288194 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15820059 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160074681 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161032746 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.102412876 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156552416 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140789981 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157978388 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099206903 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15205015 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155115546 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127835822 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.096924102 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153000415 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157466412 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.155321561 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09503559 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166835844 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179541544 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094985366 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131613772 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284094682 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154343059 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188689344 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.120395641 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133199424 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141571408 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123636493 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151195421 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156926205 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126399598 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101465573 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.129274378 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.176361491 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.123474263 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15334935 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183101187 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157801401 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197679279 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134928221 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.261300438 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108274105 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152669884 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.127275586 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.099651494 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141612326 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103153077 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14182267 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189000239 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175677799 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149992288 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.141901985 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096112851 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125859763 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102179297 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159779655 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15243951 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155115287 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111619472 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.115868154 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141695245 seconds)
  done (took 74.637739586 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.143593749 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129056457 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.14500501 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.192286985 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163235375 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23922151 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.202706868 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223013186 seconds)
  done (took 2.535534384 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.098195602 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155857151 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.137012062 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.122419978 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.089571634 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.330841297 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.13503113 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121351628 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.116477756 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.134825763 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.113871031 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.533666146 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.119812691 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.119380351 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.084916962 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.112236809 seconds)
  done (took 3.619419019 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.234401173 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536897688 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.9873084 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.244006224 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.224347401 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.151040334 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.74355954 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.15828115 seconds)
  done (took 12.38558447 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.119833076 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137823954 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.132195596 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.160706055 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116802081 seconds)
  done (took 1.780458938 seconds)
done (took 115.919234936 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.093329431 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.095336519 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121809007 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.096410137 seconds)
  done (took 1.494281782 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.105301641 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078400723 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109320391 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077142796 seconds)
  done (took 1.479658722 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.421040474 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.106859475 seconds)
  done (took 1.673365855 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114046944 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131551283 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103839619 seconds)
  done (took 1.461967871 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100083133 seconds)
  done (took 1.214817088 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.095110081 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.09676655 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138334304 seconds)
  done (took 1.442762771 seconds)
done (took 9.878398241 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110485426 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.428380349 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383461557 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135645835 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.692085878 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.40561154 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.031747068 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125983029 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165045262 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116391617 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106653788 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.705878802 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.026591559 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.366706949 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.012719569 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.339619283 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699618154 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09014843 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123234056 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.08938719 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.010213579 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.08692255 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117754071 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090523907 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.696766561 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.391962665 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116923199 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.349919747 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116611631 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094836876 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.404184767 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088766461 seconds)
  done (took 16.819666014 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093779493 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176093623 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.095770297 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118577731 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.09308039 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.118357252 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098820717 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.129951788 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180439789 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088708575 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135019304 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087903714 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.093344324 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117611762 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.108674053 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11608274 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090848007 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119273199 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094907758 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119243051 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.107349394 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115947296 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090421115 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118999983 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088791384 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.128923824 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089361658 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12900438 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089057556 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094267375 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120343089 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089330828 seconds)
  done (took 4.655853717 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138923721 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186070016 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.124964761 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123538632 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168063827 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09030799 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201045729 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155228469 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182691632 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087605613 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135048454 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087265416 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152946264 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088128545 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138391336 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087528811 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.119463934 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090245883 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123785164 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.08970819 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137507226 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088056169 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119281353 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090171551 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117195776 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102756755 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117860433 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.102071904 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116642273 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095668691 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120145696 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088908008 seconds)
  done (took 4.991159335 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.095975941 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.097125937 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133382556 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.133468281 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.090708062 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.096166414 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.125397588 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.091081678 seconds)
  done (took 1.987715885 seconds)
done (took 29.570473031 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105969142 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093697957 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131351935 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100294775 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127645709 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.102402955 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.116393322 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099749047 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.129500261 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.096933308 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103463062 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.116763481 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089462449 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115493944 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.101500813 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121060281 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.103280657 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097055421 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.137914628 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132145235 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.089975808 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.098803479 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127385072 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.108583201 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.13828156 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.137634175 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.104483271 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.122869047 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.089755994 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.089187406 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.131662104 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111371674 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12016651 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105127116 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124269415 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.091965807 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.118638402 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.090270973 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132859463 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100079973 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.094180572 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.129578047 seconds)
  done (took 5.783823711 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.115960417 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.161539952 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.089027614 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.119491644 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.089763351 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.157783117 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.12425312 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.118013436 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.090067031 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.143515526 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.11482409 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.119246553 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.08942624 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.119020879 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.089037233 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.118859783 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.112875832 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.142467205 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.119060486 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.149377755 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.163526618 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.120279071 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.154101307 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.112719142 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.160842986 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.154018005 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.109861059 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.154630822 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.145395218 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.08823035 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.14861142 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.121027379 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.118074644 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.088978358 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.159314706 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.15416393 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.116325957 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.158961714 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.119803042 seconds)
  done (took 6.060098681 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.096279388 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102623761 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139185446 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182391312 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.125966927 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.126967355 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098958562 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136979961 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.1049043 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117982089 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090574876 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148914268 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.105650021 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126276062 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089341394 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13292163 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.108405575 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.120476076 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.094087172 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107864851 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137226838 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101858736 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.131280297 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.098899998 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.118455152 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097212985 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121579414 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.103660437 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123905336 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096265099 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122477505 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.093117655 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121249244 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.100578935 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.123118935 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09604706 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141293631 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097120236 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127457838 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.090570931 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130606747 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.093269578 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139943198 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127941666 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.118728356 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.096442695 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095141939 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.127382127 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.087713535 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137122424 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098979009 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.119602644 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.104142957 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.119145127 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088338521 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133216966 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.089980619 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.121048709 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.096584695 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.095905356 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138090918 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.093432956 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132501278 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089369208 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125093692 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.088687965 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.118177142 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093885709 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140250065 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.092635743 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158457849 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.089175474 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125090044 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.09676173 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.1246914 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098916294 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.118664498 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104469614 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099362211 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124135166 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.099520452 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.122589536 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.092982804 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.137146126 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.104128401 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126473158 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094809998 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125508817 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.092540647 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.119626673 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1026435 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.121320217 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.093362164 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.134858024 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.090384572 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092283549 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125118248 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.093532746 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.117374616 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101447916 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.123977645 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.088595234 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128902273 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.089888873 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12204713 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.098784386 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.092580646 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.118799279 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.09338991 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125299469 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.08892412 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121375948 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.092553834 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.12123462 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.102530846 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.126066184 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.091452767 seconds)
  done (took 14.224264921 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.236025137 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215795123 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.192895451 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.301148025 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.110310877 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.14741016 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212297639 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.164569943 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089749003 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160539785 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.179714457 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18710158 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.175855578 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.186556023 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.173270796 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.089552135 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.139527744 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.172724913 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.218121325 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.267158015 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.140432178 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.103322708 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16289882 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161029337 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138963559 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.105588816 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.143964628 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.14164376 seconds)
  done (took 5.86090185 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106637178 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156238205 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097397889 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146075274 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14754279 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.090812265 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.09491251 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120572755 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102507039 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135874411 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.090843937 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128256275 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.095754166 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.129528758 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.089780986 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.129827571 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.09961297 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.129883431 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.092699315 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.1242782 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.103599974 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.139454134 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.094867446 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122714539 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.10684718 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123156047 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.092877957 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141172551 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.129704498 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.114905389 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.1167913 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098385628 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134327649 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.089509159 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122832347 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.092811044 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.092307166 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.122889188 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.091242126 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.117366942 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.089519442 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.081642861 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12312252 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135654828 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.09715729 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087330161 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124929225 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.094454465 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127468387 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.086458244 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.122054282 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.092351411 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.124217891 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.101258241 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.093570967 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127543972 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.093527233 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.122738751 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.09869934 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12372281 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.087331043 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121496371 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.095840519 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.125072785 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.098200536 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126356939 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.090957217 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.092226169 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.12469312 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097429736 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.123020181 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.098715311 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.11730597 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.090754237 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131256461 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.099396135 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.123712823 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.09155857 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093067936 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.119923064 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078717378 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.119546948 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077278972 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.093719737 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.119117127 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.091899842 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.123112362 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.094863215 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136876906 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.098603439 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.127834823 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.090191082 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123338728 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.093879593 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.117691117 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.094009654 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138135306 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110193902 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.119095406 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.086571196 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.136373582 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.091654111 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.087683779 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.112649705 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102258748 seconds)
  done (took 12.665869434 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130253549 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.171495667 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121281573 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.109170669 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154845053 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.131667541 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.12920852 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.096922892 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.121506114 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.10801079 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124270089 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098974436 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.123677089 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.104032266 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162441523 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.100058535 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121538991 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104906657 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125540869 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.143584784 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.140555745 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.160379022 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.159828119 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094426635 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.095775319 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.158641484 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.166252853 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103880573 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.133497551 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.162834431 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.103323816 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.165959333 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.163201378 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.095964268 seconds)
  done (took 5.546077873 seconds)
done (took 51.265799648 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.25118053 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.437106615 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.212636441 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.211851166 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.275619624 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.24973989 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.217833785 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.406122547 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.997189402 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.204163061 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.212730154 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.21473128 seconds)
done (took 28.03469891 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.300997398 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.37915337 seconds)
    (2/2) benchmarking "String"...
    done (took 1.54575434 seconds)
  done (took 4.068657435 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.213865602 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.213286394 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.459905093 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.221834642 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.214330233 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.228284032 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.220793669 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.22625506 seconds)
  done (took 15.927941635 seconds)
done (took 25.656219704 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.273722996 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.399135422 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.476585766 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.241717334 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.216634245 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.220514321 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.218313924 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.256850326 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.227949998 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.218487406 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.21457889 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.49049526 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.246147657 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.589494954 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.22260256 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.227230186 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.232107517 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.435463951 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.22635103 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.264696657 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.201988015 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.201686011 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.221040795 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.238106448 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.226953019 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.228563736 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.253876152 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.218413578 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.402105611 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.238367905 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.259036508 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.216266501 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.255085359 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.221191184 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.326020962 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.240714058 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.389219237 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.228982038 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.209146335 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.219893908 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.40123563 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.62065663 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.216610121 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.21694714 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.216051632 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.280297841 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.205213345 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.94314746 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.221358421 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.220300511 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.278941128 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.605736523 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.220347082 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.22656082 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.227572611 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.459762249 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.246468859 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.248390095 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.248961794 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.227360333 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.215686684 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.216866802 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.224321505 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.232247896 seconds)
  done (took 144.457547989 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.218240912 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.218283516 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.218847034 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.234539571 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.222117251 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.21698471 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.218226082 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.218463011 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.219448273 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.247318372 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.22307153 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.223691132 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.228191072 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.180346023 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.221670407 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.236753443 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.223623985 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.217983028 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.236566527 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.217851219 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.224590227 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.221263354 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.231670215 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.217060456 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.26518734 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.298802062 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.246958983 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.225215507 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.221706147 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.219392152 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.260649352 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.226120916 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.842775198 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.073932452 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.22755719 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.250828037 seconds)
  done (took 80.83875018 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.217557259 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.219464547 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.220775069 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.25162153 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.219260214 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.787313118 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.219660618 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.931482235 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.805304094 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.6543626 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.612736579 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.537700656 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.225638841 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315019984 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.233986333 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.220245175 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.222455405 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.238015636 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.252493408 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.219600764 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.222211552 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.810736989 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.23831189 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.325233412 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.400191196 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.235968028 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.254085857 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.621433931 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.223420209 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.256767778 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.221395516 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.557509359 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.269065448 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.223696452 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.636639643 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.015289785 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.340321016 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.226421673 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.256831377 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.222601329 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.507130458 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.221954918 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.225937231 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.228081939 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.928109292 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.226956855 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.793584043 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.222097894 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.214376359 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.225798948 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.225001039 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.21443601 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.973834605 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.226689074 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.223530079 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.228363202 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.22472882 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.225787461 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.257644245 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.161010012 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.31967655 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.226114558 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.224892552 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.253927216 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.222502817 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.391993779 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.228443424 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.780416027 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.287488788 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.444686833 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.820000995 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.229875753 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.225128653 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32310891 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.34336427 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.223698974 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.224529041 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.224468538 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.223362867 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.336402312 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.223857611 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.641971424 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.402563363 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.238490826 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.625019828 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.327839218 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.224761773 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.659844499 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.229222563 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.225820941 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.974606693 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323830184 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.225807772 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.228297197 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.22552034 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.64452663 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.815928545 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.485918176 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.231366583 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.335895029 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.23065953 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.654034161 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.791924227 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.963161632 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.230895554 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.341469977 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.40479524 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.243187641 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.225314377 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.630093348 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.230502064 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.282350835 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.226333326 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.624161998 seconds)
  done (took 369.994415343 seconds)
done (took 596.431604314 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.870866447 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.864716315 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.976544195 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.857763506 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.820102592 seconds)
  done (took 10.540507858 seconds)
done (took 11.691787149 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.416889122 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.413589423 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286690512 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.909652934 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.259792563 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.434418378 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.400081048 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.245422058 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.331592704 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.306203626 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.330195563 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.280457402 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.262795872 seconds)
  done (took 19.027502545 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.547533018 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.227395876 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.306458189 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.580227762 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.266798825 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.577542374 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.455486874 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.244807282 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.429242513 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.242461388 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243372199 seconds)
  done (took 18.274147081 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.575504438 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.228577732 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.307138178 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.61996659 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.270525465 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.579101695 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.437448927 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.245486303 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.438434671 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.260946416 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.240446173 seconds)
  done (took 18.356717892 seconds)
done (took 56.809118821 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.26933715 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.395642749 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.2546721 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.241096624 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.23949675 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.239014604 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.243644441 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.238540579 seconds)
  done (took 11.275663025 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.2336119 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.236602864 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.236067825 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.236564285 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.235178197 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.236831747 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.234864734 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.236356796 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.233697877 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.23795388 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.23770142 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.234476673 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.232856871 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.240574779 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.237115835 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.235863654 seconds)
  done (took 20.931450618 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.236344212 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.236291383 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.23439128 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.236141699 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.235347109 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.238266195 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.237620033 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.236929 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.234853758 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.235114991 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.23428962 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.234674602 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.235192012 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.234975626 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.235196161 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.239820926 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.238770872 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.236135432 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.240401486 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.237349171 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.237529629 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.236061036 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.235209047 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.236396619 seconds)
  done (took 30.830835418 seconds)
done (took 64.191102399 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.238907257 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.241539382 seconds)
  done (took 5.634064438 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.297202132 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.297989407 seconds)
  done (took 3.749950766 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.239447435 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.239703171 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.240307606 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.240224452 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.239877537 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.237677765 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.240118297 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.239085786 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.240132913 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.23825264 seconds)
  done (took 13.551079865 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.238780285 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.239161825 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.236594668 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.239133498 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.239576543 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.237455284 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.242066717 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.242607075 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.241138741 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.238490547 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.24087891 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.236961152 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.241239501 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.240815916 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.240383431 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.238191999 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.236690699 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.238463538 seconds)
  done (took 23.466572341 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.252924911 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.26133365 seconds)
  done (took 3.674336779 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.369115745 seconds)
    (2/7) benchmarking "second"...
    done (took 1.280411279 seconds)
    (3/7) benchmarking "month"...
    done (took 1.349921108 seconds)
    (4/7) benchmarking "year"...
    done (took 1.337466763 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.282220763 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.259149744 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.283545692 seconds)
  done (took 10.323148327 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.244743282 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.436528717 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.549318158 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.836043918 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.244576041 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.243684051 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.131993475 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.246222137 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.246772819 seconds)
  done (took 14.33759878 seconds)
done (took 75.895929426 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.232768303 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.261841063 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.236133207 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.24947029 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.535482657 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.261956099 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.238428866 seconds)
done (took 16.174485523 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.232014888 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.23137363 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.231409022 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.245099729 seconds)
  done (took 10.099753127 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.236985338 seconds)
    (2/2) benchmarking "read"...
    done (took 1.572759256 seconds)
  done (took 4.970542117 seconds)
done (took 16.228366409 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243059256 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.241223524 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.239818366 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.239476975 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.240846007 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.240291147 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.240346725 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.240320766 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.24173107 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.241455328 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.241531273 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.242683813 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243162382 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.242974334 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238744142 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242347771 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242026207 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.242739122 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241609045 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240497399 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.243791636 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.241696211 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.241210709 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.243843756 seconds)
  done (took 30.958492476 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.243695619 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.240582085 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.243104722 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.24246909 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.240619145 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.244531103 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.243687182 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.241865219 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.245141545 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.243756374 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23986243 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.243124702 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.245721877 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.242484832 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246352043 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.24278164 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.244957155 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240735503 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243925118 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.241062986 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.243365545 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24199593 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.243628508 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243814869 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.24348454 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2440408 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.244853617 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.241107945 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247503089 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.24538989 seconds)
  done (took 38.459943378 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.25118398 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.252909826 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.245624824 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.244867816 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.245991177 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.246714054 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.246354721 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.247837338 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.245922587 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.245163811 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.24606698 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.24625594 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.245363781 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.24608416 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.245501223 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.24633159 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.248108317 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.249604827 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.247252441 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.250688561 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.251134112 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.247880939 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.247313092 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.250235806 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.24878307 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.24678842 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.246106 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.249116598 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.246693392 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.246939708 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.247016286 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.247253422 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.2466857 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.249075117 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.247221114 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.246666775 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.252769065 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.257342764 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.247526609 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.247943714 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.25076769 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.2516274 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.250722255 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.246772361 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.247347256 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.250118027 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.250232221 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.248586814 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.248635373 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.248291485 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.247285706 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.247681299 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.250180238 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.249805353 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.251502555 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.248732693 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.250657482 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.249878215 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.249610606 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.250914569 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.251274384 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.251465582 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.253852727 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.253535425 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.250976904 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.253658522 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.251789904 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.251288649 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.250881384 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.251814282 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.250450669 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.248583969 seconds)
  done (took 91.087558527 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.251891403 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.24587324 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.245452677 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.248044399 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248291115 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.251946718 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.24640015 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249294054 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247105422 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.252562237 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251496073 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.249012943 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248516711 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.249843455 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248596163 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.248754416 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.249907414 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251311134 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.253058938 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.252478026 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252499337 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.249030673 seconds)
  done (took 28.657846525 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252224188 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.252258393 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.248482429 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.25577367 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.251644216 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250899705 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.250518096 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251573381 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25314489 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249337449 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249364193 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254238618 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.252337671 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251296785 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.25164659 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.249569656 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251987542 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.252652521 seconds)
  done (took 23.695913881 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.254326836 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.251762678 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.255284548 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.252154989 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.251324364 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.251894408 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.250920668 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.253599905 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.253854566 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.249668133 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.256891727 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253910174 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.253508296 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253181713 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255587497 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.253595213 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.251429026 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253399481 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253112467 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252350164 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.253854873 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253436666 seconds)
  done (took 28.73960907 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255876148 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.255178194 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.251739046 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.256195414 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.255553989 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.255773584 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.257984687 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.256902677 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.259447691 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.258645736 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251101699 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.257552948 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.256572523 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.257824841 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.255132049 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256201442 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.255216203 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.253276967 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253964993 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.255836016 seconds)
  done (took 26.28556863 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.255663888 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255820971 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252941872 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254604607 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255211035 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.254300701 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.254975585 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.258045205 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.254448691 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.254697682 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.255638901 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.255097421 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256812655 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.256712511 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.257225059 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257309056 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.256794445 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257078504 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.257051058 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257310942 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.258605833 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.258370662 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.258462046 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.258689542 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.260387318 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25810601 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258595532 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.260073745 seconds)
  done (took 36.364382477 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260150438 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.257484911 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.254894524 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.258357964 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.256109197 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.254331927 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.255727041 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.256983562 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.258824161 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.256224898 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.258906625 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.260624499 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.259037898 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.259640964 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.258206974 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.257953604 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260797304 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.259582541 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.257783963 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256521394 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.26086462 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261057246 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.261914258 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.255076569 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259252723 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.261151524 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259328469 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.256440483 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.258843051 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.258194465 seconds)
  done (took 38.926680269 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.304999991 seconds)
    (2/2) benchmarking "in"...
    done (took 1.301798336 seconds)
  done (took 3.781816023 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.258023459 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258078215 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.259126691 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.256519841 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.25737491 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.25810044 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.257976047 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.257269403 seconds)
  done (took 11.240077891 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.261273393 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.261684059 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.26106937 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.260135775 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.258705483 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.26236192 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268380034 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.278528544 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.266614825 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.261028663 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.268054648 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.271869515 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.261770966 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26418857 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.259896754 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263745769 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.258691852 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.26049024 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.26248082 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.260972587 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264683096 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.266308129 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268302158 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.262950102 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.262555802 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.275517939 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.266659747 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.264606765 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265760558 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.267092201 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.265127883 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.262779256 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.263723875 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.264672522 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.261554083 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.264114761 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272861914 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.287932137 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.26793591 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261855654 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263314165 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.263664825 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.266243835 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.265224981 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266980053 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.261630929 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.265518128 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.262090416 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.264366101 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.268672395 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.272449232 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263619681 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.263490759 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.271273366 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.266777059 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273135222 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.283315428 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.267759945 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.278430075 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.277428284 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.279087815 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.287858916 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268889604 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.265210794 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275455172 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.290662761 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275717032 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.28018896 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.265152695 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.264107243 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.270355879 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279705798 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.291898915 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.264553577 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265893357 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.266694567 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268645006 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266691524 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.271728719 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.285947068 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.266799928 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266313762 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279178726 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292513728 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.268993007 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.266064531 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.266708674 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.271161898 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.26812199 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278950593 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.285921321 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.268326709 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.267696164 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.266235596 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.267812342 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.269951694 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.266406515 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.270611781 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.266751223 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.26909244 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.268474709 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274899345 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.276761538 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268106086 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266264348 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.272862423 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.268797578 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2669466 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.276401298 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.267777338 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270071227 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.270204344 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.275681774 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.265463017 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27334097 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.281354008 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.269441994 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.270182473 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.26881023 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.269735439 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279800641 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.300828448 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.269832877 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.269048461 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.274401457 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.282903652 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.269844913 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.273628005 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.269866799 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.26769242 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.26898494 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.272130739 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.269162043 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.270513729 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271769763 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.271230175 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.269315287 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.271581389 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.27040618 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.270061954 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.271815251 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.272037222 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.273136076 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.273027313 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.270841184 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.271496358 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.276523112 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.272407235 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.271137948 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.275040012 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.269229953 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271896446 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.275229481 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.271054733 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.272120785 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271824831 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.272706364 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.272986932 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271104585 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.27147706 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273075968 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.27265533 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.276835432 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.271728322 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.274241531 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.271038049 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.271386916 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.271520498 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.2726388 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.270090202 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.272191203 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.272767299 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.277466005 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.281712284 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.275506824 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.274714047 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.273029772 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272404958 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273324362 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.27447825 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.278359542 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.282021164 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.27167327 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.279205558 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.274253195 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273489045 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.273207819 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.274214877 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.273949173 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.27473622 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.277030989 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.285270483 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286235029 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.295032484 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.274697233 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.279502255 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.278055178 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.278778992 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.278140819 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.274798892 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.274789134 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27422445 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273534584 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274712558 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.280095264 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.273372314 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.274667681 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.276258135 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.275858335 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.276743968 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275055691 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.274288797 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.276308328 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.273714666 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274633697 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27713734 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.277583079 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.274671593 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.273390508 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.276327257 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.276540684 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.277680452 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.281929863 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.272252187 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276736796 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.277258073 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.276137986 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.274923544 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.277443193 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277989787 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.276009671 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281918138 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.290742666 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.277387632 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282801942 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.296356276 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.276001971 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.28040089 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.276370342 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.274346253 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.2804885 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.287231262 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.276543939 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.276353734 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.276328127 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.275095967 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.274794305 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.283771862 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.275262879 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.278334643 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.279906085 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.277736862 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.273515384 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.279685812 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.279863022 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.278496841 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.279137521 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.278330517 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.278608116 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280900843 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.280282275 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.278821907 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.278534432 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282081813 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.287980541 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.284990185 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.278452964 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.28039949 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.280401621 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.281590472 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.277802245 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.277196693 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.279328575 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.290757203 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.304502763 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.286347759 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.28085801 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.280781981 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.285383091 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.282201759 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.28341851 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.281177956 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.281410224 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.281164314 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.282217128 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.277766418 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282029623 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.283824142 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.283386376 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.286226885 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.285780706 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.282729768 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.281410601 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.281477144 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.280313575 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.280725223 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.280000317 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.2822285 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.282209807 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282993785 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.28165172 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.279536249 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.288504297 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.299953823 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.28184884 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.281557062 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.282868577 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.280443228 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.284614728 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.285004283 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.287787542 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.293036216 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.284363661 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.293310173 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.285640549 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.29241644 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.283180757 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.285510284 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.291129328 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.278892775 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.280140099 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.284522023 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.282042114 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.288016461 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.299112007 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.284017539 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.28656266 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.28248907 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.282124122 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.282835602 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.283715878 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2827444 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.283895382 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.289677058 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.305615288 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.289744157 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.287910574 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.282320532 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.284296708 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.284332254 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.282259962 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.287930474 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.282181573 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.28619975 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.286254811 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.285605419 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.287233618 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.285143809 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.285732049 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.281098082 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.285956666 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.290984107 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.3032064 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289327494 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.286329995 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.290810118 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.284605292 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.290046819 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.300922471 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.284612508 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.283723443 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.287787053 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.285584924 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.287169801 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.288437283 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.287393532 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.286699632 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.290223098 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.286733487 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.287221741 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.290991034 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.288059451 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.28605853 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.29751446 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.31428816 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.288958711 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.294778239 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.284955429 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.291518081 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.292385137 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.28567645 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.286947295 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.29068044 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.302414087 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.297242952 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.285676425 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.286368242 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.288014809 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.288377291 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.287129106 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.28883422 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.287517335 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.288980736 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.288792091 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.287692452 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.291681214 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.288165412 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.289104391 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.289770096 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.291176355 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.299732456 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.288528371 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.2909527 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28631163 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.290855401 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.29157188 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.289574164 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.290648183 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.289809692 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.290224119 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.29148439 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.299010528 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.298559749 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.29375801 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.292298293 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.289599167 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.291002724 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.291253184 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.290389817 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.288504798 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2898278 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.289047559 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.289834069 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.288042373 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.291067271 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.291849985 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.289111079 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.291482846 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.296397322 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.299165218 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.28991999 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.288919615 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.289469523 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.288788986 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.287889339 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.29001531 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.297107371 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293005186 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.30178797 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.301495762 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.29472809 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.293933376 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.294505535 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.303018079 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.288888532 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.290915378 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.293502216 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.295299313 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.292897259 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.294245639 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291224989 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.299293655 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.292649378 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.291558149 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.299693715 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.315403051 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.293736294 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.294167562 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.295626824 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.291532353 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.288463151 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.292907369 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.292253514 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.300395874 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.311546881 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.293194755 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296824779 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.295490451 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.297802842 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.299370138 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291806391 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.293589156 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.289535549 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.293340733 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291389086 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291291213 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.290027755 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.292624075 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.29218671 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.295204931 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.301636177 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.291963231 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.293007333 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.291957785 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.294013045 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.289670027 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.292495031 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.287549277 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.288384883 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.290300069 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293791246 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.291977985 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.294122513 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.288652425 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.292526841 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.2930265 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291809174 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.294981157 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.303261069 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.298889536 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.288056463 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.28989918 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.293430172 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.294566144 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.291579693 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.290871424 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29252316 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.29347623 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.294271639 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.291331522 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.289476529 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.29537904 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.305890352 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.315536249 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.293759439 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.295406699 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293912014 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.294094997 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.291094885 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.293220736 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.29407767 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.298510659 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.301599077 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.292564425 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.300366345 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.311701807 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.294085327 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.296144908 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.297084042 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.302680296 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.297401432 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.29037987 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.296163923 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.299860121 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.310068776 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290932441 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.303462707 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.323209237 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.310593444 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.296355168 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.290122592 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.291191826 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.294333149 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.29501368 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.292782586 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.296501969 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.292208322 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.289510033 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.294211148 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.297262421 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.295510212 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.295484494 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.292717912 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.289771108 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.294358876 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.289518804 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.293084672 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.29429311 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.29341895 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.292321116 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.29495731 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.295712143 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.306080488 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.317541457 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.295993872 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.294729417 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.290434412 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.299552956 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.297526646 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.308506785 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.302020788 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.297534633 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.295788858 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.295576198 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.295871527 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.293874413 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.295646713 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.295452588 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.294142577 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.294173562 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.306407266 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.317073448 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.302310866 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.296966954 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.295866017 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.296452004 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.296857246 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.301301098 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.299419564 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.299855661 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.300033902 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.302815569 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.299406318 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.298204289 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.300620044 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.302706989 seconds)
  done (took 766.075160985 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.295377964 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296044747 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293587823 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.295948159 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296057772 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295013865 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293124002 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.29659047 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.296029178 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.29752901 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.295097793 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292597129 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.292433306 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.300690378 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295039348 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.295289245 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296463314 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292890151 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.295607989 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.298611121 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.298610156 seconds)
  done (took 28.415930704 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.297784342 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.296668336 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.299569649 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.302501997 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296123431 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.298583372 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.293015174 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298001689 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299515949 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293525594 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.302840551 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297176014 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.299131303 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.299834701 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297291234 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293898969 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.298924425 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295595544 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.301395325 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.297804633 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298441522 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.29660388 seconds)
  done (took 29.766332138 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.297653843 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.297479204 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.300437602 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.295534057 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.299109896 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.29915309 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.299999192 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.297764729 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.301854464 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.297848402 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.301505149 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.301324053 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.309154967 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.307003266 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.30500513 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.298846173 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.298645957 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.300610723 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.30178025 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.297565174 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.307557127 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.298288275 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.299601222 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.301586851 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.302969803 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.303788965 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.299865705 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.301786638 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.301227445 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.303374989 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.301921517 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.302854662 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.304066272 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.300526625 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.300897744 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.304245414 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.303429551 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.300194106 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.299534301 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.314419611 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.325301028 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.300016277 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.309341285 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.300686901 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.301484379 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.307470149 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.313390277 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.30139711 seconds)
  done (took 63.731396461 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.303636121 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.30210175 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.298946074 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.303250503 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.301763842 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.303761638 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.302791281 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.304645785 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.297190466 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.30337641 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.303599085 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.29723429 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.299786132 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.304431785 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.303955206 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.298602928 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.298118121 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.302543858 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.301269507 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.30150551 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.30089857 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.301353981 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.3016916 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.302082197 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.303387314 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.301047526 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.300965654 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.302913268 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.303489806 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.301969923 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.302955726 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.309175533 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.308654243 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.301067142 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.304322462 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.30463514 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.305411149 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.302883484 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.305593556 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.304037193 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.309394404 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.306615829 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.304718248 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.305605179 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.303620383 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.304378686 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.303568439 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.301628334 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.305919018 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.306613216 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.304243301 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.304076175 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.307441926 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.300989548 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.306955328 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.307148188 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.300013048 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.305194304 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.305908166 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.305937365 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.297660196 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.302790599 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.304773205 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.309997449 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.304281519 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.302476578 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.303291159 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.306311452 seconds)
  done (took 89.848792391 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305767634 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.304018483 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309443284 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.307055669 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.307827741 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.308066153 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.307783583 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.307693326 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.310166634 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.310254229 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305494704 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.31034811 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.308897887 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.310427768 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.310649483 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.309343379 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.311092315 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.308260391 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.30868188 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.307948142 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.307545366 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.311183961 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.30734083 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.307392749 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.307084361 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.312345168 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.310534547 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.311911009 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.311635348 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.312957739 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.310933727 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.311106133 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.310198216 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.310452095 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.309481523 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.310765339 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307311148 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.308048427 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.30940063 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.311687445 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.312372748 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.31105153 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.310174623 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.308937395 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.307586704 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.31304236 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.3112617 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.311115354 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.314587546 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.311198436 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.311106132 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.312234975 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.311320659 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.310601382 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.31137994 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.309611695 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.310104928 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.31070007 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.311554717 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.3120636 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.311792301 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.311401798 seconds)
  done (took 82.430239087 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.314009051 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.309963446 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.308986496 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.308730598 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.312503284 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.307211484 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.311697062 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.312998821 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.313106749 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.313377197 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313641091 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.31156172 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311137823 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314414252 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.311305715 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312486532 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310069247 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.310108115 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31333443 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.30971547 seconds)
  done (took 27.452383721 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.31057354 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.313476728 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.311657418 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.310910276 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.312747198 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.311076992 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.311641128 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313435779 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310523472 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312209391 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311287973 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.312858668 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304586066 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.310918128 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.312950552 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.309261399 seconds)
  done (took 22.20142036 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.309831953 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.311876959 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.31285241 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.309046231 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.309422193 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.310450771 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.31166446 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.311147225 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.310866303 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.312629215 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.312474376 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.312949916 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.312855203 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.312550331 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.309909491 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.313193555 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.309199972 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.31022451 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.312662183 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.311677741 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.310010481 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.30840058 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.308153663 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.30930106 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.309444697 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.309667345 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.308970453 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.31014592 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.309534942 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.311410823 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.310897606 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.308867996 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.306986186 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.30911671 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.312304003 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.311700283 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.313194298 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.312285071 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.313359691 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.311605406 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.312632241 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.310321225 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.312103317 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.313482089 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.310919439 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.312384822 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.30762855 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.308491896 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.309255227 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.307207743 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.310624895 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.311383664 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.308601346 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.314276845 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.314885336 seconds)
  done (took 73.320253337 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.315047428 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.312390716 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.310324233 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.311314076 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.311055602 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.310190352 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.311646372 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.313017389 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308516054 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.311821305 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.309803909 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.315051525 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309304146 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.31180716 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.309755456 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312068366 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.309716026 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.310569287 seconds)
  done (took 24.825134486 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.310779806 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.313457216 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.312436794 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.312280523 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.311794591 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.311894892 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310290565 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.313903557 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312690027 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.309070632 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309804952 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.312298513 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3142925 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.312642343 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.3091946 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309730853 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.316464223 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.313125942 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.311748508 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.313273278 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.315186712 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316338239 seconds)
  done (took 30.09687686 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.315065565 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.314095033 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.313954206 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.329644241 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.332855676 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.315238712 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.3143219 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.310670052 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.335318489 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.368049483 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.363955159 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.331736256 seconds)
  done (took 17.168744932 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313753574 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31347672 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.310394152 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313134436 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314010787 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311733297 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313788325 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311852248 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314439989 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311690182 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311705977 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31612654 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31548561 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311266874 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313732171 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313644669 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311920774 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315037581 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31461066 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314706959 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313589216 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318452676 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314134459 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31497896 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314995635 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315369567 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317838911 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316088431 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315496732 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318400264 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318916032 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315573675 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317960003 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315627449 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319415142 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317563182 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31496442 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317388323 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315933968 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311968019 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.317423274 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317218895 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318292789 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312195338 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316925685 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314213114 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313801593 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3134639 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315099909 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319018625 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314356669 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313495837 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313948567 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315124577 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316768127 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318590307 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314412752 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317660855 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314711726 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314156523 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314674628 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317854839 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313041167 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313792085 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314035284 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313581782 seconds)
  done (took 88.015571168 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311530449 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.311540646 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311056121 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316751841 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314350745 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313751394 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31107857 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311541053 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315404967 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315438726 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317432009 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316084754 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314180831 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316494822 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311506176 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315712982 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315042968 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315677517 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314107815 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31798699 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316224392 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311894558 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312517705 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314314621 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314629764 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314264126 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314996202 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311864342 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315522141 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313652652 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313615064 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315177625 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314512211 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.312979085 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312814816 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312387942 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314691497 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312802184 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311612748 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314604818 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311960503 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314651335 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315341216 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314969565 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310993053 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311850129 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31138689 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313552438 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314396676 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313993758 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313637551 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311465188 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310768242 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311028204 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311311483 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30847939 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310250789 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31078291 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312000516 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314754653 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311778037 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309917288 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312979804 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311228607 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312968617 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310615339 seconds)
  done (took 87.90617007 seconds)
done (took 1790.610915403 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.478928294 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.42886362 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.313114038 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.314740703 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.310726695 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.337081413 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.322896752 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.311656861 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.312970187 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.311519652 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.312236178 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.499039148 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.368110111 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.31109553 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.310735845 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.40701528 seconds)
  done (took 26.87672666 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.340042216 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.321532475 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.422868625 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.335735484 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.341463703 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.491114172 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.371563576 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.320538019 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.475742374 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.359737998 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.318647267 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.34213435 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.320412983 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.311984041 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.338669675 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.494206422 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.553728493 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.314488512 seconds)
  done (took 28.99696717 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.7337303 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.328491015 seconds)
  done (took 5.286888901 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.337026969 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.3201827 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.317668412 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.317088268 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.31191675 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.305626517 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.313929424 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.309534212 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.314474012 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.435497974 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.321770533 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.326912999 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.333078808 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.316462548 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.312396303 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.352072479 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.475205853 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.312559489 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.311683522 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.32120008 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.315463751 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.41732086 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.353365838 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.317624615 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.432927297 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.312980892 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.322324628 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.323201048 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.457480748 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.313312368 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.316637611 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.317211056 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.319440634 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.208805734 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.758817093 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.320268431 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.337500126 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.330696663 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.313386468 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.473799912 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.321596823 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.327072661 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.311577398 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.734193634 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.441396296 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.430822285 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.327370118 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.321014268 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.315573838 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.379578771 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.321153447 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.323017373 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.362317584 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.078209856 seconds)
  done (took 84.151617046 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.352116439 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.309875836 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.486107782 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.33619163 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.307475167 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.314064787 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.329038556 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.575952776 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.324606538 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.316119071 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.58247513 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.842063417 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.328133631 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.384857724 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.216285156 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.370470921 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.311609808 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.308491525 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.324458267 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.31006748 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.845412829 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31598528 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.31647892 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.471514311 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.344964207 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.79410531 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.312305591 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.314525719 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.310491622 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.309980459 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.805716771 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.334115912 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.372463305 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.31171394 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.563988041 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.660031724 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.62918352 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.312810979 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.352291258 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.309406645 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.321814467 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.789560434 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.649096921 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.311089093 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.330334363 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.789681989 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.311999449 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.322148401 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.319815713 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.555845631 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.310091118 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.313676312 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.316560803 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.317799849 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.312588902 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.330856454 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.387651582 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.790349015 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.310544713 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.315665319 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.329471836 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.31341967 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.313062138 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.310819547 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.315223371 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.652086519 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.521998941 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.311955983 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.647904353 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.79951722 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.324872287 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.871695957 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.331980327 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.340622533 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.379961575 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.313195627 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.311421675 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.785780294 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.327355588 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.313134266 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.641835177 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.321603364 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.584169418 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.326754503 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.341042513 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.858295723 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.330703534 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.313629006 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.312219239 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.312938516 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.313150505 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.313604718 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.578735708 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.348269725 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.312997928 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.313561474 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.331964516 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.319312767 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.315752743 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.323203506 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866579843 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.343257043 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.318307293 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.317932755 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314966146 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.31508537 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.312113951 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.315757399 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.578104448 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.31396216 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.316382816 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.318025738 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.314235411 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.320278284 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.459261385 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.319785718 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.608475894 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.323255887 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314811428 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.319408181 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.315890942 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.330948561 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314964036 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.317806809 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.197271871 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.567644598 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.333234756 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.316608621 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.316215262 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.322350401 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.321841167 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.32197922 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.35040389 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.316381646 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.04198228 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.336835275 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.322975008 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.31687429 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.328049936 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.31541476 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.321127793 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.31619477 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611465491 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.57517339 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.51749762 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.317189573 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.321963123 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.044839395 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.350250821 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.493126853 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.336806809 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.317030208 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.562486683 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.542987044 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.316466363 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.315759079 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.318661097 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.570644095 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.323108743 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.62386429 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.83741991 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.335712995 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.320311555 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.046812664 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.008047045 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.323853497 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.321233251 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.579419809 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.330746707 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.318622847 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.317220575 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.318088082 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.322367388 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.335354439 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.323626579 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.317501642 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.320901786 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.531045542 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.50556744 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.333220078 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.325500953 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.790732672 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.329128927 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.317918793 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.326087301 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.320485608 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.318340829 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.406777515 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.32400555 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.330921909 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.320675583 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.329148638 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.823370285 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.3238114 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.324957245 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.506819546 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.972383537 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.339104152 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.319415404 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.328505363 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.199907155 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.820178097 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.343600253 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.609675932 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.324323868 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.355408098 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.324606801 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.393648663 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.820808332 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.321869587 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.324885111 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.953434651 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.338602098 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.986594709 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.319005889 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.320702481 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.889317539 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.340041729 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.3197582 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.319071155 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.324360226 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.610132273 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.32593332 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.357488009 seconds)
  done (took 493.569226207 seconds)
done (took 640.103276998 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.323568519 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.326655297 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.314932874 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.32806736 seconds)
  done (took 10.531371419 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.332500601 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.331013345 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.329429826 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.330832352 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.332411262 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.328936674 seconds)
  done (took 9.224704486 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.323377051 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.32847362 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.327720729 seconds)
  done (took 8.219640231 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.519991583 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.347665943 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.639273679 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.343633626 seconds)
  done (took 9.08955888 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.333710299 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.332324855 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.332699129 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.33328576 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.335210787 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.338052419 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.331020281 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.333521203 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.335471051 seconds)
  done (took 13.24373286 seconds)
done (took 51.547008683 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.332985482 seconds)
    (2/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.407332485 seconds)
    (3/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.311273625 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.570858798 seconds)
    (5/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.322951626 seconds)
    (6/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.307622443 seconds)
    (7/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.329203268 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.361446403 seconds)
    (9/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.495262006 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.347106516 seconds)
    (11/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.126286325 seconds)
    (12/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.332141823 seconds)
    (13/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.334814796 seconds)
    (14/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.33751758 seconds)
    (15/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.386729511 seconds)
    (16/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.390045895 seconds)
    (17/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.334481617 seconds)
    (18/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.822431429 seconds)
    (19/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.321326569 seconds)
    (20/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.329358723 seconds)
    (21/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.429412328 seconds)
    (22/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.410508303 seconds)
    (23/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.404702441 seconds)
    (24/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.822675321 seconds)
    (25/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.407213373 seconds)
    (26/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.310661674 seconds)
    (27/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.325310014 seconds)
    (28/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.315247881 seconds)
    (29/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.335274918 seconds)
    (30/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.311390054 seconds)
    (31/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.775480107 seconds)
    (32/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.314688163 seconds)
    (33/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.220904161 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 2.344826853 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.430924957 seconds)
    (36/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.891772098 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.132210753 seconds)
    (38/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.324124111 seconds)
    (39/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.37097381 seconds)
    (40/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.389329061 seconds)
    (41/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.426323833 seconds)
    (42/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.324143717 seconds)
    (43/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.306066404 seconds)
    (44/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.30604088 seconds)
    (45/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.311503681 seconds)
    (46/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.307517597 seconds)
    (47/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.298726927 seconds)
    (48/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.445353962 seconds)
    (49/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.641320553 seconds)
    (50/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.365707362 seconds)
    (51/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.4454681 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.416184087 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.570977861 seconds)
    (54/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.331034443 seconds)
    (55/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.360751675 seconds)
    (56/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.337730129 seconds)
    (57/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.308982525 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.364402905 seconds)
    (59/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.317076867 seconds)
    (60/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.295495818 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.679905998 seconds)
    (62/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.139198195 seconds)
    (63/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.386939409 seconds)
    (64/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.288947505 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.619564311 seconds)
    (66/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.62366432 seconds)
    (67/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.303033107 seconds)
    (68/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.282915368 seconds)
    (69/286) benchmarking ("sort", Float64, false)...
    done (took 2.295849823 seconds)
    (70/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.284391441 seconds)
    (71/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.2948053 seconds)
    (72/286) benchmarking ("sort", Float32, true)...
    done (took 2.299105894 seconds)
    (73/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.020686451 seconds)
    (74/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.280766686 seconds)
    (75/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.310125366 seconds)
    (76/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.293877353 seconds)
    (77/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.29455753 seconds)
    (78/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.776334707 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 2.295362851 seconds)
    (80/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.28460966 seconds)
    (81/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.152319845 seconds)
    (82/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.427564076 seconds)
    (83/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.288904649 seconds)
    (84/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.83843369 seconds)
    (85/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.024427922 seconds)
    (86/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.298827933 seconds)
    (87/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.573371843 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.909440548 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.828600587 seconds)
    (90/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.306026688 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.67777743 seconds)
    (92/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.329083136 seconds)
    (93/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.712660432 seconds)
    (94/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.280661831 seconds)
    (95/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.333303249 seconds)
    (96/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.313608202 seconds)
    (97/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.288478001 seconds)
    (98/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.318125078 seconds)
    (99/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.29639342 seconds)
    (100/286) benchmarking ("sort", Int8, false)...
    done (took 2.286894209 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.535872461 seconds)
    (102/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.275807436 seconds)
    (103/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.408835094 seconds)
    (104/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.484506911 seconds)
    (105/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.280430506 seconds)
    (106/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.293362166 seconds)
    (107/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.279260142 seconds)
    (108/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.282235555 seconds)
    (109/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.288560716 seconds)
    (110/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.018814354 seconds)
    (111/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.285533821 seconds)
    (112/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.323137652 seconds)
    (113/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.275322228 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 1.807701082 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.316345238 seconds)
    (116/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.276810791 seconds)
    (117/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.275985309 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.550484213 seconds)
    (119/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.523299697 seconds)
    (120/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.279092676 seconds)
    (121/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.212672235 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.157680851 seconds)
    (123/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.008056201 seconds)
    (124/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.304944875 seconds)
    (125/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.307950763 seconds)
    (126/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.545027207 seconds)
    (127/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.391687208 seconds)
    (128/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.297232082 seconds)
    (129/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.275751016 seconds)
    (130/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.31667165 seconds)
    (131/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.41717544 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.416052096 seconds)
    (133/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.386646225 seconds)
    (134/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.29894707 seconds)
    (135/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.271969282 seconds)
    (136/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.087992354 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.0149738 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.311551098 seconds)
    (139/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.304119225 seconds)
    (140/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.303289279 seconds)
    (141/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.364824522 seconds)
    (142/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.285545824 seconds)
    (143/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.298619229 seconds)
    (144/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.315152671 seconds)
    (145/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.293809661 seconds)
    (146/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.272989562 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.30916373 seconds)
    (148/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.274104028 seconds)
    (149/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.292402315 seconds)
    (150/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.407182733 seconds)
    (151/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.272402444 seconds)
    (152/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.331438049 seconds)
    (153/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.769670934 seconds)
    (154/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.371083048 seconds)
    (155/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.613866924 seconds)
    (156/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.293758068 seconds)
    (157/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.276511137 seconds)
    (158/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.752333845 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.081747636 seconds)
    (160/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.28079787 seconds)
    (161/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.394087032 seconds)
    (162/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.273600184 seconds)
    (163/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.268536078 seconds)
    (164/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.429270418 seconds)
    (165/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.275179188 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.314112302 seconds)
    (167/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.274023601 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.080774127 seconds)
    (169/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.023764192 seconds)
    (170/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.29662043 seconds)
    (171/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.289089229 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.330769931 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.152609915 seconds)
    (174/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.269830911 seconds)
    (175/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.277157717 seconds)
    (176/286) benchmarking ("sort", Bool, true)...
    done (took 2.287423603 seconds)
    (177/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.303279462 seconds)
    (178/286) benchmarking ("sort", BigInt, true)...
    done (took 2.28937369 seconds)
    (179/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.346605102 seconds)
    (180/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.426169729 seconds)
    (181/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.276768252 seconds)
    (182/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.270681193 seconds)
    (183/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.557428035 seconds)
    (184/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.314128439 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.287428517 seconds)
    (186/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.407015628 seconds)
    (187/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.254510944 seconds)
    (188/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.484234281 seconds)
    (189/286) benchmarking ("sort", BigInt, false)...
    done (took 2.286135871 seconds)
    (190/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.600115792 seconds)
    (191/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.282695014 seconds)
    (192/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.388175693 seconds)
    (193/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.397375161 seconds)
    (194/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.28765082 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.146421675 seconds)
    (196/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.30698429 seconds)
    (197/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.277263879 seconds)
    (198/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.029393295 seconds)
    (199/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.410976339 seconds)
    (200/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.275529505 seconds)
    (201/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.325832756 seconds)
    (202/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.187757243 seconds)
    (203/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.300199233 seconds)
    (204/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.275042504 seconds)
    (205/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.271240834 seconds)
    (206/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.980580552 seconds)
    (207/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.322262018 seconds)
    (208/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.275506166 seconds)
    (209/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.324383519 seconds)
    (210/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.278054378 seconds)
    (211/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.295426329 seconds)
    (212/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.311656269 seconds)
    (213/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.29791925 seconds)
    (214/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.272958175 seconds)
    (215/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.278022847 seconds)
    (216/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.303936424 seconds)
    (217/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.276143061 seconds)
    (218/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.981739398 seconds)
    (219/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.296750686 seconds)
    (220/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.349482769 seconds)
    (221/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.097585524 seconds)
    (222/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.30712046 seconds)
    (223/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.301551804 seconds)
    (224/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.310811126 seconds)
    (225/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.387227969 seconds)
    (226/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.31730076 seconds)
    (227/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.493249144 seconds)
    (228/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.859707783 seconds)
    (229/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.299912576 seconds)
    (230/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.428603613 seconds)
    (231/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.288188986 seconds)
    (232/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.287372529 seconds)
    (233/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.308849887 seconds)
    (234/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.278703495 seconds)
    (235/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.292338248 seconds)
    (236/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.302506776 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.682353197 seconds)
    (238/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.304270486 seconds)
    (239/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.275974713 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.14820176 seconds)
    (241/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.599151869 seconds)
    (242/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.844010637 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.662783698 seconds)
    (244/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.282868748 seconds)
    (245/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.309190133 seconds)
    (246/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.193020476 seconds)
    (247/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.33628753 seconds)
    (248/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.313730898 seconds)
    (249/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.20585903 seconds)
    (250/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.019405965 seconds)
    (251/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.3274008 seconds)
    (252/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.36057621 seconds)
    (253/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.126428189 seconds)
    (254/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.277298771 seconds)
    (255/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.303557798 seconds)
    (256/286) benchmarking ("sort", Int8, true)...
    done (took 2.276626058 seconds)
    (257/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.005838497 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.599361329 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.381120558 seconds)
    (260/286) benchmarking ("sort", Float32, false)...
    done (took 2.281530311 seconds)
    (261/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.337480778 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.382972399 seconds)
    (263/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.269087973 seconds)
    (264/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.279536939 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.387945055 seconds)
    (266/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.282786174 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.273662516 seconds)
    (268/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.286262117 seconds)
    (269/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.282617037 seconds)
    (270/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.278864011 seconds)
    (271/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.287970061 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.320296807 seconds)
    (273/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.63353194 seconds)
    (274/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.094700893 seconds)
    (275/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.361913653 seconds)
    (276/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.270506197 seconds)
    (277/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.327051291 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.670148709 seconds)
    (279/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.297138517 seconds)
    (280/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.500036489 seconds)
    (281/286) benchmarking ("sort", Float64, true)...
    done (took 2.296551682 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.300447261 seconds)
    (283/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.275957747 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.887324221 seconds)
    (285/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.270533544 seconds)
    (286/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.324777535 seconds)
  done (took 553.110356211 seconds)
done (took 554.35009045 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.316925222 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.312873695 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.294822888 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.315748836 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.407211092 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.471134517 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.306478501 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.29870564 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.342690418 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.344693967 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.294293503 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.470349066 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.296545958 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.296881809 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.29604412 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.315557922 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.291596106 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.28925692 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.311689453 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.305523845 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.312475886 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.294573669 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.345408924 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.471619244 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.299894601 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.298601361 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.299391723 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.315357317 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.406593662 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.299480473 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.29871653 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.307184569 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.291255726 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.287984012 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.292283692 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.317323818 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.307089302 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.306058708 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.301115627 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.328785825 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.289008002 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.289948661 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.297672613 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.297819152 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.297158837 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.300177604 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.299113309 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.302690858 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.311407571 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.312271156 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.298458712 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.305679041 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.300902158 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.298083274 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.309606924 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.298514148 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.302726183 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.316122792 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.317575623 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.316845298 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.281584952 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.299003321 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.301086925 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.316693926 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.306372472 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.288279104 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.288406078 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.303085669 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.295612586 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.303696488 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.301938752 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.304136593 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.301085103 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.313641453 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.331382733 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.297594405 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.289096959 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.298998717 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.30833956 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.29834604 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.311412612 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.314132545 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.305101844 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.30111361 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.315506589 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.475638992 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.312119875 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.30061345 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.310143724 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.320516 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.308801381 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.31125857 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.303607514 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.29766441 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.313151258 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.3051473 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.304574021 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.304434573 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.30598025 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.314229814 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.300264131 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.319696071 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.297544072 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.298965394 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.302222573 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.315158809 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.292815608 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.294720228 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.324306795 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.349449841 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.304506866 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.289393719 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.300140991 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.319011593 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.310256348 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.306133242 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.29837808 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.289672036 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.295228938 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.315364418 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.304098492 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.301238141 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.319750145 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.30581631 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.300442075 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.302740637 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.297569381 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.31870201 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.424449747 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.313899114 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.334170213 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.303166742 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.306115884 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.337005095 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.321425094 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.335159973 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.306914137 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.322121178 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.31894391 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.300869154 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.314048816 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.315053536 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.307074561 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.309945834 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.300574112 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.335540625 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.318793425 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.318913262 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.326220763 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.427339631 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.302567635 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.29439659 seconds)
done (took 216.958390606 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.363220883 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.298722215 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.385259021 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.301008075 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.400930496 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.399410794 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.297767103 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.300103462 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.298861588 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.68031073 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.299977732 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.299496906 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.301755278 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.29884552 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.385064184 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.301810452 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.299692174 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.643719008 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.302311766 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.372374092 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.298887463 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.300311484 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.302749976 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.682818882 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.301691445 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.296198179 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.372116475 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.303375758 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.649697371 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.295415514 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.299627646 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.648161348 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.391852863 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.319224765 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.312798724 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.310224699 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.401726127 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.315019281 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.385684296 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.384694342 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.391520062 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.341301005 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.297645533 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.30218299 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.303577558 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.304270531 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.301930554 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.331100834 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.304471648 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.300323757 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.645636194 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.309788953 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.302534064 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.302051938 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.30115512 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.334011117 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.302375351 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.306115369 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.392853462 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.305463586 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.367010601 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.684870089 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.682990773 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.30359498 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.301816244 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.303359823 seconds)
  done (took 102.335542379 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.371944672 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.378523263 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.409915303 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.302658091 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.357204593 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.417089805 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.304652265 seconds)
  done (took 10.752017695 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.310262054 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.304662681 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.355595358 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.35443309 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.305664693 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.518818523 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.306698246 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.317689953 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.30590518 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.38516759 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.308210444 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.307581612 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.31342185 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.30173979 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.355354432 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.318072004 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.420940754 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.309122511 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.30676972 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.457667528 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.305599824 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.314637264 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.382671848 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.318993977 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.310092719 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.31142325 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.210606475 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.308560004 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.305506784 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.308407136 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.305998444 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.409146272 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.308115972 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.305583291 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.306014146 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.468465754 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.307187443 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.305143239 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.307986578 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.308991355 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.308363294 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.308926016 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.309631492 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.307506231 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.308641047 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.331552237 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.307725147 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.306794322 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.307414144 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.305539824 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.381518973 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.308830653 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.304698909 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.306691874 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.383442436 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.312473269 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.309691748 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.306325294 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.309286451 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.306800326 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.460755998 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.356499763 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.309304263 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.359186059 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.309619408 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.310234376 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.31098186 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.310364302 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.402397366 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.309440986 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.357465758 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.307457377 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.53418265 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.334028116 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.308363972 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.311444591 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.312232182 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.306781558 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.308725804 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.317190073 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.307302275 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.311585693 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.316864149 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.307991797 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.308278251 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.497695942 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.466938042 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.30847079 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.323397663 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.318441638 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.308065588 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.385515433 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.31133504 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.30760469 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.363287072 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.425733169 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.389818842 seconds)
  done (took 135.613765312 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.311049815 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.318637225 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.311137968 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.329173542 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.308259001 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.311299344 seconds)
  done (took 9.105266809 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.313605381 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.311983125 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.311782189 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.311817959 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.311078367 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.313373883 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.311956182 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.314479457 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.315566283 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.312813352 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.314134334 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.314195707 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.313669325 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.311761655 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.311492411 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.31200665 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.31311428 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.309452103 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.313592701 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.312334373 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.310637919 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.314162061 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.312232619 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.315010558 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.317675274 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.310083208 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.321342383 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.31408348 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.313301098 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.318257594 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.33066765 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.314895471 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.315848151 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.318902462 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.317979305 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.314892237 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316363216 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.315725119 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.313069684 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.314800642 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.312732444 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.311498011 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.31541141 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.317525596 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.311591528 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.318374271 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.317946207 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.318916704 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.314251602 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.316741581 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.316678238 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.314652749 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.316121551 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.313214483 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.313218257 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.333184294 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.3201204 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.315201087 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.315684534 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.316680168 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.317158548 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.316834969 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.314023659 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.315375135 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.313718681 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.317288136 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.318423664 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.314882148 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.313778047 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.315751481 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.319162722 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.314733713 seconds)
  done (took 96.914325637 seconds)
done (took 355.928490763 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.71868988 seconds)
  done (took 3.940028879 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.318584884 seconds)
  done (took 3.542764229 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.457394246 seconds)
  done (took 21.682745626 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.336885166 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.306415693 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.319664282 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.310543388 seconds)
  done (took 10.496397864 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.531093943 seconds)
  done (took 3.75515726 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.31029358 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.30414618 seconds)
  done (took 5.839465684 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.569698171 seconds)
  done (took 3.793369425 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.593176819 seconds)
  done (took 3.817018546 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.336894187 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.323667555 seconds)
  done (took 5.894739296 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.295813482 seconds)
  done (took 3.518717158 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.741452273 seconds)
  done (took 16.965794918 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.306280872 seconds)
  done (took 3.533673932 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.372133674 seconds)
  done (took 3.595682667 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.726123854 seconds)
  done (took 5.951435803 seconds)
done (took 97.549982618 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.306873004 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.307226508 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.306729537 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.306231745 seconds)
  done (took 10.450019122 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.34713597 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.3476205 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.349587854 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.359019007 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.351653423 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.348356119 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.34349814 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.342621238 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.36055545 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.356662482 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.353476478 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.354877118 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.351489343 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.342824045 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.354475981 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.351479842 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.359729489 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.349548963 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.341269559 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.352762371 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.321258337 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.362039277 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.355358364 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.319933238 seconds)
  done (took 33.602436172 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.809896576 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.387399014 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.470099237 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.367607159 seconds)
  done (took 7.260524532 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.367453758 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.372872986 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.385947068 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.418953674 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.458102464 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.379172091 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.344680489 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.337410062 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.327108687 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.371897215 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.446498877 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.387375448 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.452995781 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.31658112 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.501713227 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.317831037 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.317726426 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.370397904 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.420500111 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.433482297 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.317634403 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.368326913 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.372529676 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.387659705 seconds)
  done (took 34.401021416 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.317446552 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.335912862 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.317302672 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.317389947 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.325664392 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.317019517 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.31785969 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.317285757 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.316472539 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.324219942 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.319396845 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.329711868 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.318520466 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.316625289 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.323802836 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.31912087 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.322985981 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.316422593 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.317922776 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.325363333 seconds)
  done (took 27.642730142 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.311874699 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.310658639 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.663238905 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.567116891 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.31296489 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.309591343 seconds)
  done (took 13.702467601 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.383055502 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.517605042 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.31847234 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.661152347 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.743285218 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.320301858 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.319359506 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.556891443 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.856384078 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.839316503 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.373428206 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.38422765 seconds)
  done (took 19.502760933 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.312339811 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.318189108 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.329530628 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.33381118 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.37060813 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.326591957 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.327219305 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.312634869 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.376022144 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.378579831 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.324868984 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.371996897 seconds)
  done (took 21.312451746 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401125127 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313441782 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314738386 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334397869 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317389757 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.526535175 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.323023352 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.024766565 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.335941454 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593080016 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314808354 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409033831 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.572773777 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317855631 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.332987299 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.303750411 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548073751 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801086451 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322775233 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329982653 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344751555 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321043093 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.32736216 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.531171165 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.537166192 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31895782 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.614039119 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318748993 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594899035 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336883658 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329785698 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318637258 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.59418177 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972469265 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43314365 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525992011 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344363074 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.320482933 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.313029523 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.32338407 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325692988 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319252192 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330800461 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319992861 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318519903 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319477997 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036517462 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.340381604 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.320103005 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.319567067 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575089436 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41693296 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.325698398 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320055889 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387438856 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322343791 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.323964269 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415329968 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899378679 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329256881 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324814466 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.325689887 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.326135958 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327061878 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940104917 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.32671967 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.327010043 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.326767255 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325344126 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.324091055 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343193344 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326260611 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.344140004 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324552023 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007984107 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.324283879 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329303602 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871158888 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32446545 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.339260427 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.549940745 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322130232 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322066155 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.320429056 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321174507 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025124366 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335709885 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.323034662 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350982472 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.053024252 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.5474956 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341471574 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347922078 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.54771899 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.31034665 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324552616 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.336402491 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326064399 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343927822 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.063994289 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339529281 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.326120579 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580618856 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.536076352 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33244293 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.317355771 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806731386 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343154737 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.345938604 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.326937679 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.536299666 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.893962274 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.344133893 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338127029 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349742571 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.325728712 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066064725 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32785353 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.333572934 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325448098 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590354697 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.106040613 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327284307 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394791794 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331409501 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.325848879 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334538275 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328840463 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.324839425 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.525251834 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349707819 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.337267067 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.329185059 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326488962 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.334302008 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337675706 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.329355445 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.551207399 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327643555 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604858293 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32659152 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326648843 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325679632 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.548156908 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.323717261 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.34719728 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587007394 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332495441 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333681728 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.3404466 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346453417 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428107254 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349215118 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.325963227 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.589350934 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.332564269 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.332396814 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335284435 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.331448243 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336716985 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.335003263 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347874268 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89815024 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308015543 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.333936448 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.218649053 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.342323185 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398685834 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.33404479 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.537640497 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.330234493 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33794759 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.348310403 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.336216632 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55480562 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.33897838 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.335817356 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41565928 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.807168459 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.9153781 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.34433934 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.329709037 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.328145891 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.327193095 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329946064 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330506643 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329390403 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537181632 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349929548 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329632057 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.917371881 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336577117 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.337623088 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.342590075 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343276768 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.335926294 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33039354 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.333382169 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335911715 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349144333 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.347055743 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475302927 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.346106085 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.330632575 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.848406077 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.337808867 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.333220863 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.331721551 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367457238 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340082974 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142003622 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589529548 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336373376 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582111451 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.344303734 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.354218189 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.332071829 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331111216 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333803963 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.34898916 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359851523 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.346041484 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.34157687 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3398151 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8976548 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053149069 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86446001 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349942144 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.331419689 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.336137233 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.072172255 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3490013 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333317449 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.56362896 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.080030902 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348560838 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817392651 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.34778898 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070920211 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589519137 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569526603 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332740524 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.352041297 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593905941 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.552162539 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369180143 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.333593034 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340619338 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.319576014 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888470398 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360752887 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416758096 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079338059 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350180296 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.336425501 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.403723816 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.349817701 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.738046316 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355124879 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334543387 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.334707302 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343448909 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1445372 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340398763 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334711924 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955044146 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350323886 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.821443583 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351609982 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.543739676 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.349679903 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.340342626 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.333717517 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.346372936 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.591791678 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586892497 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339817761 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346775695 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86706611 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.196224644 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.342691475 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335266458 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078200773 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338087102 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620587171 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.349319016 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.348845773 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344042264 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.336724094 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336900391 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.334695241 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.345364206 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314166593 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820142046 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.34949658 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339933453 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35124174 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188343967 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.591631953 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.349152167 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.910296801 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.569378534 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358969006 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363698998 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.343693605 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341995858 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.332356251 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34012762 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.575295023 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3635266 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.564465129 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.348008957 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.331052864 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420529595 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.566470186 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.338843901 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346087965 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577317807 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.342606088 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.352689735 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054895656 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369597873 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.344686557 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341698656 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354816714 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360052417 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410442146 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550046816 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.356511511 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.351073658 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.738048304 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368305965 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345835047 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.353862598 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435259041 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338709638 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.353282215 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.113676505 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917054684 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07099634 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.924623066 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601937142 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347948923 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343186103 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341547461 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489374976 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340928689 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615374008 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34008828 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.359316011 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363711474 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345547541 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342950662 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554876848 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617671351 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341354454 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34247134 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347780507 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.341898166 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.354103559 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.553882573 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830550534 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899631466 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34679721 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352689479 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.085531354 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632262103 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341830082 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343388967 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343034941 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.357087481 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.371303731 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.353657215 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356161616 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489415129 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593589352 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007327241 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.368910761 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.370597967 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.116484792 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342458548 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.614675731 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339293997 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.555845119 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923485937 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.034363499 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609522664 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412597688 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.554573619 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.343717199 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490088086 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.352160647 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.345625141 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344736303 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190096243 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.341593987 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.356494009 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931336158 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607103329 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.349027849 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.352678345 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368663893 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.356019232 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.568410928 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0583597 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57100731 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35449246 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.353125043 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.346086993 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929797669 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605699302 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350404913 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.347767227 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58271964 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.587958717 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372615197 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.800964517 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.343665874 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898793232 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.317792077 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368561953 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349753179 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.039286316 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929390017 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.346040407 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837831211 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349354254 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355391016 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620817915 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.351195374 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.350571348 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624633544 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.34945685 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345865936 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.56165657 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.927867331 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.099620022 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.358985861 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362594036 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.35130034 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349260128 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373067726 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352724981 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355332626 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.765650455 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371011827 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349200705 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358582525 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.345303246 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359325669 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.352469333 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350733808 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.351355407 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.354844381 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.342405607 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.353989611 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448448746 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909341862 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367218562 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.02328153 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.679658927 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.606094101 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362898554 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.341578166 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.354168435 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350325449 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351920173 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347245116 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347203406 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900238473 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.363176099 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.365063557 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353238439 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.568237937 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562595106 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.359657467 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560881666 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356472014 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372494932 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.337728283 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350392081 seconds)
  done (took 952.63136695 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.366439334 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.357993893 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.358186548 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.403943782 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.3690705 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.401204776 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.362186917 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.373390202 seconds)
  done (took 20.256331091 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.363928898 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.359385041 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.355952585 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.362450328 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.351638168 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.814113972 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.371588314 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.359799807 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.360117876 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.351621189 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.356539292 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.020533445 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.374394473 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.353791597 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.341883448 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.35964945 seconds)
  done (took 32.123911824 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.256408364 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.472233902 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.139250332 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.372800803 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.385858762 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.355062418 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.551209788 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.378670205 seconds)
  done (took 26.17849116 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.363522148 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.360562787 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.362757916 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.361382334 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.362569905 seconds)
  done (took 8.076221687 seconds)
done (took 1208.365351038 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.356955643 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.359799883 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.356211219 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.359813407 seconds)
  done (took 6.69765221 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.339736764 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.346212385 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.348243841 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.357717734 seconds)
  done (took 9.657030225 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.03895002 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.967270356 seconds)
  done (took 5.272054043 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.353565027 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.117783688 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.09010141 seconds)
  done (took 7.826500299 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.648215083 seconds)
  done (took 2.912809789 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.771080517 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.716425821 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.550106464 seconds)
  done (took 6.303386294 seconds)
done (took 39.935495625 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.353996222 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.632329988 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.511184146 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.361426686 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.561180873 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.510847512 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.084192436 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.354773969 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.355358061 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.351182578 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.358077708 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.528888057 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.138743582 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.605523169 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.136880242 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.633035013 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.516732242 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.358969258 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.350280726 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.365938545 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.085457653 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.356063452 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.351280254 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.361704198 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.515079669 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.499566003 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.355248687 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.602675704 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.356495896 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.360142766 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.54221237 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.352558594 seconds)
  done (took 82.073785019 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.360711965 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.351753693 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.359568427 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.352281299 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.361244763 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.357432416 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.354562827 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.353167873 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.352748466 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.352357442 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.353151966 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.361603513 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.354837284 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.358664917 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.354226107 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.359602434 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.352208821 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.380781563 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.361754725 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.352467206 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.352715559 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.353325328 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.369227114 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.366416043 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.364928262 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.359109036 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.358025752 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.353509751 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.353336615 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.372123803 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.36098566 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.351928246 seconds)
  done (took 76.729999961 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.368182807 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.353318153 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.367815457 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.367149952 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.353386777 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.355591134 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.354618426 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.361335559 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.364974639 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.360440714 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.359878008 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.354215189 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.370972872 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.353944252 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.356916831 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.364537644 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.361445579 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.35525434 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.369960878 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.369468816 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.3536701 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.356067331 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.355519865 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.354657397 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.36462572 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.357471648 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.355732794 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.369524107 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.358962146 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.356569122 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.374440855 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.356468444 seconds)
  done (took 76.807085599 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.554700087 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.366808277 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.365769032 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.296678782 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.365570152 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.365664933 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.357758775 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.55589836 seconds)
  done (took 14.499382272 seconds)
done (took 251.375662255 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.357460282 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.383298645 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.560259548 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.384079997 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.367232105 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.386092615 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.385194968 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.57762606 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.322125423 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.594617394 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.38971313 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.382119353 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.357516802 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.397408245 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.633956158 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.506159096 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.222707124 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.324372533 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.697304379 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.373336317 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.626671901 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.367953861 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.624258602 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.314872686 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.373536749 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.380976408 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.358413808 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.210748756 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.398821323 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.703213584 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.365473305 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.347540754 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.444611453 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.461961136 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.572798992 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.519952488 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.358778975 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.442746471 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.585535227 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.363742347 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.3730665 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.119515966 seconds)
  done (took 82.190468042 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.367755665 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.493443621 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.369031239 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.368416695 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.368538471 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.491021731 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.466133056 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.368143577 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.368878105 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.366249503 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.367953096 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.367713681 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.368839825 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.368560249 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.368667753 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.369504052 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.367091698 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.37018282 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.372222078 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.416060289 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.496644178 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.390632594 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.366849741 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.370066575 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.473899739 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.51055822 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.368331782 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.36343222 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.413284825 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.369998146 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.37342743 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.417922638 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.368838757 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.370200956 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.492104552 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.471656577 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.372655838 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.372662703 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.488109316 seconds)
  done (took 55.892658566 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.371161535 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.616948862 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.788228159 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.376761846 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.370125808 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.375601621 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.444868654 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.379189858 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.374597654 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.373577698 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.539596749 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.380608677 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.405600937 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.81136591 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.371721397 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.371553436 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.371266157 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.371471975 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.624493923 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.381477893 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.463238082 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.374479854 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.449014392 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.387307834 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.392208582 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.374067719 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.376759708 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.956435174 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.373734896 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.538640619 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.128943799 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.446965595 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.895234794 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.799260585 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.131145701 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.376273886 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.373796855 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.545088798 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.375093001 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.373942135 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.449908608 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.373134414 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.799760095 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.047678025 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.388296652 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.372644922 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.980517355 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.543682538 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.608084725 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.38435987 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.824569972 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.376611356 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.375486336 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.375744849 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.609186285 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.383829231 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.373138658 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.97998881 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.392527982 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.448172581 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.382774511 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.376340226 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.643793992 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.374538605 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.624129949 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.377394013 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.382099531 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.39181379 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.79979068 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.378626527 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.071335598 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.390303622 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.37523842 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.540332563 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.620700669 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.007107028 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.37896412 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.645885775 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.909663608 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.446857653 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.381410016 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.946612113 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.451949783 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.380723378 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.376491778 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.379280774 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.37597295 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.483119778 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.448563593 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.005714775 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.065522847 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.009965517 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.468952691 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.390688125 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.377106166 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.980975344 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.390781162 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.374987695 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.799822521 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.07533252 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.392193834 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.38201387 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.075529359 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.393521438 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.454056522 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.387639431 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.81658093 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.379323491 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.423974798 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.376785093 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.383830397 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.399678382 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.451896184 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.389092993 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.378632342 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.052112868 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.57000135 seconds)
  done (took 181.586489021 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.387792378 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.371098788 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.38291145 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.371031757 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.373812971 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.381959252 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.371421483 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.374062182 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.378700289 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.369795264 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.374561191 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.373806646 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.373252811 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.375537364 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.384319898 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.381868818 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.371532518 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.373576806 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.376279928 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.389303482 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.372383497 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.39434221 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.374805586 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.373017703 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.374362644 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.376666615 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.376649256 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.376949489 seconds)
  done (took 63.841871786 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.382120904 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.928851088 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.383495116 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.507577274 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.404692271 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.37891605 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.504500362 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.437214193 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.383110341 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.377726365 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.378089634 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.672230439 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.382493667 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.883155451 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.565983885 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.508693239 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.877866946 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.396619179 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.379932899 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.379487391 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.509159637 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.39452487 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.671623646 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.92413273 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.382406002 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.925280435 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.372412419 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.381599838 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.381923144 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.926307462 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.380920839 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.675095818 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.456262816 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.442406723 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.926027207 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.883734589 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.894347844 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.523458843 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.381338055 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.379421932 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.381287005 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.372759846 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.929743706 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.382131772 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.384637682 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.928784409 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.399533034 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.384517395 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.38718201 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.379950789 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.438935968 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.440644086 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.680015169 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.93879585 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.4583728 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.39683048 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.509181082 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.763684425 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.388025721 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.884789798 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.375683723 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.934174667 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.398539262 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.377376507 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.381662582 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.391201658 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.528061 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.51365765 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.88628448 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.401992154 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.878862005 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.541752182 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.381840526 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.383406161 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.384742742 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.937518323 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.882258699 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.542026737 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.51323949 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.569912556 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.408409559 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.382712899 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.375806359 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.456964977 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.386387697 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.934951777 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.895111609 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.400929681 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.388022784 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.385518457 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.385493341 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.554235606 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.938313066 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.459175079 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.88063928 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.695760626 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.679224786 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.386021627 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.442387689 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.399045658 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.682781123 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.387372772 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.439031859 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.830577828 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.685785339 seconds)
  done (took 164.108433303 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.623110455 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.395540084 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.49708022 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.52892016 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.975391721 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.966106067 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.379671482 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.506893388 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.491960324 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.637986962 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.397753537 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.478180352 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.602599418 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.462750389 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.121335386 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.451744581 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.481312423 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.543969745 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.526573616 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.383699354 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.006442125 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.689803499 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.565710855 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.399396147 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.493817832 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.141027302 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.954111237 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.931919304 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.560958335 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.380904778 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.914686631 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.39360074 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.309823606 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.039845778 seconds)
  done (took 64.528088056 seconds)
done (took 613.419171781 seconds)
SAVING RESULT...
DONE!
