cset: moving following pidspec: 7862
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.355953597 seconds)
loading group "string"... done (took 0.558138628 seconds)
loading group "linalg"... done (took 7.152733835 seconds)
loading group "parallel"... done (took 0.16507433 seconds)
loading group "find"... done (took 1.118806547 seconds)
loading group "tuple"... done (took 1.855055842 seconds)
loading group "dates"... done (took 1.215464695 seconds)
loading group "micro"... done (took 0.21764767 seconds)
loading group "io"... done (took 0.916058201 seconds)
loading group "scalar"... done (took 37.650259714 seconds)
loading group "sparse"... done (took 11.790925088 seconds)
loading group "broadcast"... done (took 0.948246925 seconds)
loading group "union"... done (took 12.648376154 seconds)
loading group "simd"... done (took 4.148562087 seconds)
loading group "random"... done (took 8.663331455 seconds)
loading group "problem"... done (took 1.860222192 seconds)
loading group "array"... done (took 19.833760725 seconds)
loading group "misc"... done (took 1.629616266 seconds)
loading group "sort"... done (took 3.074571089 seconds)
loading group "collection"... done (took 16.990507832 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.488573412 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123679947 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114845176 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119729327 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146569284 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116794267 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12334802 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08406743 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.79781504 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149230306 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.120256078 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41749972 seconds)
done (took 5.100759553 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173906504 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083087844 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081397192 seconds)
  done (took 1.292808943 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065474808 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121592443 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067248871 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067034239 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067556522 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065914455 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067922362 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067981797 seconds)
  done (took 1.653743216 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073582394 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069140448 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068965694 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070069931 seconds)
  done (took 1.41107995 seconds)
done (took 5.733651728 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.772860434 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202514908 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183676487 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.400604356 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129361128 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.155564785 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.644228762 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.309448561 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.184359778 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08220058 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105094903 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.319538035 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107940923 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.630778378 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074293177 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091226786 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13689569 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.417219166 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067710595 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082149286 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088577546 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127873967 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086180498 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074866174 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145256913 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068113406 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.135205319 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080598103 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067323963 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.209612729 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172315145 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.667237288 seconds)
  done (took 10.187750611 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097228448 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098996075 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068865805 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137562166 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097415236 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069706733 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071318556 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067690236 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08802475 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12853448 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089708046 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102458832 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065547232 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069240215 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085192929 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204144692 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07999552 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081519259 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070594038 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076015271 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120370586 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078927571 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078798593 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078234684 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12880494 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180276063 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096587449 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09780717 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067404307 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082806673 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115377923 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126659493 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066195149 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066802414 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124699023 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094697892 seconds)
  done (took 4.623307043 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.305754604 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140783235 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090572836 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133425727 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065174603 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107852333 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066063496 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080903281 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.201219377 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.373742129 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.582621409 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114223721 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104740607 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067982121 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110666675 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067860934 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067625666 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.354769377 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108798359 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104574935 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080807077 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069981937 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06871375 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340938297 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067782282 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063815516 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067990824 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057999905 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123481082 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068106149 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.932925479 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126426444 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067124047 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101794398 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16265227 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065179236 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.218100274 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145354972 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068806054 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064619151 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.151922155 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069900322 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.0667394 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084352989 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104777675 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112849827 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066067806 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067656423 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162181413 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06508146 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080011671 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.026750296 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154360831 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079340423 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066595462 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.249579452 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086130936 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06947434 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065161176 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.210502563 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13875555 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06826096 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067246396 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068211398 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.06973474 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.354281161 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066316746 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064257685 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067572248 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077220714 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.997736423 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069740116 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0695392 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07591922 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07268204 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085577755 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067902862 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078706347 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068200779 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067976535 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069019289 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088076217 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.354716937 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068927299 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07019375 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066572057 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088432138 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098989565 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067569693 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066001768 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10064578 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.166940348 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069374373 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067462298 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106822432 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067296589 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085562577 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.06986789 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113924363 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066390629 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.118929365 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071533511 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098177947 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07057801 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099982736 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082823563 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06884904 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.397266608 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065539296 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064691388 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068839108 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065317959 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068021318 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066583433 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079869655 seconds)
  done (took 21.385305962 seconds)
done (took 38.629368979 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.238137651 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080513492 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079255154 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076379526 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076108259 seconds)
  done (took 1.775143712 seconds)
done (took 2.979682062 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120318736 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099538371 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064358403 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096151711 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064491019 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100757131 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10048304 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081121574 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100022916 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064470253 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096574619 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064413062 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064250221 seconds)
  done (took 2.341014033 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082806236 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083469632 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072100757 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08379445 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066069546 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084451623 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082780512 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091720329 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08306082 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073617183 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065639679 seconds)
  done (took 2.068142005 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081818252 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08360462 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071334332 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084152977 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068432093 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083576978 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083409134 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088422949 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083500332 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07613096 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065685796 seconds)
  done (took 2.066774615 seconds)
done (took 7.66805128 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078353588 seconds)
  done (took 1.26686142 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.600848748 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.145303915 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082251403 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113609347 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184584193 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121830918 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.2856669 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087496159 seconds)
  done (took 8.991052316 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102993179 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073849199 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070651507 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073557835 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07202892 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073033382 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071439889 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070700651 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072013586 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073719013 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074375618 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071348447 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073870819 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074472441 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070656726 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070858651 seconds)
  done (took 2.449508382 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09300574 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09396014 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07648143 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077469485 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074967434 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074820397 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077232301 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075986264 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072422478 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073543942 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07715465 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07534218 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073263066 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066318711 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074984534 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077256703 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07370051 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076780515 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077773471 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077215119 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077383545 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066952663 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074415758 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07637117 seconds)
  done (took 3.131187505 seconds)
done (took 17.034003811 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116493503 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072220066 seconds)
  done (took 1.385330674 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082381615 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084394898 seconds)
  done (took 1.369711701 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08567709 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066679715 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093733443 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080479676 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067116587 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066467874 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.09103573 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066691383 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066171611 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066690543 seconds)
  done (took 1.953989396 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069548916 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079734615 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072446882 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082173584 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075149997 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064880832 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073391157 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06847948 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079460051 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063083972 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072686086 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083328169 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072560365 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085326917 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073473289 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069893611 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072263154 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068550538 seconds)
  done (took 2.532954807 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066643666 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067716255 seconds)
  done (took 1.344443633 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068133979 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065038004 seconds)
    (3/7) benchmarking "month"...
    done (took 0.0685228 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067933952 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063980803 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063193382 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064162822 seconds)
  done (took 1.666488875 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.392185044 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11243279 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.307377807 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07254637 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084041737 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250382686 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065630546 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070748397 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070961359 seconds)
  done (took 2.679486184 seconds)
done (took 14.143000268 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079027343 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086545245 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09610688 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.365253021 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092689275 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066318035 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114561406 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193821393 seconds)
done (took 2.313711926 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211985406 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.619639563 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.389869907 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.197314319 seconds)
  done (took 2.418071985 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330574544 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088310663 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060539481 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069823567 seconds)
  done (took 1.767720531 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066466987 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069277614 seconds)
  done (took 1.354887108 seconds)
done (took 6.970749665 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066547184 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087552769 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067897553 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065624397 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068765826 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065461542 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065604519 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067899829 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068117872 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065758781 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.070935905 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068094363 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067710412 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065464669 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065920885 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067895976 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065494916 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065652107 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065532184 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068530039 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065936418 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067724471 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065373595 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06557768 seconds)
  done (took 2.879164136 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084607101 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067810149 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074017887 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073857004 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072640437 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.077204512 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073597653 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068575156 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07485993 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070136445 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072242168 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072227214 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070340341 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072587773 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070542236 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072711309 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074016549 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068892578 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070304016 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072669168 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073611866 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06860317 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072480152 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073259056 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072224133 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074126253 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070077941 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068749359 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073705681 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072520992 seconds)
  done (took 3.400469445 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070613933 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064054231 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064399369 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071494547 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064529359 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065071563 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063702267 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064593102 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065137384 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06386444 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065457204 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06387535 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063980523 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064486349 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064548859 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06721982 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079075543 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064328548 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063983992 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064697125 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067351081 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063859448 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063945917 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064032531 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064088085 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064268832 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065782278 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065299321 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066905208 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.180064647 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068135377 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068978841 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066090562 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07227174 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069248105 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065119998 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069281537 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06572773 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065828651 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06503297 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065325319 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064964135 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.0651703 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072079203 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065843561 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067382486 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065312221 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066512678 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065574566 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068136622 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064966863 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.0652597 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067762709 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066813758 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069125207 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064417889 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065940067 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064615777 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066126105 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064889089 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065159875 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064510822 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06644999 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063783548 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077749873 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070544361 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063154912 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065439591 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064523552 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065870348 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065463383 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076508728 seconds)
  done (took 6.125728193 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091059353 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088432566 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065395498 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065775717 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063853759 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065785511 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070218757 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066798788 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06762613 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072245721 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066366054 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067506166 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067268471 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079334643 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06668647 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067960588 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072262556 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064443988 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066095864 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070014279 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066335249 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069804681 seconds)
  done (took 2.779089353 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155932476 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071255955 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10610151 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07368209 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068377375 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073872794 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070091572 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070279823 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070567067 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068826441 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070016879 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071079076 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069630175 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070993322 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0704887 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070998483 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072058723 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07100966 seconds)
  done (took 2.631705798 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078046897 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065847634 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086663648 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066469445 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06653086 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068543043 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07157092 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075263343 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.070244882 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068341167 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076836525 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070507036 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070688673 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068251326 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070293143 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067919339 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070149893 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068127315 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077125944 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072905477 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073430973 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076473819 seconds)
  done (took 2.817483847 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079864446 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068977131 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082459148 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069630868 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063086579 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066650334 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072354857 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06787496 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072660779 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06948952 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06834049 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066514183 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072337608 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068116967 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072031779 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067918978 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069252921 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067996579 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068826312 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063409113 seconds)
  done (took 2.636694184 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088198204 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068438837 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068238823 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07722434 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068494292 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067758828 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076379487 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06818089 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067513678 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088574514 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06942542 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069107713 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077828043 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07438191 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06888862 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077833246 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077485171 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077773941 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069557276 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069449523 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090040833 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0700636 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077494007 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069489269 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069464184 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069345053 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069127362 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074530108 seconds)
  done (took 3.301161769 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067071988 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066269129 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063936467 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064783281 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063878269 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065173034 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065106305 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065275649 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068223625 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064918503 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067760939 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067486603 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067568485 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06769467 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06794581 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067879072 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067981711 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065507129 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065244539 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065514527 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067699458 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067992633 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067459261 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065615435 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065210583 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067651537 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065486963 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065873359 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067625857 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065297195 seconds)
  done (took 3.235512949 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076414086 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073162663 seconds)
  done (took 1.394509386 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063969597 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080492394 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063741638 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070223763 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071482747 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068581115 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074696546 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071407749 seconds)
  done (took 1.805111623 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082122206 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078091193 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068354787 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080984026 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076551353 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083278324 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132226237 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067599078 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07314035 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064265021 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080030987 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065366139 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072803859 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066631523 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072076809 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072416678 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063986708 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072877695 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069523792 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06626177 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069852399 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077269624 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070941983 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064256765 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069416981 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090974615 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080065049 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068232137 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071292295 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075724887 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074150877 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06217328 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068281652 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068914586 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066672894 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078508946 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083608671 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070650341 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077382814 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069465522 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078269145 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061684966 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071340002 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074111317 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076578518 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066949298 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067015307 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06180286 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064290047 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069316539 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063463234 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067894324 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061486699 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076179984 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069654738 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07644949 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06512851 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067593403 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069552937 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06938872 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073450484 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068680397 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068887395 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06659212 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076306253 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070934318 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075582275 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062158248 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060942926 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064522076 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076327872 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088980248 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072908804 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067309601 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067434367 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064366189 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069869139 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068202558 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072740778 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072578576 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067110075 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072312512 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073667237 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066679001 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068956906 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07501412 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065059683 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069786785 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064277629 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083020038 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06538697 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064307088 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06435791 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076707799 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069287141 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066081462 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064640602 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073517683 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060321206 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066688882 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066059076 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066267526 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076125689 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070313006 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070603637 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074523564 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072783815 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065516873 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068066556 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06231636 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066813944 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066347235 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074924033 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061535744 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070169141 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068476082 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068107429 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076717571 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065558157 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067742903 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07488824 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07284171 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065934055 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064350267 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070422969 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067498856 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070571471 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07557711 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066060412 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062621598 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062525794 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070749899 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067687379 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071037216 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071986349 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070104247 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062068826 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065542633 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072499364 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076427565 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067733989 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067462098 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071522083 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067023061 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064862495 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071916042 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067877475 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065017659 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071303609 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066568637 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060764662 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068563894 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068247893 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064673279 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069095249 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069137784 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067633076 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066481498 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064278071 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072805094 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065597671 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064425032 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065317857 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064124281 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.074817241 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066663428 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059863531 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062690896 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.073518032 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06334611 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065230373 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.063982659 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067808547 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065557558 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062481242 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064741015 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066193365 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074359736 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068356635 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066219585 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069175411 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.075149374 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064449195 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066744964 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064030921 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065112908 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065242385 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.072795897 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069474229 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068436905 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066950844 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061608879 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069538499 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071624136 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064213029 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062157751 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063586253 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067650633 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070411468 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068772309 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065178528 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062856906 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064988813 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066964714 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066939486 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064191009 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063731122 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070145004 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063193556 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070637767 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065513952 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.073658903 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.067147497 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059833376 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067421735 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063143616 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070494304 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060220142 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062659097 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064651057 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065907705 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063452905 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067135279 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059102443 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071649052 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071689043 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064929731 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063856918 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065078419 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070832931 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066725757 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068436734 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068228083 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070593513 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074714286 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063895124 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068375155 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.305193041 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.069554137 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063178576 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074640181 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067842798 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069056886 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068579198 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067568641 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07280816 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078081471 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075421846 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063530746 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071588037 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.0674584 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06743484 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063901477 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073244907 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07120113 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069816278 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075579043 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069773795 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069037531 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072261336 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067959656 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069170521 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069098114 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071111371 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068918542 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069955209 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067945428 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071698416 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067722969 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066469693 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070302064 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06821685 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068170635 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073346317 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067742736 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068164471 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070474948 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068537987 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068660174 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068738482 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067388239 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070858399 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068854141 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068040912 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070319546 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063883963 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07523689 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067367525 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075663212 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068253037 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064414738 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076164077 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070791389 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073490073 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068288029 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068364587 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068924688 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067421243 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070055372 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074214452 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06538234 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077854692 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075320796 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068586225 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07036889 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067952515 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068947211 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066417697 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068362397 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068256819 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067391987 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067407969 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071985046 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07016211 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067999172 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069496629 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068018813 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067569473 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068536165 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061797078 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066807009 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067045077 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067059839 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076896984 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067786375 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067308918 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06630728 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068622023 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066554163 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064413362 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07585159 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077510689 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068150814 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07444071 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066403817 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068845618 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077964742 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061879664 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065286101 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065706265 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065073311 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074409792 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068006243 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07668989 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067060064 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066684014 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06431833 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067277284 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065497709 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061145437 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064345773 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069714187 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06605056 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065571987 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066758085 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069086729 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067780419 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076077654 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066622865 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067400983 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067078343 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.197864845 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066961754 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06705874 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070108218 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06774032 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065619814 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064783153 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067839957 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068412549 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069199446 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067107971 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06938338 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076619987 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067632566 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071164793 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070447713 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062625573 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070066455 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067527467 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067203808 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066382164 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070884123 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070611271 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069249734 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078013475 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067549167 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068345411 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067552986 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066459283 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.0690724 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069135301 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069017722 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068623071 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070477231 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077352004 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067275659 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072438042 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069122876 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069938931 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076030593 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070502633 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07206136 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076506938 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069101855 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071425644 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077404837 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074152144 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072769178 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070611783 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070780931 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074991056 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06855765 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075441346 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069483046 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06995827 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070827954 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067426473 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068768031 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067118567 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066743875 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073267355 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067853282 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066177368 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066080759 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064875259 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068038328 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070524644 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074768855 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069690858 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070077725 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062416007 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064662788 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068910124 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065181141 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069046097 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069504092 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073143124 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069960913 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067416988 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065979401 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075964385 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072660446 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071156598 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065393631 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071149149 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06837806 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06894279 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068388272 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067096665 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068368254 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070755414 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068729334 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066500937 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073717555 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070883319 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068034034 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068631345 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067810158 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067435689 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062083515 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068441576 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069691865 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07194351 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069325251 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067395939 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077602768 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.0645841 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06712772 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070303342 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065824184 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070650052 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061612035 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067412484 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066704646 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066760242 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06127905 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065383416 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063850945 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068507278 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065137205 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061540124 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076521373 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074979126 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.0690617 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.200978798 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066220261 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063065668 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062239661 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066364032 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068379522 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068698568 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077863503 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066390612 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068327475 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064113273 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070103361 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072107753 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072579249 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066864346 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064288325 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068131804 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073208739 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074860492 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067790773 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069128273 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071614275 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071581078 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067649092 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072946799 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066017968 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072278681 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079920769 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068060279 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068402521 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073455937 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075075997 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068639419 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.0626874 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068150219 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070324292 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067599458 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068271854 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068611813 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0821308 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070026303 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066249691 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066454753 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069840545 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066825307 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075514134 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068541214 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068006773 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072542073 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069124171 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077106459 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070137842 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07480593 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070410762 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070260349 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066995673 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06765326 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065033955 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066022421 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068056353 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068248349 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072215307 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07583775 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066524884 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077575631 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076300717 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068816889 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063787037 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06646902 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066316086 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.0628021 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068057706 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065132059 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.0648026 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065162287 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065787144 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067578591 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072181924 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067890286 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067580273 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066690129 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060999654 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068902485 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069170838 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067523015 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063345582 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066781293 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067360979 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071161572 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070006304 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064538102 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068316136 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067961736 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067938776 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061920998 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073540286 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065764112 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068809664 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065967707 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066914056 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067792334 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069838295 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071670575 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067799399 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069226307 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070581219 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069020856 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064199058 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064399044 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071941937 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064510703 seconds)
  done (took 42.923783196 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102467753 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06527128 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063070484 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063422601 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075695001 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064073541 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063129649 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064280077 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064306593 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066709918 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064526535 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064978819 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075010133 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081788715 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077044928 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068370984 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064848414 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06646634 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065289962 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066066286 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074222283 seconds)
  done (took 2.843346611 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075313567 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072145379 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073865284 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077313043 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068282449 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071694159 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07447846 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073696186 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078892764 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068747356 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079555432 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072338818 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068322008 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068561304 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068279813 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071998757 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077586182 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068794676 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072150971 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074001821 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072029248 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073781171 seconds)
  done (took 2.949161373 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067767341 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066923772 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068891983 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062552637 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067173475 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062162658 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.080083458 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065015962 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070597534 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066322139 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066003573 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065952579 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068487864 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062319189 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066965152 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064735801 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110937814 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070649105 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066865812 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06797558 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062661945 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069405681 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064004348 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065406226 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066661589 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071273469 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069766008 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066902668 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066717379 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065693763 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066572274 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064627587 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068812027 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067584959 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066416647 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065948632 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067140464 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06657483 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063300493 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065385933 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067370321 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062944145 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067445252 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068067719 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065322373 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064754445 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068492356 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066572079 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061886626 seconds)
  done (took 4.66378144 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081896746 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110444556 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069382627 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.0898941 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083256498 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.078038795 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070688063 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090923603 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065119096 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066281233 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084054097 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.0813645 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066746788 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071784946 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07337774 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066899168 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068529164 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065871867 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070895173 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066226846 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071168181 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074048713 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082040775 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080637493 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070783673 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065713336 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066360354 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071473378 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079998591 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07151637 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071530189 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072326577 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082498201 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068832149 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066002329 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068768892 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083155748 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067148078 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068813721 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063869507 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068251869 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070760073 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072677583 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082858967 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06722817 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071479175 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066194932 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063514364 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079934747 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068928575 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074375178 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080869944 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070790957 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066259883 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070438363 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081842447 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06630745 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064396912 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069515237 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079265559 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063639554 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070432471 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080497959 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068079001 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073750861 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081234781 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072173608 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07033553 seconds)
  done (took 6.474032583 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076627192 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.07351812 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08216051 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082290165 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073642491 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073541459 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073405667 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073751819 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073154216 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07819159 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073496722 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.094645817 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068841139 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076300673 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073328969 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073316384 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073589025 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07326899 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073914779 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073352797 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073417916 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081574248 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073147877 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081596347 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09953802 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068594043 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072973662 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073682152 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081997831 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073182206 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080715198 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073540213 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073389526 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081902399 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080733471 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07308439 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065800451 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072949211 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073676942 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073399813 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068087955 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082854557 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074989388 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070406274 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075483179 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074159104 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081639651 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080208479 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076217068 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078597183 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07339068 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081790015 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073562558 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074538889 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081880284 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107088066 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081485765 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081857958 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073487096 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081492043 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081528664 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088304324 seconds)
  done (took 6.159872566 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085532644 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075913016 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077900083 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062023078 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06586865 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072969885 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067038807 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06711995 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078157004 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.078238492 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080784889 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07332588 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076210236 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081148837 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073221001 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076574595 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073484246 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073339135 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078071493 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07331987 seconds)
  done (took 2.864977625 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075440647 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083941256 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067549455 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073409983 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070525674 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073229635 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069290598 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070611424 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069794251 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071149334 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077687217 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078939171 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068258422 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072871313 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076853722 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072781443 seconds)
  done (took 2.540651026 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076149549 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073929141 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081413103 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067229596 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065070685 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063435326 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06637849 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062573266 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063282429 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079091534 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066767625 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069657568 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066856881 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065460291 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063936234 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070038668 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063974541 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06448949 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066753968 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079479797 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077557504 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065785407 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067509744 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066571584 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067499159 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07209295 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066296711 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064431699 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064075483 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067155688 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067341005 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070336292 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063709066 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065377809 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066289997 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065253447 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068037073 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068707296 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070345469 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066275283 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064589094 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06641172 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066134077 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067447943 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063222901 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068634042 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064920753 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070451288 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066353818 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069013562 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068299505 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070835113 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068851579 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075061861 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071378822 seconds)
  done (took 5.116770072 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079652642 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070075355 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0630018 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065080957 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069116623 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068781464 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069967363 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068582689 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068868894 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065164056 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069454287 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070288359 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06876893 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070286445 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068557039 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070539476 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062607288 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068828443 seconds)
  done (took 2.619539949 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071790197 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066757926 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073893659 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067648378 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066771063 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068924922 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062718732 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066353342 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067165806 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068775879 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06867077 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071055255 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067293775 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070676752 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068483983 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068519785 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07122093 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067012932 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067696883 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064571395 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06929836 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065414819 seconds)
  done (took 2.873955561 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092494724 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082010389 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139526183 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079045322 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083930176 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072320823 seconds)
  done (took 1.92445729 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090876018 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080144472 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067896423 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088798235 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074546217 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069196486 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070214151 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070576977 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079157654 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079625625 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070831249 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079637445 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079257119 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078830542 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076382178 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076055474 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070266031 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070250722 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068798259 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087759134 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070475211 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079167369 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070875917 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0699513 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070293472 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078967436 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079447801 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079464739 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069809038 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079023401 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075112135 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069340863 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077071795 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077832345 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069857046 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07835141 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068519625 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086051835 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074230214 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077013084 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070169088 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07480678 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077744085 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073235617 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079244712 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071047256 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075039446 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069678225 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070415459 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08835382 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074458997 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076320663 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074729438 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077471857 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077043287 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088371027 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077776424 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0776441 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076726185 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081347486 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077271173 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07496438 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076949532 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077255578 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074349164 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076707921 seconds)
  done (took 6.398604422 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08334478 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086381186 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069138922 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077686025 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076889576 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068464083 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068646837 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070174459 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069531933 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068242532 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109845409 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06928411 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077174449 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078097801 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071254524 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070801314 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071597343 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077799694 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068587689 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088719195 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068754761 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077097182 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077522152 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076858233 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077666559 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074628685 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068482295 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068591999 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068310758 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069471298 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075635247 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069975523 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078558288 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067816349 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076803321 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068673568 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068596561 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0741292 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068570234 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074234905 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076834536 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085535639 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068579858 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06856584 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078038339 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068565399 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068448839 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068385929 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06847904 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067948682 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077351745 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077026149 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077186943 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076953429 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068702148 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068369491 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068361687 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068736174 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068431694 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073883039 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076749263 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068537407 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087596066 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068501897 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068370035 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077116029 seconds)
  done (took 6.258950805 seconds)
done (took 130.834226936 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183036458 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165477042 seconds)
  done (took 1.721458032 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069967185 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098192678 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077295692 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129168575 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06719112 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101189273 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10062707 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078939111 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067242037 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066416847 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066625196 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069529267 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132029416 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066980726 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066597565 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06988013 seconds)
  done (took 2.713405307 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098677894 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.159290357 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100574914 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06590266 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097448495 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073975468 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065324933 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075983156 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071831709 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066061904 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073610036 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071735319 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06535321 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071578984 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072115948 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073627406 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065728289 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07388524 seconds)
  done (took 2.831583676 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102228038 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091908551 seconds)
  done (took 1.586272175 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.1655867 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.107257996 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.152079004 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.350958486 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.17075975 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.230681785 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130041554 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130388505 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.12238828 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.125540802 seconds)
  done (took 3.071261009 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098522137 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154228419 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.257701789 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115765045 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072853764 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096340068 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116489071 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078523039 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081561366 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081698546 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081520699 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076961176 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10018153 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074278356 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073896813 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07645582 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103433928 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072922357 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074897303 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077741178 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100107276 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066492192 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074223214 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072764994 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078041027 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078416981 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066674463 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065949618 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077628815 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074933321 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077592734 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095210448 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078317203 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109516229 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070720911 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109910247 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077328395 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074394759 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074782497 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074491207 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079302233 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079572434 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073168476 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076891077 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065697306 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077181851 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06615688 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066153804 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079288591 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067742824 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079595174 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077971347 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109712126 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067503599 seconds)
  done (took 6.044876927 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102190125 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104877553 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072494759 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.1124945 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100864023 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07302812 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102751902 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094318279 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104318741 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070713422 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06894325 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071331853 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083739311 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084548359 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114269198 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105417263 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074533651 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071754391 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105076939 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104223574 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069164961 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095842603 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09079174 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102811865 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068050097 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070962438 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068855483 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070891148 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078431419 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079804216 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07076876 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082263856 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086110446 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079678739 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067569578 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06866099 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069420266 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081459314 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08067211 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080428377 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079043468 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068720978 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069307217 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070280799 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070928717 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068588175 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080086424 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082362343 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080223005 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07037695 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070744002 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068643915 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07024803 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083254243 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078602241 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082524654 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081532024 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069328579 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069132298 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07342007 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082153115 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080919059 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080278596 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071024216 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079759145 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068750301 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081313771 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085283178 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069125051 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.0706192 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069540432 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07043389 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070421822 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079971619 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079402182 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070106662 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070550281 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069312853 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081837822 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079986719 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069010146 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07804536 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069677414 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071070878 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072192638 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0723706 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.081099609 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082760787 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070503936 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069305593 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070421182 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069229176 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067625562 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077678305 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080756266 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080605077 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081484944 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069867238 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080242977 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079824679 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070311913 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081558159 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070766151 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199437429 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070814839 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080613692 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079453903 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081242358 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070736437 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068783847 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079977714 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083695616 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069698033 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079678649 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082659338 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08162171 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069795791 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083418701 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069247776 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082191811 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071623928 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082884691 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069562102 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083108405 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069791092 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069397429 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070184608 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080827608 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071411741 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069383915 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071430954 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071220964 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080856813 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084316783 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071785767 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08323938 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079905855 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071600414 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079629682 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069372201 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080947726 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07088029 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071137951 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068487484 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084090084 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070893603 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071354958 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072763415 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.085616794 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070608258 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082255078 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080252686 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069986153 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083994349 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082546156 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078830879 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082342572 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071423591 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069608396 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068877268 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070184946 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079986821 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081725982 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071255064 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069183398 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079735335 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080809518 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068583814 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080150259 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080027343 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079848727 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069055784 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070348884 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081497531 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081983621 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079976686 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079312024 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079746376 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069213845 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078933556 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079752324 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068809715 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085927179 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069445946 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083913209 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080221668 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077883501 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079883327 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081624188 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081660322 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081726971 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08463396 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06903732 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068932947 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081238286 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069482174 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069899716 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07937328 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070105368 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069971471 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084617414 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068721277 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080201396 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068406157 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079211055 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067141346 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071384188 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085935023 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.198399335 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070789127 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081863618 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070871438 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079737613 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08197823 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080108562 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069047025 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071158159 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081768279 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081752983 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06898227 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0698246 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072033279 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079868413 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07973917 seconds)
  done (took 18.974045828 seconds)
done (took 38.338057971 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210186338 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152146999 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.202188006 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120353606 seconds)
  done (took 2.173420345 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123885494 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102143085 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096504136 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065409105 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103503773 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065655052 seconds)
  done (took 1.98331013 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316837546 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213886418 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.185193397 seconds)
  done (took 2.137973778 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202115871 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195852989 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.399316779 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.256024557 seconds)
  done (took 2.582886423 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144571309 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.091140865 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067730952 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084011721 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137032502 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163421481 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.103314616 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127875182 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079300676 seconds)
  done (took 2.476629237 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149137861 seconds)
done (took 12.926011535 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.129830502 seconds)
    (2/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093962403 seconds)
    (3/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078213744 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.102512109 seconds)
    (5/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.202204187 seconds)
    (6/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174029391 seconds)
    (7/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077636683 seconds)
    (8/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.170680223 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.168332266 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170044862 seconds)
    (11/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.110510219 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.166109204 seconds)
    (13/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076480042 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082995625 seconds)
    (15/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071998795 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.073155421 seconds)
    (17/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.15945985 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078318323 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.09136508 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065987039 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074113971 seconds)
    (22/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.062136799 seconds)
    (23/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.175312693 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175560574 seconds)
    (25/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076513664 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065883541 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099007449 seconds)
    (28/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087906673 seconds)
    (29/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.140674689 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.177029091 seconds)
    (31/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.177929356 seconds)
    (32/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072528439 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.198237072 seconds)
    (34/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075704978 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071958084 seconds)
    (36/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.186491801 seconds)
    (37/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.208555041 seconds)
    (38/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.220335556 seconds)
    (39/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081679365 seconds)
    (40/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.151230084 seconds)
    (41/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071084105 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072589129 seconds)
    (43/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150275601 seconds)
    (44/309) benchmarking ("sort", BigInt, false)...
    done (took 0.19115762 seconds)
    (45/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.232539433 seconds)
    (46/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054141326 seconds)
    (47/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.152618098 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094892954 seconds)
    (49/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.148848188 seconds)
    (50/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.180074065 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.111152899 seconds)
    (52/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074835127 seconds)
    (53/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073097082 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073163299 seconds)
    (55/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070943336 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072811098 seconds)
    (57/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.198916379 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.075163904 seconds)
    (59/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.161053723 seconds)
    (60/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.188272098 seconds)
    (61/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.192958734 seconds)
    (62/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.106496263 seconds)
    (63/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.176119619 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066616925 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067553757 seconds)
    (66/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.196344556 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093985637 seconds)
    (68/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081941968 seconds)
    (69/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.088127293 seconds)
    (70/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.156641766 seconds)
    (71/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051252028 seconds)
    (72/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.157766998 seconds)
    (73/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.172797411 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111001015 seconds)
    (75/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065925442 seconds)
    (76/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066775864 seconds)
    (77/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071798116 seconds)
    (78/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.100403228 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108355391 seconds)
    (80/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069995961 seconds)
    (81/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076121059 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09082201 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125270154 seconds)
    (84/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07413746 seconds)
    (85/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.42014026 seconds)
    (86/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07650358 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.066168248 seconds)
    (88/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.18324032 seconds)
    (89/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064886719 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.136075934 seconds)
    (91/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051705076 seconds)
    (92/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051823358 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.1631258 seconds)
    (94/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05186337 seconds)
    (95/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072563647 seconds)
    (96/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.109178783 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065920738 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087652814 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066279316 seconds)
    (100/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070000613 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139310518 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09470166 seconds)
    (103/309) benchmarking ("sort", Int8, false)...
    done (took 0.146721068 seconds)
    (104/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.136142744 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071913364 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050974404 seconds)
    (107/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108262117 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.133798418 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121531845 seconds)
    (110/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074543748 seconds)
    (111/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083850184 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094606515 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086042138 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088844228 seconds)
    (115/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051781001 seconds)
    (116/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076637269 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064620234 seconds)
    (118/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.086210465 seconds)
    (119/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.108343217 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 0.131251126 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072310765 seconds)
    (122/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.107553129 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086096889 seconds)
    (124/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06808133 seconds)
    (125/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.070847273 seconds)
    (126/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.14839481 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.084384607 seconds)
    (128/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08689684 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069930988 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.084737866 seconds)
    (131/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.0518081 seconds)
    (132/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051240198 seconds)
    (133/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.154784272 seconds)
    (134/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079046292 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.074297973 seconds)
    (136/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.062994014 seconds)
    (137/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.097863151 seconds)
    (138/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068531005 seconds)
    (139/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.104882294 seconds)
    (140/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06106408 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071010015 seconds)
    (142/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050830996 seconds)
    (143/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066688209 seconds)
    (144/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.06195916 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090323119 seconds)
    (146/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051062099 seconds)
    (147/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06240152 seconds)
    (148/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.059899405 seconds)
    (149/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.148551278 seconds)
    (150/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070890738 seconds)
    (151/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174856861 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066087714 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073432227 seconds)
    (154/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070904793 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085175372 seconds)
    (156/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071785224 seconds)
    (157/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.173533376 seconds)
    (158/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075080924 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.13602192 seconds)
    (160/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.149166816 seconds)
    (161/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051271745 seconds)
    (162/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050194338 seconds)
    (163/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.102326828 seconds)
    (164/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050497507 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072061499 seconds)
    (166/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072082333 seconds)
    (167/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.060928634 seconds)
    (168/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050487704 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064760202 seconds)
    (170/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06502751 seconds)
    (171/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05191032 seconds)
    (172/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051480264 seconds)
    (173/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051861027 seconds)
    (174/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076046654 seconds)
    (175/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050877425 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074691906 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050488542 seconds)
    (178/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.106122493 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.07501928 seconds)
    (180/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051180905 seconds)
    (181/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078294831 seconds)
    (182/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050785917 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091372131 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.193606823 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.105921139 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088327765 seconds)
    (187/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07395232 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.13437443 seconds)
    (189/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051576048 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070614978 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064321442 seconds)
    (192/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.329640005 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.201661882 seconds)
    (194/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067836703 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075906397 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13638975 seconds)
    (197/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090081589 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077069621 seconds)
    (199/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054466793 seconds)
    (200/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064603462 seconds)
    (201/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082531078 seconds)
    (202/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.151629999 seconds)
    (203/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077536678 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088494407 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055286862 seconds)
    (206/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.109648217 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065549398 seconds)
    (208/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081322314 seconds)
    (209/309) benchmarking ("sort", Float64, false)...
    done (took 0.128381259 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054947591 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052286089 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091576273 seconds)
    (213/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073023203 seconds)
    (214/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05339461 seconds)
    (215/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051705958 seconds)
    (216/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066367465 seconds)
    (217/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052751609 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093765159 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068699212 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.104560671 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077586953 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075595741 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.140407728 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098911861 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.142115455 seconds)
    (226/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068448053 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076690082 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07469914 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068809401 seconds)
    (230/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.057669325 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067572397 seconds)
    (232/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.054845953 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070167116 seconds)
    (234/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068865091 seconds)
    (235/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090095541 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092565243 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169062536 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136806798 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090385017 seconds)
    (240/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054436353 seconds)
    (241/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068828335 seconds)
    (242/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054696744 seconds)
    (243/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069364417 seconds)
    (244/309) benchmarking ("sort", Float32, false)...
    done (took 0.130833341 seconds)
    (245/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078177917 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092767364 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066457342 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068551127 seconds)
    (249/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063641689 seconds)
    (250/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073121648 seconds)
    (251/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074322326 seconds)
    (252/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075003277 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06655812 seconds)
    (254/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052013522 seconds)
    (255/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06706578 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.118723337 seconds)
    (257/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068969203 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072673694 seconds)
    (259/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07220737 seconds)
    (260/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.052057632 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052317067 seconds)
    (262/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052232111 seconds)
    (263/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.05514724 seconds)
    (264/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.179202663 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076842036 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055669572 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06901156 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.112482725 seconds)
    (269/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053860843 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073901658 seconds)
    (271/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054915708 seconds)
    (272/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070943426 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054118911 seconds)
    (274/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052918969 seconds)
    (275/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051520216 seconds)
    (276/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062022424 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067953153 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067969622 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073801961 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067292239 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092129512 seconds)
    (282/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069347383 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066879374 seconds)
    (284/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075946853 seconds)
    (285/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055574473 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068112474 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067230942 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053985899 seconds)
    (289/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053645722 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075933259 seconds)
    (291/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.053714303 seconds)
    (292/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069634585 seconds)
    (293/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054899574 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.104053948 seconds)
    (295/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08154744 seconds)
    (296/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069247142 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073104634 seconds)
    (298/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053581835 seconds)
    (299/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070211089 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067607607 seconds)
    (301/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053748278 seconds)
    (302/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083267046 seconds)
    (303/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069806691 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073552769 seconds)
    (305/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054199932 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092099457 seconds)
    (307/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06793697 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068251137 seconds)
    (309/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075658257 seconds)
  done (took 30.70164888 seconds)
done (took 32.137421233 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087084626 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093643875 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075910175 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095741146 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082192215 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077689185 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074012791 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079520361 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082064401 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083080323 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07962009 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055791465 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075331048 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075261046 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075294662 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092268928 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07870252 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073156519 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074162429 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065091812 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073464681 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066380649 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067676169 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055312468 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078408934 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072085485 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072869827 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074559537 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066536908 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066262737 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069241791 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073535547 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065754934 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078445376 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073023276 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072975676 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074398925 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076317426 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067807902 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066082345 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074328063 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06627862 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072820922 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073888829 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073695582 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074205945 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075479006 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079915902 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093367244 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071796316 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076844729 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078923609 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079556994 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075237726 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072965575 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075589771 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073913523 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095191323 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07645146 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071837894 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076925053 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076943055 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073908784 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075917899 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075905005 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077926522 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078187461 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074098499 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078132296 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074315896 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06808909 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075731598 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07170581 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068218379 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07851639 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078995358 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.0670569 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073672802 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075204227 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073563286 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066316553 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068032914 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068050339 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07197035 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067687491 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055079191 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069511447 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071938055 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065332963 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073547509 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072019245 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07227177 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067193696 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07554632 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067165945 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073099405 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068213685 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068015504 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069456009 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071459963 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067858336 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07059082 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076890333 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068932439 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074110672 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081288497 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067664905 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074525141 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06654166 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067124693 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081860779 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076903012 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067893783 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070812007 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066931409 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074914738 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067050187 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067479797 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067795988 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067734932 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073386303 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067388011 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070219558 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07455717 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08021827 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067329594 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071411485 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070171177 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067613939 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072892121 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067596847 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068094812 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068758217 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063737076 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069934914 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067198378 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074191675 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069645524 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074773598 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06904106 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074883569 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071925185 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072833653 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.0728053 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066604841 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060291314 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07010675 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070032489 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068748866 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067044531 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068911157 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067323119 seconds)
done (took 12.688878521 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.0692846 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144908682 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100205003 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097158298 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086219804 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066774311 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076618422 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102851186 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068255154 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103144254 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088219304 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084936988 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113780298 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065255212 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066290407 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070116881 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067871287 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082418418 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101576849 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086977779 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116931089 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065752533 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09567107 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090617658 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088348632 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102054819 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067131778 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070143048 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069504029 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092009536 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086629905 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069684156 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067102823 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101244941 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093364192 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084240843 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066751277 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083636974 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067234819 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066374754 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067552901 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09894961 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080626906 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081248913 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070842944 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069407443 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067567253 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084348636 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090074446 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07929518 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087542177 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.104539852 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069083928 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065972268 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064970295 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08603504 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065820082 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06904386 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066368569 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068546307 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066386522 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069453574 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081801279 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082725371 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069915919 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081476423 seconds)
  done (took 6.934736281 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083628419 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089824648 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084213285 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084089694 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06635981 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066483808 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066834035 seconds)
  done (took 2.133449675 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066993516 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089137921 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089929975 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089456231 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084937526 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087389899 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076268731 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067106393 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081283366 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067708805 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08773433 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102744148 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067968405 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073083643 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091317317 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067232151 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090654931 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066689022 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069762813 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090184607 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068836883 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082407243 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070237304 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067227036 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081580724 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067400875 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113785065 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071405035 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068227692 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069611295 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065150193 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108037287 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081096335 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076119354 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066941917 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081534742 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083797543 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067618335 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085853623 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075191011 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083159213 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069695849 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069969472 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067295399 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074255205 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080292967 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070179092 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069799239 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071699814 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089519975 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069615003 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083178668 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072571473 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071952067 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070076118 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073324646 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079071064 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070295594 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089118543 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07030888 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086749532 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086347051 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083034835 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086539118 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071326213 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083494779 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083315206 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071969322 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070902941 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072965223 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086021821 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067552532 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070550125 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080214989 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07067133 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093015557 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.092456849 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070244218 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078175889 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069013254 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069386491 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067584212 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09193535 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070585255 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066558025 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.0709736 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069780505 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065628938 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066271515 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069875401 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06485902 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068280567 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06940486 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071013315 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069688569 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082902773 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069203237 seconds)
  done (took 9.015922111 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069490412 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068348773 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070842723 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069964976 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069946565 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069031006 seconds)
  done (took 2.030948973 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093481767 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069780123 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080849092 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072838151 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105424956 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087579482 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087714997 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079920234 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084108032 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079750587 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087186177 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088982783 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094030741 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073822094 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087322872 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072720898 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088337179 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077072637 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079107068 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073716145 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087118149 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07327584 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073649485 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082002894 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076171028 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07261526 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067756556 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079441657 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078456813 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079361804 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072980683 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07648597 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071462272 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079436855 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088097512 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071651166 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072578571 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077673241 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072927717 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07621046 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088553268 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073137476 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074878095 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077838899 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07943896 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071120476 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078059197 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07694519 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086853497 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077243351 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07769626 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07208358 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075482471 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077791586 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071128064 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079165026 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077440345 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087355632 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072928729 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071021266 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069388561 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076204074 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078746092 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075587109 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07922059 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077370357 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070886868 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072730962 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07296322 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072363904 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077459374 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069350118 seconds)
  done (took 7.223597361 seconds)
done (took 28.944608185 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545334242 seconds)
  done (took 2.126931778 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.605727638 seconds)
  done (took 2.210560373 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.587482656 seconds)
  done (took 8.189292483 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.396194488 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.477895395 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.693559464 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131531706 seconds)
  done (took 3.341377242 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.672987704 seconds)
  done (took 2.288063013 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208935065 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196750427 seconds)
  done (took 2.028446466 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377148755 seconds)
  done (took 1.982905439 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.109345128 seconds)
  done (took 2.716332156 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263972684 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163934979 seconds)
  done (took 2.037773119 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459998869 seconds)
  done (took 2.069090573 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.855686801 seconds)
  done (took 6.468114837 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213993789 seconds)
  done (took 1.868684573 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242385396 seconds)
  done (took 1.855266904 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.701052444 seconds)
  done (took 3.313073354 seconds)
done (took 44.104563729 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079498287 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081193757 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081135959 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078663163 seconds)
  done (took 1.921098681 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076877506 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07275557 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076119853 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072958077 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077163688 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072151917 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074363602 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076936298 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072263644 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072626957 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072452373 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073411295 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074664179 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074110292 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071204552 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07491867 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075694535 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072618005 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075566768 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07245244 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070462325 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074960819 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074450403 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071607362 seconds)
  done (took 3.386621334 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077763381 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073520133 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074458238 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071919077 seconds)
  done (took 1.917480888 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077220376 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091927081 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089264805 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078008558 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092702951 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086249216 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068830912 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068714818 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073079263 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076896195 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068053941 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095922133 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087513463 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076510104 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078859643 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066258426 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068048608 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086776525 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077175448 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077112236 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069397938 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076548027 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068016418 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088347717 seconds)
  done (took 3.503230366 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077136439 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103724038 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077609242 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088280379 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089681031 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065571497 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074363652 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089723672 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122825776 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065182315 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070119173 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065666343 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072330806 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065442867 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076275205 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10454293 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108315729 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068167513 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096041066 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065217613 seconds)
  done (took 3.272686959 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073358208 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069804482 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065792436 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068625445 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077222631 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072874288 seconds)
  done (took 2.05556909 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068195304 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06734101 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067424373 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06666126 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071761863 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067189674 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066106462 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067213557 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067336539 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06662631 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066646612 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065519581 seconds)
  done (took 2.43167866 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.179680903 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068289225 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068773038 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066007845 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070846521 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066153992 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079603418 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067491883 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090389856 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066769299 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066493917 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068609742 seconds)
  done (took 2.584213174 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207464539 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0761736 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238533537 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137478584 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112326958 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115814214 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104336286 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114325459 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.145031937 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102437162 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169621101 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167900564 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107432922 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138357833 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089004472 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097615353 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157373552 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163971518 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104101573 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166929709 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145177477 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125297933 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147621805 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101496541 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106817415 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122842818 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07117459 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080272316 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172940107 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1325556 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148019862 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111998797 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094101488 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177505161 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172564463 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143856845 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13497019 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0844764 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102782487 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134251737 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200961414 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089239195 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166084995 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2467111 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081279898 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134084502 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12100161 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121302703 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107931242 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090563038 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147054221 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184906294 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140829675 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08762647 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112819909 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116784653 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117958184 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104251566 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184558189 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162020529 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129024699 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070957922 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099136748 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155190876 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133178166 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110518743 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127981593 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094998411 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134714787 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154582538 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11907619 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144654242 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128821978 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089332137 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119520648 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140872612 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129438868 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171755785 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124971055 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.0724193 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126299971 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104210078 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082008497 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140311987 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075671373 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17659126 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099295752 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106965629 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113287683 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109418928 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10966967 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163868839 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286655361 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10397674 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06572737 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104731215 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121347629 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148723618 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087620915 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109107387 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118393381 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078415546 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14207089 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07503117 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125154598 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074539128 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126065725 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134512444 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07578101 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123830138 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101417579 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100235747 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134221913 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16167339 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089349723 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082338296 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168655739 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123639821 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104711936 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144397022 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157653344 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099469244 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102735217 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151383339 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181666829 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089610371 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164098985 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108126117 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083817028 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087502393 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124365643 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113128078 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122992083 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082508142 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119703661 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169883292 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075596058 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095488213 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134259431 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079274297 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081258366 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104831462 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10140806 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095951731 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100731301 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105210003 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138640888 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124660747 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.247195664 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12781459 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098751203 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171250962 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088801466 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100506763 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1045348 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070192127 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138797219 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158326634 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079220138 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165906595 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124379568 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106124585 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119813435 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083509926 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141435449 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079085038 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071641807 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14645435 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110988429 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110857517 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152871843 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105368384 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128949065 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121497089 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136517346 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135249666 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130138287 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106004317 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087843882 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112459872 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126603064 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073342906 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092072183 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080472324 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104216219 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095765219 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083594548 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144042907 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126293366 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100652641 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111885547 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096793144 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147679173 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076596109 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130426016 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119684187 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094876866 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152935967 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152812453 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131750082 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099700577 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145861637 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070084418 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07374683 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.232606567 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125680759 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084010091 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084676235 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119512953 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149109437 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130411833 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139242314 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111880746 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122671856 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157549183 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069549029 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116577283 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149317497 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121744315 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103894998 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090770314 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099719724 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142477261 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108789408 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183815904 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115006604 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126781636 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153551411 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099584492 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080055853 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103398434 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136917024 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105716617 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146761444 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100009238 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088152564 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110904934 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074497891 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101443447 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128494548 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121078366 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141402395 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114870361 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133985974 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077635505 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118467654 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121226162 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124337457 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064078848 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121306003 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163407329 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093953802 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119351379 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154368511 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079158789 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124878105 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321844958 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148543334 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085699006 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110433924 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120512179 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128648249 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121824665 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14101015 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109536614 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135959099 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108890594 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085831089 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088192754 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097811973 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105499119 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095412647 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109766503 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116234333 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094829132 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134066715 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104655117 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111048971 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118480097 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097428592 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089834324 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097155208 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176737446 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119572846 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174477831 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099187583 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146350994 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165860258 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074669876 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079430445 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078649299 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140995995 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084208515 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132258065 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097881549 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10658669 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125204322 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143800174 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095512873 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068856404 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108887914 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136127372 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113153593 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099052349 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105355843 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164362023 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100326709 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079273019 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114293768 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10510834 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103031716 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319576617 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061518438 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097598755 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076340793 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081143306 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129252241 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155597119 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080793093 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103429915 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119761179 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112625304 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12929534 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102597575 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099148312 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115019958 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150304336 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13133674 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09024279 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113815278 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130791099 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15862897 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10608096 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096046395 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17303617 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152923935 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161229473 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089237907 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114636446 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114321814 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108438782 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140406671 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083318877 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165606299 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082474879 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137623947 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104994821 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091542837 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131352499 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.115624992 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088506111 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149303026 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119425384 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08296407 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07837155 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118871814 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121555255 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107492398 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075684445 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140715384 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072603684 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132916275 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169862601 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225143924 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105908736 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096908095 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080954542 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109843828 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103844455 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090651706 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098292684 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175332778 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08959485 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15111807 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143749185 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114774979 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139635318 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100825665 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63671728 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078575545 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152837321 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117105037 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175688094 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097788884 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119015292 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110001617 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125003157 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146613887 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10591794 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.174084276 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134490064 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116615346 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082681024 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103173236 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103499131 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089643012 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105938289 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114015319 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11750351 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094615059 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117305548 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125043619 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081992888 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095386066 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15695105 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117906676 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146443099 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14147531 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08497271 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1187364 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139910399 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079954353 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123271466 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153813914 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1065684 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24328989 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082194967 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104355238 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172347687 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073752727 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165897514 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12068185 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110885166 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114211708 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115839384 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132978571 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109382813 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123372835 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094817824 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.1128277 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113647678 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08204941 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077489751 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105464882 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11387422 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096890927 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100231224 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098331347 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152562944 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071429074 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096032483 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104323933 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146767411 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176803756 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088008814 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082377727 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119870225 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113253236 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114361196 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121567502 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079748221 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082332942 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082453703 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076878214 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108557369 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112524305 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104990159 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112165449 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165994859 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082950758 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.220481529 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095648373 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105263059 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069968399 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07906439 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096140666 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098288275 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108665012 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100491418 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171765665 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094651912 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089943088 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093652816 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.216148644 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083533565 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129946119 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112206545 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119825721 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098276002 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06217845 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110465714 seconds)
  done (took 59.38712713 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109193398 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081933976 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097076696 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149594848 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122608936 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213173665 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157333746 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199362117 seconds)
  done (took 2.859036288 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068541582 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093625559 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102059179 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083663714 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066644671 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068589208 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226024179 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080806125 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066286219 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088273903 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07924383 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068954323 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.423067879 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065898675 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067560405 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063063876 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066961362 seconds)
  done (took 3.498556755 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.364930284 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602746182 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372928656 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072616035 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.858397304 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091774187 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.051792269 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129812034 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073266999 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537449698 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701601652 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127629951 seconds)
  done (took 18.718060046 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07535375 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069619761 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083594714 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083434695 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072554094 seconds)
  done (took 2.115766662 seconds)
done (took 109.299993917 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079624902 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.405680962 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053624891 seconds)
  done (took 2.218061117 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08221828 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084027939 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083800638 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082887337 seconds)
  done (took 2.071973384 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074100956 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075968955 seconds)
  done (took 1.882080897 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224162662 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.159925169 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086664906 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081934007 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078514622 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078985207 seconds)
  done (took 1.976093562 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072714925 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075664 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072632309 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076023187 seconds)
  done (took 2.028920363 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075508921 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052688566 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054822793 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055808198 seconds)
  done (took 1.971746126 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085561929 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079158795 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077977295 seconds)
  done (took 1.976703153 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101995616 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085040926 seconds)
  done (took 1.92065178 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081519325 seconds)
  done (took 1.81705389 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09959057 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114160898 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132407319 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110410073 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138560597 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108929301 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085884728 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087085805 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077343675 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088251776 seconds)
  done (took 2.776308547 seconds)
done (took 22.917956945 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078384671 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367280043 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360439813 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089613868 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668300466 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356266243 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986749571 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09224477 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113773676 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067441198 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083733789 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648858078 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.012793483 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324467993 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.000340487 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323538993 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650188325 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068145716 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067733186 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067857518 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.972740153 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067292376 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067453504 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068628392 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649098725 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371249449 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068427178 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322936457 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067860657 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069680908 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354806996 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068526392 seconds)
  done (took 16.299751148 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070275055 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11807654 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073716896 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083266427 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070857238 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069823436 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071468232 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068884117 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119387027 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067824747 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084424882 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06754072 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071889243 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068472749 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087062619 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068119156 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06867946 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068596299 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068588528 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06838622 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086258606 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067746456 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068160744 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068348488 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068170024 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079547234 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068316522 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068659593 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068386162 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069912359 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071181143 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06881613 seconds)
  done (took 4.135608778 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116773293 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125153196 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074135837 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102544418 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112693918 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070287642 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143314733 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092376441 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127181597 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068138143 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08496155 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067909606 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100655559 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069162263 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08766864 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068543457 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06928738 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068664381 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068423573 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069000487 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087415059 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068240458 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068385272 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068782846 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068539678 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08157226 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068625734 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068661096 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06862596 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070060868 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071401815 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06876633 seconds)
  done (took 4.397054596 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071938643 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075597982 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083619873 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084455132 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069744922 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072162004 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072729624 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069605725 seconds)
  done (took 2.354037279 seconds)
done (took 28.926221792 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078752947 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069555733 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072250612 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081437627 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072889045 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079107444 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067266335 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074598231 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071783002 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072769002 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07466935 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067037362 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071056879 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067377127 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073496077 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067849036 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.0789523 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072064834 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078950492 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079482847 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070394288 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073062409 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074284221 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078783935 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07925145 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07899611 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077663673 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07281551 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069356715 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070214356 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076255275 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083747461 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068707152 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078986038 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067777179 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067862792 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07151824 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067804073 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079049222 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076977694 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069664011 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07693134 seconds)
  done (took 4.835195533 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087326071 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091206172 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085086511 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063062265 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066566151 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064886771 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088292605 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059564417 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059350314 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087634463 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055761817 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059064958 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062149961 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053932668 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058974933 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05644309 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061124162 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056044156 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059043602 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059494225 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088098685 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054118496 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076971153 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062377851 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058917855 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061301451 seconds)
  done (took 3.498574566 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074025464 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083883212 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087986036 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125058241 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10309543 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076632922 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079639774 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091939917 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085559504 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067186484 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070901612 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092883459 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087549854 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074144105 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067724575 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08453319 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081889899 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069007379 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073450181 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092123914 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085341875 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084682211 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092002 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080237223 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06657111 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069602704 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071415018 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080806938 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071990657 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075829168 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071414022 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070508228 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068946694 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078465733 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071361486 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068844128 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090009438 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076834648 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077578726 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068212989 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071027702 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068408537 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090827295 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125260887 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066896027 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074203114 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075077821 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076762853 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067413128 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085926705 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078651064 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067484769 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070650284 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067002515 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067590851 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079988726 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069281368 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069715306 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076551342 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070504523 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089257997 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071221511 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082693949 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067109804 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075083227 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066598437 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068464124 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066940611 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092086323 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069263704 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108049154 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068743525 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068728408 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076344334 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075326462 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073731938 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067690385 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082543804 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077587775 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07123689 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075653538 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070997657 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070620829 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087943942 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069715343 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069178874 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069156331 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07372915 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.06988254 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069117679 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080531712 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067768851 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071221534 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084058073 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067164714 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068610714 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074016386 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072332986 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067364974 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078577701 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072473622 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068268088 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076521078 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067656815 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070961497 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079239792 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073523044 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067073178 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072295839 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073974188 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068888693 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069116698 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070260068 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069634354 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076401959 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074112963 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072368179 seconds)
  done (took 10.673791112 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.15920901 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153209123 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.06998014 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144264381 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076242444 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079053864 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147058248 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094418432 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.0687775 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068323636 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06898656 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109904922 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105936881 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11564684 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078861339 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067758954 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083581337 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114631075 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149728903 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143114938 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083935335 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076727485 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070207854 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069453281 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070702821 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078543298 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085494234 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076623376 seconds)
  done (took 4.501451556 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081807264 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097897733 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073996622 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089530121 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092187086 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067970163 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07031031 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069649864 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080559532 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079617551 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067641887 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073663716 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074610363 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071667269 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06909647 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075411488 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074906049 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069768479 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071295339 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073231822 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07779459 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081113143 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071841776 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067411247 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073113356 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067000488 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064910407 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085412103 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068052456 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089592695 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065873837 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074991703 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081267577 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068430814 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067707609 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068348016 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067442347 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067496734 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069645503 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066710918 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066488882 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057794345 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066837875 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080091719 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074094266 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056564613 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072695441 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072885979 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07326638 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065681559 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071335661 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07064835 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070874428 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074744005 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072698398 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072903849 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068679532 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074334723 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075550621 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.0675979 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064325677 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066378925 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072304695 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066954676 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075892312 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072619554 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06618224 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067906876 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069503573 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073616043 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.0676595 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070632539 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065361869 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069958367 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072583867 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069448005 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068187881 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066246931 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067118992 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067921796 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055485883 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067528148 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053663362 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070466799 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065632037 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065989631 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067421904 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072522879 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08024703 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068580101 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073366791 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06892869 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066408718 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070432027 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060216797 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070498767 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082477573 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083340115 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067694201 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065811366 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08201398 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072129357 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066536675 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056201847 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074942075 seconds)
  done (took 9.270637014 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08936022 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070230565 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083445501 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090481656 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08646754 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074932529 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076132993 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069472346 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081991963 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073448701 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076126644 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068400461 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077124396 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077139072 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069954771 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077219534 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072186822 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082660049 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081802542 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06864696 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075496177 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079799702 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08961319 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080167654 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.07807214 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080405806 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089114158 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071950977 seconds)
  done (took 3.99033422 seconds)
done (took 38.517066101 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.824589224 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.999364201 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.832067015 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.16581428 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.993200801 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.848196726 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.952320767 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.830138199 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.155356135 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.869695229 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.102568823 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.881112576 seconds)
done (took 66.220498297 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.857766264 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.975767479 seconds)
    (2/2) benchmarking "String"...
    done (took 2.102960641 seconds)
  done (took 5.850003951 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.141488928 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.417370979 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.062775826 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.831092278 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.835761738 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.063025123 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.625062929 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.360021279 seconds)
  done (took 30.968295441 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.94779808 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.064765616 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.502808574 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.535183386 seconds)
  done (took 15.866047415 seconds)
done (took 64.531865944 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.853648701 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.854419807 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.847330118 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.816007502 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.887491814 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.837650833 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.087352433 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.050313215 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.831345751 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.81801942 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.835317447 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.267748513 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.841568136 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.119657011 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.832408853 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.839461133 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.880003157 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.309400957 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.990548426 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.844261275 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.853064788 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.84356008 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.839720801 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.837096824 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.840177568 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.834062743 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.256634986 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.835255379 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.462313563 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.837432098 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.864359763 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.284130853 seconds)
  done (took 207.004246674 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.832328126 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.783800306 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.833268565 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.871688947 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.634073409 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.01710739 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.948528586 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.658445076 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.836250732 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.842603473 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.978331615 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.832724783 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.995437487 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.853685089 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.864317339 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.906891762 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.990568846 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.015547207 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.865379449 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.00497535 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.847457793 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.794272898 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.771160131 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.976703423 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.879646442 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.90856032 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.863590066 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.987651878 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.025555473 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.979996516 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.876509907 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.8407348 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.054572685 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.705597493 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.851813944 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.849350736 seconds)
  done (took 172.55354956 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.987270844 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.834952631 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.834516211 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.834458297 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.846095852 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.834429 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.956838436 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.95707943 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.3126998 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.198359972 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.88744584 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.654044728 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.833743912 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.900431992 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.833859993 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.845385369 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.836458054 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.849345292 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.859612072 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.836653613 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.833821204 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.956493164 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.847070657 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.849173139 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.841738286 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.833845991 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.839999048 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.204685831 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.835212529 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.840067915 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.096943588 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.836895518 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.834732189 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.739626304 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.536947036 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.838422034 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.918816647 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.837950575 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.843132426 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.835217126 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.055634296 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.837591057 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.837500973 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.839091863 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.020493359 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.835730575 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.956985417 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.836917666 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.340378338 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.835030551 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.835316321 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.577124533 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.528721286 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.834109207 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.83544722 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.839893538 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.835782803 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.835635456 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.842092067 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.680051451 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.91212973 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.838749517 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.83954781 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.841174123 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.837098326 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.976395182 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.837277186 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.835882139 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.893598668 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.053615 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.527916722 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.959813233 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.839604748 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.90428421 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.932474078 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.837628164 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.836464213 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.837031074 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.835025909 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.918382155 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.836960746 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.9993793 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.845961034 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.83914839 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.888326797 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.907280998 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.837053864 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.727154619 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.841116492 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.83585237 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.161275234 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.836602559 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.90452709 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.838415479 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.837305658 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.837148095 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.99724114 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.959731353 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.633725165 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.843060062 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.809909621 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.842031048 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.013797169 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.839595851 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.017590306 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.838555545 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.91930064 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.843328835 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.839724022 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.839212927 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.872432497 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.839165721 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.898064532 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.838585615 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.210429059 seconds)
  done (took 410.134531281 seconds)
done (took 793.508605763 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.530575049 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.47828188 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.580120664 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.500522024 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.465122689 seconds)
  done (took 14.334695073 seconds)
done (took 16.116825601 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.925840287 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.930656566 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.86436757 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.929188341 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.859805852 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.928538978 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.909293123 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.866766201 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.895298415 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.865667636 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.897685931 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.865459726 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.852528894 seconds)
  done (took 26.371193034 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.077148042 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.070980793 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.910591377 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.068674994 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.887263499 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.079480385 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.000319459 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.994783456 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.990868053 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.857406612 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.856449558 seconds)
  done (took 23.574237987 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.079182754 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.075857327 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.918556647 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.074711595 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.89131202 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.077557557 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.006084419 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.993762795 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.993685098 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.858803169 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.856438212 seconds)
  done (took 23.607295349 seconds)
done (took 75.333131053 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.849313522 seconds)
  done (took 3.63119147 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.871074927 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.008852328 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.854732476 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.852119695 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.849573102 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.851552843 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.85177221 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.84957989 seconds)
  done (took 16.773912063 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.851473398 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.850915048 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.84757373 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.851683221 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.849274741 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.851809443 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.84901196 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.848910236 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.847273732 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.850395835 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.851151139 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.848101807 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.851216401 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.851613492 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.849391325 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.84858137 seconds)
  done (took 31.382129003 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.850565874 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.848931984 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.84944587 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.848043247 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.849593361 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.847530521 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.850200712 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.850534711 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.849941762 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.848178464 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.850596427 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.850049418 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.850961289 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.848941872 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.851012424 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.851228184 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.848539967 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.851221079 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.854725236 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.849703955 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.849166025 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.850733151 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.850185287 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.850428617 seconds)
  done (took 46.186332998 seconds)
done (took 99.756059611 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.708000053 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.211411273 seconds)
  done (took 8.703277084 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.85447447 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.853790751 seconds)
  done (took 5.521476195 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.852250459 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.854325493 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.853490024 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.854538852 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.853863538 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.853432145 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.852938071 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.851868144 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.854107445 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.852669171 seconds)
  done (took 20.318502614 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.852001256 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.852335219 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.850324137 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.853096933 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.854622106 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.851102738 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.85135094 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.854603078 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.854018946 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.852745171 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.853159437 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.851380972 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.852699656 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.853359378 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.852378049 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.851517724 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.850203278 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.850101032 seconds)
  done (took 35.127204774 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.855896335 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.85468153 seconds)
  done (took 5.496066514 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.851023565 seconds)
    (2/7) benchmarking "second"...
    done (took 1.851797864 seconds)
    (3/7) benchmarking "month"...
    done (took 1.852285647 seconds)
    (4/7) benchmarking "year"...
    done (took 1.850659553 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.851855465 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.851001636 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.850610508 seconds)
  done (took 14.745847972 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.854671778 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.015828615 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.095083772 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.51913063 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.856315358 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.857616112 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.811713916 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.858104713 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.858707939 seconds)
  done (took 20.51601305 seconds)
done (took 112.212738169 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.67040134 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.851507114 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.185291765 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.889079937 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.889668066 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.192304984 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.887960231 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.066289346 seconds)
done (took 43.419013709 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.932013185 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.389635565 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.42363002 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.019906378 seconds)
  done (took 12.620959236 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.833098012 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.365689621 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.883417575 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.448122371 seconds)
  done (took 20.331481418 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.215787506 seconds)
    (2/2) benchmarking "read"...
    done (took 2.217176307 seconds)
  done (took 6.2249297 seconds)
done (took 47.898876086 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.855668733 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.856098986 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.857210312 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.854842384 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.856403991 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.853825968 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.853042901 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.857528939 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.856708179 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.853705827 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.857504196 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.85690629 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.857683 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.855383781 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.852150264 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.856339027 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.85362215 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.854021909 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.853239622 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.855591573 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.853671292 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.85632774 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.854718365 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.854084526 seconds)
  done (took 46.31524546 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.856969585 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.856072865 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.857188019 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.856199177 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.855029124 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.857986767 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.856956991 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.853945384 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.857009403 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.856998331 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.854859541 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.854006417 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.85765702 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.854805671 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.857138769 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.854880158 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.857668945 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.854998147 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857296504 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.854640686 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.856992178 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.857492843 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.856583529 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.857763532 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.855774375 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.856226943 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.858518346 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.856465059 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.857471674 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.856787725 seconds)
  done (took 57.482127962 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.863417093 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.868027955 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.859269786 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.859589288 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.858532195 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.859558598 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.858807471 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.859579088 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.85860723 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.85968776 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.861149851 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.859325412 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.8594558 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.859367029 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.860142407 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.858770274 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.859432978 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.860732222 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.860008843 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.860110487 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.86112946 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.860307696 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.859147876 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.860362725 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.859252354 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.858311333 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.860660065 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.859428342 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.859612098 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.859953399 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.859756681 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.861776429 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.860647851 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.860617582 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.861372124 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.860985216 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.864996653 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.869582817 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.860697652 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.86177956 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.861510754 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.860275422 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.860410062 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.860394732 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.86004794 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.860769259 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.8608195 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.861035854 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.861303126 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.860998047 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.864111237 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.86087621 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.860297018 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.861714581 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.86132516 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.862114138 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.860689324 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.861020244 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.861795082 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.861438925 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.861325238 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.861777129 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.860816676 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.861309112 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.86245049 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.863112798 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.862082402 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.861943302 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.861574731 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.862344539 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.861569451 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.863018029 seconds)
  done (took 135.784463928 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.862998641 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.859633863 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.858891122 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.859005578 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.860355282 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.862336306 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.859065741 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.861886969 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.861277361 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.862329492 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.864671268 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.861030444 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.861501735 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.865063391 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.863101311 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.859942733 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.862762822 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.859909138 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.862741871 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.863333088 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.862411879 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.860187364 seconds)
  done (took 42.749263087 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.863602332 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.863718637 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.860850088 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.86236296 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.861282956 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.863713963 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.863958024 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.863756742 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.863510791 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.862281554 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860870792 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.864543037 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.859804436 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.862200397 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.862357197 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.859187876 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.864248995 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.860962767 seconds)
  done (took 35.318716041 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.863047876 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.862276704 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.865216638 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.861997005 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.861787736 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.863956869 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.860502477 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.863645575 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.863920169 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.862922347 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.864755029 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.864462946 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.864132152 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.861718772 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.864047588 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.862895402 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.865203626 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.862378338 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.865349471 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.862119025 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.861621373 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.863688736 seconds)
  done (took 42.788574538 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.864148332 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.864589407 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.86283822 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.862055825 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.863745946 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.864674747 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.864354581 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.86153861 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.865752411 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.86438445 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.863134663 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.864634218 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.862389847 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.863694125 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.863531673 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.862561054 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.864151369 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.863394384 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.866081121 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.863473379 seconds)
  done (took 39.072578076 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.866492504 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.86507175 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.866716409 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.866743176 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.866037296 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.86701343 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.864852849 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.866494417 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.866298756 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.866828704 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.866581149 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.866794104 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.865694739 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.867364235 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.86589455 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.865881618 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.866701668 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.866956977 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.86630857 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.866691993 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.867511032 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.866176587 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.86710323 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.86647084 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.866503832 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.867671876 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.866530233 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.867116753 seconds)
  done (took 54.062516765 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.866962498 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.867405324 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.864391785 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.864536656 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.864449576 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.864170209 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.866007617 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.866470866 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.868063845 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.865922798 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.868071027 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.868808716 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.868205054 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.868001841 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.86713731 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.867531816 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.867769289 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.866308557 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.865584677 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.865438294 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.8681725 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868248863 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.868179267 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.866854498 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.865760353 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.868001582 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.865795978 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.866007401 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.870034769 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.866358147 seconds)
  done (took 57.805557578 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.887253828 seconds)
    (2/2) benchmarking "in"...
    done (took 1.887983827 seconds)
  done (took 5.575892888 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.866461578 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.868936431 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.869200072 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.867313418 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.866964367 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.870909392 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.869916167 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.866606178 seconds)
  done (took 16.74803153 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.868453435 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.869530687 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.870109619 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.869865919 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.870450586 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.870164976 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.873416019 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.869483443 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.869989653 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.871449618 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.876536601 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.877807432 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.87172312 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.87072119 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.869018279 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.871099833 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.870323211 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.870262639 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.869258802 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.870247365 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.870875229 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.872167741 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.872409271 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.867845737 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.870834813 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.882751798 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.873762802 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.870915434 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.870738943 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.874358369 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.869911282 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.868272568 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.871310084 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.872243121 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.871191784 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.871520782 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.878602391 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.871141073 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.876583726 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.871253403 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.871471323 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.868641088 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.873093503 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.872484539 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.872336888 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.871216728 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.871466461 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.868460012 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.872354187 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.874171165 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.877743239 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.870199836 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.868565312 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.874469942 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.871947123 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.877391143 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.870837116 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.87577807 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.880938362 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.881355801 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.884650497 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.879486086 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.872058458 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.873073539 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.881936578 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.895064387 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.878085255 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.870095651 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.870547562 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.872805921 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.877847908 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.884965243 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.881694997 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.87218982 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.873341491 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.87273621 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.872709587 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.873336152 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.878477696 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.875843315 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.872645103 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.872699119 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.881737023 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.895380793 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.872411259 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.874380074 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.872784645 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.874179861 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.874338672 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.884654681 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.873745166 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.873699293 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.871899381 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.87295324 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.875946623 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.873888109 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.873526887 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.874242616 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.87146296 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.87402044 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.874769607 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.87808193 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.883853772 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.874990738 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.874159423 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.880837437 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.87415325 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.874143314 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.880659275 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.874034835 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.874866278 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.87545506 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.880435579 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.8739964 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.877249793 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.883400525 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.874439406 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.874852921 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.874858428 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.876653047 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.885095219 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.904637643 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.876291913 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.875131927 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.880026565 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.886711273 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.874900901 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.878703017 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.876052284 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.874081313 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.873236108 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.875766628 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.876591832 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.876099934 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.875226635 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.876686859 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.873770496 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.877952285 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.875850692 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.877424978 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.876649414 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.874768669 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.875856955 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.878043013 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.876786883 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.87721497 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.882258583 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.876968135 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.877141963 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.878311501 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.874955117 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.877533436 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.878039754 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.877832475 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.876245882 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.875680784 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.874718526 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.877465306 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.876330145 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.877141228 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.877081822 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.877293472 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.88052649 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.877813788 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.878631456 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.876275278 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.874247699 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.876876064 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.876738156 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.876500297 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.876859241 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.875763379 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.88045065 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.884482677 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.87688414 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.878196179 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.878968772 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.878669366 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.877554308 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.87860004 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.879484287 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.887046663 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.877338792 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.883915766 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.877244796 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.879001193 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.877447196 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.879120042 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.877169517 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.878156023 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.881367696 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.886810137 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.889847505 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.887472959 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.879749559 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.883310011 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.881333905 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.882371218 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.882309821 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.877724941 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.879895279 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.879035043 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.879764698 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.878902284 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.878793091 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.878803183 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.8778405 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.880285205 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.878006506 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.878295454 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.879753335 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.881258686 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.880480181 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.876633069 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.879168843 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.880002334 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.87935564 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.876805035 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.879092395 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.878782997 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.880731812 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.880459757 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.887606554 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.880015371 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.88151127 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.883310822 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.879477739 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.879384372 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.880501667 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.881366628 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.880156634 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.886089684 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.880435983 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.882347867 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.887601618 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.88043005 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.88012551 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.882590108 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.88326283 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.878858186 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.883919943 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.88985244 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.881121942 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.88239294 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.881786109 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.880604756 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.882530872 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.886207868 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.87876001 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.880235155 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.881935962 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.883479857 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.879036778 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.883644081 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.882159019 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.88249619 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.883840363 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.881939573 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.882678048 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.883097593 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.881947198 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.88216989 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.882628756 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.885763021 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.891174283 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.888720205 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.882324222 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.884183749 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.884008805 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.886444217 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.881754211 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.882821255 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.881753756 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.895017176 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.890705722 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.888866273 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.885240065 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.883131877 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.886684506 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.883453736 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.888212133 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.883106088 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.884053462 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.882575378 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.883567307 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.88188004 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.884421549 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.882671511 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.884434018 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.884783758 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.887007703 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.883665777 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.882781217 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.884173695 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.884510632 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.884266674 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.882965347 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.885973326 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.886445216 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.887005972 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.883151766 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.883261027 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.890344385 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.883887006 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.885373499 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.883918097 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.885511989 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.885262099 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.886525109 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.884630361 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.888926184 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.894250239 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.888649652 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.89457803 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.887503997 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.895429244 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.885350613 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.888291022 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.893934916 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.882933657 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.884098517 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.886437361 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.885156836 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.892248536 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.886112242 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.88617349 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.890052162 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.88644429 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.887946163 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.887123705 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.886900886 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.88677135 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.886597153 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.891597696 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.887667414 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.890041627 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.887568892 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.884639686 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.886057635 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.88718544 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.884828507 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.890141086 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.886077767 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.887102102 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.886455387 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.886015427 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.886674072 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.885823954 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.888373159 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.884512307 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.886982316 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.891681774 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.88773258 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.891118691 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.889214037 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.894982538 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.889026674 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.893478375 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.890599233 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.887513118 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.888323446 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.887851237 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.88919418 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.887953475 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.8884322 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.888377852 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.889832976 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.893260403 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.889024443 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.889651248 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.888924592 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.889137851 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.886824901 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.898375796 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.913238723 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.890816558 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.893106496 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.885846153 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.891572054 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.89316133 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.889111786 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.886787902 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.890524159 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.897423427 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.897009222 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.888427332 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.888971458 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.88839852 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.889124641 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.889344698 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.889129769 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.888348901 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.889947516 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.890011152 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.891030907 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.891518102 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.889459186 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.89099577 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.889308941 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.889883046 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.899787844 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.889710225 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.891863348 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.889762857 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.889023365 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.889678915 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.888945807 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.890817637 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.889311773 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.890037476 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.891638674 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.898347289 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.897706025 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.894115136 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.890988618 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.890607967 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.891118075 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.891102954 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.890967061 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.8910357 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.891762707 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.891039198 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.889018887 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.891050154 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.890016804 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.892079513 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.892109974 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.890371849 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.892690469 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.897064977 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.891648046 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.887162572 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.891668927 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.891904485 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.889992886 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.889849618 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.897139608 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.894664298 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.902726217 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.899316004 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.896718913 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.891576074 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.89600078 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.899681751 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.890853704 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.89384088 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.892449194 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.893295041 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.894384844 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.895679347 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.890958995 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.899285499 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.890767213 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.891624888 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.897805571 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.892554706 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.891719089 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.894308682 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.897633375 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.89307563 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.891509454 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.893005472 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.891731307 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.899785149 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.894960278 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.893833915 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.895464486 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.891147587 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.895359247 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.897264964 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.894371201 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.895130513 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.891604517 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.894999387 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.892970315 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.893766847 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.890964269 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.893567593 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.893444042 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.89764306 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.901222496 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.892414709 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.894902187 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.895035109 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.893871475 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.89403207 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.894044722 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.890419216 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.892353319 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.893855688 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.894605876 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.894577991 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.898736844 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.893945073 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.896124444 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.897243514 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.894748696 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.896781564 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.90591152 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.903261889 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.891837644 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.89526326 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.895165336 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.897789876 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.894644081 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.8954638 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.894420449 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.89795173 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.895955777 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.895854681 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.895145024 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.897184372 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.909266348 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.895950751 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.894929349 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.896118845 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.899737573 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.897121439 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.893212094 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.895843693 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.897620599 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.897671957 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.903477646 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.896603946 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.904325369 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.896414906 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.898478792 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.902109059 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.89932162 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.905242248 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.90177028 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.896850119 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.896910973 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.901475855 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.91515949 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.896981663 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.906297169 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.926791878 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.898135017 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.899421707 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.897550128 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.895680883 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.898517519 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.899329866 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.897750494 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.897811361 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.896322921 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.898066648 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.89730357 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.903013421 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.899017881 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.89758231 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.898414093 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.896253062 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.898097889 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.895528666 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.897750467 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.896675379 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.897642841 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.897336022 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.899405269 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.89754789 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.910986291 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.906902558 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.89862501 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.899684571 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.894607567 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.901594493 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.903302198 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.910098086 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.907945974 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.899351249 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.900256159 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.899500518 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.899974696 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.89760035 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.900385652 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.899299536 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.899943413 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.89811364 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.91337285 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.909169651 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.904780278 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.900087771 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.899761323 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.901218001 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.900342878 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.900546547 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.900320675 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.902169887 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.901690575 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.904665254 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.900953388 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.900930969 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.903937949 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.908821399 seconds)
  done (took 1125.982197071 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.899264061 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.897362129 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.898698132 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.898513625 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.898666465 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.899806946 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.899269167 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.899226332 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.89935385 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.898044599 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.899470301 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.89852133 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.897917402 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.899524895 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.899484577 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.899240357 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.899582102 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.898254259 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.898549871 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.899858668 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.90029382 seconds)
  done (took 41.711645041 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.902292601 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.901423912 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.899859143 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.901433746 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.89936967 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.902716266 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.900285007 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.902186474 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.903075896 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.900448189 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.901616402 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.902257816 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.900599137 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.900161197 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.899579875 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.902392783 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.904191367 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.900308283 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.903085974 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.900476323 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.903244328 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.903080057 seconds)
  done (took 43.668481755 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.903194969 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.902992184 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.902413196 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.900544797 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.903265472 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.900878371 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.904012242 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.903513269 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.904245541 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.90377536 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.902976272 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.904271118 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.911716632 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.910200304 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.90571626 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.904403564 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.047779281 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.903756698 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.904631638 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.905104638 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.900802694 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.908147371 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.901045761 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.90140233 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.902777557 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.904823612 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.904205889 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.905385856 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.904800581 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.905984665 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.910732694 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.90541008 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.90467628 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.906349245 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.905092155 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.906700912 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.910682469 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.905787081 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.905389147 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.906452856 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.915654186 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.927253595 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.908630466 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.911881581 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.905500075 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.906955943 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.910420182 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.914789526 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.903778414 seconds)
  done (took 95.377718588 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.907434222 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.906496576 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.904888269 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.907308851 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.907418699 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.907673326 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.907586774 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.907255111 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.903298241 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.904008722 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.907155649 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.902893631 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.902384812 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.904222653 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.906128442 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.903277242 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.902922454 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.901933989 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.902002328 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.903485847 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.901463271 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.905271762 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.904309313 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.901530293 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.904138909 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.902456756 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.902734177 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.905107824 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.90299796 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.902393985 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.904532707 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.904153191 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.906048257 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.903216829 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.903725001 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.905861519 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.906255772 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.903698844 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.906367057 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.903188842 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.906616256 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.906786008 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.906570822 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.906672515 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.90447048 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.903845541 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.904134163 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.90296638 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.904332864 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.908292844 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.906033689 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.904595426 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.907025571 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.905604093 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.907774336 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.906727563 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.903851355 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.904798214 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.908004465 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.906864372 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.904972179 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.907215758 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.905298121 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.908588401 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.908041357 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.907099694 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.905506704 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.909036191 seconds)
  done (took 131.392018517 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.906759981 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.90720814 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.906780781 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.907796129 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.909143555 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.908024186 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.90827993 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.908662462 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.909966132 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.908239318 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.908225394 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.90936674 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.909072293 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.909531817 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.909339148 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.908961029 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.910303624 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.909220119 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.909973692 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.909472064 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.909460084 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.909507137 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.909654054 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.910071695 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.910084349 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.910272941 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.910248157 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.909330374 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.910425396 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.909245735 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.90978713 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.910515101 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.910152348 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.909551836 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.910451891 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.909267384 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.910702367 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.908522248 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.910367386 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.910743942 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.910640592 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.90958662 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.911104942 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.910773739 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.910737901 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.909894163 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.909796999 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.911229994 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.910330554 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.91039581 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.911016126 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.91080128 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.910864528 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.909378015 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.911233259 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.910628592 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.91099173 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.909663347 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.90946473 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.910893019 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.910109415 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.911470882 seconds)
  done (took 120.245376849 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.910477381 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.911297753 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.908680977 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.907803478 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.912069835 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.908583249 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.911720724 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.911990089 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.911837714 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.912269948 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.912428663 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.909223708 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.910528482 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.911391662 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.909162058 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.90971152 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.909406087 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.910203781 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.912575006 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.909696692 seconds)
  done (took 40.053748884 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.909721082 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.913124439 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.910843759 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.90989212 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.910599346 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.909967091 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.913250466 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.912876415 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.910034345 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.913051233 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.912710112 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.913771392 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.910493836 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.910738456 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.912704522 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.910684989 seconds)
  done (took 32.428443431 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.910319664 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.91343301 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.912770797 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.912134256 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.91060118 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.910693123 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.914210684 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.911603237 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.910606556 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.913613016 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.915426695 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.913342177 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.91357161 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.913201659 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.910704516 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.913393583 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.910486495 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.911339791 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.914097473 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.913523128 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.911516111 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.912137917 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.91430955 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.914471318 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.911590378 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.912147602 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.912010902 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.91152477 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.912308701 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.915284152 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.911548285 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.912604242 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.911834156 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.913280715 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.915376951 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.912751624 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.914863195 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.915558343 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.915481744 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.914395929 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.915525717 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.912141475 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.915304417 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.914477165 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.91165623 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.914522645 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.912346175 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.913462975 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.912897998 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.912109193 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.915903251 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.915729748 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.916069014 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.916330389 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.915825063 seconds)
  done (took 107.07416412 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.916452371 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.916007307 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.913769606 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.91615537 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.915984959 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.913147259 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.915488351 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.913041832 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.913617908 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.915350903 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.914913806 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.917188807 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.914441313 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.916109127 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.914425291 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.915782172 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.914150754 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.914309723 seconds)
  done (took 36.317222633 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.914490318 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.914096943 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.917352927 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.914788424 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.91489534 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.91763205 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.914431232 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.917811893 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.91710459 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.916626272 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.915452484 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.918480009 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.918012404 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.919136957 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.915808979 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.915425224 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.917758721 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.917525408 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.915402398 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.915408207 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.918326509 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.918028167 seconds)
  done (took 44.0124806 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.916842581 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.915838586 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.933293387 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.937920695 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.93882861 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.950066449 seconds)
  done (took 13.441232492 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.916878518 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.917944526 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.916236526 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.919456755 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.917675305 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.916153421 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.916088806 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.915244915 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.918739387 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.916949861 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91544419 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.91929783 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.919182685 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.916063801 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.919754655 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.91970721 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917116277 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.9162749 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.918244525 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.919593355 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.917355447 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.919310132 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91775812 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.917847802 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.918054501 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.917332091 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.919797607 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.918782025 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.917747872 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.921082451 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921363216 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.917768963 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.919686364 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.918367399 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.921146944 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.92041168 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.917302401 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.920701816 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921009424 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.917584529 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.919827912 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.921089319 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.920917714 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.9188565 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.920360785 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.918283136 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.918261567 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.918341383 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.918351608 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.921748316 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.921915565 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.918542899 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.921300372 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.920429994 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.921689091 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.92124718 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.918347741 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.918194927 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.921885887 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.919456951 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.918904998 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.922097833 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.919048818 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.920602381 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.922227339 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.920030468 seconds)
  done (took 128.50620644 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.91924317 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.919672452 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.918903363 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.920269856 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.919542894 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.919877424 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.919165176 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.918585981 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.921086985 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.920333666 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.923531251 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.92042592 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.920251209 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.920397288 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.919691837 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.91979547 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.920658697 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.920463046 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.920617554 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.92403087 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.919969293 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921225638 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.920940571 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.922050834 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.921447431 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.925178232 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.921016398 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.920147938 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.920560878 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.922203241 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.920847009 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.921033782 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.921258917 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.921386172 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.920210822 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.922080021 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.921845753 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.920897085 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.921618137 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.924146739 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.920706802 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.924507957 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.921758729 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.920609197 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.921970417 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.921958235 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.92140707 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.922254217 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.922881535 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.921165774 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.92246236 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.922008872 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.922911889 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.921949057 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.922507138 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.922788791 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.922265156 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.922658451 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.922928973 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.925358501 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.924622745 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.922996106 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.925455878 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.922241058 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.923132248 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924089022 seconds)
  done (took 128.682095683 seconds)
done (took 2624.386474031 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.941441711 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.920474036 seconds)
  done (took 15.719175661 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.088373755 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.039136764 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.923368751 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.94739797 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.923718781 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.921641906 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.928711582 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.923220858 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.923421326 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.92375185 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.924046241 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.109919921 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.933114243 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.924835688 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.92356777 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.017211741 seconds)
  done (took 53.240967972 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.926937217 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.928939166 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.936451629 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.929768717 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.926225613 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.938896442 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.959635853 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.930090309 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.961955201 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.938598569 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.996996855 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.938714999 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.927809966 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.977076814 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.94082059 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.942022268 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.013949278 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.004174666 seconds)
  done (took 36.977650792 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.009146318 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.948001938 seconds)
  done (took 10.823352648 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.946942538 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.927918587 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.946583417 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.949541522 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.938052298 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.977242351 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.940957741 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.954871743 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.961109559 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.974969761 seconds)
  done (took 71.390942071 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.935253994 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.929384182 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.93058803 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.928589444 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.921509933 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.926287017 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.928486834 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.92476246 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.628106672 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.965480063 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.937562582 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.935241509 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.92984943 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.932072569 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.92988089 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.951187289 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.092375555 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.928741243 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.928379134 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.936198079 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.930169836 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.987487551 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.943919558 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.93301009 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.96052305 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.63224987 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.940034244 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.936316342 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.040854859 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.929169668 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.930032109 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.931026118 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.932218315 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.321063529 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.213079989 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.929468511 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.940397626 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.939529391 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.929594425 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.059453805 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.931851177 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.937173316 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.89383577 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.19848387 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.018341621 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.974406617 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.302837576 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.936600407 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.934401632 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.961480525 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.933764295 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.933067657 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.945258549 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.448344811 seconds)
  done (took 136.092291017 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.926142056 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.225907339 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.080279935 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.927751195 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.204905012 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.134266218 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.929032739 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.978557203 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.928183101 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.131261605 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.09234528 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.04173448 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.929862277 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.927610377 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.92709396 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.926371417 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.089969276 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.998603622 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.930611936 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.926629778 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.956899589 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.138885797 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.058510163 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.931336538 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.950251776 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.140085699 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.052256934 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.039854761 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.440597457 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.927048777 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.995037233 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.930490757 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.93005695 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.927287019 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.086516673 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.025996903 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.019699435 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.931859149 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.928661735 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.927992019 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.595674333 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.127980649 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.030283063 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.074251119 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.184459724 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.135765452 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.668757188 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.929539768 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.571582854 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.091913176 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.144250911 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.138607063 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.055043706 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.931585384 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.29808622 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.92855615 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.928702609 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.167717896 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.174373018 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.034962159 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.931922488 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.929745488 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.928543602 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.174641765 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.932058064 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.028587612 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.932334507 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.928302698 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.029065298 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.036919454 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.181220352 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.146583042 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.965407926 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.234562394 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.433562208 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.146277636 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.001264436 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.166682902 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.934420821 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.929223015 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.017494764 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.689139785 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.090857504 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.181742364 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.15418865 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.967558342 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.571167533 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.929606496 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.124783148 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.118267929 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.127753946 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.173260476 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.085187344 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.398532758 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.93058862 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.930891194 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.170772028 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.070381498 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.934464317 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.292316451 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.166951065 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.497446302 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.964193941 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.229348835 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.067236831 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.309023811 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.558415055 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.932566849 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.09990957 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.971914084 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.932533078 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.932377326 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.123324299 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.744788034 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.932098687 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.469229801 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.996964002 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.934943848 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.136732807 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.935462215 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.143593516 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.936351044 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.170083235 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.999493267 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.966454618 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.176317795 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.176515597 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.740446298 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.183288962 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.179797469 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.054620963 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.156345309 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.555829896 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.934717243 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.210062676 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.93489301 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.932236834 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.102505157 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.93412314 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.163015839 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.936915445 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.162667601 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.960334242 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.090721451 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.937818809 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.17717952 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.972195731 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.989715732 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.936290346 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.065826612 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.936937068 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.822460333 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.093012354 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.935435515 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.933007494 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.647821408 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.934887598 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.080723368 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.16698883 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.960239625 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.005566184 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.460375362 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.93363093 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.027135954 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.965015901 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.673793676 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.933858383 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.091882461 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.933658281 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.377033954 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.935941081 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.177657449 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.121114578 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.939034735 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.935266092 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.678610903 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.666244438 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.934826436 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.095532963 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.67299605 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.605546868 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.139964859 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.938529534 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.065578667 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.939827383 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.277741646 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.293745989 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.934834584 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.935992035 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.934307833 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.936628661 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.935397848 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.219353352 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.968610579 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.461037007 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.074438673 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.154931543 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.247948386 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.15898737 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.986265376 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.937592931 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.188997282 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.940791043 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.00375301 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.940615027 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.960811935 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.171720703 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.938606819 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.152816363 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.195861409 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.902501806 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.98900009 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.940295479 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.93838983 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.937747173 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.093434694 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.032605929 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.940118775 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.93789295 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.051984986 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.069629622 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.132058714 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.551023839 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.113467254 seconds)
  done (took 914.791947106 seconds)
done (took 1240.894017358 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.936779853 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.938296431 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.925834835 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.936992485 seconds)
  done (took 29.613115344 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.943052184 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.94096679 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.942380428 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.940541661 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.942691707 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.940327002 seconds)
  done (took 13.521775812 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.176362615 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.934815907 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.938808079 seconds)
  done (took 21.921307102 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.010745573 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.360108444 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.054309663 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.397137132 seconds)
  done (took 10.695216132 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.943576426 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.942428535 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.942619436 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.94330547 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.943395615 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.945527888 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.943170122 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.944139476 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.94436751 seconds)
  done (took 19.36585751 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.30134704 seconds)
done (took 101.295033862 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.942020427 seconds)
    (2/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 3.142318536 seconds)
    (3/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.064848997 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.277279741 seconds)
    (5/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.172254907 seconds)
    (6/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.07538085 seconds)
    (7/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.030598669 seconds)
    (8/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.126480869 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.943473139 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.936385819 seconds)
    (11/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.026291856 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.039597119 seconds)
    (13/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.021911007 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.09556227 seconds)
    (15/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.031572912 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.245051437 seconds)
    (17/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.092032749 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.986604812 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.23535879 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.180551886 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.96932007 seconds)
    (22/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.028667203 seconds)
    (23/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.94024406 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.939309218 seconds)
    (25/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.026443152 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.20924493 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.62089569 seconds)
    (28/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.965097869 seconds)
    (29/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.936967028 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.312825435 seconds)
    (31/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.069735516 seconds)
    (32/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.026739207 seconds)
    (33/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.92349283 seconds)
    (34/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.034355656 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.285591426 seconds)
    (36/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.124455577 seconds)
    (37/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.557906601 seconds)
    (38/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.540772364 seconds)
    (39/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.010411375 seconds)
    (40/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.228500781 seconds)
    (41/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.036275313 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.049463763 seconds)
    (43/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.170524074 seconds)
    (44/309) benchmarking ("sort", BigInt, false)...
    done (took 6.943723967 seconds)
    (45/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.165455188 seconds)
    (46/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.538275113 seconds)
    (47/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.009382355 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.939937843 seconds)
    (49/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.070040603 seconds)
    (50/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.234238024 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.73763715 seconds)
    (52/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.162966878 seconds)
    (53/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.046259299 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.050626121 seconds)
    (55/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.958943835 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.195708831 seconds)
    (57/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.449556017 seconds)
    (58/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.195601728 seconds)
    (59/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.250631493 seconds)
    (60/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.228880159 seconds)
    (61/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.41798819 seconds)
    (62/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.170178104 seconds)
    (63/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.310490272 seconds)
    (64/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.941669585 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.805230756 seconds)
    (66/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.924405603 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.470378542 seconds)
    (68/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.765729845 seconds)
    (69/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.962439878 seconds)
    (70/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.425570596 seconds)
    (71/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.017972547 seconds)
    (72/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.533309469 seconds)
    (73/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.246793713 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.024148121 seconds)
    (75/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.447455155 seconds)
    (76/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.143923091 seconds)
    (77/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.160002089 seconds)
    (78/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.079411868 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.457131573 seconds)
    (80/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.960246214 seconds)
    (81/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.940988902 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.385412346 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.044755779 seconds)
    (84/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.474151751 seconds)
    (85/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.024375126 seconds)
    (86/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.023915218 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.643255958 seconds)
    (88/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.55014848 seconds)
    (89/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.943498765 seconds)
    (90/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.995051591 seconds)
    (91/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.332039557 seconds)
    (92/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.636589775 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.94577332 seconds)
    (94/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.459854157 seconds)
    (95/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.033602115 seconds)
    (96/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.085185457 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.218530547 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.867014481 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.033335998 seconds)
    (100/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.011288385 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.962869471 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.00219157 seconds)
    (103/309) benchmarking ("sort", Int8, false)...
    done (took 4.901936512 seconds)
    (104/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.929195675 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 3.361837138 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.848554001 seconds)
    (107/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.265309118 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.945906594 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.932253529 seconds)
    (110/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.231026626 seconds)
    (111/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.870287111 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.935157645 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.95529989 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.761542066 seconds)
    (115/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.362691048 seconds)
    (116/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.056925921 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.281611226 seconds)
    (118/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.947712167 seconds)
    (119/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.217442241 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 2.401958235 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.970108925 seconds)
    (122/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.259478393 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.855962259 seconds)
    (124/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.018569517 seconds)
    (125/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.969988278 seconds)
    (126/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.20623063 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.221094093 seconds)
    (128/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.320323895 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.248701005 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.209257126 seconds)
    (131/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.447603015 seconds)
    (132/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.096553775 seconds)
    (133/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.435991903 seconds)
    (134/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.469906524 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.25350191 seconds)
    (136/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.048782495 seconds)
    (137/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.277702564 seconds)
    (138/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.056649602 seconds)
    (139/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.115608354 seconds)
    (140/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.24469964 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.05121195 seconds)
    (142/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.128015694 seconds)
    (143/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.909985165 seconds)
    (144/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.37495637 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.632405894 seconds)
    (146/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.930702931 seconds)
    (147/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.330936182 seconds)
    (148/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.451110645 seconds)
    (149/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.25875556 seconds)
    (150/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.353036104 seconds)
    (151/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.943267927 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.16961074 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.971368604 seconds)
    (154/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.026207131 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.875327473 seconds)
    (156/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.980156568 seconds)
    (157/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.263458674 seconds)
    (158/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.103143157 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.941658005 seconds)
    (160/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.581270064 seconds)
    (161/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.098794887 seconds)
    (162/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.294584651 seconds)
    (163/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.930896477 seconds)
    (164/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.094552748 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.969525796 seconds)
    (166/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.95260264 seconds)
    (167/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.152581213 seconds)
    (168/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.118161859 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.561656344 seconds)
    (170/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.648583811 seconds)
    (171/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.257055644 seconds)
    (172/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.080552644 seconds)
    (173/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.314756269 seconds)
    (174/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.001103997 seconds)
    (175/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.845967924 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.955409312 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.323715199 seconds)
    (178/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.870204178 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.321770845 seconds)
    (180/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.076902654 seconds)
    (181/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.102817019 seconds)
    (182/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.964232008 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.598227519 seconds)
    (184/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.936595258 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.520340475 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.418265269 seconds)
    (187/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.947314507 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.085937454 seconds)
    (189/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.927708702 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.975865203 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.284860199 seconds)
    (192/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.065827874 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.935349653 seconds)
    (194/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.029385893 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.022724498 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.945511973 seconds)
    (197/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.981430097 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.946731662 seconds)
    (199/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.440010188 seconds)
    (200/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.110708049 seconds)
    (201/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.457503932 seconds)
    (202/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.033670917 seconds)
    (203/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 9.018429497 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.008892926 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.936721654 seconds)
    (206/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.191355104 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.012955522 seconds)
    (208/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.883492791 seconds)
    (209/309) benchmarking ("sort", Float64, false)...
    done (took 5.77264747 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.93372567 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 3.753615165 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.245253118 seconds)
    (213/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.059863573 seconds)
    (214/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.310429479 seconds)
    (215/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.150378039 seconds)
    (216/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.375105709 seconds)
    (217/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.118899904 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.643677564 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.958211513 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.02300689 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.950843736 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.164477074 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.042945817 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.005775441 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.945036992 seconds)
    (226/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.06610804 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.973635744 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.96884534 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.325329985 seconds)
    (230/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.937030409 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 3.454139716 seconds)
    (232/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.078072564 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.950318518 seconds)
    (234/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.087115736 seconds)
    (235/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.969880857 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.99695859 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.946599577 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.890992249 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.922334222 seconds)
    (240/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.943065989 seconds)
    (241/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 3.092194728 seconds)
    (242/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.932488519 seconds)
    (243/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.076765971 seconds)
    (244/309) benchmarking ("sort", Float32, false)...
    done (took 5.707572509 seconds)
    (245/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.983475194 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.593459853 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.176145886 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.950720351 seconds)
    (249/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.786466616 seconds)
    (250/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.976726533 seconds)
    (251/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.975016686 seconds)
    (252/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.973868732 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.046056808 seconds)
    (254/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.338163956 seconds)
    (255/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.950464289 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.009236838 seconds)
    (257/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.013829638 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.975772497 seconds)
    (259/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.975334005 seconds)
    (260/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.048678384 seconds)
    (261/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.263031796 seconds)
    (262/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.132258616 seconds)
    (263/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.936697132 seconds)
    (264/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 8.259261435 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.334235155 seconds)
    (266/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.93241734 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.349117754 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.782772198 seconds)
    (269/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.239749475 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.145348695 seconds)
    (271/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.921691515 seconds)
    (272/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.042315661 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.233114794 seconds)
    (274/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.311740503 seconds)
    (275/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.15091307 seconds)
    (276/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.132921492 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.34837304 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.252962855 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.050504052 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.655509324 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.222499448 seconds)
    (282/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.412507435 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.120706983 seconds)
    (284/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.960614133 seconds)
    (285/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.535804684 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.275188274 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.114621432 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.141078002 seconds)
    (289/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.242588296 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.744381601 seconds)
    (291/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.055701946 seconds)
    (292/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.06682643 seconds)
    (293/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.42670629 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.033682093 seconds)
    (295/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.646911669 seconds)
    (296/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.09419637 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.993401022 seconds)
    (298/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.062110878 seconds)
    (299/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.577991711 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.375436179 seconds)
    (301/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.189063366 seconds)
    (302/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.526273708 seconds)
    (303/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.071915189 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.975416312 seconds)
    (305/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.098419806 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.127152192 seconds)
    (307/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.103163218 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.204522229 seconds)
    (309/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.984640512 seconds)
  done (took 1043.899335194 seconds)
done (took 1046.03825534 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.983788039 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.979286038 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.962377019 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.984607417 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.075064022 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.998636876 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.973587362 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.964694264 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.010463316 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.013400465 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.962467651 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.997928393 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.965846519 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.964506414 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.963218286 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.978754488 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.27470441 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.994135201 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.981347827 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.971948361 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.980760895 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.963472634 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.012331909 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.99839408 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.96763554 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.966565614 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.968025984 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.984729464 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.076071136 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.968449067 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.967644255 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.977137361 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.274857631 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.992322461 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.959145464 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.984784455 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.977234172 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.973272825 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.967293634 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.997154168 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.42756859 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.973022653 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.966667785 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.965392472 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.964298971 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.968378917 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.967697795 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.971913272 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.978392835 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.979571409 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.422953289 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.989307178 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.969263006 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.966184947 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.976037954 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.966767309 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.969977342 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.983512958 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.986937976 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.983261077 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.268283736 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.001727852 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.967957061 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.983849022 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.974543596 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.459401351 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.969798156 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.971259352 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.428853587 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.978637757 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.461585318 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.983341759 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.968854965 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.981627839 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.999428973 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.277350433 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.990756175 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.965602156 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.975349873 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.966241504 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.976477845 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.980019286 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.971254026 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.966592181 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.982007035 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.003065505 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.97816105 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.969796739 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.97680804 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.988380531 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.976325984 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.979466153 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.970864103 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.962612855 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.977745647 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.972736749 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.971539881 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.97203396 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.972986806 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.979027068 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.428611495 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.992401964 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.965221182 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.965711941 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.968085713 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.98295524 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.425279888 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.977254523 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.990787523 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.015885329 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.969729723 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.269513284 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.002068047 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.985479042 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.977531484 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.973217272 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.964704405 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.270373338 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.457053184 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.992715786 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.970902732 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.968032618 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.986656411 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.971697451 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.965902111 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.280151207 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.000173968 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.983503049 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.091193032 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.980400573 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.002382963 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.969744324 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.972719298 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.004812989 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.985984024 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.003030756 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.972655116 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.986173136 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.986566509 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.966399909 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.981468631 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.980214515 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.970977244 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.976300963 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.965034115 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.00551555 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.984241308 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.984838173 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.991028166 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.092338092 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.967149899 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.272099254 seconds)
done (took 309.127716996 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.037157911 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.965605499 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.066137076 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.969777584 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.051805744 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.051692135 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.965671643 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.966642035 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.96537647 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.340940936 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.966371304 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.966880271 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.959548953 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.965985963 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.047874601 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.968591436 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.965792293 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.304265536 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.967897273 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.0385532 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.958870107 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.966146491 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.968819988 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.349269054 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.961950011 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.965625571 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.039212452 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.968812306 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.33786353 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.96841582 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.965480372 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.381396774 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.0591358 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.987508875 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.979842725 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.9771817 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.05383727 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.974941791 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.049526535 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.048879841 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.066988567 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.009064448 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.96734585 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.962069798 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.974044321 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.970681797 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.96770466 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.998879048 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.963894623 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.967685894 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.306478261 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.979400843 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.968064369 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.968392705 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.968488074 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.00000537 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.968375406 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.969918481 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.059524143 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.970526995 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.031442856 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.35044399 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.343288975 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.971392294 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.967469554 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.968519808 seconds)
  done (took 191.033076162 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.037113897 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.042657872 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.038362483 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.97424983 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.017832676 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.04246916 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.973928522 seconds)
  done (took 16.024850554 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.976639148 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.971979281 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.020451272 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.020106787 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.971077396 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.121254448 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 2.446750958 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.982302243 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.968789319 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.023407441 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.972694371 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.972811825 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.978392111 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.964476859 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.01966424 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.982126858 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.087088099 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.972168552 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.971909585 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.125526793 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.969672898 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.978957439 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.02647974 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.984624489 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.97246593 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.977395967 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.568476741 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.972424904 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.970516283 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.972502654 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.969831461 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.015225643 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.973933748 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.967447738 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.969959929 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.087905921 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.972559983 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.970367028 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.972385319 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.9719848 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.972774943 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.972732423 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.973273369 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.970853182 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.973808962 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.996612845 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.973855553 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.973601586 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.97395887 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.974717242 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.022833331 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.973726075 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.971813057 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.972805737 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.029428057 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.981370356 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.974760346 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.970863619 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.974079227 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.972227082 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.127738096 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.021570212 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.973997722 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.021501519 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.974604666 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.974775975 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.974534013 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.973793239 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.067953484 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.974128253 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.022288161 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.972217493 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.131936725 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.997664628 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.97633915 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.976638213 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.976575974 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.975315684 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.968535311 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.980399612 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.972673158 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.975863506 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.98153357 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.973824853 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.973084279 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.087049771 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.083052641 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.972591227 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.98743071 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.982878403 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.973387206 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.028150634 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.974919228 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.972931308 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.029067197 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.091207256 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.03230364 seconds)
  done (took 216.471655293 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.980522936 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.984127248 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.976315338 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.990827737 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.976474123 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.975140212 seconds)
  done (took 13.7875152 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.978286499 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.978738536 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.977009839 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.976523092 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.977348111 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.9759942 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.9768275 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.977885601 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.98185929 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.976617974 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.977179638 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.976791552 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.977302658 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.977378829 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.978125848 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.977238553 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.977116205 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.974406985 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.976700084 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.977926984 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.119441949 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.976044822 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.977407813 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.977979433 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.982144984 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.976740501 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.98420153 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.977672242 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.977483948 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.986767466 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.981190573 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.97805829 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.977804161 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.983790796 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.982089862 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.978669077 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.983263857 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.980445515 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.976051409 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.977883738 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.980564765 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.978136819 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.978478731 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.980062626 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.980625012 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.98469661 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.984434944 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.985631606 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.978785026 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.980321736 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.98027124 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.978939834 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.978821803 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.980642883 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.980986025 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.984081867 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.984753921 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.980256688 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.978282967 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.980406015 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.98152654 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.979585319 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.980779728 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.984338254 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.986939835 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.981718603 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.980876007 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.985366842 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.981330154 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.980705549 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.981973928 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.977790915 seconds)
  done (took 145.591033452 seconds)
done (took 584.821017578 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.189521069 seconds)
  done (took 9.096803672 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.019315456 seconds)
  done (took 8.999400307 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.729061913 seconds)
  done (took 10.64024627 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.991035789 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.017293729 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.984697219 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.988169535 seconds)
  done (took 29.903586642 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.339835551 seconds)
  done (took 9.251504419 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.992883629 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.977743738 seconds)
  done (took 15.938736366 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.067599821 seconds)
  done (took 8.979270307 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.080360693 seconds)
  done (took 8.996055858 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.998689053 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.994729762 seconds)
  done (took 15.918122578 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.961946069 seconds)
  done (took 8.872791258 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.728865241 seconds)
  done (took 11.648453487 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.987755759 seconds)
  done (took 8.912074025 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.003212986 seconds)
  done (took 8.915279707 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.24587924 seconds)
  done (took 10.158288442 seconds)
done (took 168.138545998 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.980950005 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.979869604 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.979496068 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.98081736 seconds)
  done (took 29.833128814 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.01862585 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 2.017956625 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 2.020641378 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.029873452 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.02135819 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.018559207 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.009909949 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.011580763 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.030191996 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.021633321 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 2.020390156 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.020852188 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 2.01928963 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.010568082 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.021102543 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.021051619 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.030088127 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 2.021046583 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.011795765 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.022769503 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.986553214 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.031548022 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.022081958 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.98696422 seconds)
  done (took 50.341013621 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.184846448 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.058768991 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.142057386 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.039301272 seconds)
  done (took 10.339338872 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.037949028 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.039918421 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.056344516 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.093491408 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.11875021 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.049485677 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 2.01371741 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 2.007529563 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.994571515 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.041037922 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.115775872 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.056122545 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.142209723 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.9867622 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.174112372 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.987384737 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.986895707 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.038631486 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.090551924 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.108801833 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.988358333 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.039336664 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.052267954 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.057332687 seconds)
  done (took 51.19190069 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.98696459 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.994900927 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.993410742 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.986908707 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.98717652 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.987728313 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.993064124 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.987604898 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.008427338 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.988773139 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.986909473 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.986772674 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.986513367 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.987060664 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.988088407 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.999590514 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.000793106 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.988602898 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.992158926 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.994038556 seconds)
  done (took 41.741538511 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.980958824 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.835824535 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.333090761 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.257442799 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.981944067 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.982887307 seconds)
  done (took 32.287927008 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.002972376 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.99404277 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.987906065 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.046100303 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.12873808 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.997610743 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.988216535 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.999427852 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.037187266 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.056540842 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.011204017 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.017268115 seconds)
  done (took 26.184707809 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.982946459 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.98479163 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.982711625 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.999910658 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.999937515 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.997551053 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.995423964 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.981278987 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.001868929 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.007325467 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.997462204 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.001178637 seconds)
  done (took 45.853173223 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075538789 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.029899367 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.005665193 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724499812 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.371071379 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.195262353 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.591590451 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.32111752 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.989349327 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.258457972 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.931846995 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091635311 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.240469998 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.613879346 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.022183552 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.430003364 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273022011 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188898589 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.005559989 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.643864948 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045029425 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.303116647 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.717057072 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.036173359 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.196964051 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.113885782 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.246650703 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.986185719 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116043082 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014241049 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997257348 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.986275938 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259450579 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.350739747 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086451292 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99717481 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.604676634 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.698850466 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 7.070361623 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.644732742 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.663909077 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.099752931 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997043904 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.986669097 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.920821015 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.270805103 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367491693 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.993042269 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.698517258 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.988059058 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999255062 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076962792 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.990882053 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.802266566 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.906348995 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.990619228 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.985358543 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993363052 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.561954463 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.089824163 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.304715708 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.966616737 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.080579195 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.648936628 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.364006695 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.126573188 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.991208431 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.992300863 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.922888236 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.647151026 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039210551 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317472207 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.008881962 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.638225759 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282327249 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.982366682 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.932506367 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252582902 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.648888126 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.967504525 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217856346 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.988913466 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.924685201 seconds)
    (84/481) benchmarking "5d"...
    done (took 4.031239212 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.924018159 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.25059218 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019968094 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.727280436 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020591283 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.323586536 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.00118203 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010293333 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015491999 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.214405168 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.872878578 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.990447809 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.719420389 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.13468009 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013536874 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.327120782 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.926115262 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.995143104 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245862937 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.20397214 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.195786477 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.478192484 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138959309 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.709851062 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.049165864 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.271720785 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.045451901 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.25478162 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04033271 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.1006282 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041978282 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.992049474 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29518006 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.703634922 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.134887528 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.969969581 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120053986 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.300573845 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.011582211 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057083459 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.00106602 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.993057129 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.73481239 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.539936855 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.992741255 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.992555248 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.206225687 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045641353 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.992443111 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.954951863 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.641813557 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.94943071 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 7.007354653 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.216574719 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.726372825 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.309873023 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.927285155 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320826493 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.04829883 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.217237272 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.626975211 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.050374324 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255360336 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.195934396 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.236953143 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046151708 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0114573 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091252426 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016594863 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.272609271 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.291511894 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.996680431 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.997144681 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.748759312 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.024638108 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.002316921 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.999074466 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.793318871 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263503169 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.008809591 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.999724047 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.885275186 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.007967198 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059663225 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.998547006 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.004347138 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.541054342 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.724127718 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.001796361 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.604598997 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220270877 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004819401 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.659192806 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102644265 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.078170956 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260816412 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.044287785 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.928808461 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.70531807 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.688395076 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.995115422 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.930131547 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.994731403 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004821231 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006007548 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.192055586 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.265524046 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.029108143 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.654896592 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.033067454 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006582291 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.001275833 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.995737995 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.51451578 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.095527947 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.31407407 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.047068619 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139388594 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.008927625 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.929894184 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.999827528 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.000233073 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.996143407 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.995758452 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028885741 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.659058595 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379064998 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259959597 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.734645702 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.01117427 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.682900368 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.049285947 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.057337119 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.729368802 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.299884626 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.034475233 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022061108 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.00777183 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.66201636 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.701450984 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.568414217 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319149282 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.287226764 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429336598 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.333079899 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.030695522 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.333074911 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.931521012 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.553931539 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056350767 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340121005 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.954255687 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087514286 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.634536879 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.32570991 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014355431 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226131631 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377954896 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.643286824 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.170364709 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.212256361 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033851341 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.2924423 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.966107843 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.522356247 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139645196 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.654524729 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193948999 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33162042 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.608723156 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.114158424 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.99758747 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.66440635 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074769004 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.709611332 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.178462614 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.310290856 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.859719797 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462676487 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.006531423 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.229979377 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.350111446 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.269987218 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.127818355 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.936977681 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.011446068 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.011126236 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.001425633 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.006320054 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.914003295 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.254467339 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011852316 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.934945475 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.239714717 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.290657935 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.895691986 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 2.006601459 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.001580504 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.30284221 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.696826561 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169127775 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.221222597 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.532708308 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.009889411 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.934494994 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.934778478 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.694578099 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.006843751 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.976175286 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.209114793 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.095189562 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.919571717 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.216349718 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.090241268 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.258500719 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.015968578 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.265705349 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266835301 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.698444314 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028645147 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.102300364 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.615490575 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.100161847 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.003828235 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.238617713 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7995594 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.229736597 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.022373182 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.950439025 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.001647532 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.219568951 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.00417696 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.848832216 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221328723 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.721740231 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.01498611 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337119777 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067999586 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.835048157 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.040049068 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.096345027 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01288377 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083432312 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015385443 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.015626555 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.015288207 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051067064 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.841457359 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.119199437 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.018202872 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095400858 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.12338003 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.531370377 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.011072702 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270117536 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344213366 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318438081 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053981029 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.00557365 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.00539149 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.938998319 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153763995 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.234927642 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.27963992 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.133454666 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.159641879 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031107066 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.606753504 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.338953626 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252135457 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.281185462 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.905938324 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.6580887 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.05192403 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 7.005693978 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017314452 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.217886122 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.211826735 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298262258 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.146640024 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.217679576 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375090758 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.280032311 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.006976004 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.005987475 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.599401062 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.017088592 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.675925053 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.040952022 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.865995032 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273088614 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016536562 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.374483794 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.024954226 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.167895019 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.524640324 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.712899002 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.293653062 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.981426094 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.051826352 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277110136 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381051869 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314944511 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075973238 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019958299 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.114762495 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155738809 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.933969193 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.00963096 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.007260367 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.058788074 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.718483828 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.018403671 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281819876 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308808449 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.006280259 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.932631941 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033864387 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.019714337 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.232123392 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.267465391 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.255862103 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019331116 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.014285091 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.823384722 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281233799 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057611172 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.943889629 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.013162435 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103456236 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.253639466 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032453678 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.462761911 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.719913007 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280396381 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 3.004639071 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033199334 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.307141461 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377612514 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318722337 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.543866379 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214066131 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.591034918 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.726198582 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.316150817 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.01597463 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.293507944 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.318471353 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.013547893 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.226415186 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05374106 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.275306055 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.31464557 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.026182489 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.691563916 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.976281226 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.351669907 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.565162562 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.951688621 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.0218418 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.070858282 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.011704692 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.140055015 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022442335 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.927993338 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.305226825 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.800802821 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293178962 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.016721562 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.000743766 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.666099013 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.417587183 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049809235 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156653678 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.01460729 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.727834953 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.373958992 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.268312408 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.22316387 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.023420086 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.016519662 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.01200711 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.010364269 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.217792329 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.208781892 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28037164 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.248362467 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.055144538 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.017188647 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.229315469 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224683199 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.847742836 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143401762 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.23146221 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060526748 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.925118038 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.5223221 seconds)
  done (took 1739.208897592 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.015670614 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.041460326 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.053818419 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.093593594 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.055731562 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.064110958 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.036630352 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.118484093 seconds)
  done (took 58.425855687 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.012218603 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.209118475 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.022239487 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.012205954 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.022683808 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.013311214 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.182530373 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.024633473 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.02296618 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.022501099 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.013295776 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.012313405 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.354297449 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.038930632 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.012751494 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.013801018 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.022198214 seconds)
  done (took 76.973715153 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.01444611 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.155246125 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.039322881 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.025513505 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.044169021 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.034295519 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.981884941 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.093673192 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.015681051 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.271947799 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.649364216 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.064664403 seconds)
  done (took 92.338778393 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.023823222 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.021210147 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.021356043 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.020327714 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.021779226 seconds)
  done (took 12.061440688 seconds)
done (took 2268.721089325 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.260149281 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.23433682 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.252691683 seconds)
  done (took 6.435810732 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.166242896 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.21740012 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.376739151 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.354294857 seconds)
  done (took 11.068156502 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.306689405 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.399179681 seconds)
  done (took 6.656298667 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.422397288 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.022999469 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.403938601 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.018981346 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.01932878 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.019363598 seconds)
  done (took 23.013693251 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.021445863 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.024108312 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.022134308 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.024474927 seconds)
  done (took 10.042856521 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.002358199 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.727100125 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.004010865 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.014934356 seconds)
  done (took 21.699297762 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.771294578 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.781266071 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.766736215 seconds)
  done (took 10.271237929 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.476766209 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.908459357 seconds)
  done (took 9.336810086 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.285342274 seconds)
  done (took 4.237915948 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.154418481 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.332732237 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.536355258 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.529532688 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.619637214 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.774023421 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.361178386 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.285589519 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.450882705 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.473262095 seconds)
  done (took 26.469219954 seconds)
done (took 145.291871083 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.415626236 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.049148269 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.221204451 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.371152185 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.251576014 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.220198562 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.353657197 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.354210346 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.884234063 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.875857839 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.371150048 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.249408409 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.512273623 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.045231741 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.514552908 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.039217678 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.247223769 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.432375882 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.074045517 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.305727416 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.352360192 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.008051297 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.216745038 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.023334316 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.248781903 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.170928771 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.587537329 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.039432905 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.224968984 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.600228825 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.175278413 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.461365095 seconds)
  done (took 173.850942584 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.941367582 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.021122889 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.023009099 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.020091809 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.676235986 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.028690455 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.021414368 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.02022821 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.496084352 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.482085543 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.039002466 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.698937143 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.039688463 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.019788439 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.029226307 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.027400353 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.593117087 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.038129518 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.038294804 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.037328325 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.041435509 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.614643912 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.037213263 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.642597296 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.59604391 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.040148711 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.023571303 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.04232303 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.026223609 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.029090917 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.032939622 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.02223461 seconds)
  done (took 215.396045868 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.022151451 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.034932996 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.02409405 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.022308081 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.0240548 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.023705778 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.023500516 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.022177783 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.820648181 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.812299647 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.027779904 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.028223672 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.030693249 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.022988472 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.031731994 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.023209121 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.035624201 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.03571619 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.031725552 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.033271127 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.038226578 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.900934744 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.039541614 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.895271996 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.032346783 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.031560644 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.024769177 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.036606502 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.037948246 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.039270994 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.04018936 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.025221286 seconds)
  done (took 226.242858729 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.228553383 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.031069587 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.031204539 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.98157579 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.03163172 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.030539521 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.027572194 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.222214035 seconds)
  done (took 20.563314682 seconds)
done (took 638.021685778 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.488981854 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.334669087 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.213431255 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.054862391 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.286134661 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.093772144 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.051317854 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.115028526 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.782763723 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.120233125 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.696972218 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.072565084 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.781657989 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.078064842 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.181401151 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.111171739 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.595057776 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.690404244 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.236268382 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.119487968 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.234215432 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.986757526 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.129218715 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.7960507 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.801434378 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.0322341 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.234621287 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.603577816 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.064661252 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.218348528 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.812646784 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.461569178 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.066389413 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.051306096 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.104105006 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.085056716 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.401380002 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.064023198 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.178400374 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.786643631 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.123242459 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.669795402 seconds)
  done (took 109.969049266 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.021811435 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.020596501 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.020603856 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.021180438 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.022311451 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.020076685 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.020822136 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.019401886 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.020790618 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.019800771 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.020888733 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.020897197 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.021280071 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.022437556 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.021868187 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.021307469 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.021184767 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.024263538 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.021215198 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.020328526 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.022835509 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.022681316 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.036016734 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.021241133 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.022703348 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.021933464 seconds)
  done (took 54.541732676 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.035455835 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.17786432 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.259730236 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.053456712 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.034136839 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.037666632 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.054227029 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.041095511 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.038050937 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.037621444 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.133182109 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.042179578 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.053700794 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.258587823 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.051173538 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.036244307 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.037291033 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.035982974 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.184998671 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.050931512 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.05483209 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.041243295 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.054719454 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.049088595 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.037550666 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.035808188 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.037994163 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.509382041 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.045829265 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.132279788 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.078733598 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.05766099 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.472971234 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.268748394 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.091943904 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.044117826 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.037483066 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.136156251 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.04360109 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.037130748 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.055057532 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.042798954 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.261356302 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.53973293 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.051439438 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.039851686 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.522162074 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.144285152 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.077543232 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.048024293 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.263074184 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.05436366 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.039536701 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.0374533 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.074795999 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.047944336 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.037525048 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.401813294 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.049300177 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.055103963 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.044209157 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.039106568 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.193404013 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.046470967 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.182399313 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.046683705 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.045769695 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.038723881 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.260522568 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.053989956 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.538727367 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.051664971 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.03959909 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.135598503 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.186052512 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.544541886 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.050723259 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.195396497 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.489126009 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.062954358 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.046331534 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.500215543 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.06716317 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.044800552 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.042088051 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.041864542 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.039947985 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.084293186 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.054883193 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.478838392 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.545828996 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.417428001 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.067150017 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.055516747 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.041196046 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.402048878 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.04985477 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.041017369 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.256875836 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.554802293 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.053405627 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.046899667 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.530241134 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.055211918 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.059030426 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.048279976 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.268020414 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.055050405 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.084254052 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.041452241 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.046712693 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.043208022 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.059221458 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.048543895 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.041481428 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.518125911 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.156600188 seconds)
  done (took 251.963701279 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.036862322 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.036169607 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.036167698 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.04926103 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.034665864 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.041239123 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.034751426 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.03379172 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.041101913 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.033605946 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.03561398 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.036068919 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.035059095 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.046203038 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.465300417 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.043010173 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.650332275 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.034525784 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.034803304 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.0370538 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.722826065 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.043421588 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.034624883 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.03585566 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.038192095 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.034762767 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.045365273 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.087134479 seconds)
  done (took 172.808858878 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.04311814 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.227233508 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.058907336 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.077303768 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.05238874 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.041233487 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.066475747 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.066769322 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.047466408 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.040997737 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.042315264 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.104435135 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.054486644 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.180748279 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.076213501 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.073937697 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.151253501 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.0520309 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.041506024 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.04265285 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.071600975 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.040040717 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.106387915 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.176156806 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.061845473 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.165008358 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.048944917 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.046323106 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.042727091 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.162996859 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.059213043 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.107106395 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.071955668 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.06309794 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.167618835 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.161950251 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.155085668 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.076063586 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.048835841 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.042687274 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.043230545 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.031937877 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.161378481 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.063329233 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.044642629 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.154883509 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.062614071 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.046760892 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.05433415 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.044014799 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.056716635 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.06154783 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.113621006 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.179273582 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.077264494 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.06959901 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.068314114 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.317934782 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.054424647 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.14560138 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.038347674 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.166131997 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.063433946 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.030926647 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.045632012 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.050880284 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.0738346 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.078028506 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.156909965 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.053873054 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.148846902 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.08131718 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.053591251 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.045941428 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.047940235 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.165940912 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.166223304 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.082373566 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.084177434 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.078265279 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.043187626 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.045683069 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.032669823 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.06285411 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.051724331 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.165627121 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.164507836 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.053683452 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.046463057 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.048018306 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.046930442 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.069635296 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.1749879 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.07901894 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.147883117 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.116533696 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.120836438 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.059136022 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.060543533 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.051142584 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.112668918 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.061199214 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.058285892 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.364462985 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.118745622 seconds)
  done (took 221.309882359 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.525139832 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.102641467 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.101153449 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.33396217 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.46642197 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.961875389 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.092794395 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.096304647 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.121517056 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.255971375 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.154705365 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.107336274 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.084012789 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.069560114 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.095164053 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.116583058 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.100274374 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.405789173 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.212121458 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.242631914 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.075470651 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.406789943 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.411565583 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.478438819 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.133307098 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.428517179 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.777120664 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.342532904 seconds)
  done (took 66.681091168 seconds)
done (took 879.232329787 seconds)
SAVING RESULT...
DONE!
