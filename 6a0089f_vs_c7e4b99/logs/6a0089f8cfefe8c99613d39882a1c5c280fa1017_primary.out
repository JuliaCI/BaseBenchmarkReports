cset: moving following pidspec: 18993
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.421884722 seconds)
loading group "string"... done (took 0.588593399 seconds)
loading group "linalg"... done (took 7.723547143 seconds)
loading group "parallel"... done (took 0.167112163 seconds)
loading group "find"... done (took 1.223996872 seconds)
loading group "tuple"... done (took 1.861379907 seconds)
loading group "dates"... done (took 1.289143725 seconds)
loading group "micro"... done (took 0.24878171 seconds)
loading group "io"... done (took 0.932041983 seconds)
loading group "scalar"... done (took 39.463610031 seconds)
loading group "sparse"... done (took 12.080006949 seconds)
loading group "broadcast"... done (took 0.974774109 seconds)
loading group "union"... done (took 12.676606025 seconds)
loading group "simd"... done (took 4.47088317 seconds)
loading group "random"... done (took 9.097854011 seconds)
loading group "problem"... done (took 1.934580181 seconds)
loading group "array"... done (took 21.299698158 seconds)
loading group "misc"... done (took 1.736677177 seconds)
loading group "sort"... done (took 3.328693676 seconds)
loading group "collection"... done (took 17.454732444 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.553366347 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130482271 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117135652 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.125547687 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148970403 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11831371 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12684886 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08860816 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.808956237 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151376674 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.121108786 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.448888454 seconds)
done (took 5.240180757 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.196563367 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085050768 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082668712 seconds)
  done (took 1.310491187 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068923909 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126102669 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069587076 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070466098 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070435466 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069344553 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069372032 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069278571 seconds)
  done (took 1.687207624 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077754642 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072157967 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071685838 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071787911 seconds)
  done (took 1.438265057 seconds)
done (took 5.857169216 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.800748291 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.20577124 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.185828807 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.407924824 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.144577156 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158108857 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.646764108 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.31714882 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.197679216 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082674129 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107913411 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.325457971 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111252056 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.650035249 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077386125 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.093870796 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.14302307 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.43124563 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070617669 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085577382 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09232593 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131489843 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092911985 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077824371 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.148249724 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070753246 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137464147 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083734136 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069876563 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.212840477 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175455664 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.652268397 seconds)
  done (took 10.368831339 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099651819 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100905993 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072281641 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140477522 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10062097 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073154896 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074223996 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070533552 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090096623 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131196938 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092233987 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104333016 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068675621 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07140551 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088381031 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.208458562 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.085713581 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084605126 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073906632 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078585535 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122174068 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081585728 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081176685 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081216231 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131388699 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183347882 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101392359 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.10080043 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069114047 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084283961 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118637683 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128886334 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07025805 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069133216 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12736094 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098095088 seconds)
  done (took 4.732376111 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.383285048 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145480366 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.099921427 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133623692 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068023879 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110712873 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.070359085 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085469535 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.211881451 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 2.043022421 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.605571233 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.119595149 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114324185 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110248205 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071166904 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071589215 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07028373 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.448745522 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.112501489 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105252621 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083482865 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07375311 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071686104 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.398493161 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070803983 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066851719 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070868499 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058415099 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125608651 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071042595 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.971870661 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.13821241 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070606103 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105104509 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.170177748 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.222059268 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.159921456 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072962003 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067972989 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155704057 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073451689 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.067758971 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069800722 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086973987 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068109573 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10692088 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123464431 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070291433 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069993523 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166257547 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068110175 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082520371 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.126369221 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.156667571 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079775418 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06815536 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.265610647 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09055611 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072538693 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067697601 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.18891504 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137026068 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.07098021 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070030558 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071427923 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07287788 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.404830331 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069705474 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.104954349 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071099488 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.090371662 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07407391 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072623639 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078878604 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075973795 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09003408 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069886639 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079053176 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069503566 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069406229 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070256073 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084178011 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.378342778 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069896784 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07302921 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067867851 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088374752 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099731436 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069714773 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068300517 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.206122918 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072410761 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069945465 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.112180567 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070553215 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084671536 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.074012615 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116517807 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070788409 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.131912231 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069775129 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100249966 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068086792 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07299697 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103068943 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084290442 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070946102 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.420665929 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06869436 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.068663179 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073063969 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068769379 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071174175 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070038479 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082755495 seconds)
  done (took 22.930989005 seconds)
done (took 40.555540045 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.239448892 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075102139 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075309327 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074985961 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075449493 seconds)
  done (took 1.774620283 seconds)
done (took 2.987711497 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126505996 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102775025 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067672446 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098198424 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067567612 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103564006 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101712138 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081997637 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101820224 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067805976 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099292184 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067562609 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067516893 seconds)
  done (took 2.387030103 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08744845 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086721555 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073941266 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086610629 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067622645 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086045755 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084301634 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091716703 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084225065 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075349123 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066990571 seconds)
  done (took 2.10352414 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08795191 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087209337 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072743002 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084541172 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070072191 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084838381 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084456335 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089138789 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084455168 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076432763 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06725278 seconds)
  done (took 2.093602048 seconds)
done (took 7.785165903 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081982882 seconds)
  done (took 1.274355569 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.610574721 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.524379527 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085442575 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.115963728 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197832693 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123973808 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.286403813 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090335803 seconds)
  done (took 9.414995297 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.108861516 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071858078 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072273192 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075522316 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071449336 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071951338 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075006609 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071431638 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075565011 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07231805 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074798633 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075320155 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072267352 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070709989 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074587842 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075876711 seconds)
  done (took 2.479604043 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097572189 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096014733 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077022867 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077592507 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074963289 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074312729 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07690731 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075706271 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073512667 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.0746432 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077310616 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076781567 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074261695 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.070986299 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076202609 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078292114 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073652697 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076556259 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077514534 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077405564 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077383657 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067005296 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07431431 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076681873 seconds)
  done (took 3.157761466 seconds)
done (took 17.528759055 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.120050655 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074741126 seconds)
  done (took 1.393979017 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.087265601 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086559604 seconds)
  done (took 1.384528069 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.090319494 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069912003 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.096811555 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.082856702 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070000043 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069356484 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.093033152 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070391834 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069322224 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069426092 seconds)
  done (took 1.991497793 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.075007244 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.082720473 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073630663 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085840105 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077849156 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06714038 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076586803 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071816691 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08222461 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065510389 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075381879 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086538549 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075125882 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088475256 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076225937 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071464363 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073835629 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070487807 seconds)
  done (took 2.587295579 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.071270084 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070845211 seconds)
  done (took 1.360213824 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.072003115 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067083649 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070401115 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069550803 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066496565 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065494733 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066118336 seconds)
  done (took 1.692008048 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.40034194 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114390038 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.308280523 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073646849 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.0849578 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263471817 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068591375 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073813799 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073777386 seconds)
  done (took 2.71763802 seconds)
done (took 14.344052197 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083615448 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088810864 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099172323 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.375263543 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093775103 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067978331 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117106314 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192356351 seconds)
done (took 2.34658011 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.220685328 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.619711669 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.389769033 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.199815755 seconds)
  done (took 2.427334456 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.340791551 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088683872 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060206063 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070705964 seconds)
  done (took 1.788934984 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.071313417 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072387957 seconds)
  done (took 1.372751053 seconds)
done (took 7.041935356 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070730994 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069282298 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091073632 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066255299 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069115414 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.069710132 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066141033 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066892193 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065885849 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069156766 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07191335 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.069072162 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.068994966 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06927221 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066429889 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06569361 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06906363 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065818866 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065643429 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065826831 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069611561 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065621611 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065603518 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065808827 seconds)
  done (took 2.908160741 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087533245 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069181015 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075377323 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075049209 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072103568 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074352664 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07430984 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068750536 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074495359 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071417852 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071834205 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071852304 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071779858 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072531439 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071971341 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072272829 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07460352 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068470414 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071599545 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07248904 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074149132 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069077886 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072301483 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074764096 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071790304 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073107009 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070965365 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068715241 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074292029 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072144892 seconds)
  done (took 3.419497463 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074945219 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066892372 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.067859532 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075085083 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067349456 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06816818 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067631077 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067276305 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067614358 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.178124094 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06829533 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066512479 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066601116 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067583505 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067566248 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071112694 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081875548 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066973066 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066947621 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067631116 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070264728 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067026233 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067215885 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.070019107 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067027256 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066545118 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067211016 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066707131 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067733309 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066477942 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069667987 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070508636 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067108552 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073609313 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06999624 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066494477 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070402587 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066503506 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067313416 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066307416 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066323522 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066707273 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066608263 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072957253 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066765635 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.071316446 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066756206 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067570417 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067237238 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.072695347 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066156171 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066424939 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068611154 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068238938 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070882384 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066268229 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.070572984 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066785021 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068463277 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.0666268 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06621196 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066134463 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068806203 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067671506 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080765849 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072976223 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06659319 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.071995795 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067465608 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068925359 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068270889 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079594317 seconds)
  done (took 6.302445212 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.106429782 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08944677 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067706189 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067393938 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06414553 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067244321 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07253301 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067341825 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067609966 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073146767 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069865253 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067137972 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067384843 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070569862 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068163877 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067734081 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075718678 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067296848 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067358187 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07076748 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070911507 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070279031 seconds)
  done (took 2.824767361 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.162898909 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073446293 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10729757 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076340151 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07007784 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076446764 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073139988 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073508383 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073248919 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070615534 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070345208 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07330797 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070023601 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070306557 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070813643 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070639623 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073301295 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071111319 seconds)
  done (took 2.669570821 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079974029 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068690388 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091408146 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068837608 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068436347 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071695065 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072877962 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077655415 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071534035 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068446505 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077347482 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071782322 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071660991 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068157624 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07173246 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068262499 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071252983 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068164279 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077576119 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073303123 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072668543 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077243539 seconds)
  done (took 2.850471323 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083730452 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07088345 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084797539 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071431702 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064421666 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067727979 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073180887 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06823741 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073294517 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070740356 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068403596 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067519433 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071767442 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068477648 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071659967 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068505446 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070883305 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068167783 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070733542 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064217462 seconds)
  done (took 2.663335654 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104860336 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071023084 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071473793 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09349605 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07109838 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070661343 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091735365 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0709775 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070526331 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090134429 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070478158 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070424279 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091658655 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075476554 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070831956 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091675374 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091467983 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091570999 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070592126 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070546788 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090442284 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07043511 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091642524 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070527709 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070474091 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070549539 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07145029 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075389688 seconds)
  done (took 3.457172273 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071803254 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069197359 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066018695 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06588439 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065703253 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065955039 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065817599 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065913628 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069353343 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065915409 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069077901 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069338292 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069032263 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068989672 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069656348 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069048977 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069487357 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06581553 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065769669 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065590494 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069212242 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069292673 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06937806 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065901347 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065914425 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069136513 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065912286 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065674265 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06953532 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065607836 seconds)
  done (took 3.277405714 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07946914 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075366725 seconds)
  done (took 1.404572838 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067391166 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084748296 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067241427 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072432712 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072623225 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069644475 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077165162 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072017253 seconds)
  done (took 1.827494157 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085712923 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081367046 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071042284 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.084136749 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079911296 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086347523 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135703591 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.07097832 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075694053 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067562154 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082472513 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068409365 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075244838 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069324416 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07460041 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075296604 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067262429 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075921777 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071561247 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068458421 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070612799 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077862058 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071865223 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064079362 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070370735 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090940049 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080236228 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069094635 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071864133 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076094689 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074534062 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062410485 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069586528 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.0697133 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067313303 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079180105 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083949066 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071809256 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077567214 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070104187 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080054286 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063503038 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073955626 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075605742 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07901343 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069594337 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070268051 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063526486 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066941521 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071561814 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063985134 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069288611 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06341652 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078560959 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073008848 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08036486 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068899326 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071061278 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072284275 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072567568 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07615884 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071575341 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071643892 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069284737 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078712566 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073540844 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077998811 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063804139 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062552638 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067772505 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078645504 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091147952 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075246164 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.07043621 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070311431 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067158064 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072359016 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070642167 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075040675 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075727591 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069697368 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075498743 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076319374 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069626413 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072520055 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077819894 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068220975 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072745229 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068242398 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085903012 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068491741 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067765799 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067974386 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08045736 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072794908 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069406987 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067561615 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076273506 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063545631 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069496033 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069351596 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068656109 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078479456 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072797265 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073450592 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076703451 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07584762 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068117531 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071001551 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065203238 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069172086 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067021084 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074739642 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061544946 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070608714 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.0689874 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068846681 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076047017 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066280501 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067962589 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074989978 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073668431 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067306215 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066013707 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070889584 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068637491 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071294865 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075804029 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067463248 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062829265 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062759921 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071603342 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068230376 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071925574 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072507347 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070517545 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061637271 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066479606 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072744006 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076495419 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067995957 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068768653 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073909268 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06894662 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067442053 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07396361 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069848507 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066928928 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07313262 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068750368 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062605264 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070934939 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070440483 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066894033 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071574275 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070366236 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.06868618 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068073528 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066195808 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073285879 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068434251 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066501003 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067733514 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066253263 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07697482 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069865225 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062168525 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065015098 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075059799 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066905786 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067593904 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066743723 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069418975 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068084244 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065959594 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066922983 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069233487 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07646172 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070374658 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068121612 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071962891 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078068054 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067761306 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069268642 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067128929 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067954319 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068358536 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075440772 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072385041 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071887835 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070444337 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06410694 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072278333 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074491632 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067064093 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065364912 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067158175 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071242816 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072530526 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070300065 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06842396 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066559792 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068746849 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070583516 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070263635 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067616909 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066686701 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073783855 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065898281 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073526343 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068875572 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076582547 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070852762 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06222231 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071235655 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065856562 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073754795 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062327615 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065871601 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067015018 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069126964 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066434834 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.0694922 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060674193 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073709922 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074101887 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067617987 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066521834 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067973992 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073317087 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069020403 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071121229 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069924801 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073340616 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.311481978 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071291969 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.075743831 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.084078763 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.073279851 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065762079 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077881657 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.071037342 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.071381827 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.07138645 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.070425542 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075008546 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081490976 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.079436427 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065008232 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07425082 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.070604055 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071342438 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066306758 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076671177 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074171511 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.073090327 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078323328 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072613078 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071988138 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074811661 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.071325241 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.072567548 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.072938912 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074256521 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071850967 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073230356 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070708998 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074111889 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070156842 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068791597 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072953724 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.071754429 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071661126 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076766955 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.071590511 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071384714 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073674698 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071999232 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071791955 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071613681 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071002891 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074275354 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07171536 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071446602 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073881194 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065586402 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077941705 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070822979 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078252522 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07055853 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067515 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077687205 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.0728419 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.076625537 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071617677 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071571075 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071650692 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070890596 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073822355 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077550893 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068291949 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079868812 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077745304 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070750107 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072842718 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07025917 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072014695 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069361285 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071002506 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071685684 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070540856 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070320757 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074942317 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073105883 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070441058 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072000289 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071224088 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070780468 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.07148477 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06416536 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069528916 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069891766 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070738372 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08032977 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070640558 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069760652 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.070077819 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071242894 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069430199 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067059474 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.078558697 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079416759 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.071331747 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077561209 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069457844 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071739095 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081115032 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063888935 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068453482 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068315581 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067986466 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077404116 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070848524 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078595661 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069627623 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068952313 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066517633 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069676997 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068123629 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063342606 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06808997 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072992887 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068349078 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06863435 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069805679 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071743327 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.203707639 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080738541 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069786029 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070666925 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070228676 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067458915 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069375038 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069255692 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072743085 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071481697 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068163137 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.0683284 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069957845 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071187627 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072164195 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069805289 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071432494 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078866676 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070370728 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073669496 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073798161 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064138853 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07286059 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070657861 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070055949 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069580875 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073433658 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072903103 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071957987 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078816309 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070052041 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071158533 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070864264 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068223681 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070523001 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069950428 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070348028 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069577795 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.072151077 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077646707 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068021638 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073785034 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070117762 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070646122 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07647293 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071184065 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073164165 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077270021 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070630701 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071826516 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077906816 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07493005 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073118214 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071312274 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.07192179 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075585242 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069213379 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076459654 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070088618 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070875721 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071601592 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068392575 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069904572 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069936622 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069478419 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076514087 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071452949 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069757719 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069382489 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068471263 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070855384 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07345283 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077240498 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072730045 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072892025 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064678389 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067602149 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071180168 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067834204 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071811237 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072242738 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075336749 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071941513 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.07045295 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06927173 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078646795 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075447663 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073470078 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067737877 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073623024 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070738227 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072164926 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071329876 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06993053 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071235122 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073298682 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070999818 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068783638 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076492983 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072828662 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070854979 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070925533 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070338903 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070137204 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063865533 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.07040996 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071227615 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074407714 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071705964 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070074487 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079389899 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066610678 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06934877 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072416421 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068323152 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07323179 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063516045 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070737864 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070181123 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070188615 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06334554 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068217059 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066986598 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.207790914 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070017432 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064572746 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081162869 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078141366 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073195268 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069544733 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068891347 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065363448 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064725734 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069749441 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071015765 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072224874 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080871681 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069452423 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069274231 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064493595 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070464353 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072854558 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073393775 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067362817 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064464996 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069592553 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073564843 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075941339 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069004813 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069829123 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073534564 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072769715 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06825066 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073715849 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068040212 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074268474 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082359322 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071071595 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071486262 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076898376 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078221962 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070731641 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065615064 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071194263 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07293594 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070116763 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070961441 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071402751 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085193863 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072749425 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069336294 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068965401 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072539673 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069005956 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078047002 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070855939 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.07086023 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074440885 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071750997 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079116474 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072601714 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078146923 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072810828 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072844362 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06921373 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070136673 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068338697 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069020323 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071854577 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071764748 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075294491 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078238965 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069146075 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080307778 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078563982 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071764635 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066951973 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069431803 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069076621 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063999528 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070871769 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.067786377 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067752111 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067749794 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06852744 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070198219 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074449217 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070713739 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070726483 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069771399 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06305116 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071320632 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071538914 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070085335 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066510121 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069579938 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070052927 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073501562 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073265506 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066411459 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071041343 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071367082 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070478565 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064140403 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075751749 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068906167 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071394147 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068691965 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069946305 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071112819 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072837569 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074638986 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070241287 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070897263 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072261048 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070930666 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06624549 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066235595 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073874724 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067137921 seconds)
  done (took 44.382483199 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105614606 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067048345 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064864441 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065525794 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080679323 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066114428 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065347184 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066188955 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066396731 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068706689 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065166206 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065105567 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076843313 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080958921 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080056971 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072650298 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064988097 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066211122 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065172196 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066184127 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07450128 seconds)
  done (took 2.884922928 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.079272663 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.073879278 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076654116 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081278243 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070240842 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07478762 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076017569 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07520269 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079899637 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070412776 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080374213 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074899399 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070488281 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070402594 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070266838 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075102968 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080199076 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070725987 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07480567 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075566344 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083863241 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075708119 seconds)
  done (took 3.013052281 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071867179 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070096926 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071375361 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064011509 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069541126 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.064081837 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073346377 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067729295 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073171039 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068907149 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069299402 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069498716 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072128904 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064243954 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070015862 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068269991 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.11118425 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073583281 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070342432 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.07106762 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06485649 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071472785 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064751988 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065067692 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069433366 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073943862 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070553701 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068425643 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069779264 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069083025 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069845549 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067647266 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071251014 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070264697 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068931959 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069072637 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069899177 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06993224 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064855713 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06871199 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070562952 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065023679 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070753749 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071683489 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068048513 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06806622 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071313577 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069699818 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064146906 seconds)
  done (took 4.788391064 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085965297 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11668357 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070927194 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.095346188 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084144619 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.079728882 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072926898 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095979052 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066617124 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067364321 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085279724 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082810192 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068750273 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074531 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073168471 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068844175 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069856171 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067645177 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072891535 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068568873 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072889279 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076132897 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084460322 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081692217 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073780853 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067494743 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067972985 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074375686 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080866891 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073166661 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07431033 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07507691 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.0848125 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074240178 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067821899 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071515493 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085351193 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068909705 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071598461 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066597103 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072260229 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073676026 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075920501 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085909625 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068913003 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073906246 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068369796 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065434295 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080607111 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071327737 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077270275 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082430529 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072975352 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068379724 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073571612 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08365477 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068164279 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06646878 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071930887 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080111317 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065910767 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073104176 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081766734 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071418949 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07587749 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082228182 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073512334 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072949734 seconds)
  done (took 6.635660533 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08003336 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.076274996 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106237735 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087743982 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076593628 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076380179 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076355467 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075854493 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075917953 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081316618 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076219165 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.097025535 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071216688 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078910187 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076130784 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07604994 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076024997 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076294691 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076563399 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076444942 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07649664 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.087210219 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076065412 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08721364 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083481825 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071476833 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076415051 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07606115 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087533176 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07630581 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083308995 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075930618 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076164171 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087642896 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082902387 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076053529 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069009454 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075956897 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076232492 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076197678 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0715543 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087577393 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07582041 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071140418 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076318807 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075621039 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087274845 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082784825 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07809385 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080530904 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075642614 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086891365 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075851015 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075669602 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087787519 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10845728 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086703167 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087072554 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076218846 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086973061 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086880663 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089675022 seconds)
  done (took 6.358776385 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089309056 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078576643 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079958999 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064391997 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067951534 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072528855 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068010156 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068185501 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078446122 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.078216762 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081448537 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072609407 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075316665 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080376848 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072903938 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075499727 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072511331 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072835742 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078207353 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072807567 seconds)
  done (took 2.880271831 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07803042 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085956513 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069818836 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074183824 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072314699 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074960902 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.071834178 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073098853 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06967916 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072899259 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07951155 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079748196 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070369608 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074269047 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079299419 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074185926 seconds)
  done (took 2.570760907 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078461508 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.075851813 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.089158934 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070546382 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06691598 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065635095 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069310073 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064419896 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065119134 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081310457 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069697466 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072153964 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070285164 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068064279 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065659968 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07250856 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065141152 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06606041 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069614158 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082158239 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079194933 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.074935899 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070243817 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069878981 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068716144 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073541253 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071255289 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066268439 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066032686 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070253102 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06920303 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072102634 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066040434 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067027605 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068250804 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.07054628 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069588623 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070076232 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072480837 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069950814 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067661746 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068415872 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069494886 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.07449764 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064926601 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069804231 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06499486 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070856344 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.070474516 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068974909 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069739719 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.076655885 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070006099 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075650325 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.074695753 seconds)
  done (took 5.262303167 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084891472 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073031922 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064547468 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067662388 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073444041 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070121586 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072944142 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070326584 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070405506 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068220252 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070331832 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072038227 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070141116 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07324527 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070095973 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073036719 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064731574 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070451012 seconds)
  done (took 2.664209296 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075209585 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06918208 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.076169871 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068798495 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068175343 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071675086 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064824296 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068515653 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068610305 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068737797 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068487743 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071757625 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068338308 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072370291 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068452395 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068704824 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07199175 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06835439 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068546487 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06539339 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071984245 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0681771 seconds)
  done (took 2.90892122 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.100008688 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087509235 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143111672 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.083716099 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088803135 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.076208398 seconds)
  done (took 1.95697823 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094230387 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083965331 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069929392 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091284313 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076715318 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069955511 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069850709 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06993444 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080082333 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078654571 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070507572 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080057852 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079969555 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081350247 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077453472 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076933958 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070651117 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070628237 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069582749 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088606576 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070582249 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079375357 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070064444 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069757233 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070207938 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080993457 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07967571 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078689295 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06997943 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079484379 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076793824 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069911643 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079725081 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078657794 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072563489 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079559205 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07032925 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088260949 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076776187 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081014066 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072093203 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076718112 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079611096 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074847183 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079879556 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070108698 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075083387 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070044582 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070415995 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089705851 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07708887 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081163757 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077341784 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08047643 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079879177 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090176823 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079292668 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081202724 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07739492 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08156904 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08127989 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07745494 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081216298 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079397115 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077469335 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081236149 seconds)
  done (took 6.497392826 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10766127 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070286396 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070757584 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079548932 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081157224 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070490059 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070598807 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070504894 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070520412 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070815753 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111946234 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070781935 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081455542 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081641619 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070836089 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070233778 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070734586 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081154513 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069990537 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090654549 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070566921 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081342113 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081409609 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080979262 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079455634 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077315504 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070851452 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070580891 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070366359 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070264441 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075195149 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070708857 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081496961 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070497656 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081357628 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070490365 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070348705 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075394666 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07054931 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077244747 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081448011 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088056761 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070693161 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070355128 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07915802 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070592024 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070426725 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069931074 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070479322 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069971095 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079578629 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079343867 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079650581 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081556198 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070991964 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071028442 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070500257 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070818867 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070571964 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077301998 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08119279 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070262245 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09000779 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070364426 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070161589 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08093368 seconds)
  done (took 6.414049642 seconds)
done (took 134.047448723 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.233688729 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.212418864 seconds)
  done (took 1.820288993 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073685295 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106127078 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080552958 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136124846 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07097928 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10556982 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104497767 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081963211 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070462761 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069958598 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069813234 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072262573 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139498123 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07043939 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069778858 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072570281 seconds)
  done (took 2.782056642 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10716458 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.159609934 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099269532 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068611058 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104626978 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07664447 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068105546 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078529268 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074564427 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068507215 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076693549 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073913465 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068391578 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074055902 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07460212 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076284873 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068900976 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07604252 seconds)
  done (took 2.894682136 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108004394 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.097856109 seconds)
  done (took 1.606561256 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.166210034 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.110325003 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.15539815 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.362438502 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.170572445 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.250947563 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.136901704 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.137577329 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.123997403 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.130310662 seconds)
  done (took 3.137703199 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104943628 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.159594584 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314384487 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120005843 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077300215 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098699052 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121613387 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084340579 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084418216 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084134249 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083828847 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080214689 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.105595985 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077272369 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076514943 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079721298 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.109978753 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075798806 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077633023 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080308102 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103899943 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069627973 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077134229 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075324463 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.08100799 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081054946 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069679748 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069184951 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080075326 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077307307 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080140734 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097118457 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080571211 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110433113 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075102462 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.1117662 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080448044 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077279069 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077518309 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077625835 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082178718 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08242686 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076823085 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079701363 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069009041 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080111762 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06953611 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068760472 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081397197 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07085462 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081730522 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080635731 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110649655 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070701446 seconds)
  done (took 6.277624737 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110202051 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109930969 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075226444 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.117962445 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10929463 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075933289 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109367203 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098584373 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.118108164 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073685223 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071946452 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079726938 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086649323 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.087951238 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.124764648 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.110452006 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077556741 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075173462 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110462489 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107771696 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071940758 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102454274 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09783451 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11740248 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.07112627 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074043759 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07156749 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073770817 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081053605 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08282193 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073392384 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.085765939 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.090364729 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082704081 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070582647 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072136634 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071727147 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.084214136 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083426982 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.0832333 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.08214997 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07130715 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071588286 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072684285 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07379264 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071471988 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082757827 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08488585 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082674217 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073041445 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073658626 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071947001 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073346692 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085894064 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081822009 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.085187922 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084170385 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071789221 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071795152 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076457778 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086006866 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084700305 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083431501 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072999102 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.084663135 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072554759 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084911664 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.089768007 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071664932 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073100975 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07149417 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072750835 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072972834 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081833952 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081982512 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072938073 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073267401 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071808457 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085742038 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082715712 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071636272 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08114263 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070785937 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071689067 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073270355 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072768811 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.08168279 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.084360004 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073471154 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072136172 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072553465 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072161741 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070656055 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.080947988 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083447007 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.082449454 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081834055 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072508297 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.082906203 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081980223 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072940832 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081965444 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.200277475 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073868881 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07398052 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08406714 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081802438 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084880569 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07356454 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072745281 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.082823394 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086312135 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072757816 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.083527032 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087077137 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.084943667 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072613876 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086827478 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072419369 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.085026796 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073674386 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085235435 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072381642 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08483679 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073344114 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072660231 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072577744 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.08413177 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07471296 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072759596 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074056625 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074825231 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.083844282 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.089744725 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075237157 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085627395 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.083500203 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07503986 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083505827 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072986244 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084130542 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073350394 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073709428 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070869602 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088061562 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072434374 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072305579 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07355069 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086639236 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072164814 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085133331 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082380202 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072020446 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086819915 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085580361 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.082357254 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085459296 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073806436 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072067154 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07220584 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073272399 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081416424 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085026106 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073631135 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072471285 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082814103 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.085409402 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071003733 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082404643 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08243692 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082808791 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072078717 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072865503 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085098883 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.086047416 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.08247609 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081874378 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082659388 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071979711 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08108455 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082349356 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071432425 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089350016 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07152548 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.087951617 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083019846 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08055726 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083059736 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.085549427 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.085808613 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084838427 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.088334006 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071211636 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071435657 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.08344557 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071596413 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072609945 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.082028587 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072371549 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072619393 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.087092682 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071356891 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082680104 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070696834 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081167403 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069410349 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.204364991 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090383225 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072637708 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073889857 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085229776 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073035336 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082358171 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087301897 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081874351 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072309641 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074520413 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084701669 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.084195511 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072072406 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07219145 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0742967 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081895262 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.08190156 seconds)
  done (took 19.681306496 seconds)
done (took 39.600179691 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.225780807 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156414606 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.197631842 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123449143 seconds)
  done (took 2.201127781 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144272982 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.107491136 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.108700386 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068337587 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.11850599 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068958834 seconds)
  done (took 2.055750381 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.323596639 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.221539808 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184116752 seconds)
  done (took 2.154663209 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208531152 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.199612846 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.447817902 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.299114984 seconds)
  done (took 2.692774763 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150854125 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.0991378 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070668171 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087015462 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.149525216 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.167866738 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.112603025 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.131854076 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081936461 seconds)
  done (took 2.541362728 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.157399201 seconds)
done (took 13.239015819 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.103751464 seconds)
    (2/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.223319582 seconds)
    (3/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.25966721 seconds)
    (4/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.091632942 seconds)
    (5/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074125319 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.20608756 seconds)
    (7/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.228486037 seconds)
    (8/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.201909909 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.155180813 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08851623 seconds)
    (11/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.083681507 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.219880708 seconds)
    (13/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.204187407 seconds)
    (14/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.197094252 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076305944 seconds)
    (16/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.19148099 seconds)
    (17/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107006769 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073623916 seconds)
    (19/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079538408 seconds)
    (20/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.16102498 seconds)
    (21/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.11279433 seconds)
    (22/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052140387 seconds)
    (23/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.173318171 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.105798728 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052799601 seconds)
    (26/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.182574539 seconds)
    (27/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.210438809 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.096984607 seconds)
    (29/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.296124052 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.115369293 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.119644354 seconds)
    (32/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.094588141 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.080686546 seconds)
    (34/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.189708609 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074688169 seconds)
    (36/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052269874 seconds)
    (37/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.079242692 seconds)
    (38/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.161234938 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098474691 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.063329244 seconds)
    (41/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.0780952 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091506386 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.11375967 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094079747 seconds)
    (45/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.20655846 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070201582 seconds)
    (47/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065703195 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.099418088 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099315825 seconds)
    (50/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068898032 seconds)
    (51/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09743847 seconds)
    (52/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07500953 seconds)
    (53/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052072238 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.152425522 seconds)
    (55/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.165143346 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.077188456 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075015584 seconds)
    (58/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.148460907 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090561199 seconds)
    (60/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07653722 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.082664534 seconds)
    (62/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077674762 seconds)
    (63/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083627366 seconds)
    (64/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070059159 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069815131 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.129268754 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.095380714 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.127273884 seconds)
    (69/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077274836 seconds)
    (70/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.161663366 seconds)
    (71/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084359736 seconds)
    (72/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072483259 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.150606783 seconds)
    (74/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080641832 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183320363 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.143365646 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.141428984 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.097121669 seconds)
    (79/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.104217469 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051077099 seconds)
    (81/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090452224 seconds)
    (82/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051057985 seconds)
    (83/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.30330469 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093531829 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.1715478 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.099677366 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.104029527 seconds)
    (88/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.22424177 seconds)
    (89/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.079460223 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.103260103 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.070165936 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073369177 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.153727053 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.077272683 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074478882 seconds)
    (96/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051822928 seconds)
    (97/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.177449208 seconds)
    (98/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.153269141 seconds)
    (99/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.064565736 seconds)
    (100/309) benchmarking ("sort", Float64, false)...
    done (took 0.149036415 seconds)
    (101/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.126621846 seconds)
    (102/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.072853072 seconds)
    (103/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051781545 seconds)
    (104/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080605643 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.124006828 seconds)
    (106/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074089752 seconds)
    (107/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.112039005 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096571447 seconds)
    (109/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.082117735 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069587057 seconds)
    (111/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080744726 seconds)
    (112/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.121224413 seconds)
    (113/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.079138923 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077672868 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069105366 seconds)
    (116/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.122267586 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.152524058 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174082867 seconds)
    (119/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.133804123 seconds)
    (120/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052796235 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070493852 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06870289 seconds)
    (123/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052032501 seconds)
    (124/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069706134 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.149992213 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073297784 seconds)
    (127/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.11364627 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.091023755 seconds)
    (129/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075274431 seconds)
    (130/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073170841 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.077721404 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076825959 seconds)
    (133/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.203852101 seconds)
    (134/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.183314025 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.0843908 seconds)
    (136/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.147611446 seconds)
    (137/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070016881 seconds)
    (138/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.149336392 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.158456667 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093376192 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093738648 seconds)
    (142/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.148285312 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.075151003 seconds)
    (144/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085726641 seconds)
    (145/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075315368 seconds)
    (146/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.077844833 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.115695146 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068048081 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073005572 seconds)
    (150/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070882018 seconds)
    (151/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.169199151 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072503268 seconds)
    (153/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072693875 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06976146 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072954541 seconds)
    (156/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072338144 seconds)
    (157/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051053865 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.077311393 seconds)
    (159/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068380483 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.05150412 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068524401 seconds)
    (162/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07417414 seconds)
    (163/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076223746 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068366241 seconds)
    (165/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070942555 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094040696 seconds)
    (167/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.067152329 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077661145 seconds)
    (169/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069263031 seconds)
    (170/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.11322332 seconds)
    (171/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052577586 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068977157 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.103506049 seconds)
    (174/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056130487 seconds)
    (175/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072440989 seconds)
    (176/309) benchmarking ("sort", BigInt, false)...
    done (took 0.203103168 seconds)
    (177/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051377453 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093351315 seconds)
    (179/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070710051 seconds)
    (180/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08417448 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072730952 seconds)
    (182/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084094874 seconds)
    (183/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072840855 seconds)
    (184/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051275791 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096035872 seconds)
    (186/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.116695738 seconds)
    (187/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.147771535 seconds)
    (188/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050911309 seconds)
    (189/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.226946803 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068362151 seconds)
    (191/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052768825 seconds)
    (192/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.072880074 seconds)
    (193/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.065377941 seconds)
    (194/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.116954269 seconds)
    (195/309) benchmarking ("sort", Int8, false)...
    done (took 0.153475564 seconds)
    (196/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051782944 seconds)
    (197/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.116450843 seconds)
    (198/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052085981 seconds)
    (199/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.195681788 seconds)
    (200/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054281005 seconds)
    (201/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.116125429 seconds)
    (202/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079012213 seconds)
    (203/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051663255 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079076037 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07824848 seconds)
    (206/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096332093 seconds)
    (207/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052516899 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099629383 seconds)
    (209/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051740884 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06991124 seconds)
    (211/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077596738 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069847657 seconds)
    (213/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074233016 seconds)
    (214/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.073304255 seconds)
    (215/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069974766 seconds)
    (216/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071213021 seconds)
    (217/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051691675 seconds)
    (218/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072488775 seconds)
    (219/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05172208 seconds)
    (220/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053283045 seconds)
    (221/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075318475 seconds)
    (222/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074847066 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06692533 seconds)
    (224/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.084585007 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.14406423 seconds)
    (226/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.0775752 seconds)
    (227/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052289725 seconds)
    (228/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082764654 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094974736 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.148396362 seconds)
    (231/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076153811 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094733 seconds)
    (233/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052377559 seconds)
    (234/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070809631 seconds)
    (235/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051571084 seconds)
    (236/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073343204 seconds)
    (237/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.190330616 seconds)
    (238/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.078413644 seconds)
    (239/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.114503149 seconds)
    (240/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07002783 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090372726 seconds)
    (242/309) benchmarking ("sort", Float32, false)...
    done (took 0.151016287 seconds)
    (243/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063413014 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095366062 seconds)
    (245/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052956428 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069339427 seconds)
    (247/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052352425 seconds)
    (248/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.165691486 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.105464008 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069104898 seconds)
    (251/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.188608037 seconds)
    (252/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071572144 seconds)
    (253/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052315153 seconds)
    (254/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070718556 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068974359 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07246296 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094030187 seconds)
    (258/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078369709 seconds)
    (259/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070586639 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070684769 seconds)
    (261/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072340694 seconds)
    (262/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069587419 seconds)
    (263/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051862369 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091462712 seconds)
    (265/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051686426 seconds)
    (266/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051038248 seconds)
    (267/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.05112073 seconds)
    (268/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052563661 seconds)
    (269/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068404907 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152496544 seconds)
    (271/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071569182 seconds)
    (272/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051462166 seconds)
    (273/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051722067 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174549621 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.147515451 seconds)
    (276/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.192430426 seconds)
    (277/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05334449 seconds)
    (278/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051206758 seconds)
    (279/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068439869 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07580619 seconds)
    (281/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052336461 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066696701 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066805965 seconds)
    (284/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051874468 seconds)
    (285/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051880975 seconds)
    (286/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089482734 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06889163 seconds)
    (288/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068623327 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077437458 seconds)
    (290/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067391522 seconds)
    (291/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070724152 seconds)
    (292/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067214815 seconds)
    (293/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051553061 seconds)
    (294/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052559512 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.06998677 seconds)
    (296/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051177116 seconds)
    (297/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052787924 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068876067 seconds)
    (299/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.05127207 seconds)
    (300/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051240264 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068907446 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053089813 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068400477 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.06994446 seconds)
    (305/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094687615 seconds)
    (306/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051253494 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.134181007 seconds)
    (308/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.069125569 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171840344 seconds)
  done (took 31.704077974 seconds)
done (took 33.150804404 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08870276 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095468735 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077843603 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095221001 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083750874 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078110109 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073874173 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079926134 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081312768 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084807598 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084826647 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054400429 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076305464 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07713738 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077122016 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095015593 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082058048 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075333378 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075508914 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067749359 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07602229 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069383684 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070998261 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054621952 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080829737 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07469304 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079194418 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076472456 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069326395 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06956221 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071096401 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075361531 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069247296 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079998076 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073018553 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075824985 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076760559 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077453795 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071044137 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069352257 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076765836 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069011506 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075145605 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075900808 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074809027 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07309197 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075808093 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079878404 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094646198 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071236187 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076279628 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078637287 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081947868 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074796916 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070815306 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07551082 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072447814 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094599001 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075937528 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071448377 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076447079 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075157922 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072781455 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075290292 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075306665 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077587574 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076483863 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072610512 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076946785 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072185846 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068918086 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075779344 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070870273 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068690773 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078676657 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079873241 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066700944 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074068342 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074868508 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077172697 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06724172 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070451665 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070193559 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073963265 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070345085 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054425428 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070481549 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073531527 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06689892 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.0752737 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073911989 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073687623 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070262462 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076236887 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066972614 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07228888 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068546451 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06898822 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070657576 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070799958 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068488684 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070385222 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076044529 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070388341 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073945506 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082140807 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068595906 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074048227 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066795488 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066819157 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082660979 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077087275 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06870409 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07058687 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066841328 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075049721 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066262742 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067881186 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067874684 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068081765 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073718272 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067903079 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070062139 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074828801 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07869607 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067606668 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070027917 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070165446 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067800616 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.204788094 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.069752779 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068995863 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071009875 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064671332 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071516191 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068939476 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076009103 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071439698 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076000574 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071326797 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076128856 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072317931 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074746293 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073263721 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067111788 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061571 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072407027 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070954225 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070702244 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068595969 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070516517 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068826373 seconds)
done (took 12.892130585 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071748053 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14908082 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.10207066 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098869176 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.091556127 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070370285 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079712082 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.106774482 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070998749 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.108786847 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092008317 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088858496 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.119064766 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067358157 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06918839 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073883178 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070598599 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085434541 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107588267 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091947691 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.121347449 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068274926 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.098257201 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.095491406 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090706965 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09732583 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070074887 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073651561 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072825326 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.105843531 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09155513 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072954136 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069753172 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104626729 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.096046113 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086284311 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069798629 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085664625 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069927289 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069353797 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071226181 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103367964 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083282197 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083476176 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073541485 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.072836007 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070001618 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086046507 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092309169 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081963583 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.090109792 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106502728 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071144117 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.068364324 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067419033 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089023281 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.067912812 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072089621 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069555336 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071883713 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069302358 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072362598 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084061042 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085202871 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072768146 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082401775 seconds)
  done (took 7.085017268 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088631326 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093581858 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088488586 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088467692 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069158418 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069825408 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069671528 seconds)
  done (took 2.103278071 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072531988 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092707536 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.095015447 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09545328 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.088662064 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091922328 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080849069 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070213172 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.085623608 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072520338 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091805468 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.106809493 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069709296 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077362656 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.096602118 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070471006 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095612417 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070254979 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073032981 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095526035 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07123322 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087904572 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074647922 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070134106 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084857621 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070129117 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120534745 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074461938 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072123146 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073312243 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067439404 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.114153371 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083870533 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081213055 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069244876 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085317785 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084870858 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06775246 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.0864475 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074946926 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083920713 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070613627 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070690802 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067115451 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074875067 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080873478 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070536113 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.07079795 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072819915 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.09060514 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071424611 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083503106 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07240144 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07146212 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072209916 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073595463 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080312658 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070236904 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090015221 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071668096 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087354376 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086827766 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.0838546 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087043148 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072281508 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083248885 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084142945 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072724475 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072183416 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073906579 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086919767 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067438967 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072422304 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080648093 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072136747 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09434085 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093925564 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071603087 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080973232 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.07056438 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070085601 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070092943 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.0936743 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071808077 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069868914 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075494956 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07418575 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067498403 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069226796 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072155417 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066945264 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072387617 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073019404 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072699962 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073550067 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087220655 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073035207 seconds)
  done (took 9.188624498 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073999024 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071439624 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072102037 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071730479 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071032291 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071781609 seconds)
  done (took 1.99594656 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099680854 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.071877215 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084579005 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075687177 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110537662 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090484274 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090321533 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082336025 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087695132 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083127279 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090320526 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092215985 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096522868 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076538048 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090082452 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075328907 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091097955 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078695453 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082551601 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076930327 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091367439 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076657621 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07692606 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085583488 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079377575 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075565216 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07066263 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082756677 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082535377 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082013195 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076285161 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079403425 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073910593 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08183046 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090844816 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074141101 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075403197 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081665703 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075182879 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079736248 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091740068 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076919342 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079034635 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080820404 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081889692 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074124322 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081211643 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079541231 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090299133 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081762615 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.080765076 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075224255 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.078984431 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080816716 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07370294 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081991191 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081074342 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090418757 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076513772 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074011932 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071515337 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.079541753 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081311838 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078627086 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081710017 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.080438241 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073873079 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075988344 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076397327 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075359633 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080614885 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071838689 seconds)
  done (took 7.398757101 seconds)
done (took 29.297193871 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544148282 seconds)
  done (took 2.069747211 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.62243402 seconds)
  done (took 2.174449042 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.579430277 seconds)
  done (took 8.128347056 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.425384288 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.586347468 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.791136831 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133819658 seconds)
  done (took 3.528727142 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.685899022 seconds)
  done (took 2.24374282 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.221924478 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.207578149 seconds)
  done (took 1.994100006 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.391404814 seconds)
  done (took 1.944683675 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.203369235 seconds)
  done (took 2.752368755 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.27677972 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.169763022 seconds)
  done (took 2.002011252 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.487737385 seconds)
  done (took 2.042423173 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 5.005904032 seconds)
  done (took 6.559528489 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214075442 seconds)
  done (took 1.810222336 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.249632584 seconds)
  done (took 1.803003976 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.795174203 seconds)
  done (took 3.350210024 seconds)
done (took 43.96266283 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084120318 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084148972 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084047197 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081196937 seconds)
  done (took 1.875929145 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082237278 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07599217 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080034398 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076220419 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080211155 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076272366 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.077070525 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079883222 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075960148 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07659062 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075987301 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076215644 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078338075 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.077702675 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074440601 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078626136 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.079648095 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075945523 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.078900322 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07617792 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074955461 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077978127 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078897523 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076680767 seconds)
  done (took 3.421770981 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081602494 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076114746 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077337197 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074920218 seconds)
  done (took 1.879099947 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083137816 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09588496 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093555242 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081080544 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096507485 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090258979 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072094005 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072312546 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07650571 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081055295 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.071092612 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.0994313 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092143945 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.08051657 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.083106093 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06924635 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071468309 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.090893129 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.0816154 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.081965338 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073333979 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080964879 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071215713 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092124062 seconds)
  done (took 3.543983468 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079918798 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.111350272 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080420931 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091906676 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092315473 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06771181 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077290339 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090809893 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.128468466 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067764844 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07231641 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068091935 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074334483 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067680273 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077096675 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109616888 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113248689 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072212653 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100002671 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067925206 seconds)
  done (took 3.283575973 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079015039 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072850456 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069130262 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07189999 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.0813824 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07616352 seconds)
  done (took 2.023869049 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072470994 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071106744 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070239502 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069951943 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074958563 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.07052288 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070053662 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070368742 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070558025 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.07014539 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069668394 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068931264 seconds)
  done (took 2.417380994 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.188001368 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072481378 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072020524 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069115408 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074279533 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069455718 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084432342 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070982298 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.09535119 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069427615 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069532431 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072152151 seconds)
  done (took 2.577606301 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211022614 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079233136 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252534256 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143759718 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118586705 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121916529 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10963077 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123122705 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.146745752 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105751925 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171636777 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170617541 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112919398 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14597532 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095189462 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099789489 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162482491 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17635043 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110928001 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174904656 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152268757 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132118971 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153975934 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106098613 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112667118 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130159986 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073504096 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084332879 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181141828 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137795895 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156058514 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120106084 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097130305 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190336868 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186904573 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151730155 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14282508 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087145354 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10845677 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138883694 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207920614 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094027406 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.313460108 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116039625 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08534869 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145902149 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130460523 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.132232441 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.110956738 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094370226 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155170089 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187584012 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.143502364 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091008511 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121368047 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123638056 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.123885293 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114678715 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200965391 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171870656 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138885717 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075108722 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10377459 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163017682 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151250671 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111932653 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.130365604 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097246675 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139953703 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162061977 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127648816 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148637585 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.13899127 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093529625 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132466573 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144795429 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133497306 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179034484 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133276641 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076499867 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130147855 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109287868 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085695326 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142873382 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078017455 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187504381 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103409633 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10561937 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127282706 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117743873 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113443345 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.314777677 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156009682 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10971889 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065475406 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111255172 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.124610607 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153411115 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09597306 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118591425 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122922139 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083475057 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146158141 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077159635 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133336596 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077372214 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13443625 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142813702 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079340433 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130659874 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10651814 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.111207778 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142634978 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170708631 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095895673 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086885693 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180993481 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132699003 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106695657 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148842062 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162357438 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.107970104 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108535515 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157878506 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192281365 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095883677 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17551329 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112773378 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088661387 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.090027211 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136407927 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117854411 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.127703748 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086698812 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.126763795 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173006365 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079448687 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100002362 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141659923 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080977943 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086257585 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108683282 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107577417 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100183287 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.103352687 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.110945067 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291064014 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134439285 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11283403 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131994854 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108680346 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188734995 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095695908 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107968161 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10913078 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072014845 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.140126385 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170811369 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084276172 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175213688 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.132476296 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11468147 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133004014 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085926959 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149783674 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081420502 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07324099 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152169535 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120671872 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115806792 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.158376006 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111812404 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.131430916 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.126327406 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141067112 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138327149 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.135033398 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116558456 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.096781236 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124299003 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137014319 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076210056 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095413889 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082468086 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111115697 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102403437 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087921029 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153837367 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133090672 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104885777 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122927043 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104027424 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154186557 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079434701 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133493503 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.1297166 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099375434 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.158114402 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160622035 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288776762 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105044051 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155698815 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073187087 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078530647 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09520505 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133399908 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087988442 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089057971 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128775549 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153336892 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139881963 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145887314 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127965402 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127807041 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162149844 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072225625 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119359484 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15241012 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131339068 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.109095657 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095260259 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103683555 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150521591 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114021511 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200627919 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127021953 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144394452 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170778392 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.106655182 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083767771 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113845076 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142746223 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113196785 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147342564 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110157062 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093634337 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120098692 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078823983 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10494453 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133439714 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12579624 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151500525 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.118728122 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141330678 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078641546 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126138169 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129319633 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127201395 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064668411 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129553922 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167833779 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247056333 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129613512 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158677823 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084374255 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.131511033 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186642899 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159662907 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088012204 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117263384 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126377484 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131944649 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130226177 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150020143 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118276527 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155544865 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116117689 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.094382031 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093622683 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102377252 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11153052 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09842878 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110742798 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.122045548 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100464505 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138482213 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109132213 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116733545 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135723644 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099541509 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093194808 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103966578 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187944083 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127523286 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181869436 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104704422 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.149467401 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174664974 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079174895 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085355697 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080513753 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148997394 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087455065 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14522681 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.102192014 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114648037 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141481487 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14807136 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100002618 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.0706579 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118994756 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139378925 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126693059 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106944392 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105801912 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165298895 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.105712587 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082407661 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119053228 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111162866 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105759855 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171318184 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063289829 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100743415 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076514073 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083562043 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12917256 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157444668 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080862551 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.106356455 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129544266 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115863381 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128117986 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105577308 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10129195 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126746156 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152167034 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129600967 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093649255 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113953746 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138319375 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155294903 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111311659 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099708995 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168535605 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174501363 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157584852 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090003877 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1240875 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124532695 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118352855 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142655283 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086507827 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167613721 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085560187 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146584296 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109376743 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089680962 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130437058 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.100265724 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093950592 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14715094 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123510849 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083664293 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076462878 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118839405 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.380959233 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114682099 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.081391496 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149934104 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076125641 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149024959 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179321542 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087502503 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112399361 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107668089 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083310589 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118034746 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115327714 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095697125 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.104655191 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18307973 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.09198912 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155204114 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151359465 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120059155 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14780766 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10621669 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.819481984 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08072637 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162731624 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125990357 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190581773 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10288513 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13518736 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121297235 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129418311 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152395531 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110526478 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177885442 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147064481 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.124813501 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086690914 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113674686 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108818917 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092299701 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110636206 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128005783 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121821757 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.101063259 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.125309207 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132865462 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086711546 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100584601 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168496431 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123668599 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150869697 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.298438249 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088234011 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13474648 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148729354 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086856535 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.125498156 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162977782 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113051437 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106048497 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083094292 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.105856741 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177940362 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076633983 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171292092 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130509552 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120740268 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12693441 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116806105 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14564197 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116632907 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131051601 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096890497 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.118821561 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120780604 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08430521 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081146733 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112470978 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117026234 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.107969217 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10128646 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103377528 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160917906 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075083526 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10286231 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111261142 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150931167 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187201969 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.096493559 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089091517 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124657089 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1243011 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.123931386 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131064996 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081864955 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087006121 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084611116 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.081790104 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11178381 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120729271 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114642474 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120049977 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173145161 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084939256 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221600905 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249790113 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113470086 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073406152 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083971723 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102825349 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106267424 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113769661 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104741648 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177657414 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100627073 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.095880128 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095507078 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077214321 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087603655 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132027857 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115916526 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127690085 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106358341 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065382737 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116639367 seconds)
  done (took 62.414727219 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113230911 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.085459051 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101484287 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.155746229 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127445894 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223356622 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.173453774 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203624576 seconds)
  done (took 2.88574815 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072340381 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097149665 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105246529 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08655559 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.0701841 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072516229 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234328117 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.0845028 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069462377 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091203126 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083165058 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072357303 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.424882994 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068983307 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.07106676 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063476733 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070201202 seconds)
  done (took 3.527767856 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.387274466 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.675787423 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.456482939 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.077086392 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.38895697 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.098903597 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.467929698 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136242333 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.078207824 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.661001148 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.13406675 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.14686139 seconds)
  done (took 21.408117393 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079870819 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073564116 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.087615838 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087263734 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07521787 seconds)
  done (took 2.098764443 seconds)
done (took 114.954216372 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085668723 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.409920962 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05361612 seconds)
  done (took 2.189325209 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088978555 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087153419 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087665136 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087680429 seconds)
  done (took 2.064459258 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078844594 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081005739 seconds)
  done (took 1.865173269 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.227756057 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17410729 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090608913 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084552574 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080367319 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080458962 seconds)
  done (took 1.951567706 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075204739 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078361511 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074422562 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07958421 seconds)
  done (took 2.00973113 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077783479 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052446479 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05470092 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055886594 seconds)
  done (took 1.943686636 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089828208 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080648133 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080748605 seconds)
  done (took 1.952815722 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108713918 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093200399 seconds)
  done (took 1.904026898 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085269751 seconds)
  done (took 1.786634392 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103397961 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.116008566 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134691451 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113210353 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141732939 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112530039 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089276769 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.09019763 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080446498 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091141833 seconds)
  done (took 2.776455324 seconds)
done (took 22.716871616 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.085781547 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.912444302 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.457290137 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092273821 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.855702561 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.452949985 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.329470313 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093609764 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118458351 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071434067 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086123461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.837726786 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.316988192 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.867109193 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.304324076 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.85775896 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.840552555 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071418489 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070940064 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071517579 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.315071283 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071018108 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071297595 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071760238 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.84006467 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.471355879 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071138491 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.856873851 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07051213 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072505736 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.450580797 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071387982 seconds)
  done (took 20.919952514 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075512643 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12913149 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077356729 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086987643 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073914699 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072911576 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075027958 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072525499 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125404865 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071314517 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086935454 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071066317 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075429037 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072296505 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090113214 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071492883 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071921535 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072228514 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071671558 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072635355 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089352727 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070713677 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07176414 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071896785 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072151764 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085975007 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071819974 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072262798 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072090394 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073561422 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074244826 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072523894 seconds)
  done (took 4.238383488 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.126133986 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129192809 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07856738 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108726971 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116369409 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073984773 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.15513604 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094258708 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131090104 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071396577 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087014605 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072007186 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107114036 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073025522 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091090368 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072558014 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072933461 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072322571 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071806139 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072563011 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090435326 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071972904 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072256 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072626674 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072093912 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088313568 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072636168 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072528376 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072318963 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074017498 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075219484 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073044801 seconds)
  done (took 4.506719431 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077743527 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079293902 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087132078 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08754298 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072537585 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075887278 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076422975 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.073041706 seconds)
  done (took 2.351789784 seconds)
done (took 33.732383039 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083631577 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073520641 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076778015 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088165948 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077195038 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081929529 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071002557 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077933963 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075887312 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076277078 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07912735 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070506824 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075021423 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071108641 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077987606 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071157699 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082477166 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076287392 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082531307 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083330357 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074372248 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077709408 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077895118 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082419131 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082531434 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08248327 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081410248 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077439174 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073208667 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075273218 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077820277 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085431948 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071870987 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082902397 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071532382 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071518174 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075458123 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071006061 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083070627 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080990199 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073135635 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080056076 seconds)
  done (took 4.96422039 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090038802 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094278398 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085728203 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062845878 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067859701 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065790969 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090049885 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060703952 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059023515 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088581213 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05561137 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060454147 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063348575 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053696188 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060489292 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056487356 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06278447 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055812164 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060302928 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060738607 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.09023374 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053932043 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081442575 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064046133 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058551796 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061472129 seconds)
  done (took 3.493976351 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079176349 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.094598811 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093431395 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133942911 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105612436 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084174535 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.086603765 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.098431271 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096235861 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070162341 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074566433 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09838229 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098317495 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078246718 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.0704529 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.091492741 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086538834 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072043868 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076668552 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.105173138 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087659505 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08749314 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.109346607 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087777965 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070414898 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072774371 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07438618 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085161412 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075209529 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079371771 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074572539 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074221008 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072386283 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082412205 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074472877 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072482241 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09737767 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079998834 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084895693 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071248527 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073724306 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071903892 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095036731 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.14742319 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070480593 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07776464 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077982449 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079954094 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070785681 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093521339 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081328901 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070341453 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074151515 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06995787 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070714298 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083901106 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072657686 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072956707 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079657529 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073446619 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090968323 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076267157 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086174849 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070511372 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077928999 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069767275 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07124676 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070108588 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099303736 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072177536 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.118830279 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071701195 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071631574 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079088168 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077952411 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077464362 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070900807 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08621573 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081755446 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075088411 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.08096173 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073942022 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073436101 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09927205 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073433477 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.0727593 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.07178154 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077396447 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073112156 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071989917 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08404979 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070971434 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073549284 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087823303 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.07029865 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072193796 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077144302 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075955791 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070051569 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081576184 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075847886 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071581841 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080654261 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070861208 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074094149 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084872276 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077105324 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069743709 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075787351 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077306888 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071761357 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072448113 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073723819 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073355597 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080164091 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077441624 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075078148 seconds)
  done (took 11.15563766 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.187485893 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.167767458 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073967564 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.159195817 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081675823 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08211403 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.160293311 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.101122425 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071091316 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07235951 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072738943 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113847962 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110004093 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.119677418 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08207512 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071146891 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.090400785 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119639789 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.162555019 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.156515983 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090851036 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081624727 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073438829 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072514822 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07366734 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082906746 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.09041665 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082368566 seconds)
  done (took 4.668822764 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085750085 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.102928501 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077258488 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094048346 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095933823 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06988429 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073490674 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073312658 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087333349 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081957668 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069964137 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076604044 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078445226 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074611848 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072507522 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077388452 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078342228 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073362329 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071925425 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076835394 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.084066897 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.082496946 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07518055 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070587221 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076789711 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070368234 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064311125 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088850816 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072241811 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095844221 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068538541 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.079712228 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087893752 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071841462 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.07103033 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070884191 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070137645 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070196756 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072441619 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068905615 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068718066 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057599956 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070155253 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083020984 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.080763724 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05667905 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076886737 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.076403181 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07675602 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068135549 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073557942 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073873811 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073900154 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079337621 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077191096 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.077118822 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071995531 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073802896 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079849055 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.0705226 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065739561 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069081876 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076200224 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066486481 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.082277504 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07564983 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068495277 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069875979 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072530953 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080673508 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070287358 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075079962 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067491217 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071763966 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075710325 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072833373 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071688567 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068538293 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070449382 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07078839 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055474763 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.07063362 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053234912 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073593519 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068196191 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068766331 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070658578 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076480266 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083742176 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072162955 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076475058 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071347395 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069848768 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073723941 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059979722 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073477724 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.089467166 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086898732 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070192137 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067911835 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08858018 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075448462 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069515732 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055779764 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.080255726 seconds)
  done (took 9.57108 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094333875 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074024773 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.093653626 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.100191652 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089496486 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078047103 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081071668 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072947485 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086211981 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.078873454 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.081500264 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071368255 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081050458 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080375614 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.073419788 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080798663 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074992928 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08953651 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084972847 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071914984 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079966324 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083550131 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092782175 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086615598 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085588349 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086596218 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092220978 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.075843883 seconds)
  done (took 4.09466153 seconds)
done (took 39.670082248 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.807290526 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.047350397 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.802632875 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.439593589 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.900885209 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.009621181 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.865330389 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.803249844 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.994732991 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.835984739 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.072249456 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.625701642 seconds)
done (took 66.939157753 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.876500574 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.954568915 seconds)
    (2/2) benchmarking "String"...
    done (took 2.08564903 seconds)
  done (took 5.774863417 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.158996366 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.472142022 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.073389291 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.800039172 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.803752779 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.25741434 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.602743674 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.334487238 seconds)
  done (took 31.081747989 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.905095558 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.027189296 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.467939574 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.503752833 seconds)
  done (took 15.686434123 seconds)
done (took 64.390957595 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.820433126 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.846367853 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.823251064 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.781744989 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.85793654 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.809309233 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.913423879 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.006642175 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.799851796 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.787948272 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.801601508 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.392108406 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.80504846 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.900283554 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.801695235 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.806860281 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.849274985 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.251935617 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.961680724 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.810778476 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.821425766 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.844209555 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.803059865 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.808384712 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.843281367 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.801354136 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.247426118 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.809218235 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.625350265 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.803882289 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.848267896 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.21503697 seconds)
  done (took 206.03348332 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.802626829 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.905970653 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.98576967 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.848648512 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.38127831 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.984638007 seconds)
    (7/36) benchmarking "scal!"...
    done (took 4.024702987 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.406937803 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.806009486 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.812726397 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.074614359 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.803293037 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.09350701 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.752764506 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.846014091 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.810839305 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.087645399 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.116359763 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.85033015 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 4.31511683 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.829273534 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.918081397 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.860785644 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.056652196 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.826066821 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.904803376 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.816132633 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.814957769 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.995490403 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.063011015 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.834514579 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.808156538 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.0107085 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.677008074 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.815381609 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.817974502 seconds)
  done (took 174.497632964 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.035022253 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.804701964 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.80294629 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.804722796 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.816118109 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.803426142 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.049305978 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.050843796 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.398254397 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 23.078281407 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 2.050014628 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.804522641 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.647951417 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.802883503 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.874028208 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.815987729 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.804730969 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.819634894 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.830251797 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.804867143 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.804557714 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.051343754 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.816875531 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.9159832 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.824484507 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.805823039 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.819173978 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.255932403 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.803849631 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.817812305 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.05407465 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.806493787 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.804773326 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.735257201 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.918266531 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.893393583 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.805287115 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.81822818 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.805048737 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.026746388 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.806136029 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.805575296 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.806927791 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.808342336 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.805940102 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.019875502 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.804787096 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.055713205 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.804996011 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.299396154 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.804408822 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.806485374 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.644058028 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.491356229 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.806567206 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.806607209 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.808918504 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.805833871 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.806922169 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.819775715 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.502376206 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.879224919 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.808938032 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.809714508 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.819868152 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.806356935 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.899680246 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.807544479 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.451676906 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.867073401 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.96771946 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.047947427 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.80705705 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.877250596 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.903410589 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.80775334 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.806539885 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.806902771 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.806663377 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.889101717 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.806573093 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.937415299 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.825927335 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.809927216 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 2.053536236 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.878351402 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.807026517 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.714275248 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.807308988 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.808503908 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.137676321 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.876115154 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.808871008 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.807668774 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.808404122 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.93837319 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.051565744 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.5819847 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.809269905 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.534259466 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.807985281 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.953825983 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.808581566 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.809356091 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.01936421 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.811446552 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.892855722 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.819893538 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.811070318 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.809957049 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.958327263 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.809957629 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.868788102 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.807374972 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.265981498 seconds)
  done (took 410.248013212 seconds)
done (took 794.60589093 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.487505752 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.441792713 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.566214391 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.463943933 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.438376926 seconds)
  done (took 14.140488186 seconds)
done (took 15.885057936 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.896745743 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.901261559 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.834264862 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.898874257 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.831349413 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.897836596 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.880940027 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.837031196 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.867356668 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.837855293 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.869053498 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.836041905 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.823448893 seconds)
  done (took 25.956344661 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.046941091 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.043372043 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.881919673 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.043006203 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.856713939 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.04642321 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.975320923 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.96353098 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.960183294 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.826680002 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.824479133 seconds)
  done (took 23.215290451 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.045720001 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.052787435 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.886824265 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.049745771 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.859309054 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.051910112 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.975169413 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.967905299 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.964231288 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.82874325 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.825712475 seconds)
  done (took 23.253860119 seconds)
done (took 74.171259967 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.822636686 seconds)
  done (took 3.566702717 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.843184983 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.982860463 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.825279335 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.82428872 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.82270581 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.823701481 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.823927995 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.819579874 seconds)
  done (took 16.512786238 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.822384846 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.816939233 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.815892023 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.821869977 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.816472952 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.816976886 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.821547217 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.817446186 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.822639822 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.817818202 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.82234057 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.823421725 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.818968682 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.816096368 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.822577549 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.823505965 seconds)
  done (took 30.865228847 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.820294307 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.818006611 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.817499256 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.819235184 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.819759233 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.817897741 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.819834522 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.817771718 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.818411233 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.817825845 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.818999884 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.817218974 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.819042927 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.817319815 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.817919283 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.818852001 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.818433646 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.819526307 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.823652141 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.817623381 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.819034493 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.817981402 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.819603184 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.818981096 seconds)
  done (took 45.402017747 seconds)
done (took 98.09399341 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.753422835 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.388921445 seconds)
  done (took 8.889931607 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.82638715 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.824773545 seconds)
  done (took 5.440969728 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.825952997 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.824885548 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.824906762 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.824976507 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.825816277 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.824654399 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.824698666 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.825417528 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.824887776 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.824474462 seconds)
  done (took 20.000471584 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.82567504 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.825245732 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.820927606 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.825978989 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.825750436 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.820485314 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.825017172 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.825866917 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.826113775 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.820756575 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.826395835 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.82095807 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.824947933 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.822890846 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.826652329 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.81980062 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.82030404 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.821198188 seconds)
  done (took 34.575437406 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.826571926 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.826873131 seconds)
  done (took 5.40460838 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.822242717 seconds)
    (2/7) benchmarking "second"...
    done (took 1.822664514 seconds)
    (3/7) benchmarking "month"...
    done (took 1.821374376 seconds)
    (4/7) benchmarking "year"...
    done (took 1.820780247 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.821126048 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.821273724 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.821897234 seconds)
  done (took 14.5027786 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.826615925 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.980397329 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.058242507 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.474198875 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.828207251 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.829554729 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.767287874 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.831403871 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.831180595 seconds)
  done (took 20.178555691 seconds)
done (took 110.74180438 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.654085127 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.820720305 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.215805913 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.877909985 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.857634108 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.160126727 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.853794896 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.990659393 seconds)
done (took 43.183345547 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.835600229 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.401937576 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.42083743 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.71042135 seconds)
  done (took 13.285040291 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.802947693 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.347799601 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.851192941 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.503139084 seconds)
  done (took 20.30387216 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.187624633 seconds)
    (2/2) benchmarking "read"...
    done (took 2.206738879 seconds)
  done (took 6.151387192 seconds)
done (took 48.331208275 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.827301164 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.828031537 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.828835651 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.822414641 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.829301189 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.828704351 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.824046486 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.823690379 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.822128008 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.828912132 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.827408008 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.827329247 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.827767115 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828343783 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.824274345 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.822566013 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828293865 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.822370071 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.822976969 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.824943411 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.829616198 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.8229113 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.825921225 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.824291297 seconds)
  done (took 45.574948884 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.82983979 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.825372997 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.829548767 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.830552414 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.82402073 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.830277135 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.829216372 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.823557449 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.828763368 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.830779292 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.823812993 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.826027569 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.82913669 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.824781338 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830010651 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.82431953 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.83020325 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.825037422 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82940059 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.82362637 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.831277075 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.825042394 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.824690086 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.829677919 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.82442513 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.826560657 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.829613036 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.826328171 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.830911165 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.824663067 seconds)
  done (took 56.576897831 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.836984964 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.840237846 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.830184954 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.831380964 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.830688023 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.830958115 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.831385561 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.831129976 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.831640279 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.829814211 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.832367838 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.8309885 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.830896106 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.831352991 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.830818283 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.831182261 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.831405084 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.832002064 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.831182908 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.832096294 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.831634846 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.832481807 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.832944182 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.832623413 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.834203804 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.832197651 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.832948836 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.83238661 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.833091464 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.833024022 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.832597445 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.832183006 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.832988311 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.833596906 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.833434354 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.833313653 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.837260415 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.8401775 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.832794606 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.832808532 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.831806279 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.833176065 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.832687608 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.832472437 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.832363361 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.834224191 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.833829135 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.833628323 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.833281991 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.833314458 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.834030358 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.833902591 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.832376889 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.833889634 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.83432447 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.834740192 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.832492226 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.833200093 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.833169213 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.833174758 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.832993901 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.832857291 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.833438409 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.834200721 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.833760437 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.833447308 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.83332919 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.835423117 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.834295751 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.833807652 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.834209116 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.834953713 seconds)
  done (took 133.737829098 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.835814078 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.8296915 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.828771109 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.829887747 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.829685086 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.834618514 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.830282015 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83424983 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.8297112 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.834087079 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8344193 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.830127594 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829845568 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.835864521 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.835068176 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.828960988 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.836195415 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.830608117 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.834642175 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.8364214 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.834913152 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.828867773 seconds)
  done (took 42.072959774 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.835357829 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.8355115 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.830116488 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.83589888 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.828144138 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.835771875 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.835127652 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.835934597 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836620841 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.830464442 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83117101 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835598028 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.830815958 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831365545 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.831461498 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.831075419 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.836493002 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.831433313 seconds)
  done (took 34.758885351 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.830377415 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.83177305 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.836368902 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.830688431 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.831770398 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.836761146 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.830596098 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.836465089 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.837406087 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.832484363 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.836560131 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836160804 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.838058995 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831037154 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.837431665 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.833091665 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.839834269 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832394702 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.836906103 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.831954858 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.832164069 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.837679035 seconds)
  done (took 42.119535016 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.836453853 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.83603392 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.833332591 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.832358427 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.832711459 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.837426508 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.838345603 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.833733573 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.837803132 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.837626363 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.832540146 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.837465801 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.833507419 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.833798714 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.832507458 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.833014573 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.836549107 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.835455563 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.837258962 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.833617115 seconds)
  done (took 38.463412018 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.83575184 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.837560947 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.838087428 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.837247181 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.837028623 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.83667713 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.836985327 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.837648846 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.836406587 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.837556789 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.837190062 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.83765895 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.837247953 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.838369779 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.837057229 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.839000593 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.838182375 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.837569919 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.838040828 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.838037839 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.837818747 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.837252514 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.838899318 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.83844907 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.838909142 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.837166184 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.8390066 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.839496066 seconds)
  done (took 53.218622748 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.839490123 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.840634953 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.833325703 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.836645919 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.83598123 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.835998443 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.836499017 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.836613742 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.840099881 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.835677728 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.841811443 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.840631719 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.840542529 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.840815401 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.840478201 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.840526554 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841849193 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.836794688 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.835655096 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83598603 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.839852329 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841224651 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.840004286 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.834461208 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835282209 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.841964964 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.834930864 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.837091911 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.842049355 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.836228354 seconds)
  done (took 56.914687042 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.856629163 seconds)
    (2/2) benchmarking "in"...
    done (took 1.857343347 seconds)
  done (took 5.479195511 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.835840171 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.841089433 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.841400623 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.836438701 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.835690518 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.840563979 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.841329503 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.836344927 seconds)
  done (took 16.474544475 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.838366677 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.842375262 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.842240016 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.841688076 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.842172365 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.839982821 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.84671352 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.842677747 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.841456175 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.842497152 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.848605444 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.85026912 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.843133829 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.840480592 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.840863403 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.842197433 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.844068446 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.845089268 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.843372551 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.842096282 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.843779658 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.843230045 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.843922845 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.838836416 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.844094365 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.850383926 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.845591926 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.843032185 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.841727242 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.845983297 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.840929351 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.83802481 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.843873023 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.843759952 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.843773067 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.844661653 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.849376884 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.842739573 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.847778048 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.843607693 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.843650093 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.839578497 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.8439644 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.843588263 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.845202351 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.845157909 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.844128979 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.840786997 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.842984817 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.846329657 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.848423768 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.840604936 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.839471529 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.846529387 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.844311736 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.848768956 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.846937782 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.845641553 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.853868376 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.852092083 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.856790321 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.852237742 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.845364328 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.846694533 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.853326454 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.869692525 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.849337835 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.842699959 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.841467521 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.845969961 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.850575703 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.856705048 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.855746562 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.847285253 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.847208801 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.845785276 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.843738644 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.847102165 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.851554927 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.84809426 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.8464321 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.846676722 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.8564934 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.870164587 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.845561079 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.846495032 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.847570903 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.848142484 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.845663426 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.854918593 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.847679973 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.848473288 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.845104915 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.846401796 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.847801078 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.848945799 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.844159379 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.845454736 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.842401475 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.847965016 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.848241198 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.848481312 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.856807987 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.847925071 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.84931849 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.850845144 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.846014289 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.843875116 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.852311242 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.848425323 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.848314706 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.848473767 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.851754736 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.843173208 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.849942306 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.855292349 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.850525622 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.848180874 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.849189866 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.849370559 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.856849503 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.876578311 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.849953646 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.84837394 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.852326591 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.865037053 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.85161282 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.849821246 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.85052817 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.845597883 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.842848537 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.849816223 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.850473121 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.849058467 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.849068128 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.847915006 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.845984997 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.848400296 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.850006122 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.848661441 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.850432345 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.847686221 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.848833807 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.850805865 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.850678644 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.849953922 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.85460671 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.848191575 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.850188482 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.849601103 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.845896921 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.850619986 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.849760417 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.850920825 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.848379657 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.85062053 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.849142373 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.850826239 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.85026966 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.851484948 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.851547732 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.849255569 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.853711478 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.852635319 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.852568683 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.849670574 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.845512008 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.85103913 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.851309002 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.848936317 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.851886646 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.847964144 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.85459189 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.861481612 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.853761167 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.853195827 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.851246405 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.851244406 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.852667495 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.85133485 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.853832967 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.85988077 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.851675803 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.856508883 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.852479627 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.85187683 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.853505217 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.850939331 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.85071483 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.851778408 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.852434977 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.861713625 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.864264518 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.861225776 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.852661208 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.85607283 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.851664979 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.85774796 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.854812677 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.854123123 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.854066422 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.854585358 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.851009508 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.852666445 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.853180714 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.853582279 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.850208366 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.853486973 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.852782796 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.853959261 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.853923671 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.852424627 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.852717768 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.847940683 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.854050679 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.854106021 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.850412004 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.849575438 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.85162437 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.852506655 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.854749239 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.854770093 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.859424411 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.849296526 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.853291851 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.853734914 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.853364157 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.851691363 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.854623865 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.854480202 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.853903839 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.859014583 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.853727791 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.855050665 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.859715257 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.854065333 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.853186901 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.856422968 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.856539438 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.849374419 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.856626489 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.864494191 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.855380485 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.85692153 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.855449768 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.854254682 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.856243892 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.85877195 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.850407996 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.853540584 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.855524066 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.855724865 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.851365251 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.855627815 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.854803669 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.854434757 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.856545467 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.858262061 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.855616684 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.855932577 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.858165586 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.856550898 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.855624476 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.858084978 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.866594295 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.858424649 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.854749231 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.855355833 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.857513751 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.861487591 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.854593688 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.858452724 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.854801936 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.868381263 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.868552881 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.859205854 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.855873912 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.857450845 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.860142148 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.8588771 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.860190805 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.855488698 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.856600747 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.856812214 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.857602261 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.853767639 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.856949583 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.85833655 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.856056377 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.858172469 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.863731684 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.858662169 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.856435693 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.85840345 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.858149476 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.858748202 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.855502286 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.858563693 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.85793731 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.857813238 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.855582904 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.857481026 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.862789544 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.8562266 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.857395477 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.856399397 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.856157843 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.857102881 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.85792606 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.859186015 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.861352383 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.868964407 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.860962213 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.867420186 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.859415768 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.866113562 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.860861799 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.861830905 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.870109562 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.85499384 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.855757417 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.858089758 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.861153596 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.863822013 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.86019273 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.859554679 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.864698472 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.861429329 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.861836444 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.860415075 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.861812297 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.86024985 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.862029092 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.866100355 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.859753612 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.86229006 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.85980355 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.856192791 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.86167428 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.859964313 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.857225649 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.864743365 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.862338009 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.860219553 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.859415812 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.861358209 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.863107865 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.86182854 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.861719992 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.856979566 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.862553911 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.866176541 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.861578912 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.86700573 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.862018736 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.866660592 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.861953539 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.86668714 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.864094031 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.860097848 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.861844238 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.863966567 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.861488997 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.860798748 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.861872339 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.863701654 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.861077557 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.866957915 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.862995906 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.863587015 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.862036931 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.864021826 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.861873211 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.87239163 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.889819518 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.862403572 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.868427212 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.857891054 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.86297306 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.869283814 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.863282559 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.861167148 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.864143704 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.873657627 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.874126045 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.861415251 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.865363576 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.862593674 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.863820122 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.863655226 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.863840181 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.865103753 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.865189165 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.863970302 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.866896588 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.866800207 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.863737487 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.863462209 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.863160413 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.86361746 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.873349606 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.866943526 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.863243082 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.866043099 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.864367644 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.861879889 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.862881287 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.865958064 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.864066272 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.865014208 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.864426945 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.87224477 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.871923707 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.866201213 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.864924097 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.866730929 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.863541072 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.864399721 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.866936093 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.866477915 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.866442995 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.864810952 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.866431189 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.864412603 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.864906661 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.865969036 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.864944517 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.866944264 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.867527364 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.873889799 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.864784555 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.861544614 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.867989845 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.866025661 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.864903722 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.865707793 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.870955668 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.868667039 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.877625104 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.87613535 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.872210683 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.866706841 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.868822652 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.873307064 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.864546659 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.867406628 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.869605629 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.866880866 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.866420786 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.870660636 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.869406054 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.872012765 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.866026397 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.865299382 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.873215587 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.86928463 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.869661853 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.86814938 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.871402366 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.866872425 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.863549286 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.868688556 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.865950505 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.871723357 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.86717439 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.869893734 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.866846023 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.864504753 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.868181848 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.873270866 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.86959868 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.868550375 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.863393887 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.865507298 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.868843935 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.869072403 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.864267165 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.866884623 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.867831493 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.871751946 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.874359568 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.864513204 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.867798819 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.868383522 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.868572973 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.870333849 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.87026473 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.864302706 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.864087995 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.867761946 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.871669311 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.86772374 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.871534038 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.868092339 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.870258131 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.869559102 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.87142114 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.87199606 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.88001841 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.880593058 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.866282976 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.86741597 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.869307399 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.873802024 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.871632799 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.872004567 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.870043393 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.871056038 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.871496033 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.870821205 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.87123697 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.872803516 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.88567655 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.872118452 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.868264767 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.870409229 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.873462024 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.871658593 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.866233117 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.872232888 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.872617729 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.872864923 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.881352475 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.873531955 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.875791727 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.87039952 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.870750936 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.876509146 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.872272642 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.879469286 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.871854254 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.873010724 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.873896516 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.874594011 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.889349863 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.873487138 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.880238973 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.902664358 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.873096983 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.871052371 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.873098817 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.870889741 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.874974127 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.87378513 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.874443622 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.872581144 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.873226807 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.874626448 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.872958154 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.877674439 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.873143731 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.873640413 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.873359179 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.871752597 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.872931511 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.869104083 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.87467081 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.873561894 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.875311706 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.875915735 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.875427161 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.871785991 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.88503936 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.884192346 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.874225994 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.874203877 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.869265595 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.875133648 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.875186812 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.885046359 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.883517385 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.875998148 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.874245508 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.874116713 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.876911693 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.869816646 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.873200352 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.872310513 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.872074032 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.871569466 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.885990195 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.886646932 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.87764167 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.873342159 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.877389207 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.87686169 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.874895353 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.876592358 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.876701877 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.876676831 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.876516427 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.881613407 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.875958399 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.875703856 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.876547151 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.886102851 seconds)
  done (took 1110.215960392 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.872020087 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.870806557 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.870449307 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.872673192 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.872052009 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.872636335 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.871128259 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.870598177 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.872520489 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.872707236 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.870288562 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.870214761 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.871070223 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.870627873 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.876510778 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.870492494 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.870850148 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.870001596 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.870810182 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.8719461 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.870176307 seconds)
  done (took 41.100759347 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.876898015 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.871132528 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.870082403 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.876779157 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.869908031 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.875703875 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.870539191 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.876265004 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.876889051 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.870903502 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.876710971 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.87674293 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.871202213 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.873522619 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.873479498 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.876672358 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.878766741 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.872732203 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.87807476 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.872623679 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.879269517 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.872889032 seconds)
  done (took 43.037666791 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.877645074 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.878387463 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.874833665 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.872286279 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.878087014 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.873098491 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.877887414 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.87670199 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.878456343 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.877339419 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.876162573 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.877278233 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.884990429 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.882440719 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.879343593 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.878477119 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.01972625 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.882081637 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.878108671 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.877954536 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.871550206 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.879832528 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.874365699 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.865940372 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.871143249 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.871916291 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.872534729 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.871135324 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.87307716 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.869397926 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.875826305 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.869929658 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.868876477 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.873594917 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.866590074 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.868899214 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.871915611 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.869577961 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.864424583 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.867700885 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.876475265 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.889255059 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.868146965 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.872234094 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.869738519 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.867497562 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.869655132 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.877561744 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.862763925 seconds)
  done (took 93.776884671 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.867122768 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.866512656 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.863052952 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.868156994 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.870026359 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.867806945 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.867010652 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.868525469 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.863261951 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.862874781 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.869446955 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.863468629 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.864942435 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.86874408 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.867713832 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.863960409 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.864502734 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.862397547 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.863814097 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.864213965 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.86616785 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.868020511 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.868926515 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.864996043 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.868138091 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.862967774 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.864940376 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.86809182 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.863930439 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.863877366 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.869084417 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.869548416 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.868616871 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.86472545 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.863740437 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.87135251 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.870401691 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.865104534 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.869174983 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.865080191 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.868165643 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.868928298 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.871941778 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.870328865 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.863020253 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.865226111 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.864335706 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.865760112 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.865673804 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.87001135 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.870057942 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.865316314 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.869271833 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.864946113 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.869958694 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.870232903 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.865107671 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.864339134 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.87388892 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.864979898 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.86545645 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.870388834 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.865271272 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.87234885 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.870603448 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.866016906 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.866706293 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.870385793 seconds)
  done (took 128.748631618 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.874022674 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.87128311 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.871589292 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.871363161 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.87280636 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.873158099 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.872127499 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.872159478 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.871297589 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.871704115 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.871258407 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.872280813 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.872341399 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.871283394 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.871758789 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.872462516 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.875212909 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.870871585 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.871520261 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.870977753 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.871277829 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.870199225 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.86782039 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.867824134 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.869552665 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.867112308 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.870799939 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.865341642 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.865331862 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.864949045 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.86690498 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.8653061 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.867100775 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.865986555 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.866211342 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.866541706 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.865916472 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.867380167 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.864490477 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.86396507 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.864136811 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.865932792 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.866278342 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.862795662 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.863523203 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.865729342 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.864484407 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.865025315 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.865900834 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.865266678 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.864280264 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.864781187 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.863726083 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.864896941 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.864636484 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.865870225 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.864862289 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.864505403 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.864609957 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.866216334 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.864304909 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.865612908 seconds)
  done (took 117.605962393 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.862981174 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.86962483 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.859756142 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.860251332 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.86355241 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.858751265 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.866696205 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.864469326 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.863199501 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.862193343 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.863132926 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.858311493 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860351237 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8630008 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.858072394 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.859255634 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.858986229 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.858822941 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.862583771 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.85961572 seconds)
  done (took 39.021479942 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.859077388 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.864246596 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.858905839 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.859389514 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.864116203 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.858437501 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.863933274 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.865766651 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860200912 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.864371068 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.863270466 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.863201467 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.861772414 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.858624034 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.862762447 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.860503325 seconds)
  done (took 31.576697968 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.859095123 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.866065851 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.863674295 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.863709905 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.859155394 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.857655822 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.865759169 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.857621714 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.856882439 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.864152101 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.863938711 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.867185886 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.861514266 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.862947679 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.857564169 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.863720616 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.856881749 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.858914097 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.862102445 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.864221389 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.858422857 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.857204405 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.866390943 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.861489718 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.856657925 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.858526873 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.857181048 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.856983942 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.856836932 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.859059251 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.85420729 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.855482515 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.85482785 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.856702151 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.859033343 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.854587208 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.858306966 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.859679957 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.861751753 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.85489433 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.855875445 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.852520882 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.855411574 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.856750729 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.854756895 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.854412255 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.850802288 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.850582195 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.850343936 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.851800894 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.853243809 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.855296439 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.855336397 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.853046532 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.854024778 seconds)
  done (took 103.983526059 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.854554575 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.853749274 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.849328047 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.852551168 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.855931876 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.849325301 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.85419587 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.850688605 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.851128094 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.855596661 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.850733847 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.853795847 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849892153 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.855256956 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.851229723 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.856056592 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.849753174 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.850411172 seconds)
  done (took 35.124866423 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.850440167 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.85204513 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.852952223 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.850206419 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.850215493 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.854349606 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.852255689 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.854511986 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853142441 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.849167563 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848771509 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.853772322 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.856951647 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.852973096 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.84982254 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848393504 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.852438964 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.854750013 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.847645387 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.847171134 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.851853061 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.851175465 seconds)
  done (took 42.516000128 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.850410446 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.849605731 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.866023905 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.869794392 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.871883189 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.888854721 seconds)
  done (took 12.973781227 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846375479 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850414088 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.847221848 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849812183 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851814471 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846636697 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845916462 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847946606 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850787449 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847923404 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845699172 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849870718 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849530595 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846522169 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850995134 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849874598 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846081378 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844483607 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84778726 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850375881 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847331739 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848378757 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846378564 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847547022 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845329645 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846797691 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848468668 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846516204 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844861883 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848362844 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850350139 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846264812 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84886365 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845166039 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849732967 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848633235 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845204882 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849386826 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848683107 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845317156 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.850007881 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848932057 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848814212 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843612685 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849324788 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843756592 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846102276 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847843776 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846625436 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849232511 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848546094 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844543918 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850058917 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848781546 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848495046 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850429769 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84574303 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845672599 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851024828 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845328352 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844932493 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847729179 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84414085 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847934249 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848068193 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845074892 seconds)
  done (took 123.723392578 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84460185 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.843537486 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845510185 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844835879 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843917092 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844455392 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844552879 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845102558 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84267135 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842674524 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849323772 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842478395 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845777949 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843957674 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843328657 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842953551 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843035095 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845391083 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844904047 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848400656 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843914944 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845373682 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84389034 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84553306 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84404291 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849056103 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844092271 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843220377 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843544341 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846766211 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841348471 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842058631 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842219256 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.842699836 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846362122 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842250358 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842138624 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842547912 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844166343 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847478402 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843376792 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847936198 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843199804 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842248276 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842268832 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844326089 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842064096 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841454497 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842615366 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842676837 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844772949 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843478575 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842868887 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842245668 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842089404 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842498312 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843743367 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841472468 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843107369 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845137555 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843150179 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843292964 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846484032 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842709228 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841968385 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842430354 seconds)
  done (took 123.472699093 seconds)
done (took 2574.022273851 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.986455358 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.829841826 seconds)
  done (took 15.588954397 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.021565114 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.974510516 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.842460796 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.89478332 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.84443174 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.849452521 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.846517536 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.840621376 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.842585106 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.844957018 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.842097689 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.046007476 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.864163903 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.841999932 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.8433708 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.95174403 seconds)
  done (took 51.967409046 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.849496881 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.849370388 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.859950851 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.849896363 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.845807674 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.860556828 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.884758032 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.851990227 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.882937924 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.862157247 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.918693014 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.858511634 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.847633771 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.898273058 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.862960798 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.861476997 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.954820041 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.925222481 seconds)
  done (took 35.496986997 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.938535274 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.848378388 seconds)
  done (took 10.568174813 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.860782329 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.847554478 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.858908699 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.870500951 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.852650915 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.862699343 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.849603001 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.860957645 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.855208397 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.846553289 seconds)
  done (took 70.341216769 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.855688698 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.849242282 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.851467345 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.847115078 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.839878412 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.844479243 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.847272451 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.844000744 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.635560725 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.886909381 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.860000312 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.853609005 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.847653795 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.849641025 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.844853953 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.882971221 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.997022348 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.845675531 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.845417193 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.854344322 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.851797169 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.911122969 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.860662808 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.849138863 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.881002565 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.621724809 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.858256085 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.856303493 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.983830632 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.845986006 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.847253305 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.851253954 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.850304499 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.368773884 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.339689217 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.847736917 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.865959937 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.859037189 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.846072511 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.996821742 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.852279448 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.857393891 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.842676533 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.312685267 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.946313805 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.899961676 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.567621782 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.851407128 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.851318902 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.889502751 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.855217382 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.850233424 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.864715442 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.48556838 seconds)
  done (took 132.882176988 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.845377291 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.792600376 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.040464415 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.847073022 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.196895372 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.12288531 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.845798253 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.897888385 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.8447078 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.104434888 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.109645943 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.983337834 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.844619205 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.845507812 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.847426639 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.843001173 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.080305554 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.923372427 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.847765909 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.844319223 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.881873521 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.253754122 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.006899169 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.849281268 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.876988295 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.143708047 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.991394296 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.974673929 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 5.930371218 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.844619924 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.917225441 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.846356523 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.845433318 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.842121288 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.082979725 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.97330892 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.952768551 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.847324551 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.845506591 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.845966569 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 3.019263338 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.136829306 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.977210776 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.049645114 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.140504547 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.139124893 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 3.187093113 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.84459491 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 3.204551057 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.073116506 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.099863716 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.112568794 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.046710459 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.847042492 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.843102715 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.843556312 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.844269969 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.157775872 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.10431561 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.971971661 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.847662903 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.845318795 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.846946418 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.248861567 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.847411013 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.971305742 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.849053841 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.846754728 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.976576134 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.977297827 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.090956857 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.122297137 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.890488004 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 5.886757812 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.176321957 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.267720683 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.921481585 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.160738212 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.847400856 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.847010993 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953005501 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.986987836 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.117429014 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.244625298 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.238019051 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.905320206 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.672029688 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.846473304 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.228971521 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.084648492 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.13187787 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.165002577 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.087624331 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.604138322 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.847488679 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.847162966 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 5.72343012 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.043998768 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.848794336 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.260039744 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.168247395 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 4.283690719 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.881457354 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.225360162 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.064756656 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.849105418 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.987439731 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.850323465 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.108763242 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.902617389 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.849159752 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.848536923 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.092268596 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.845753004 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.850624806 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.473257853 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.923072149 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.852209376 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.108058315 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.850603624 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.153287646 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.851332675 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.236425906 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.851645186 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.902380581 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.110973146 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.164771354 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.851958477 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.210811568 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.232448302 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.043027396 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.145148034 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.851446799 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.85023596 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.203072065 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.850871565 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.851464813 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.071783653 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.851227951 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.101748957 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.85328077 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.169290791 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885513557 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.103254439 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.852638186 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.155840542 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.905082027 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.90545774 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.854627217 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.039632782 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.855289592 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.105516538 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.097555332 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.85486169 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.852766868 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 6.340358378 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.852278139 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.062842715 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.225427802 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879011179 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.932263467 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.563588126 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.85174341 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.950635217 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.891294653 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.832747743 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.853961576 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.111429675 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.855163272 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.850955229 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.851653463 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.248556992 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.111789859 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.855182676 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.850862703 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.796247549 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.851126946 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.851646345 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.064262488 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.852943809 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.850423967 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.147602266 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.854389785 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006682597 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.858882593 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 5.298759124 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.260821256 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.852378178 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.855151618 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.855278139 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.852391038 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.856226045 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.149052422 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.893580795 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.928748045 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.045695434 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.158234906 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.177574835 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.243151261 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.922224114 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.857109179 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.171197209 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.856985408 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.928738173 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.857018427 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.888459781 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.17907934 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.859253985 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.154239257 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.287895911 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.047557522 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.908025051 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.855933795 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.85668542 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.852531415 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.042584504 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.955153347 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.856707629 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.855304114 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.988890826 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.017295347 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.095769871 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.856413618 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.496211741 seconds)
  done (took 926.270233813 seconds)
done (took 1244.884934465 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.85543289 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.855510776 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.841385702 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.85634426 seconds)
  done (took 29.196080894 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.864308047 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.86126218 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.864062848 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.863394687 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.866977214 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.859719247 seconds)
  done (took 12.967294529 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.858585628 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.858905458 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.857543471 seconds)
  done (took 22.36374674 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.940717787 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.278248116 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.99018218 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.379609484 seconds)
  done (took 10.377556838 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.864619008 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.864358134 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.864025258 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.866027287 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.867967825 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.866864322 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.867642085 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.867065834 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.867087594 seconds)
  done (took 18.586743595 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.029212661 seconds)
done (took 99.307116789 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.534762391 seconds)
    (2/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.016387506 seconds)
    (3/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.925167041 seconds)
    (4/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.009376477 seconds)
    (5/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.904770429 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.856541266 seconds)
    (7/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.40648941 seconds)
    (8/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.492764289 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.01056044 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.041990399 seconds)
    (11/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.859350766 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.90151911 seconds)
    (13/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.387066221 seconds)
    (14/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.552546142 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.994998954 seconds)
    (16/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.509770822 seconds)
    (17/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.420247787 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.91905275 seconds)
    (19/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.959969752 seconds)
    (20/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.098207496 seconds)
    (21/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.938554027 seconds)
    (22/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.438057246 seconds)
    (23/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.459881288 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.935084718 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.843907352 seconds)
    (26/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.417659263 seconds)
    (27/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.705923932 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.232209649 seconds)
    (29/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.50148187 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.825440418 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.985156963 seconds)
    (32/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.377151753 seconds)
    (33/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.989474328 seconds)
    (34/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.842788147 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.99565529 seconds)
    (36/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.841843734 seconds)
    (37/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.925292363 seconds)
    (38/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.139390241 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.863899793 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 4.099834036 seconds)
    (41/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.71321231 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.843139638 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.84677955 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.82128664 seconds)
    (45/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.816806791 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.857834604 seconds)
    (47/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 8.163419933 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.801432873 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.955840495 seconds)
    (50/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.860461604 seconds)
    (51/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.434808889 seconds)
    (52/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.977994894 seconds)
    (53/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.505591523 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.860103363 seconds)
    (55/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.426645576 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.214242642 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.970694136 seconds)
    (58/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.295952875 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.146334744 seconds)
    (60/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.919239482 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.228530568 seconds)
    (62/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.982771689 seconds)
    (63/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.007100358 seconds)
    (64/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.947135882 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.928345085 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.453288471 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.120104025 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.953339742 seconds)
    (69/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.964315388 seconds)
    (70/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.098387668 seconds)
    (71/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.535731438 seconds)
    (72/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.937606957 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.862379639 seconds)
    (74/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.862919292 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.937899089 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.001044334 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.844259942 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 3.572063617 seconds)
    (79/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.067837932 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.460886593 seconds)
    (81/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.954326159 seconds)
    (82/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.495609111 seconds)
    (83/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.190681587 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.771347664 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.348580947 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.28032312 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.254222605 seconds)
    (88/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.163185381 seconds)
    (89/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.949116662 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.88618756 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 6.123199836 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.935271908 seconds)
    (93/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.862930707 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.729971389 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.998643221 seconds)
    (96/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.341878519 seconds)
    (97/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.127111078 seconds)
    (98/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.956358543 seconds)
    (99/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.356590727 seconds)
    (100/309) benchmarking ("sort", Float64, false)...
    done (took 6.086721823 seconds)
    (101/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.876722599 seconds)
    (102/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.845711488 seconds)
    (103/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.160438636 seconds)
    (104/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.975321697 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.004156035 seconds)
    (106/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.947539156 seconds)
    (107/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.144401085 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.661321988 seconds)
    (109/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.989865326 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.571005975 seconds)
    (111/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.862659501 seconds)
    (112/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.906262418 seconds)
    (113/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.300743282 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.097366693 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.139002582 seconds)
    (116/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.432936795 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.865193661 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.729175959 seconds)
    (119/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.868140517 seconds)
    (120/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.158570453 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.865921696 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.349245696 seconds)
    (123/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.046274141 seconds)
    (124/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.869688427 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 2.41135999 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.927634136 seconds)
    (127/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.376419681 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.16900286 seconds)
    (129/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.995939788 seconds)
    (130/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.910578141 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.09429911 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.149774138 seconds)
    (133/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.203844896 seconds)
    (134/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.423625902 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.288145226 seconds)
    (136/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.355835908 seconds)
    (137/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.849167664 seconds)
    (138/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.161050718 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.372353413 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.263162268 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.842718992 seconds)
    (142/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.227641503 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.98083515 seconds)
    (144/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.676533436 seconds)
    (145/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.986841294 seconds)
    (146/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.15894426 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.848803555 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.169211039 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.916491046 seconds)
    (150/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.341447885 seconds)
    (151/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.199228596 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 2.005070838 seconds)
    (153/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.950047038 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.865025338 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.997393741 seconds)
    (156/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.91363572 seconds)
    (157/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.092475431 seconds)
    (158/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.096123628 seconds)
    (159/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.22585295 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.851276744 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.231369232 seconds)
    (162/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.942869581 seconds)
    (163/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.951916206 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.14086717 seconds)
    (165/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.993755829 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.960609637 seconds)
    (167/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.918794249 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.948173902 seconds)
    (169/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.530823644 seconds)
    (170/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.246716478 seconds)
    (171/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.419794647 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.296888037 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.96476867 seconds)
    (174/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.72460188 seconds)
    (175/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.003252909 seconds)
    (176/309) benchmarking ("sort", BigInt, false)...
    done (took 6.864573623 seconds)
    (177/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.26473419 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.668310846 seconds)
    (179/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.955501573 seconds)
    (180/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.700859894 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.955094991 seconds)
    (182/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.778752616 seconds)
    (183/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.952954738 seconds)
    (184/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.555724698 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.961627065 seconds)
    (186/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.274984614 seconds)
    (187/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.325226245 seconds)
    (188/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.328117427 seconds)
    (189/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.522293626 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.936018255 seconds)
    (191/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.569717903 seconds)
    (192/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.9518231 seconds)
    (193/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.280405889 seconds)
    (194/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.250406009 seconds)
    (195/309) benchmarking ("sort", Int8, false)...
    done (took 5.219319105 seconds)
    (196/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.332040578 seconds)
    (197/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.253868405 seconds)
    (198/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.212037534 seconds)
    (199/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.521847161 seconds)
    (200/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.461855518 seconds)
    (201/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.188189602 seconds)
    (202/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.872864596 seconds)
    (203/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.362233801 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.707907422 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.101424612 seconds)
    (206/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.866018418 seconds)
    (207/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.092032827 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.8923327 seconds)
    (209/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.819115336 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.574504496 seconds)
    (211/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.926547882 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.256117599 seconds)
    (213/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.990140796 seconds)
    (214/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.456171797 seconds)
    (215/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.872232695 seconds)
    (216/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.943046021 seconds)
    (217/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.968492386 seconds)
    (218/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.917760577 seconds)
    (219/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.343885009 seconds)
    (220/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.850266372 seconds)
    (221/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 3.581599008 seconds)
    (222/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.019112238 seconds)
    (223/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.927632162 seconds)
    (224/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.376702968 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.013566336 seconds)
    (226/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.005177652 seconds)
    (227/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.311835056 seconds)
    (228/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.555213963 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.130343594 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 5.63512368 seconds)
    (231/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.961914539 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.557828261 seconds)
    (233/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.033620914 seconds)
    (234/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.983940845 seconds)
    (235/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.463678975 seconds)
    (236/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.919901043 seconds)
    (237/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.250804454 seconds)
    (238/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.153787019 seconds)
    (239/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.205757156 seconds)
    (240/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.483311384 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.918790087 seconds)
    (242/309) benchmarking ("sort", Float32, false)...
    done (took 6.036417998 seconds)
    (243/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.410929398 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.511077333 seconds)
    (245/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.03099688 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.234163676 seconds)
    (247/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.057280729 seconds)
    (248/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.215786569 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.970693676 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.008086185 seconds)
    (251/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.872427946 seconds)
    (252/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.94004134 seconds)
    (253/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.875270362 seconds)
    (254/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.984511996 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.255056775 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.926021536 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.515689979 seconds)
    (258/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.239989196 seconds)
    (259/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.006083415 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.869989695 seconds)
    (261/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 3.314789604 seconds)
    (262/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.493224408 seconds)
    (263/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.16493608 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.137286417 seconds)
    (265/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.108139394 seconds)
    (266/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.092536413 seconds)
    (267/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.213269739 seconds)
    (268/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.851902034 seconds)
    (269/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.834739244 seconds)
    (270/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.870860017 seconds)
    (271/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.948273125 seconds)
    (272/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.025345677 seconds)
    (273/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.261918838 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.873702015 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.873939162 seconds)
    (276/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.874460706 seconds)
    (277/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.853958537 seconds)
    (278/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.406796205 seconds)
    (279/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.058152166 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.985052045 seconds)
    (281/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.453086473 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.963729385 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.012707988 seconds)
    (284/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.05068903 seconds)
    (285/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.071598631 seconds)
    (286/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.953747285 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.246344081 seconds)
    (288/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.092949489 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.661311263 seconds)
    (290/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.953393524 seconds)
    (291/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.990426823 seconds)
    (292/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.958731429 seconds)
    (293/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.588413479 seconds)
    (294/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.526260374 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.956578235 seconds)
    (296/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.110481389 seconds)
    (297/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.587429628 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.298395061 seconds)
    (299/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.104107498 seconds)
    (300/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.226752242 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.227128117 seconds)
    (302/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.857392033 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 3.698591675 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.977901248 seconds)
    (305/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.050537913 seconds)
    (306/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.689733318 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.014245094 seconds)
    (308/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.874712655 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 4.943468158 seconds)
  done (took 1034.163127408 seconds)
done (took 1036.018252742 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.916307849 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.926756652 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.934325468 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.916457024 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.9975482 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.920025171 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.908248496 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.91237032 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.931144284 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.933649851 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.902940213 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.921383834 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.914032369 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.914255056 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.908810148 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.926978779 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.270566957 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.935594146 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.913474749 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.915860765 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.91418881 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.903496046 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.93675331 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.920813338 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.918617603 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.932034448 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.904152225 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.915036434 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.999217272 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.904991251 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.934385707 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.91316589 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.269661725 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.917898126 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.884432056 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.915631075 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.918348255 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.919486395 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.920350634 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.000436735 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.322665528 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.912774558 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.910817788 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.909422201 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.910682604 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.915625848 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.919512213 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.944477208 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.926500895 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.928678519 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.349877808 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.015462891 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.906896159 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.909988667 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.911160571 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.915204839 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.94444714 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.928439743 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.917531286 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.930623602 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.214976469 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.941249258 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.914833137 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.914407051 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.918092504 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.395102799 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.895437275 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.915166533 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.330177048 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.921858835 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.387304081 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.924291459 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.934948829 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.012608898 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.001715469 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.264998535 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.916986833 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.938598811 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.912327781 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.906208951 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.934883902 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.931484334 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.939168303 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.914333633 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.929798275 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.926987623 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.914314979 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.912089016 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.918709444 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.918886393 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.918673509 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.921034641 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.924575598 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.891506726 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.937983263 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.947147429 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.91117436 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.90990336 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.940733857 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.910874688 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.321915012 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.935747362 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.889868732 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.890206896 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.912139069 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.014838111 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.329564549 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.922534466 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.920580636 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.938632364 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.951075778 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.227144543 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.935252572 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.933750647 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.92332638 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.95050792 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.894378142 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.229981606 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.383909994 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.019270377 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.941117525 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.910918341 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.933477103 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.951062279 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.894358342 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.26769951 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.961356259 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.932559994 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.014652662 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.91133687 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.004242395 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.908557067 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.924767343 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.925957028 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.933951045 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.003478415 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.953489973 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.935799122 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.920302626 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.895374192 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.921673927 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.912175324 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.947666092 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.949524063 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.892508804 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.926630576 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.933531751 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.934881655 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.924064423 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.015205417 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.897723792 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.220141015 seconds)
done (took 300.950579814 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.966338437 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.884631186 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.009072976 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.889689956 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.978482806 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.979943157 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.890038998 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.88704607 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.887473851 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.312145748 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.887766481 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.888606858 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.889752723 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.888445364 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.980462643 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.89175488 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.886423695 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.310700698 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.890319859 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.9733264 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.890855656 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.889183596 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.889175431 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.314246185 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.886762074 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.878409529 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.968901921 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.888633038 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.272652504 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.878896826 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.888240129 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.274797242 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.984348124 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.905396101 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.898733585 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.894721475 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.97947902 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.893221342 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.973201602 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.973718465 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.007144699 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.930653834 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.880767466 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.882476705 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.886907107 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.889762184 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.881518219 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.917683437 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.880570863 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.885212454 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.269797222 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.902487245 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.898766686 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.890144766 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.889709602 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.914372108 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.888682882 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.892801448 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.989826884 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.893987923 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.962290668 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.316765992 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.355929363 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.89353441 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.890994746 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.891077773 seconds)
  done (took 186.193892831 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.961315073 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.967798542 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.962237013 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.895678026 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.942658156 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.969795515 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.89362424 seconds)
  done (took 15.408597739 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.898635013 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.893638562 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.945844892 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.949939616 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.889985885 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.057200038 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.888483946 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.89948651 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.885457942 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.951204561 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.889086984 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.89106214 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.895067284 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.887575379 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.94173098 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.901042293 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.008420046 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.893193558 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.891207296 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.044684762 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.88976509 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.897956304 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.956160716 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.901849345 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.890340141 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.89879992 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.491061105 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.890331615 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.887964191 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.890736628 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.887114341 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.938080147 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.893505731 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.886414514 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.892674875 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.024851206 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.893997632 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.888665954 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.893790861 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.887354764 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.895999161 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.894588978 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.893774073 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.889299383 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.894281795 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.91778545 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.895027276 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.898678309 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.894576828 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.896233956 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.961709569 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.8973971 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.894348729 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.892797008 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.963609889 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.900707314 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.897037675 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.896207832 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.899392022 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.894859113 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.053496689 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.949202264 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.898501329 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.94914719 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.898877505 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.897507874 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.895919017 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.895382049 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.992828191 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.899635463 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.945721218 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.895958812 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.061711089 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.920622013 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.898934438 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.89943743 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.899155505 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.89729168 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.889247424 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.90194478 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.892876628 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.896829409 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.901202808 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.8945999 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.892540744 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.020673597 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.037949519 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.893118822 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.910671235 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.90228557 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.890264169 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.965777411 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.895480151 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.889478021 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.95217042 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.011906677 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.954209292 seconds)
  done (took 208.414681336 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.896774346 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.898985263 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.89239129 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.909475739 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.894719386 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.892505811 seconds)
  done (took 13.197465168 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.896854734 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.892978112 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.89535981 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.89166886 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.897397239 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.893444696 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.895926999 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.897710303 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.896964993 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.896046478 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.894537876 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.894229526 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.895220012 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.892999737 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.891430895 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.891843198 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.889564837 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.889330272 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.892537079 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.89342974 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.045270251 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.893294038 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.894500766 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.892760333 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.896760376 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.895832785 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.903566283 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.893225613 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.894820006 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.90178728 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.897794099 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.893866149 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.89377414 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.906673587 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.900012699 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.897594323 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.900943742 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.900239427 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.897329145 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.894240292 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.897337055 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.894325854 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.898534787 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.901729058 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.894331515 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.901989609 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.90340285 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.906015217 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.896258763 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.900460344 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.900069132 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.898870966 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.896889886 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.90329855 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.90290125 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.90093782 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.906400744 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.896944231 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.894815554 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.90101269 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.897422062 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.899846618 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.899718687 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.900631222 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.896316794 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.90346922 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.89954966 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.899954222 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.900705304 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.899063001 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.903994157 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.893100059 seconds)
  done (took 139.583043908 seconds)
done (took 564.628946181 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.198549457 seconds)
  done (took 9.014960883 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.930863571 seconds)
  done (took 8.858329921 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.358422326 seconds)
  done (took 10.187305986 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.901892643 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.937752355 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.901625909 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.893471935 seconds)
  done (took 29.467635913 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.002718884 seconds)
  done (took 8.827193563 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.907850371 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.892883425 seconds)
  done (took 15.663930799 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.012551048 seconds)
  done (took 8.838730953 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.138648168 seconds)
  done (took 8.967347404 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.909493036 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.911505744 seconds)
  done (took 15.658329335 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.877114116 seconds)
  done (took 8.700728167 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.8270319 seconds)
  done (took 11.664554533 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.903338349 seconds)
  done (took 8.743310943 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.89594512 seconds)
  done (took 8.723376468 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.931650783 seconds)
  done (took 8.756367652 seconds)
done (took 163.888797967 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.899975034 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.895300233 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.892861326 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.893001334 seconds)
  done (took 29.405072251 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.935331326 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.937718871 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.938047272 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.947698675 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.941088592 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.936475254 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.929287281 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.929696257 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.948419692 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.938367003 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.939406764 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.939627749 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.936723304 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.928340036 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.938468046 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.939014267 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.949249746 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.938097834 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.929087127 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.93990477 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.905291017 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.946909651 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.940682265 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.905083356 seconds)
  done (took 48.283975772 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.10318084 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.975615511 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.055303807 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.955142582 seconds)
  done (took 9.9145058 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.955075991 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.958250877 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.968169068 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.008413607 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.031514899 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.969048287 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.931878285 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.926521733 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.911457109 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.957444865 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.033854828 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.969923131 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.042481536 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.905577453 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.088040678 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.909009605 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.904004214 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.955573343 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.008816666 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.022515305 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.904535318 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.957366352 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.960224354 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.970333394 seconds)
  done (took 49.075511978 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.905798893 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.914024009 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.908772695 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.909999123 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.91026067 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.913232561 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.909563003 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.909665786 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.924218796 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.904321051 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.906557435 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.905723834 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.906924373 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.908456386 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.90726474 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.916339684 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.918344234 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.909369934 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.912778247 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.910819952 seconds)
  done (took 40.038963331 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.898956447 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.832975537 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 5.426219963 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.335820568 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.89752936 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.895951221 seconds)
  done (took 36.114799719 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.916382532 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.909444578 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.90566041 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.960820827 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.037672283 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.910134172 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.906669891 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.913760861 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.950661542 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.966799557 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.921220241 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.930127698 seconds)
  done (took 25.057805059 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.901081096 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.898011959 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.899384725 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.917200547 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.915963429 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.914189962 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.911879084 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.899024796 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.916646517 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.923164806 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.914665699 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.918823768 seconds)
  done (took 44.761609767 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040740641 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.951414816 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.411329834 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788259901 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.087368937 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.903331912 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.904875862 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.308371077 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.907450219 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177291151 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.283366016 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069785897 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.839380781 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900642189 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.942174097 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.408524241 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.092475363 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202171687 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928410233 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.312290902 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015863157 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.107307132 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.962468849 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.980926279 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.931754083 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.906107405 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.161661777 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.325898979 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063886786 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942219746 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924840573 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.902844945 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175527201 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.367647637 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073165302 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922678685 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.835261761 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.620936475 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.921823572 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.121900704 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.378392817 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.931946529 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923831724 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902635616 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.837866488 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903325354 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356243389 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.91164113 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.614267504 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.90153355 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920635435 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045122893 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.906876953 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.720983093 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.995464741 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.620251691 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.900416122 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911043576 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.560426449 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.715059771 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.78291492 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.878748241 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.99690769 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.336821907 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.513125551 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.46738079 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.907133011 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907668641 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.535059603 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.282517033 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995101124 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.609338803 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.935064772 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.704982664 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447533857 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.349902143 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.136261371 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255624567 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.930533166 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.844567608 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.927731119 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.222376411 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870405156 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.950294284 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.840158325 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.239228895 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982275809 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.702672016 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95675358 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.308524361 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.919157339 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969676097 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964668114 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.063467695 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.788627428 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907152906 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.049242165 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.878036192 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949175279 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.301278273 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.582450141 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.356674189 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84465773 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.877925901 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.544333891 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.441324081 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146370538 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911436424 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.987391708 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.742948661 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.955168191 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.29700226 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968038639 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.516362198 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005809931 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.326602957 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280686135 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936662554 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.466406559 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.320285619 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057057653 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.304091949 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.146210285 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035609693 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.916431467 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.905789529 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.779941977 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.134607678 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.207114741 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.904625349 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.90699525 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.974543491 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.902728877 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.897531493 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.693320254 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.301819216 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.249172335 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.061515365 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.904502108 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187239812 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870818402 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.49287368 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.317288263 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 3.034425331 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.563114256 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.989400973 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.204107102 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.513700622 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.246160079 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952412095 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937140885 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065707285 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951196673 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.049512902 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.879363741 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.909505164 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.908646201 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.783371163 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.380849142 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908369713 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.909604838 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.963072619 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299963929 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762626135 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.914032611 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.896839147 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.918149317 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041655562 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.910367962 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.918593042 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 4.809307903 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825200284 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.909410277 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.596656157 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.060632409 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916037797 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.119430849 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072184781 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.064175296 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.306947127 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978062685 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.841239832 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.615391243 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.600829448 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90479468 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.186785608 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.906310938 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926908231 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921607619 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.110118379 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.308575914 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952572336 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.898548482 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.476995349 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918323557 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.912758934 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90822286 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.75200894 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.528212889 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.954655336 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.97087725 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132332633 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.922644007 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.843920715 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.359982619 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911722165 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.909004136 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.140272426 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975353439 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.897092643 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444980077 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.213847468 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.849388996 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922633235 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.91501664 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.983411432 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.968874695 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.068014097 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932076366 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.064882214 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952099418 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.919181073 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.205969241 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840906302 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.562421624 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473370168 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.364233124 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4989056 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.145352947 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.484080359 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322025495 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.925001631 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.913790788 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.987613444 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.322930773 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.892151341 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070273927 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.577384049 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.277958513 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927244415 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.006967196 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.447827327 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.14406989 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949333285 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.958285874 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98265292 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.731889781 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.13225286 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.497729633 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16588866 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.347629998 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045843734 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315248699 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.074492853 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.354296773 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.907865131 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.682034908 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079930843 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.627459396 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.910963543 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.115560199 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.353616557 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410585893 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.928596617 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.010585023 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.460731195 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.295681455 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.107650442 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.971079401 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.92389822 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.921644126 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.911363361 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.039356684 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.941403063 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 3.847409361 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923080128 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877110808 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.253283605 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.358858304 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.814753905 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.926519004 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910685106 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277405882 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.940385819 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077780239 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.243797214 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.599405796 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915614241 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.84840658 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.880652287 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.605451374 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.928062122 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824723473 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186679645 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.012973537 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.000919113 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914392203 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.013760875 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.851309152 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.925655647 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.315233051 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.072582038 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.833360602 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945522747 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.429307286 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.059582424 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.915039835 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.453316639 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.99449157 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.976241337 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.071842111 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.077889406 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 5.565760363 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.911839187 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.962900244 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.458048547 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.309073092 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050236501 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.634723152 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.050677392 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465720149 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019093714 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.309628829 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.591871321 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.006579209 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924728425 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048882542 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925498825 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.926333861 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.926959154 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030889087 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.320428764 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.9358726 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.930211197 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057290772 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.724644224 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.624526313 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.303283887 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333924428 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527705128 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360815098 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980986887 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.917244326 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917700928 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.906912772 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135750768 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.917630294 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189527705 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.172755479 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.031588242 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964310304 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.065551762 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.581780644 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.738551565 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19231713 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.91859019 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917558086 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39313006 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.581354792 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928512712 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.889216107 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.217222321 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294162806 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.739377501 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.219043391 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342627985 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193135873 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.582823729 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.919572346 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.055239469 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.060869213 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.679021225 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.970655255 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.331120693 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158698713 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929916987 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384396032 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.943079188 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.449724821 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.434275037 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.347538638 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.37863265 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.969555998 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.98311103 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360422165 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419043892 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.153373159 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060108902 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930422485 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.027562906 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146463485 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 3.326846028 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.457461732 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.920982684 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853672823 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.679663166 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.929331534 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328816552 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.166358869 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.916947489 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.914391276 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974516516 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.930444197 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.069854598 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.251761635 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.081448973 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93106867 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.929671387 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.829527999 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361323891 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985988838 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.911394197 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.921793589 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034652381 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.93486727 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051533719 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.372783806 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.629629287 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297554194 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.922674343 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983586061 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.742503766 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404445993 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365065815 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.626705109 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.19485579 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.947458888 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.923744954 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199716247 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.928047755 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.09618473 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.22318794 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.437429118 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.551794575 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961106404 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.312719571 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240221711 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.924692984 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.547535191 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.904453959 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.90508265 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74754927 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.688389669 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.92241949 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.045064549 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.926624961 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.177397054 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944407998 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.920479391 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923397661 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.662814511 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728186414 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.927225252 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.050993461 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.089674394 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.121719536 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957981009 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183307526 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925834684 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.639455795 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.287978437 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.863791592 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.564586329 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.928019444 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.377125078 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926051322 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.454464927 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.514920434 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.12282881 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308221039 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.262348846 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.962438906 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.927539968 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.140274524 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722770945 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.317655312 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957696091 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.542570611 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98749994 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 5.51604611 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.925117251 seconds)
  done (took 1883.636138804 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.924963799 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.963589006 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.937378686 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.945764431 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.943419322 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.00812897 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.98155637 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.980428871 seconds)
  done (took 57.536538402 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.926167049 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.11657164 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.93673073 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.927017082 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.936168467 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.925957906 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.09185586 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.943212754 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.935978265 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.93892034 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.925393453 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.932948014 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.233413088 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.94739761 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.927257346 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.908552971 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.933784473 seconds)
  done (took 75.347806086 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.929598933 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.95276185 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.988514764 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.938213304 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 11.055839742 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.945117244 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.364064693 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.95458285 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.929571612 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.017303029 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.988853472 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.95299306 seconds)
  done (took 93.874634825 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.9376926 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.935109535 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.935601831 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.936736044 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.936917918 seconds)
  done (took 11.540491425 seconds)
done (took 2406.476001585 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.28718246 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.203717891 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.185491589 seconds)
  done (took 6.246104661 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.093080674 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.712054178 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.608837738 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.48758978 seconds)
  done (took 11.761178622 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.217301506 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.301382176 seconds)
  done (took 6.376318594 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.450517479 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.93324985 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.307050354 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.926241858 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.930718797 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.928936028 seconds)
  done (took 22.648535615 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.934192087 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.937047754 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.932822619 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.93713208 seconds)
  done (took 9.600152765 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.912033968 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.597578466 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.913895933 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.92531891 seconds)
  done (took 21.206497054 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.681275843 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.69249874 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.681200344 seconds)
  done (took 9.91276582 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.563407663 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 6.98748026 seconds)
  done (took 13.408786454 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.196965209 seconds)
  done (took 4.123661959 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.065081541 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.247295239 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.450069907 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.445390139 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.548866105 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.610080596 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.236201022 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.162822664 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.332360688 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.357857066 seconds)
  done (took 25.314804996 seconds)
done (took 146.433616772 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.811038513 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.322073209 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.282610336 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.081181359 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.305623137 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.982268825 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.933139121 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.323980163 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.137488845 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.135837839 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.082143311 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.320406173 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.872725558 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.328581461 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.87289318 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.290580695 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.300377688 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.826350793 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.812718791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.098446794 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.934267629 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.574095941 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.867597631 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.582412086 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.371285203 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.267552774 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.05631178 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.334904048 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.013429807 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.054687611 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.234114841 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.31246034 seconds)
  done (took 186.583669761 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.932414311 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.930103153 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.931698737 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.931369137 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.303576861 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.932491471 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.931412685 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.93253915 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.790255848 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.787103606 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.950963678 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.359562312 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.956878445 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.931872348 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.962633182 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.933221966 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.046231946 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.95722075 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.962126793 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.964370364 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.963681885 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.313397272 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.956988169 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.438201536 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.001759321 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.954345215 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.932970878 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.960460522 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.960886398 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.96079979 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.961965391 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.932661468 seconds)
  done (took 217.629626409 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.935677751 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.944938732 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.949534353 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.93314456 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.946335749 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.947268944 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.934961376 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.932869977 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.944918046 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.940579226 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.939880288 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.941778836 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.946248896 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.935198474 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.947949826 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.933757866 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.948246664 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.941861381 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.945947615 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.947672611 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.950780237 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.934320587 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.944894923 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.943342793 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.946930028 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.942985947 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.934756148 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.946831036 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.946572308 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.948082566 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.403302134 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.941627305 seconds)
  done (took 224.520196043 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.13957157 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.949931453 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.95200152 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.886264797 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.951607456 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.95197339 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.946162442 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.147698873 seconds)
  done (took 19.825966206 seconds)
done (took 650.429750817 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.55141284 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.315241433 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.146084381 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.975475911 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.253011852 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.013059012 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.970805002 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.038022154 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.708620593 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.040914837 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.710398355 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.991645967 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.785045868 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.999336623 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.119502075 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.024979111 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.58200683 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.68556608 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.17283861 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.072491018 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.16051441 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.951326947 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.047290648 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.72584281 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.802347536 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.969324122 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.148056747 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.588613976 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.983742749 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.152599966 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.725064357 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.36478485 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.98164957 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.969104016 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.022086055 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.004438831 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.344591639 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.979586753 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.11171477 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.71892309 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.064021366 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.585851673 seconds)
  done (took 107.428934921 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.937934994 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.935886128 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.934578969 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.937201336 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.937070384 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.93687051 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.935552395 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.934811546 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.936041973 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.937167876 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.935866769 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.937057969 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.93544081 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.937017085 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.938534574 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.936880806 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.939365069 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.939160859 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.935805216 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.937930935 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.936605335 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.935397499 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.953297718 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.93676585 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.937674618 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.936939996 seconds)
  done (took 52.257454533 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.955406852 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.177350998 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.23959365 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.971963308 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.952773699 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.955309188 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.972576755 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.960964508 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.954016704 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.955014032 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.080688356 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.960994428 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.976006439 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.239987538 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.969455952 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.952843259 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.953472026 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.954266983 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.185865447 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.970846597 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.973573574 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.960535749 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.975593546 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.970027202 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.955357363 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.955489437 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.957300526 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.507927143 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.963857543 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.078905167 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.040511031 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.973696187 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.458719622 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.249042461 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.024429222 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.959585051 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.954461639 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.083816999 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.959433326 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.952856761 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.972006564 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.958496323 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.238605806 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.591599683 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.969026383 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.953321717 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.514295573 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.092452918 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.995445509 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.965749215 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.241770352 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.97163054 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.956152223 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.954922878 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.990061555 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.964551311 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.957280224 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.370037796 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.96849711 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.973066411 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.962484834 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.956558163 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.192883518 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.963885253 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.179114532 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.963059209 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.964257701 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.953927701 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.242595259 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.971741062 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.603510916 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.969769853 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.955604082 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.080993991 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.184089208 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.553161822 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.969403447 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.196575544 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.476551118 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.981124941 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.964889419 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.493293148 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.986594091 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.962211276 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.95718065 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.960688351 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.9548906 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.021809451 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.97432772 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.531716659 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.610260416 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.383094429 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.986770909 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.973226722 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.957417808 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.369948776 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.968600723 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.956578734 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.234387902 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.614389826 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.972392819 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.966842992 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.584530535 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.973242776 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.980009513 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.965449774 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.245590086 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.973096051 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.023879504 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.958354472 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.966432313 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.961305912 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.976705029 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.964606357 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.958302782 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.571978901 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.106466794 seconds)
  done (took 245.103299094 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.963748673 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.953871643 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.954784438 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.955653105 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.951886122 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.958443026 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.951710174 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.951036917 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.95819223 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.952880544 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.951802665 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.951710181 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.953038173 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.953005433 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.992042268 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.958532192 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.580480714 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.954011583 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.951053804 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.951348538 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.649579168 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.959846149 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.950024138 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.952676127 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.954027779 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.951713352 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.949998655 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.980924265 seconds)
  done (took 169.979953316 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.961615827 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.074926457 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.975346268 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.98550772 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.969115414 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.954677893 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.983590129 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.97595053 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.967280076 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.957016975 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.957173095 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.018560772 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.970109922 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.058826197 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.988697797 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.991694648 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.062661852 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.966873309 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.95575973 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.958214045 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.986730767 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.949292928 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.021019438 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.082774095 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.978663679 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.074512172 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.960765477 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.96076049 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.960297429 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.077062227 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.976165155 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.020502889 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.988286972 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.977558519 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.082627843 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.07454636 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.06486006 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.989865588 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.966535502 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.959225745 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.957424892 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.94613449 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.078480416 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.978077216 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.962001217 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.065181313 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.979686741 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.96293326 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.970028866 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.958545375 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.973523633 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.979142629 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.029126244 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.091767009 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.993965624 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.986344304 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.986459374 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.243161403 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.970250198 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.061726822 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.951748354 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.075910327 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.98097082 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.94584915 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.961432041 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.96510832 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.990293211 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.991950007 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.066818649 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.970049552 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.062262003 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.997090232 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.968394273 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.964446958 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.963896017 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.07834635 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.07922498 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.995924034 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.998615055 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.992627188 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.95452087 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.961072286 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.945350885 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.979716918 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.963318712 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.077941927 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.080614563 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.97023054 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.965239334 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.965661337 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.965943803 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.986787325 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.087531335 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.997483565 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.057566871 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.028429142 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.036084208 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.976319166 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.973628608 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.964890643 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.027185294 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.97702692 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.973698883 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.292415864 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.0306826 seconds)
  done (took 212.184081095 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.440190666 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.014326654 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.033754129 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.261923998 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.382385919 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.887422829 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.009785574 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.011515394 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.044780423 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.257864353 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.097368276 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.048585697 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.000180933 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.988244271 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.012811585 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.036844094 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.03733804 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.344883014 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.143892014 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.158845118 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.993757842 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.313140335 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.333593981 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.436402515 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.067528529 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.402454974 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.680487276 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.29085181 seconds)
  done (took 64.62429275 seconds)
done (took 853.447221908 seconds)
SAVING RESULT...
DONE!
