cset: moving following pidspec: 9252
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.257796319 seconds)
loading group "string"... done (took 0.46916175 seconds)
loading group "linalg"... done (took 7.625432692 seconds)
loading group "parallel"... done (took 0.17382168 seconds)
loading group "find"... done (took 1.189095035 seconds)
loading group "tuple"... done (took 2.126229716 seconds)
loading group "dates"... done (took 1.346686351 seconds)
loading group "micro"... done (took 0.248179692 seconds)
loading group "io"... done (took 0.668050311 seconds)
loading group "scalar"... done (took 42.177319365 seconds)
loading group "sparse"... done (took 12.981443043 seconds)
loading group "broadcast"... done (took 1.158371496 seconds)
loading group "union"... done (took 14.506523553 seconds)
loading group "simd"... done (took 5.182648012 seconds)
loading group "random"... done (took 10.389234074 seconds)
loading group "problem"... done (took 2.032652601 seconds)
loading group "array"... done (took 24.414124304 seconds)
loading group "misc"... done (took 1.535681711 seconds)
loading group "sort"... done (took 3.985942709 seconds)
loading group "collection"... done (took 21.237237941 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.526842422 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141540495 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135141633 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.151316755 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.208302956 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.146014228 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160501363 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.116070778 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.97740503 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.188369123 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.157498023 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.524235498 seconds)
done (took 5.190037248 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.297780989 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097291295 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105843429 seconds)
  done (took 0.889714248 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078999124 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.148619071 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095970915 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079700343 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096378311 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07895649 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096892419 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079491691 seconds)
  done (took 1.362771252 seconds)
done (took 3.321641064 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.749971892 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.295365862 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203662368 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.475284375 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.201095597 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.220588288 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.725246338 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.376839491 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.25367786 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102366152 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.146920307 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.396974437 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139993405 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.740870964 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.108408292 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127121331 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.184721043 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.479522923 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082224161 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112088391 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118322653 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.146040756 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132091489 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093346538 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.188566031 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081952416 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.197185103 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111274255 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082685248 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.297754724 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20303113 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.735338922 seconds)
  done (took 11.236211113 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113962482 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138017929 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099972285 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140035249 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134206236 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101029039 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.088168532 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098448225 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124161301 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178621759 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113956448 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13735781 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097763839 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083315554 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117692128 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24695676 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122546233 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10564435 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10271122 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105272074 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123588585 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113758771 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110216505 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09499245 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16967004 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.224058972 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113819379 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128649066 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099534305 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115534659 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146643067 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146113411 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095994007 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08184639 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1747532 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125984365 seconds)
  done (took 5.214572834 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191957804 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123228442 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.173250583 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.167430211 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143640792 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165128634 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116543201 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253307163 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.133818326 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166078933 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145375416 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.120784119 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083119649 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.101409539 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098199718 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.714217891 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.12662685 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.161325794 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11885515 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105869329 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087378731 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.726998928 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10642514 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083469647 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102454433 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.131236241 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067079732 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167100543 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103857904 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.178339091 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123617609 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086162648 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138175664 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.215616675 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112564791 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140233339 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099558777 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081330221 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.185701701 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108779364 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081177586 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.123710737 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13777908 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.139208054 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098795595 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083808385 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.210908412 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099677508 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119439888 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.961603553 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183449019 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092319275 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098713655 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.330801414 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101350421 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101317506 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079425163 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.275564272 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.186559103 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.101794488 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08173366 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099461019 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083670957 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.75252788 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084204459 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.146410479 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084754064 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109711114 seconds)
    (69/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083762668 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101229435 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08297632 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107027416 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107558418 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100591887 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099972284 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08275991 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.099860102 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080110406 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.103188569 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.12523369 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094925698 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105791996 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099577825 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151427846 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081090834 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117227225 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130072681 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087358671 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098546135 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133615432 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085502159 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.100822075 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137210859 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083754443 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113155608 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102881005 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145170965 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08379401 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.187250404 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081783729 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.129523883 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104240031 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.081377131 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13292684 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.118128803 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084687623 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105779429 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080071694 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.09847642 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.151313902 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.097317241 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082595195 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.103164037 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111593321 seconds)
  done (took 24.218283716 seconds)
done (took 41.353447811 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.34221009 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106086478 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.1072083 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106717351 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104277266 seconds)
  done (took 1.527956957 seconds)
done (took 2.259723058 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.300176525 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.179773871 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097823215 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.174340354 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095339645 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.180922368 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165653782 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.115434549 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.22639193 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.079062503 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.169072938 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.096210289 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078122222 seconds)
  done (took 2.718136295 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098032997 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118317155 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08439356 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11471222 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077933511 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11464434 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094958665 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120663894 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112777454 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086969134 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096605484 seconds)
  done (took 1.850142385 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096219632 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116764421 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084338 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113073588 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077766478 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113346569 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094738703 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11901891 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112727303 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087747205 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096885126 seconds)
  done (took 1.841926246 seconds)
done (took 7.131924718 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09433065 seconds)
  done (took 0.821415498 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.93965899 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.023667741 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.117664785 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.155157253 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.304611046 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.195349292 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.489342682 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.129931858 seconds)
  done (took 11.305180165 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.119330923 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.116899064 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.108241736 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08953527 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.106211335 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085838549 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.10258015 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103465238 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087971632 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.101716991 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084289685 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101739535 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.105152373 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088090977 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.105411943 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.085923989 seconds)
  done (took 2.388816363 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.123256175 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.12227188 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.110580598 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112433328 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089426052 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107955194 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.110452451 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091251946 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105454978 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.107561519 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093027087 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108760099 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107016307 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082300849 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109493544 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110820925 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087890031 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109164418 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109003099 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092416986 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110360091 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098848185 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088641841 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109043414 seconds)
  done (took 3.342365434 seconds)
done (took 18.588506641 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164956609 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112923383 seconds)
  done (took 1.010874828 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098333662 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116351671 seconds)
  done (took 0.954485605 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101251703 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098590343 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.125507518 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113010012 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082759367 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099990407 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123417149 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.08294697 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099515385 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083015603 seconds)
  done (took 1.748961562 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084890099 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.11356706 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104384991 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097042991 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108198538 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098041272 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090925533 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.102330903 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.114115631 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078830122 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105617749 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117611627 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08858285 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119106185 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.108477406 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086018398 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10519495 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102156842 seconds)
  done (took 2.565150067 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08212208 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100173412 seconds)
  done (took 0.920892003 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083920411 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097116235 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084627128 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100969965 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.097504529 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.07883751 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097953124 seconds)
  done (took 1.380282059 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.479622934 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140090787 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.261550696 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087399895 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123471141 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.31484268 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.102177419 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08705591 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.106941433 seconds)
  done (took 2.502064959 seconds)
done (took 11.821675746 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095704398 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.121447237 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115812412 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.481965027 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110336095 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.100998521 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.163754593 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.258230259 seconds)
done (took 2.19594009 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.152207479 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.336536116 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.118456125 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.069482801 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098475323 seconds)
  done (took 1.371289921 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082838188 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103471422 seconds)
  done (took 0.933279249 seconds)
done (took 3.207259014 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083658296 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.134066379 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.082444352 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.100321218 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079843342 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.102295951 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.080073874 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.099934481 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082253463 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099563221 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.10001764 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.082394671 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.100264908 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082984171 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.100516974 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079742719 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098217702 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082816377 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.098160949 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080488877 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098283219 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082279865 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097991436 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079977105 seconds)
  done (took 2.995332009 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102651267 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101927303 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106544351 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08839743 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105541239 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088557471 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105398899 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100550238 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089024269 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102367652 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104141678 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086891711 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.103220335 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087255026 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10268213 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103985014 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089529817 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101412043 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086578198 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104558796 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105874108 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083621179 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104247359 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106148022 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087328291 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104375854 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085613419 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101249724 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106355443 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087236127 seconds)
  done (took 3.684995428 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087551968 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.098052844 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08072243 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105382023 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081286886 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.100791923 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080716645 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098765804 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081242804 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.098314137 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082928171 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.098327744 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080323585 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100670513 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081844943 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102466323 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112205769 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.08109231 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.098549533 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.08123525 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101858554 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080740548 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099693169 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080515896 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.099093953 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080782298 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098511575 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080029114 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099370127 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080567191 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102026313 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084474349 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.098158418 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.088189661 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102445616 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.080968569 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102183082 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.08118952 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099604644 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.098396459 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080479632 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098708587 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081066742 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105837371 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080765756 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.101293233 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080668896 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100209233 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080992607 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.1014354 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080828334 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097856616 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082783554 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099815133 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.102964706 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079765169 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.099931171 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07991945 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098968079 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07987516 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097540661 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079580497 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100654454 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081168778 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114075144 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08811832 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098519882 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082304271 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099223914 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083598897 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099607226 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112841653 seconds)
  done (took 7.377780179 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085867845 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109875102 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082669506 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100781564 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078753913 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098781338 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102810306 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081218219 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101077676 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088732899 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099159707 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08228036 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100801344 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111462216 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081736947 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10129736 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088615919 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096897384 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.082008401 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10234623 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081904121 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102813984 seconds)
  done (took 2.819592152 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.215996648 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10889417 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.146660267 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.111559335 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087649444 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11024374 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106473014 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089797137 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106536294 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086207146 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1046472 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105880772 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086316778 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104339493 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104612943 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088296036 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106423014 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088120646 seconds)
  done (took 2.719739913 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096150794 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10226898 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106452476 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102847062 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.102769933 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086846347 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107215045 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111762693 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086380718 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101897442 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094106692 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103464061 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104764925 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084274363 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104942689 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084041581 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104865537 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085315816 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112204208 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10883204 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10797745 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094121895 seconds)
  done (took 2.957221442 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099942771 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104467357 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.122809367 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087471086 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098785581 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082334008 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.11005648 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083666457 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110792893 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.10405127 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084791666 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100982348 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.09191068 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101697335 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.107534956 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084899378 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104499311 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084181832 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103577882 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080163163 seconds)
  done (took 2.713636377 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106174513 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103967499 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.103901213 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097272457 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104438648 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085787406 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113483881 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103598291 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085624857 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129467498 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103237882 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085470944 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113333235 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109592293 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10385988 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095442384 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113271314 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113567136 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086746274 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103618499 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129824645 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086032864 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112915769 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103453522 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.201466805 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10377894 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104791461 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091746072 seconds)
  done (took 3.762705124 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084506854 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102219867 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081654106 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.10072036 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081263632 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.100620218 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081335704 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.100219463 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084063168 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100296838 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083706627 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.10219678 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084446461 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102452058 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087172512 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102379042 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084227358 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099719808 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081963853 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099757079 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.085088673 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102318463 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084033395 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.100280374 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082088009 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102087725 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081339115 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100497555 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084266304 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099478279 seconds)
  done (took 3.535582139 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094195871 seconds)
    (2/2) benchmarking "in"...
    done (took 0.111345309 seconds)
  done (took 0.97524405 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.083321668 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119654206 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081497222 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106689081 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089881849 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.104315191 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111609914 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089923358 seconds)
  done (took 1.555490092 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100251489 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114883446 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086594086 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116881125 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.11436073 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098676003 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165834413 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104574367 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090817368 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.101340466 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.098589716 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.102443616 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.10975008 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085231602 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109227466 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090940914 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100738238 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091941684 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.106878502 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102655047 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086585246 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114332451 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08760111 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101498701 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086079942 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.115038232 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113748578 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.086735307 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106619699 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113290654 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091228173 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09793556 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085481783 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104929456 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.083236096 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11334593 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11679273 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087815189 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112971723 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086056064 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116020584 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.098829901 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091235299 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109292003 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096416457 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.104715744 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086651421 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.098899246 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101254822 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087586057 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098967668 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084785486 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.098343936 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09279724 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107571341 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117731741 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084070516 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10537853 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088284299 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107468289 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091720986 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106380975 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088277955 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.10299461 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111801683 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089345504 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11173774 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080913802 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097268037 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083800119 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112775439 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12882975 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09434135 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104717764 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087782326 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102383729 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107998802 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086995398 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111124475 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094072702 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.104132376 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111886072 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093328075 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104007104 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088782709 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.113655493 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.102734064 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.089250755 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.101875485 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10074165 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.103689191 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.083326241 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.102065215 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112760002 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089185263 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104236785 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083546645 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111238868 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.082865219 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105949517 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087099299 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104980317 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112940854 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091741408 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110504659 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.112453024 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.093114016 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104146087 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089626636 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.101967425 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087517079 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.107386092 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093581612 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.098703155 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107338667 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087562585 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105471301 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093408177 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102463606 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085844862 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111628552 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111602929 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08444182 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.100847115 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088819545 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.104329921 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090451673 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.112502879 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.104366163 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080816004 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09961574 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090461302 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.105550094 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091061463 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110539659 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107250076 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.080100032 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102061938 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.090962223 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112041894 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103993753 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086790953 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109576533 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086330439 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.104516805 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091692088 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.106455516 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085385246 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.10847061 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104922878 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.081557128 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109554784 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089608764 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.103875868 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089946982 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108969676 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107479559 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.087110951 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104235993 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091477446 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106596381 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085365309 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104520347 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083993991 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114773645 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.107488552 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081476347 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.101743815 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095043976 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.103365169 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08536141 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104214289 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107706532 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087162845 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102535496 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.086118022 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106290478 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098582325 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111478835 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106918806 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091720899 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.115373588 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086204312 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.106466863 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.105495247 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088354641 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.106471877 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093736458 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110761689 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111122821 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.08865153 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.102146486 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092592931 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113089307 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085645951 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.103011823 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084850782 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.109043945 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111847265 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090879702 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106516614 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083803162 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105989904 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110221666 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08895081 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.105588485 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085435788 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.110112148 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086222956 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.112038527 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107008565 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095718732 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109476226 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081574719 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109128656 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103149126 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092851832 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.1008933 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084307053 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103837829 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.088484487 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.10504559 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089922623 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.099493081 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0940547 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113292544 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.105461081 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086139832 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10582104 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095004677 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.107269709 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09058447 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.109022612 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110690768 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09965454 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.105155951 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.09014594 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114662063 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105921271 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.080640184 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111650561 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.08513854 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104909682 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085535993 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.103890425 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0904636 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115886817 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111147005 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079684479 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.108478266 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085512371 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.104185134 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082182305 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112693845 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109185106 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087877111 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115332935 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088590671 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.106671078 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09047748 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.106352615 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.107374824 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088379606 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109329963 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087988666 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.108993031 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085759744 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.107138147 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102489659 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08185031 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105200604 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.087261023 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105707521 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092830012 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.105750957 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086659232 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.109116033 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107179401 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087681661 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106511977 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085950628 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108991103 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087399078 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.106115064 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089095583 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.101080135 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114126127 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086955905 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115219463 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08691163 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.103263171 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.092147142 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.108839947 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111807044 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087679059 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.107786993 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088886649 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.107399103 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089317178 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114800565 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.104389636 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096267391 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112439074 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087449151 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.109514094 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086919554 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107760202 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085957053 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.109292385 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.107694887 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087122166 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.106002179 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091977962 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.109136062 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087343458 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107882587 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107777875 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087552456 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.107907164 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080698574 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.105360154 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086440194 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.106941404 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094747848 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107025342 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.109654236 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085939077 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107891569 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086240854 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.103156127 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095789655 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116828374 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.108871182 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096370897 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106205347 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088627216 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116858477 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.100615493 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08528298 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.104147553 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084613121 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115006557 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088688721 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.115486374 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086665364 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105727703 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.103868532 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088399984 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.106434181 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081436794 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.104135385 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090964984 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.109305988 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086572729 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106851922 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090601814 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108716009 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115001936 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.086722899 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.109164004 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08834113 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.103392491 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086071496 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.105651062 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090088226 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.109085322 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.104887861 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.085050599 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.106521978 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08870231 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.108051455 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087625619 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.108344492 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105064233 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106959743 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.110020355 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091310404 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.10138996 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.09023611 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.107442917 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086822532 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.106102817 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090345624 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111693636 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108265159 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094615378 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.106694147 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088616011 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107416572 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084945343 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.107684682 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.107322203 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.088694941 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.106252194 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.089531659 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115283821 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085403554 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109453211 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08702774 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.1083974 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111943724 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088224019 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.108991095 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095808675 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.110849563 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.108775134 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093819837 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.110983642 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09111098 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108882584 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08960218 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113697152 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.1059387 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.095411532 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.107501927 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08999792 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.109532313 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.0855591 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106863676 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087784686 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10750788 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112112001 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.089332254 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.106809169 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086743596 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.105614016 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089582698 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112162417 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115713658 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089863431 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111613645 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083184681 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.104866904 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089530371 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.104718371 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089258039 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110448815 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113542869 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090549367 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.10767774 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086463944 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.115629242 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094638917 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112589007 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.105345836 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092629035 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.109706249 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090755681 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.108522439 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.088148977 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109333369 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.113750185 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089930513 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.107041569 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096551929 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.112044418 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089612917 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.109558017 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087682167 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.108230248 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.102651154 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089124155 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.109810621 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095053714 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.110710676 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088457278 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117785971 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.107507366 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08776491 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113093613 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087159085 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115349474 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083181473 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10846329 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109857938 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090439643 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102990594 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086657855 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.105323455 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090566312 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.107413359 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.083121698 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118071566 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.115436086 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090118616 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107420972 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087053657 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.10283848 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.08310147 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.107308854 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089338053 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.109981221 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117679134 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086984198 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.107458121 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.083302089 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10890151 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090829629 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.111295919 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085069468 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.103687968 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085737048 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109834024 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.115959425 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0876013 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.107861697 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091847249 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.111074167 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085509523 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112750717 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.104651301 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092679353 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118895079 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08984895 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108839214 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093144863 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117068205 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10991454 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.08391937 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.109800893 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090703303 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.108850797 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089486389 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.110006505 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122315994 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091909801 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.107579802 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086792034 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.111253366 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087096474 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116370563 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110028405 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088803685 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.113314612 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090222872 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118144224 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110893821 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094450893 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110443755 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091247117 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.108134017 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08882457 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.106913939 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086142191 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.11018213 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.109363488 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093888708 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11746729 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086861502 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118633229 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116840417 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.094114759 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.1048241 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08690664 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.108196271 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.08325962 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110413265 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086371641 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.107018916 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10659241 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086987419 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109122519 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094657298 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.110701663 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.089655188 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.108922191 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081796585 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.110946974 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.111283464 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091778031 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.105792906 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08886084 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.110276773 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.094983501 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.113281301 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.088682954 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.109935355 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.109853508 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089936647 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.104266469 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09476512 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108015279 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091315034 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.107732803 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088882382 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.110590285 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112555011 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094515281 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110128356 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091189392 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.121789847 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11137255 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085229023 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.105546415 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094368227 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.106464248 seconds)
  done (took 60.452936305 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.154458523 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085543271 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10485715 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083658153 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118940512 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105988277 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083730859 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105184065 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084819481 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108380057 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083860806 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104121168 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115200303 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131374027 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098915319 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109971442 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104325718 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085040538 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104269275 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084982856 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115161145 seconds)
  done (took 2.991182709 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11046897 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.12333029 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.120587487 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122904947 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092665657 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118246576 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116704245 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117251815 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103422622 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114391463 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122498084 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117605495 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.093046944 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111890809 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112911809 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095052642 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120437272 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11076913 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118349229 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096478402 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114463778 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115816139 seconds)
  done (took 3.287620606 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.089659861 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.107524567 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088991262 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099779277 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084664144 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099525723 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.089167425 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102394076 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.088190662 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103709654 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083434039 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.103664494 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.105823712 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079810041 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103782336 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082651331 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154907105 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109469148 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084928936 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106421272 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.10036822 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088222913 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099711576 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080584948 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102996218 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089291498 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.1055337 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083191973 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10395503 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08327198 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104618114 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082736275 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106935315 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104686763 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083977297 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103444203 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08455758 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104222923 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.081102294 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102652943 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086850791 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099942713 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087056428 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108301899 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.083311018 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.106271809 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088473745 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10730928 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.103285311 seconds)
  done (took 5.556626405 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.111115445 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164218248 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087272574 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145577139 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122453758 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114501478 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088748711 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143826883 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104134864 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084040171 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.126350475 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.125191605 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107720609 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.09025887 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.114344509 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108441157 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087006959 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10591321 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109677903 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085977339 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109546963 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091995817 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121526698 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119971802 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110073627 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084418097 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104906935 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110830089 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098689793 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111412556 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110555022 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092058688 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123282614 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110583743 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103854666 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089163748 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.127237173 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.108824318 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092612553 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10770554 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.091821332 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.115279721 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.11499296 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124815793 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08694518 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113431424 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.089204099 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.106874938 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.124205849 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091547799 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.119267434 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.126833415 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113811673 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.090079279 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115912236 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.127573455 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.089775076 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.109102452 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.092921849 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.12506416 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107417525 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.093518845 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.125910639 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.111897441 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.118149194 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.105222132 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.114306562 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111852199 seconds)
  done (took 8.380540481 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0989941 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.116069884 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123991393 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122920432 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092343872 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112899714 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112790199 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091733229 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113484598 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118917302 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112959079 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.136208466 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087407639 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116439241 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113938759 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093540693 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112887664 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112572304 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092298576 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112791494 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113207074 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122284095 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092461238 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123004418 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144176943 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108115595 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092146905 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113530976 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123462403 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11357042 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125654158 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093235185 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113295201 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123195803 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126757809 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092408815 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105906901 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112325708 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093999958 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112770913 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107432733 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102421638 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112884137 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107759275 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092093395 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113169467 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122617465 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125598592 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116728719 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09820456 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114084814 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12331064 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112612352 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093173876 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122194378 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149843186 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121593279 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123153073 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113374219 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102498184 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122528305 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131795156 seconds)
  done (took 7.803608926 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113981562 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.118412831 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.120233054 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101411229 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083896129 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110677448 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083185437 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103625135 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115865341 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095854192 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117896788 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111144868 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113523004 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099072691 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110252183 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113581878 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08994042 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110778172 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116281771 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110428558 seconds)
  done (took 2.974982746 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.098573717 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.131196364 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089761295 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114435288 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110023569 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093241682 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109184735 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110895668 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090255003 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111536099 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097787026 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118604942 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106655924 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093219078 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118780639 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113703039 seconds)
  done (took 2.540925766 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101964464 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122879137 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121387615 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085714853 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105789139 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.082460373 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107659207 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102449547 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082962882 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.123135713 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085739094 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110052395 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106669327 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086739313 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102957558 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089898146 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103166144 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084182403 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107395682 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121493237 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097553884 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10543768 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106615568 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087866043 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106122095 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091125417 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108756334 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107651811 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086423906 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.109456024 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090069196 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.119517776 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.108347806 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088915923 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.109806202 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087985647 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.111258773 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089117137 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.114570766 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.110543511 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086671237 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105807034 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086253863 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107929522 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081910156 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10900954 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10636346 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093973078 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104701839 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085704429 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106464937 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.108602653 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087022005 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118811426 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089709766 seconds)
  done (took 6.388425918 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104670611 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.114279426 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081648537 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105523717 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089523342 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109273822 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109729969 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089705904 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108523811 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083899834 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108472649 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090320397 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109437051 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110830664 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088926513 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110898945 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081329515 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108698458 seconds)
  done (took 2.650328873 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096405297 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111467854 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.098903025 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.111128851 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086082802 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110006027 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081382037 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106131615 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10504534 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086527625 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106741577 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088606676 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105075238 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088600694 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10670418 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085699407 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109730921 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105411449 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086771012 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102104072 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088776717 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106373172 seconds)
  done (took 3.016133198 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.124661037 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.131422638 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.094595068 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.233201279 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.10500216 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133998613 seconds)
  done (took 1.666027222 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115222479 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127819759 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110470318 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10911671 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117783427 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109457749 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088752913 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109583863 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120020744 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103692841 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109395121 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119270993 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119233692 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098803351 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116767273 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116081508 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109648682 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088971927 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10821901 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13029443 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089257547 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120090281 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10951185 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088921788 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110075431 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119221045 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119291691 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124174946 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088605363 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120074045 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115738373 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089316684 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120807374 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124200113 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111044503 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099521949 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110288707 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130622534 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116426345 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098991635 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111594101 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115669986 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098648637 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115234403 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121178198 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109847924 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09501627 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110037793 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109923255 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13807679 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095959195 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119827187 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116720871 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119905589 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120761744 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140074417 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105484503 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120862826 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120350525 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129913909 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12557343 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099771109 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124566918 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130020591 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119769636 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119744461 seconds)
  done (took 8.318305138 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108042734 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134489452 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114291662 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126188191 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098632436 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110058524 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110061956 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08899221 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111937235 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110899378 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155291884 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089911929 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120341854 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12051746 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110630689 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089238877 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110388781 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119978511 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088443057 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138054404 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110275929 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119590236 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120630945 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099131279 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12565431 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117119393 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110304145 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08932768 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109549374 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10987719 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095351959 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109936857 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122796447 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089189494 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124210532 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114716287 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092908935 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122820052 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114837527 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12117787 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101767801 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133981265 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110109611 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111294188 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124220249 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089545206 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11049315 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088069549 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110173527 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10938141 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104189181 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125402687 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125407487 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119974703 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111350399 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089974561 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110503826 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110095508 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089545973 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117115705 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119571364 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110441504 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138386024 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089688968 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110276119 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120310713 seconds)
  done (took 8.209737039 seconds)
done (took 160.082016789 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.104171718 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.143593759 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100697613 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170902124 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107601254 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121144562 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140084907 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.099076858 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107919229 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086614617 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108577053 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088851746 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.174860967 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08697689 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108103467 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109905165 seconds)
  done (took 2.711308312 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.207038691 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.257077579 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104580501 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107758467 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090702534 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112241099 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.106366746 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.092027075 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.111276508 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086868325 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109961889 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087708441 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.107282238 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087347684 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111923186 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089488068 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107651636 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088949811 seconds)
  done (took 2.921059409 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117873322 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.195537453 seconds)
  done (took 1.176287423 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.124444169 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18327846 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.322244384 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157793926 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.108445136 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129365098 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158790906 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133552912 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.200664263 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124674812 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125600545 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098514111 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.143234554 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.117053655 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095286651 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120296854 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.144876292 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093548606 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116726005 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117569515 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118009951 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108016336 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117021549 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094391542 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183509802 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121678373 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085852581 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108639376 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118088245 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.096171017 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115770543 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126922661 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099614772 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179119501 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104370707 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.179540432 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099799524 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11646462 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116448748 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092312692 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121414087 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.120591454 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104887045 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119768131 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085423691 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120558992 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108157192 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086777927 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116862924 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.098424361 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.11705215 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114666175 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157561401 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120192688 seconds)
  done (took 7.650635735 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.808052915 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.158604847 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091641301 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.899624575 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140766239 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105409405 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.79249235 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137907334 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.238772855 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.781130254 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136396539 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123471743 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231863826 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.240540359 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.986934456 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315715135 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.682470916 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103551406 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.154685421 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155876671 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122007341 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139399115 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.13179317 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431128122 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.09730323 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114293764 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118406133 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101871767 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160848978 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.128360683 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11623173 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.182018431 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251487138 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210876792 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118043347 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091096711 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113277009 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.172802633 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275267035 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222566683 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.187338517 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089091642 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112430385 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122883876 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113014988 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110177862 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166677624 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.176132583 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.196848884 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092587892 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122936435 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122192485 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123034247 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.169276264 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122416369 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.302061236 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317085048 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113609758 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122111224 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107128152 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269846588 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125109886 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232121924 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119406511 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220683688 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115759485 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784332706 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.196462431 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091947254 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119506072 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121083597 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096625267 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123331079 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16892965 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39466395 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126069185 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094498105 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113238074 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220860992 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.127706357 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113077117 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164308976 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117823141 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100611153 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127355257 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124232307 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172920733 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.232794427 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126106155 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121163559 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094620454 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127811059 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117940147 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214892946 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224947903 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.165769145 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211916079 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124451311 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.166852091 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.194631022 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09875935 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.198126234 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099253879 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129250062 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12561056 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222520453 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.150723199 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.108186976 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.12192412 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120730529 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150618553 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.129319489 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098463413 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.193812808 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.46149628 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170410103 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111787103 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.130379192 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100040086 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16401918 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120004366 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265325746 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123728518 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171703719 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12067161 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088977949 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123438765 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.168337699 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126072127 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122686713 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103026879 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121004456 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237293649 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223101944 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129078289 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225213329 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185501467 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12109093 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17474515 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123780237 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.17234489 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12342693 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123705312 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096224176 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804771202 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12615587 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099922 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118349438 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190596165 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114304697 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103923999 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12931551 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112266601 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755244056 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.131634156 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.123593183 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104249917 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121518521 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122465432 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097372691 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.119952494 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164462279 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239449313 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124159575 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12246608 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10438528 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.187151012 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097447527 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.12869553 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.127484078 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.127284376 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10242688 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118041702 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126648139 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.17401179 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164808217 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.228283899 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.602421605 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.096946175 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.127295204 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235568239 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092654012 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295995299 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125822868 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.235397237 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.176101441 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.127806759 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316661497 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.175645346 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.192395469 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.132388119 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.177516807 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087473472 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120329029 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168915555 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113960315 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120013292 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.166028776 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128423161 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102896292 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.971920353 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11363893 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229041029 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.111124976 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.177340307 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095453641 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125781298 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.304772796 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.117932748 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108744392 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.191854208 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100271802 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.13204868 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.734757963 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105759551 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125134161 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12078143 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230126262 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.173208279 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103651045 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125949215 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122935942 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.16841443 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.215911991 seconds)
  done (took 44.864212228 seconds)
done (took 60.180554862 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.283917497 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216140612 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262536309 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171425383 seconds)
  done (took 1.897634005 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.184261906 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149831147 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120822972 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109089508 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151459832 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086467664 seconds)
  done (took 1.687348265 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.360926323 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273961103 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241781371 seconds)
  done (took 1.767797614 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.290051628 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252057069 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.360522065 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.402477687 seconds)
  done (took 2.31870138 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212956027 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133730366 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.113011318 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105311041 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.199886015 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.253591407 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142800087 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.205967548 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.124004315 seconds)
  done (took 2.430956568 seconds)
done (took 10.996104917 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.316556097 seconds)
    (2/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.135334498 seconds)
    (3/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120068246 seconds)
    (4/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.249274278 seconds)
    (5/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.134537799 seconds)
    (6/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.237162648 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.197710479 seconds)
    (8/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.235213183 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.148748163 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.130262655 seconds)
    (11/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.118388022 seconds)
    (12/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.241318941 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102141147 seconds)
    (14/286) benchmarking ("sort", Float64, false)...
    done (took 0.17445742 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09514555 seconds)
    (16/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.120663635 seconds)
    (17/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.198508719 seconds)
    (18/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.13453627 seconds)
    (19/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.219802965 seconds)
    (20/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.123826975 seconds)
    (21/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.127892423 seconds)
    (22/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.160385181 seconds)
    (23/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.157241509 seconds)
    (24/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.144398416 seconds)
    (25/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.118259728 seconds)
    (26/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.11969427 seconds)
    (27/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091028498 seconds)
    (28/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.189645674 seconds)
    (29/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.101033717 seconds)
    (30/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.173627128 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.228095742 seconds)
    (32/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117556654 seconds)
    (33/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095258954 seconds)
    (34/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.164477713 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118314277 seconds)
    (36/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070167939 seconds)
    (37/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.192251568 seconds)
    (38/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.197413742 seconds)
    (39/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.090270837 seconds)
    (40/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.12195192 seconds)
    (41/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.235762624 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.112485558 seconds)
    (43/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.111502383 seconds)
    (44/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.206525689 seconds)
    (45/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.094289348 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.136460219 seconds)
    (47/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.164352033 seconds)
    (48/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.184771605 seconds)
    (49/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.131222894 seconds)
    (50/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.191460828 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09426672 seconds)
    (52/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.111243579 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.118521493 seconds)
    (54/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.110937526 seconds)
    (55/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.15301635 seconds)
    (56/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.207936539 seconds)
    (57/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115869681 seconds)
    (58/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.154796662 seconds)
    (59/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.135120402 seconds)
    (60/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.07874557 seconds)
    (61/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.225946898 seconds)
    (62/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128552236 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.089998099 seconds)
    (64/286) benchmarking ("sort", Int8, false)...
    done (took 0.189041017 seconds)
    (65/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.118216304 seconds)
    (66/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.121323556 seconds)
    (67/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.095345848 seconds)
    (68/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.242339176 seconds)
    (69/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.188367116 seconds)
    (70/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.089717106 seconds)
    (71/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138133948 seconds)
    (72/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068076776 seconds)
    (73/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.076460751 seconds)
    (74/286) benchmarking ("sort", Float32, true)...
    done (took 0.23404581 seconds)
    (75/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112587696 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.08619392 seconds)
    (77/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.158508125 seconds)
    (78/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.126473994 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.088153298 seconds)
    (80/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067813002 seconds)
    (81/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174350958 seconds)
    (82/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.090787358 seconds)
    (83/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095054471 seconds)
    (84/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.186084851 seconds)
    (85/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.078015942 seconds)
    (86/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.138066975 seconds)
    (87/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.185661011 seconds)
    (88/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.067412974 seconds)
    (89/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.116914251 seconds)
    (90/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.13666535 seconds)
    (91/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.139860714 seconds)
    (92/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.140804704 seconds)
    (93/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092849367 seconds)
    (94/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.136901943 seconds)
    (95/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.139860319 seconds)
    (96/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.139740189 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110274041 seconds)
    (98/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.140452845 seconds)
    (99/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111518712 seconds)
    (100/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068952685 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.136158144 seconds)
    (102/286) benchmarking ("sort", Float64, true)...
    done (took 0.234265509 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.110775507 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.08814832 seconds)
    (105/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.122720328 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.095213495 seconds)
    (107/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.125205033 seconds)
    (108/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.10228302 seconds)
    (109/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.187403864 seconds)
    (110/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.17648325 seconds)
    (111/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.094758872 seconds)
    (112/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.186143012 seconds)
    (113/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067852722 seconds)
    (114/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114664317 seconds)
    (115/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.07818039 seconds)
    (116/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.169877562 seconds)
    (117/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.10941972 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087666547 seconds)
    (119/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.119176285 seconds)
    (120/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.187711886 seconds)
    (121/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.071275443 seconds)
    (122/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.130307254 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 0.208049752 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096894459 seconds)
    (125/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138389053 seconds)
    (126/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114624377 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.13639268 seconds)
    (128/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.091397245 seconds)
    (129/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088198972 seconds)
    (130/286) benchmarking ("sort", BigInt, true)...
    done (took 0.237792371 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.118118373 seconds)
    (132/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.0988289 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118902735 seconds)
    (134/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.098909927 seconds)
    (135/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.112383518 seconds)
    (136/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.183979075 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095853935 seconds)
    (138/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.121173219 seconds)
    (139/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.096162917 seconds)
    (140/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.17569363 seconds)
    (141/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.083051632 seconds)
    (142/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.132479988 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.111691204 seconds)
    (144/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.129192305 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.121404644 seconds)
    (146/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.104112654 seconds)
    (147/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.180320602 seconds)
    (148/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.073472109 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126662096 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.104708241 seconds)
    (151/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.195578612 seconds)
    (152/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.194716568 seconds)
    (153/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.071441502 seconds)
    (154/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.179641901 seconds)
    (155/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.115351908 seconds)
    (156/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.105430043 seconds)
    (157/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.092149159 seconds)
    (158/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.119893487 seconds)
    (159/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.127348234 seconds)
    (160/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.101826703 seconds)
    (161/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.12182724 seconds)
    (162/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.093101198 seconds)
    (163/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.204184677 seconds)
    (164/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.136508829 seconds)
    (165/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115892375 seconds)
    (166/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.092730662 seconds)
    (167/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.119450209 seconds)
    (168/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.188357032 seconds)
    (169/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068262191 seconds)
    (170/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138904841 seconds)
    (171/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118804121 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.099060787 seconds)
    (173/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.068079651 seconds)
    (174/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.191844707 seconds)
    (175/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.102986151 seconds)
    (176/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067676138 seconds)
    (177/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068375326 seconds)
    (178/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125998261 seconds)
    (179/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088929099 seconds)
    (180/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.093327581 seconds)
    (181/286) benchmarking ("sort", BigInt, false)...
    done (took 0.222696324 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 0.226615445 seconds)
    (183/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.08699805 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111301476 seconds)
    (185/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.114651112 seconds)
    (186/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.088660875 seconds)
    (187/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.112979867 seconds)
    (188/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.092378856 seconds)
    (189/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.118282973 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097560456 seconds)
    (191/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119608858 seconds)
    (192/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.149768305 seconds)
    (193/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.118947878 seconds)
    (194/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068360001 seconds)
    (195/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125039219 seconds)
    (196/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.086689029 seconds)
    (197/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.09147524 seconds)
    (198/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068596374 seconds)
    (199/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067150704 seconds)
    (200/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.174097148 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111200426 seconds)
    (202/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087926496 seconds)
    (203/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.14088089 seconds)
    (204/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067925695 seconds)
    (205/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.120960808 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095269574 seconds)
    (207/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.096573311 seconds)
    (208/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088955996 seconds)
    (209/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.096006433 seconds)
    (210/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.091556068 seconds)
    (211/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.140330559 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.089095717 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.11343991 seconds)
    (214/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.072396748 seconds)
    (215/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.128850763 seconds)
    (216/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.407252968 seconds)
    (217/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.193540195 seconds)
    (218/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.114887288 seconds)
    (219/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.072664146 seconds)
    (220/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068671727 seconds)
    (221/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.092534366 seconds)
    (222/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096471508 seconds)
    (223/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.067492522 seconds)
    (224/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117993242 seconds)
    (225/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.09426892 seconds)
    (226/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.1258562 seconds)
    (227/286) benchmarking ("sort", Int8, true)...
    done (took 0.225041473 seconds)
    (228/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067821281 seconds)
    (229/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.09338841 seconds)
    (230/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.16747208 seconds)
    (231/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.154589457 seconds)
    (232/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.113758515 seconds)
    (233/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093674492 seconds)
    (234/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118877392 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087206264 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.112141577 seconds)
    (237/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094543599 seconds)
    (238/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.093354893 seconds)
    (239/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.090208999 seconds)
    (240/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.119287712 seconds)
    (241/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098538774 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118279222 seconds)
    (243/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.06887608 seconds)
    (244/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.099956497 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087879889 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121318599 seconds)
    (247/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068808024 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.111059692 seconds)
    (249/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.081226537 seconds)
    (250/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089258583 seconds)
    (251/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.093169348 seconds)
    (252/286) benchmarking ("sort", Float32, false)...
    done (took 0.177700594 seconds)
    (253/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068878063 seconds)
    (254/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.124819707 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087518633 seconds)
    (256/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.068261641 seconds)
    (257/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.092643783 seconds)
    (258/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.094564725 seconds)
    (259/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.092562993 seconds)
    (260/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.067923811 seconds)
    (261/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.184870702 seconds)
    (262/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.06856214 seconds)
    (263/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.06853799 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.121709842 seconds)
    (265/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.068665364 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.111086482 seconds)
    (267/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068552778 seconds)
    (268/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.12250307 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.087287403 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12075896 seconds)
    (271/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068936047 seconds)
    (272/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067180471 seconds)
    (273/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.09388669 seconds)
    (274/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136513291 seconds)
    (275/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068535114 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093992323 seconds)
    (277/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.092773765 seconds)
    (278/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.069528139 seconds)
    (279/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.114404913 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.08823548 seconds)
    (281/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.112104635 seconds)
    (282/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.06886049 seconds)
    (283/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117437078 seconds)
    (284/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095770971 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.118056562 seconds)
    (286/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067701391 seconds)
  done (took 36.747797256 seconds)
done (took 37.64320951 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.105952318 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150370586 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.097351461 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137385819 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125754435 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092289806 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120997607 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.099181777 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12552128 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126560279 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099762499 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.095194128 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097985367 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122277854 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097307508 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140993224 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125916086 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.096487178 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120432101 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087196631 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120983306 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089878601 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114397428 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07104745 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123741868 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.09555922 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118343396 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121645559 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087328393 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112253874 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091795386 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.120065422 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088018074 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126346159 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094705403 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.12105825 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099079955 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.122760334 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113910428 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088588935 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.121222038 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088141569 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119063666 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095942747 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117258173 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093793727 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120388578 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100731717 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.141312838 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117927729 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095861417 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123399488 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.099594702 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.11944091 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091613249 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121563191 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.094221207 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141490438 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121892941 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0937101 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120286718 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096065854 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.118423565 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096805777 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.122016909 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.124948724 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.101231003 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.118983788 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099501756 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.118411899 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087685455 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.121312878 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.091330713 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112982347 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.097155622 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.124272066 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.087228817 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118701403 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.119603144 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093075611 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111837371 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091187333 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113975243 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094127104 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114986667 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070686527 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.116052641 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094675496 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112365154 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097560906 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118598174 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095841858 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114107995 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099773416 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112909081 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093553668 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113411802 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088196457 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11519026 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.092725555 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112066739 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090809351 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.122284081 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090150148 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118801663 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.125344212 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088178121 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11905103 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088119232 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.112929538 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.103213853 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.124154832 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087859107 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118901157 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.087465895 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120756254 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087366957 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112172762 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.088076851 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112583388 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.094134222 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113060846 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115535925 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097399949 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12879521 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088570447 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115910714 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093004386 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112610073 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094782955 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112956811 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088652131 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11536485 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078904808 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115634312 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088147621 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119911107 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091462648 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.121846915 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089962038 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121996346 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092963829 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.119365233 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093616325 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111633049 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075590948 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11811942 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090930324 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.115084929 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088297516 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114827613 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08872403 seconds)
done (took 17.204766129 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.09375422 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.190124182 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.1542247 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.145133793 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107760917 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113651715 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124180581 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119823303 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115631916 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145137928 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111983744 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133632924 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149647308 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087592181 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114030681 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.093207724 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115111516 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10505412 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147527314 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134867573 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.16629877 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087681681 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14975328 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136807223 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.123099726 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106698739 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114551722 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091996266 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.117226638 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.11357687 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134305969 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.117336655 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089095661 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135231281 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105404541 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121482248 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088546962 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121077679 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088566814 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11404434 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143523036 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.135676745 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093887483 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119163009 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092538801 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116178997 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.09045593 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123014986 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099104295 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11793184 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128127884 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158248327 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092798837 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123791486 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088035609 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124676637 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122975662 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091928817 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113847904 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091641852 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.11301909 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092677006 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129344899 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144096638 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09335908 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12288858 seconds)
  done (took 8.7299198 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.112697248 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.149721067 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.112227862 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132891021 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113234506 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090285303 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114862197 seconds)
  done (took 1.782181831 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09530161 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.141434699 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112468477 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137778912 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.135369286 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.113400025 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125366169 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08991246 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133521705 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090660424 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136876365 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15322149 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.09142725 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122338104 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140325115 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09020479 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139187057 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.09017222 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119560321 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138759772 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092996299 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137631811 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091446095 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115680016 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104507581 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116331008 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164288316 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095576871 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116658601 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093781861 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115035325 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.155048328 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.108931534 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.132237825 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092028701 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13473793 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.137285104 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092990664 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.133381146 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100571518 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.13752928 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.097347006 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.124299347 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.094102065 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.128066084 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.107398652 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.127888813 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.122430348 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.09849175 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.140893947 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090967808 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130295636 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.109305791 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119887403 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091628521 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122271701 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.100171544 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118089879 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136490349 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0910358 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13401604 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.107681233 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.130961187 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132843394 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093431977 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.130533491 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104119926 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119157804 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092110497 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119871601 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.106329015 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11410728 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11700568 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100928015 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118568313 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113766173 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139248939 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092651501 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126331697 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.117295082 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093065985 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.116183506 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113481091 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120006308 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091028154 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120270993 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094309715 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113848888 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08984008 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.120822643 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088422651 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.1175403 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095723661 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117322059 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093273184 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132756354 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116679259 seconds)
  done (took 12.121936376 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096229245 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117038941 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092866098 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116366896 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091386474 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11746091 seconds)
  done (took 1.59738803 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.120258565 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119818849 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105706439 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12327213 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158430261 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105415947 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.132959404 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126479553 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109664855 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129900165 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.132708595 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106901114 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137738426 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123013041 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105784353 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122374627 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.105484907 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127381502 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129240096 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097423957 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139484281 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123647876 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09829594 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133602034 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120236156 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097224805 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127922014 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104553898 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129366097 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125144436 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097734835 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120259571 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097651383 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.126516192 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.134324132 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09778068 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121952973 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.1211397 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10192654 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120227497 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106327848 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122967911 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129611171 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096666277 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125696882 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.123622869 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095308749 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126705529 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104258521 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12151005 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121767861 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096752111 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.122954563 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095664004 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.127308358 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127624969 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094898146 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.132038722 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.129786771 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.099580153 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120739965 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095295239 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.126852063 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119945646 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10640435 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121297517 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123746663 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.103379209 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127746906 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.102384082 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121931481 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094368977 seconds)
  done (took 9.393194063 seconds)
done (took 34.578643298 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.705370444 seconds)
  done (took 1.670597496 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.943933764 seconds)
  done (took 1.913259484 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.34814045 seconds)
  done (took 18.351327099 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.518287112 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.602805272 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.028524088 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180331606 seconds)
  done (took 3.298922488 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.976332874 seconds)
  done (took 1.967632486 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297313266 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238521074 seconds)
  done (took 1.510614735 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.80822052 seconds)
  done (took 1.792773147 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.39470478 seconds)
  done (took 2.373441779 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.343227643 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.19160105 seconds)
  done (took 1.518675722 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.574207371 seconds)
  done (took 1.558239156 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.078600881 seconds)
  done (took 12.069088319 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.280237614 seconds)
  done (took 1.278336159 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.314374528 seconds)
  done (took 1.302255646 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.607010914 seconds)
  done (took 4.595835917 seconds)
done (took 56.181710954 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106034752 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.130133354 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102328261 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125616029 seconds)
  done (took 1.446294593 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.108575791 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123557732 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101529335 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122562302 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.128314982 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096476275 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125671473 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102232881 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.126933429 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.104179242 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.129977121 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.129213786 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.106970639 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.131376113 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.100418943 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.132962784 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104838163 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122881519 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12630334 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098231745 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120759657 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098888701 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126627979 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094864395 seconds)
  done (took 3.758394155 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.108333768 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.128239637 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101528461 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120323041 seconds)
  done (took 1.456514907 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.107942433 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.139500812 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.107112902 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127575785 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133524128 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.107893081 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119868332 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.093193481 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.121070714 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.101928014 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.11776412 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.141138384 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.108427794 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.126548759 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103518581 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115925359 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092695935 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135374972 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127070985 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104451926 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120197164 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.102051027 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.117693934 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110543306 seconds)
  done (took 3.775020643 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17993053 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.136486826 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.146730452 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.098193895 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161907817 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143182818 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088849301 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.143039196 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08972361 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.13325422 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.12101048 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.137535507 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.133359368 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088534819 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115469558 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.090514625 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131662604 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130898952 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09232603 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129947961 seconds)
  done (took 3.493538376 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104808806 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.125508696 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.08921963 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118194053 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100238835 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.123105535 seconds)
  done (took 1.658242437 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097781476 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116827519 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091529515 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.116211389 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095384686 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116814033 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090155013 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116636394 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090890364 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116933383 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.09037722 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115121567 seconds)
  done (took 2.252287886 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.520731122 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121247308 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122302363 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089838489 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.125784384 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090851935 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.131459265 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093818417 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.143548132 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089980085 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117718792 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092373353 seconds)
  done (took 2.73654159 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249842336 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134858074 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295468902 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.38087461 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164030144 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167860769 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282891718 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167022665 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201275424 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151831041 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235643719 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199500154 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155350635 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19444468 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141249369 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.148094614 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19201056 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256988181 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158249286 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215601964 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209933831 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170626835 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183124002 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153963051 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115633189 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197265028 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.096769048 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132308203 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212106075 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211908321 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200587237 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172244326 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152862916 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242176094 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256248861 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20229287 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284435685 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13568983 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.14485327 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169050067 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272089272 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142779134 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237311762 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158689293 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106880976 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2257078 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169302266 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.180931715 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.148119715 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141885091 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20349026 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246896745 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201948154 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149339203 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314072411 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157033889 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158826969 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193121331 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256440736 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233443039 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195688375 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.130254143 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198728846 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195836444 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217425041 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.135399647 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.224368881 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159349048 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196474611 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203742053 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178312173 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219334611 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.193482389 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149807368 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183897599 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185816004 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186094113 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275950487 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198696148 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.13363112 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18154489 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161312493 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112376354 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.206131977 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136821897 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229827609 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154840082 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.176624812 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224498886 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171440151 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174096807 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236329657 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197456931 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160658628 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.090893966 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159686844 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157833643 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178042184 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143221856 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166820638 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16814769 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.139182841 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176198311 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.103751962 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187728263 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.127570076 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177787397 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192255785 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.138020807 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17279574 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163959532 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.159446869 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183285353 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209551054 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144390032 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136522791 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213528531 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187246601 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150168256 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187995239 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.243957456 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.126460108 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158890879 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235117314 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230452596 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151231326 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239881361 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162586737 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114434112 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135960933 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185421348 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160933538 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.173264694 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141824609 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.195656907 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219068086 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.138213204 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14990483 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2089094 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146074979 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142219778 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163798337 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122056234 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142297683 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145716361 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148493952 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179213381 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184309423 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164452826 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179168227 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162064596 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265452114 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151379161 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.16138748 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13180101 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.131721796 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.206458605 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242019619 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113501443 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246811875 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.184612618 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214951858 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211786704 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116503261 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191213213 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143183327 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.101019291 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235636959 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180841715 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175471854 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.209509233 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23944754 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.193302463 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.195787523 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178070666 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213646452 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.145745866 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192050142 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.115801146 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164401225 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161129319 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125294633 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.112869387 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136798851 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15184944 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146027147 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136606686 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209695294 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183271298 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227426774 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160395819 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123282685 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213095978 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10848043 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183318787 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.220519374 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128540113 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.241273334 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207095908 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225499256 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126031186 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242474293 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.102139167 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136117499 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.152732318 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182883405 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141889782 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109407492 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165659396 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185580254 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215745332 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18143469 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213929251 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204294492 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19509603 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.096578661 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171768744 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186720198 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207872026 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.16068646 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144769302 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.162891245 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189842266 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166222927 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268443634 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183171032 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18903357 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219372633 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.162152223 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14193645 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16229213 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191048661 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164670307 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184829563 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153357624 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140744158 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162709074 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103675858 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162521376 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219167877 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168468192 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190653662 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152162183 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188989888 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134401386 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165317919 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163661484 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169181782 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081838716 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206080809 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209687314 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156997906 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175464854 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201837703 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141921784 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.317708376 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24575234 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197913433 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139429479 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156865048 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162925888 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16468066 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174071338 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181370804 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160916606 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190373215 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162408557 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138211339 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11336287 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151830286 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154969167 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.134766891 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150782014 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.179808045 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139651398 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191942641 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159066093 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162483649 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175420546 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152765761 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117810057 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152271068 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248511894 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189461747 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246247991 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151878927 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181909234 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209525469 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128381546 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104079475 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.135708957 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181377353 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138658355 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193623591 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.217137894 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202865247 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183050276 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209455059 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112977536 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122950891 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161314377 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170626004 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20552179 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150936795 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.150341639 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233523982 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110978839 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133770077 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169044055 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292084169 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150267929 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198139038 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.109569375 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27992695 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103703529 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140437214 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173013178 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238755175 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.110822351 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180717098 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175133716 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163292284 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166499828 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151653062 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193104441 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241295356 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202172922 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214764781 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106804926 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159344805 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17711543 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222995386 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158422808 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111724887 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235494246 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198421263 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197733536 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144126928 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171263647 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170898431 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16124063 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219892179 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115038401 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239501737 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137616522 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196112495 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155521436 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139620472 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179155576 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191225694 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142886498 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189271096 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212613063 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108033545 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136861954 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16834346 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180580251 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156060243 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130356814 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184143534 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127501756 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199042684 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268321025 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141698231 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158332934 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121164512 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139547352 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157018662 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16103381 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141882469 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.143285279 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232394723 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136969972 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195885074 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232175671 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173635763 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176421666 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147395625 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.699123571 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.112751982 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239355077 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12996447 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244186412 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15355003 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176026826 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161413356 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17127 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197684915 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164221884 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.235969452 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224435577 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.186742256 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141605975 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161094474 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156793007 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145621155 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126783153 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169896627 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162164487 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.147809329 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.181288233 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196445322 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107916572 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143013 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200663373 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151439435 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188386812 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182305294 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140881761 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175745902 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219714844 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106196359 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.210997952 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211023247 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144088711 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1534882 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135340182 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.12260855 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265140135 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127345656 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189971321 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214542729 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133151917 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170107728 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148738002 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226273584 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164105993 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187690369 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145391783 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160764427 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159665901 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140921566 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102761455 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158892635 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170024059 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.153431677 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161482023 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166895332 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197703794 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096392872 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146692166 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314277972 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188885334 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22595066 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.14085544 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138684254 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164141744 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122857443 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.208014993 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183867794 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.144090307 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108222741 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139611633 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131626597 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141328719 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158600128 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195421071 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168156735 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238642989 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109720783 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283218084 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142555647 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157199865 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090313115 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134328909 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153260138 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147967898 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157958746 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194761165 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267411878 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.152405744 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.107733483 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151316056 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.133075584 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109415099 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167073917 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168033883 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181895855 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147219771 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110911405 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157785226 seconds)
  done (took 85.157178352 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234218209 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.162850919 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.164895665 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223250209 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213165613 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.305538223 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.240325407 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.306623845 seconds)
  done (took 2.940736378 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.102141195 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148494816 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159661845 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134979038 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092568957 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121531989 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.349185361 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.140706934 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118330531 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122102066 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.176337222 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.0960983 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.56116145 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.098803916 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.128903377 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109354118 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092187446 seconds)
  done (took 3.841032425 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.335682568 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.513276774 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.152528103 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.198899931 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.161946517 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.119412444 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.734565776 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095599942 seconds)
  done (took 12.405590093 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.124877925 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.144681079 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.127005633 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.157177139 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.14343749 seconds)
  done (took 1.80185366 seconds)
done (took 127.707659065 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.106445378 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.137264044 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099841054 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131975349 seconds)
  done (took 1.555038926 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.102655543 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07829089 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104662016 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076075316 seconds)
  done (took 1.453668699 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.192116325 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.171462317 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.427447926 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.08000154 seconds)
  done (took 1.632726975 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.124107014 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.14515481 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.113590193 seconds)
  done (took 1.489049267 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.115890606 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.139417248 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104859979 seconds)
  done (took 1.459650429 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.116339221 seconds)
  done (took 1.215999787 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.117112816 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.15011482 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.118412505 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.139582106 seconds)
  done (took 1.625807237 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.107169933 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.136328965 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110050304 seconds)
  done (took 1.451163373 seconds)
done (took 13.339760815 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.112561511 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.432654088 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.415289068 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117742142 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723505324 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381953883 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.030823671 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148351029 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1679932 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094121292 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141541182 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673612042 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.057539572 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.380855801 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.016319251 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.474177701 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677076106 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122366022 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121356394 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095054074 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.015102266 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093277505 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.1233454 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093623036 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705240602 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428366396 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095101501 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.472299677 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093472135 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128494072 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384198669 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125185923 seconds)
  done (took 17.228034556 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104402297 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182351366 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099338033 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139577777 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.125799359 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09602021 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.128958923 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094209435 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182278169 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126773619 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111547685 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123363454 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127115829 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096054002 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143775839 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093316725 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127345423 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093602738 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123300503 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123520475 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113236671 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121681051 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094729798 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.1241602 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094998639 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137955848 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124386329 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094589058 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122402567 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099711138 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129437699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095873124 seconds)
  done (took 4.893936213 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151170152 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192515968 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.130312453 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128341177 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170674852 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125788986 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201810284 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119278014 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185010071 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124626035 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141134109 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093180214 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158861157 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123477288 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116619492 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122430191 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097537109 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12336768 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093872833 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124993646 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141647443 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094107691 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12368244 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094279013 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124673804 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109449756 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125466247 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122751078 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094572831 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128544519 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101215148 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126737871 seconds)
  done (took 5.220473865 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.106381687 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.13564654 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110448744 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139944384 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096307083 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127603619 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098593337 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126444552 seconds)
  done (took 2.046392601 seconds)
done (took 30.49151476 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121795742 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136078503 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108364022 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136652088 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103862544 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13302509 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092344117 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136064337 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135408885 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103751596 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13947946 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093702732 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125187154 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.094284973 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.138063331 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098125942 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134815801 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10348714 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.136076429 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.136191161 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096272307 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135207198 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105433717 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.135045187 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105047697 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135721618 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.14179393 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10105335 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124846049 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095824639 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.126782375 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104883001 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125579329 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106890065 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.129292792 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098427032 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125435714 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094690023 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134753814 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.136770194 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.10151747 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.136180797 seconds)
  done (took 6.100086342 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.117461684 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.149196389 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10573208 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082725922 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118668928 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082421316 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.140591057 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080294975 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111553832 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109600921 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07531477 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107541038 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080278092 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103099713 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078234469 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077025823 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109661662 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077456126 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077496963 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107969322 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080690683 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073620431 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109965842 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079707501 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076060982 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111990389 seconds)
  done (took 3.635091526 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.109894296 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.144043383 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115046386 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.187707727 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.163473411 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.10219074 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.134539264 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.141756964 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.11088373 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122806907 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097679886 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.152162643 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111578539 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.132253136 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.093036005 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139618037 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137897898 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.096308826 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130289705 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113530867 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140732686 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.104615279 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143372248 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135333368 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.094574599 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124716237 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098035819 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136948069 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098345118 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133965009 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097889876 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.127323609 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123982202 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105797579 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128481285 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095985599 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14483765 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104217732 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.133473498 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.094011857 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.131533512 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.124207356 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116029969 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.163635869 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092898189 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131322508 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.097123423 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.134607314 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.123602936 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112302207 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133182423 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093699124 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.128442422 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092974168 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124014259 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109144339 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.126658569 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096834911 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133814413 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.128913951 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.107185365 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127384711 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110033036 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12429692 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100786114 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.123750278 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.094563554 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123260958 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.146284262 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096067296 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164065863 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094656982 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126190665 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10403531 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132549316 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130795086 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094950228 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140227298 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.104140249 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127798219 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.103732584 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.128028286 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096074435 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.143330595 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.126284194 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096228669 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125162795 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.10219404 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.127086975 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095622165 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138627911 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093885366 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.128334881 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.112096213 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.124499633 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124659917 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100706462 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128378745 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094363868 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137164124 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100612435 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125292651 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103940099 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.125151258 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.126385289 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.105188275 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128765202 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093082241 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129237039 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100580619 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125920526 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.095459978 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127982877 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095771887 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135619218 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130605974 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.100094705 seconds)
  done (took 15.069673663 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.247092471 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.22623248 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.239584237 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.267770122 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137803033 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116410015 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.221331384 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.159459312 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.12565578 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.162616343 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176957389 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.184376414 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.14052393 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.21541615 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.173629346 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.094776149 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.14554526 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.136303404 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.249194317 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.261144126 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.146170727 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102465456 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164211711 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162771342 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.140437658 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.103791793 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.143164562 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.136618147 seconds)
  done (took 5.914515312 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.117866333 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.1664698 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099928938 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147566971 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.151604021 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094559729 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130326592 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095989759 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.138226229 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.139008751 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094196861 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131916267 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101609422 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134740292 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.125633469 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104567861 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.135091226 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09708242 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128432957 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.099474521 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.136769965 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.104247802 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129542399 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123337605 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104373267 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123734196 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088130827 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.145299774 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125036506 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117122552 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12305855 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103867016 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.139709587 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094821974 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.125284654 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096187022 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.128977017 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.097077073 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.127729424 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.093526618 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.12502849 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078967477 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.124603204 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.139665382 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.102032397 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.081517328 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.132963426 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.13079915 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096986993 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122444808 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097237454 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12780389 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.098673362 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132633048 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097268752 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126629753 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09738908 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117937357 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101906301 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.127203771 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085924677 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.124164467 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099867923 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.120333571 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102878262 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.130581397 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093631274 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.127615917 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098822135 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.132162344 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096454382 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.132266866 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09245278 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.128803529 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096717189 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130760334 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.128077284 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094265453 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.124738046 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.09572262 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076218307 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.126022277 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074859677 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12840786 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.093745473 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.125491191 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096742176 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.132833648 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.141131209 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.097282329 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.134549252 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095479535 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.125537457 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098279624 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.115755438 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097863383 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.142556523 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.143901822 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095701758 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.1240115 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109808917 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.128683654 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09414666 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.108382887 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10431412 seconds)
  done (took 13.203418745 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141853244 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.164137659 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126684105 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112984262 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.160373795 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.160265586 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101961409 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.135686718 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09898817 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144492793 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094971084 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.134968309 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095700696 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139969153 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159417721 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105648305 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.127728408 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.109969685 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131020272 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172538595 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113247848 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.145294273 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111700833 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126179741 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.130464821 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111717296 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163722601 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.10872994 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.139718876 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.144375721 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109210028 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163291843 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.145676732 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.105775585 seconds)
  done (took 5.584374684 seconds)
done (took 50.614179919 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.234378721 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.448882366 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.206194713 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.222574573 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.26829184 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.242686321 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.225614596 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.220451952 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.28682914 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.212986094 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.454063596 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.837486305 seconds)
done (took 58.996262532 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.254019228 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.367130598 seconds)
    (2/2) benchmarking "String"...
    done (took 1.497529484 seconds)
  done (took 4.018769561 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.823536305 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.19942547 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.474642884 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.212520999 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.231185147 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.500304614 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.997082862 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.655153964 seconds)
  done (took 28.406051271 seconds)
done (took 42.63948885 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.220547562 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.230314546 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.228684909 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.18947356 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.342122592 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.247557832 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.420429887 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.324541689 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.225819934 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.192401555 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.236496209 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.22031489 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.223652198 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.509196801 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.210836779 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.212640714 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.281761958 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.920365944 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.631212116 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.216559778 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.20941181 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.232950556 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.243602811 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.212914777 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.280777882 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.209785318 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.208321208 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.231316275 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.0220877 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.213375652 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.236385718 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.677726621 seconds)
  done (took 191.398743765 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.213444397 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.250972952 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.355680221 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.255617722 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.644377892 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.417206155 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.390463545 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.740394371 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.233889872 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.236319829 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.44400157 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.214147781 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.523171704 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.188946247 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.245279887 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.280476002 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.414743803 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.513578439 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.253673579 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.40297386 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.233014956 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.601522482 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.532849663 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.402934717 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.273682107 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.264339204 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.241524575 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.22862735 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.416305587 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.359171869 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.247866377 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.260639963 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.871546631 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.068380484 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.241958175 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.223478006 seconds)
  done (took 150.824206422 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.21508289 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.215878934 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.216245456 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.251966531 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.216660127 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.838691713 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.837666014 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.747187422 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.398185641 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.851401115 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.521004308 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.209895135 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313504461 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.22601317 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.212269293 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.233108919 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.260721621 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.217411775 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.218132139 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.839191098 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.229584949 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.67400304 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.399459458 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.229743838 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.252949262 seconds)
    (26/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.219340292 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.610297758 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.213958892 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.253850382 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.556366582 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.265040024 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.213510455 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.676511976 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.638566848 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328485671 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.213730449 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.253957098 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.218686198 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.505088073 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.21279032 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.21908529 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.22018124 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.974840118 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.218515342 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.839904849 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.219355968 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.232223905 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.212968737 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.220610756 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.017095141 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.958415641 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.229773013 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.218855825 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.220979277 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.219234597 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.219465883 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.254024825 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.661204977 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.317310315 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.238066859 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.223653125 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.255700661 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.219969869 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.541971691 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213592255 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.364509291 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.292841784 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.329612462 seconds)
    (69/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.220358917 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.841900886 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.220935787 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320438714 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337941629 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.214179858 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.220267018 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.221615851 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.218800895 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.333407516 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.215253142 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.221212907 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.663694575 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.396686282 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.233410762 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.803262503 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.32217545 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.216105315 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.701478096 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.221408914 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.22045782 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.118722526 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318689101 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.215305065 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.221436701 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.221222966 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.663040928 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.84040083 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.596313416 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.22371339 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.651637605 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.222241235 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.679939605 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.808718337 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.217109156 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.979130077 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.223218003 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336096937 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.399095017 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.234943565 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.221366539 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.836444913 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.2221263 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.283508308 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.217726511 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.621560778 seconds)
  done (took 370.643128514 seconds)
done (took 713.999959382 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.846158628 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.838982199 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.953981789 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.826603767 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.790478169 seconds)
  done (took 10.400368626 seconds)
done (took 11.542971726 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.419581615 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.414346772 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283280672 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.413788484 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.252190961 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.439932783 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.39294014 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.240845044 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.329186484 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.304175536 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.324435213 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.273713777 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.259640942 seconds)
  done (took 18.492985222 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.563919505 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.542436919 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.288397636 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.544911792 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.265337309 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.553469517 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.430293087 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.448620541 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.443403819 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.257957153 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.239354914 seconds)
  done (took 16.724528095 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.563118686 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.561621212 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.29107771 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.555230405 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.268273897 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.557409942 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.441682371 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.460740227 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.456420361 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.261749662 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238327735 seconds)
  done (took 16.803382931 seconds)
done (took 53.164997175 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.234631267 seconds)
  done (took 2.380346758 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.269449142 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.435310591 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.252812143 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.242876039 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.235045421 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.237923792 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.24194519 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.235430975 seconds)
  done (took 11.299596789 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.231915329 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.236169569 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.235687589 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.235386502 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.234793847 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.233560256 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.232736386 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.232145239 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.236194048 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.233076455 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.233387522 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.233648458 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.236627249 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.236581503 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.234078547 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.232982614 seconds)
  done (took 20.897471136 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.234970753 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.233700292 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.232969995 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.233300424 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.233623961 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.233516071 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.234652921 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.233099986 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.233498818 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.233750428 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.233939474 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.23416535 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.23538592 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.233349919 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.235199109 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.235562775 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.235747934 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.234640761 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.239368093 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.234662187 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.236370957 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.234740415 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.235533336 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.235502016 seconds)
  done (took 30.782055194 seconds)
done (took 66.50326888 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.906289257 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.054918652 seconds)
  done (took 7.111459281 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.236928636 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.237388795 seconds)
  done (took 3.626564871 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.238499491 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.236605436 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.237979134 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.237504128 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.238428467 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.238100324 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.237872832 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.237495171 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.237914812 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.237890541 seconds)
  done (took 13.529248745 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.237224499 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.237687489 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.236933054 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.237282877 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.236893992 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.235813582 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.238714847 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.238136293 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.237681496 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.236376286 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.237845384 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.235069638 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.238212325 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.236650049 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.238219528 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.236144673 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.235409004 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.235675008 seconds)
  done (took 23.417779084 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.240100157 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.239832165 seconds)
  done (took 3.63132657 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.236584973 seconds)
    (2/7) benchmarking "second"...
    done (took 1.238333593 seconds)
    (3/7) benchmarking "month"...
    done (took 1.237047414 seconds)
    (4/7) benchmarking "year"...
    done (took 1.236978599 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.237535496 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.236671628 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.236955539 seconds)
  done (took 9.813227997 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.241098011 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.427230442 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.505384285 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.834938388 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.242403898 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.244212011 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.115133251 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.244288819 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.247214775 seconds)
  done (took 14.255892474 seconds)
done (took 76.532149529 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.3026343 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.249635788 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.570874005 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.238225238 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.248482841 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.531687742 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.240677672 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.380028013 seconds)
done (took 37.913518924 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.244164604 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.212747952 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.123766038 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.231969962 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.360918432 seconds)
  done (took 19.083022708 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.337562542 seconds)
    (2/2) benchmarking "read"...
    done (took 1.571281328 seconds)
  done (took 5.062537598 seconds)
done (took 31.540202519 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241698166 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.23888113 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.241824771 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.239002533 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.239364422 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.242571254 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.239717123 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.238705808 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.241994245 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.242583539 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.242042965 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.241136867 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.241541783 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241317256 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.240962959 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238524354 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237952544 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24114593 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.239210255 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23804595 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238827365 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242029988 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.239190398 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.240558834 seconds)
  done (took 30.923705519 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.243016706 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.239888806 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.242906066 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.243554683 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.240294506 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.242660318 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.243768817 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.24059915 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.243295355 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.242983621 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240838809 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.240665645 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.244752566 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.242862009 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243629895 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.241151253 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.244809085 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241191694 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244459692 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.242361386 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.244961456 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241447271 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.241135259 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244842253 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.24128111 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.241807847 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.244129426 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.243282299 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245384859 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.242380323 seconds)
  done (took 38.435239233 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.249361604 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.253804776 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.244358193 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.24510999 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.245978079 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.245081564 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.246152933 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.24392097 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.245238497 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.245255773 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.246609371 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.245725665 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.245514035 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.245831967 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.246263993 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.245389315 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.246220216 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.24509907 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.245268322 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.246021952 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.246459675 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.245311232 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.245286939 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.246225366 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.246288664 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.245912193 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.244917351 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.246890411 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.245303167 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.245390102 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.246663812 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.245570814 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.245956978 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.246204644 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.245569142 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.245814522 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.251446747 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.256059655 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.24757463 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.246473086 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.246521017 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.245405153 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.247633479 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.24678972 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.247659179 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.247357817 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.247940904 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.248138164 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.247949803 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.247840205 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.24838286 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.2464157 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.246951984 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.248206034 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.249222514 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.24803971 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.249518658 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.248653621 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.247886477 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.249762171 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.249305083 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.248844649 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.248992516 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.248186574 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.249791702 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.248385751 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.248489597 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.249603296 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.248980779 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.24964361 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.250020875 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.249206522 seconds)
  done (took 90.962638143 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.248294291 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.248417246 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.247666238 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.247346028 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246883131 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.249681935 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.248327451 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248672788 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248277737 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.248980784 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249383898 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.247157987 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245647338 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.250160742 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250499016 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.247391527 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.250270378 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.24772998 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.250298091 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.250379045 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.25080925 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.246827946 seconds)
  done (took 28.631238564 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251078593 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.252464632 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.247428766 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.250314325 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.248170873 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250972499 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.250258389 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.252426071 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251993433 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2487109 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248656855 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252109884 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.247328408 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249777177 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247692188 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.249866685 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252673224 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.249936762 seconds)
  done (took 23.6653863 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.248475277 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.248277895 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.252085424 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.249025523 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.250301248 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.252296985 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249080441 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.251469689 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.253219254 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.249367877 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.252572946 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252616825 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.253059777 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251214637 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251574514 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.250565206 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.254285402 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250620911 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253628431 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252003592 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.25926764 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254065332 seconds)
  done (took 28.702216173 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.253801738 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.255215914 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.250937779 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.251604866 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.250493351 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.254410883 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.254712072 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.251597577 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.256179289 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.253659774 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252228805 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.253544192 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.253545361 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.253325007 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.252779771 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251595768 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.254825335 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.254159561 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254539767 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.25343589 seconds)
  done (took 26.232197575 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.255402762 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256385135 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.257468091 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25598018 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256848873 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.25576407 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257193457 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.256981819 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.256673179 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25747783 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.25709054 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.256918879 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257895008 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.257801135 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258028715 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256943462 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258017516 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257645552 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.258414803 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256574076 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.258967754 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.257310747 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.258478706 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.258716987 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.25817438 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257611291 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258020171 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.257544463 seconds)
  done (took 36.375240464 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258001117 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.257299253 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.254495557 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.254197106 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.253740959 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.254142454 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.254092863 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.255115371 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.257874578 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.255334522 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.257758704 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.25901383 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.258893444 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.257104392 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.257385398 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.259583868 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258585143 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.256634927 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25685046 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255281583 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.257859147 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257596504 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.258011503 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.255579985 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254693612 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.258697044 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.255539764 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.256815789 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260545034 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.256950803 seconds)
  done (took 38.872161344 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.278491542 seconds)
    (2/2) benchmarking "in"...
    done (took 1.277469407 seconds)
  done (took 3.72622098 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.257315839 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260495621 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.260249644 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.255713467 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.256793495 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.259980739 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.260108064 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.256948104 seconds)
  done (took 11.238667231 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.258812859 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.260665954 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.261255412 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.260260088 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.262269485 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.259208175 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266482778 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.281643543 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.262234144 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.261758805 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.268892909 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.269885615 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.263584608 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258882363 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.259777486 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262713993 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.261482293 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.261353576 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.26060773 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.26241068 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261370522 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262987438 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263786009 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.260023817 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.262794878 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.272163598 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.286954719 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.263083157 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261848527 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.264429431 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.260886923 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.260728676 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.262174241 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.263982556 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.263570422 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.263449408 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.270188252 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.282701274 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.267538498 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.284658814 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263786634 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.262020008 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.263648466 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.26286584 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270376769 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.264155717 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.263910277 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.261024575 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.261978231 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.266737497 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.270827386 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263058218 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.26061656 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.266768457 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.264014723 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270982216 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.28653601 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.266831238 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.275346499 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.273944636 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.299373177 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.294135917 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265874633 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.266411323 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275621943 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.292963507 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.271323856 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.284528544 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.264076111 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.26489666 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.270152847 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.298906848 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.291308842 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.265722049 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266546629 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.266682174 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26503581 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266479962 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.272490024 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.288910201 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.266530906 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.274837726 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276962606 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.294079302 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.265373584 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.267825366 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.2666804 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.266365679 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.269172617 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278194529 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.288400482 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.267489144 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.265370943 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.267035502 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.266729273 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.266550058 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.264500772 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.267504235 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.264940924 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.26879773 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267573836 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270283426 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.277911116 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266788746 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267332633 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.272266359 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.289201758 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267363725 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.272925017 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.269811496 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268237644 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.269491745 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.273690935 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.26653669 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270966596 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.278319802 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.268203129 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.26987209 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.268639978 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.268637191 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278480374 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.29875713 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.269050793 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.269765241 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.272635148 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.283609307 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.268569773 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.27089498 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.270088465 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.265256041 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.267436172 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.26913717 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.269737883 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.2679788 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.269770553 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.269235302 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.266941899 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.269148294 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.26933592 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.268854851 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.268757026 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.270472172 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.26947757 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.271969677 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.270347222 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.270376736 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.275639972 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.290579054 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.271162927 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.270031433 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.268315319 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271584441 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.271025697 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.270819978 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.270638838 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.27176792 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.271020015 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.272304644 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272387761 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.272812095 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272409804 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.270897847 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.276560969 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.272691003 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.272850617 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.269234026 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.269951778 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.270514937 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.272003032 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.271665404 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.273491785 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.268372232 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.273506701 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.282560671 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.273190793 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.271108857 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.274974436 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272959043 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272557435 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.272806972 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.27647965 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.281793745 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.273577048 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.278310053 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.294071969 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272790642 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.273183682 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.272433034 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.271705071 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.273518957 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.275821544 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.283241348 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284570085 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.297600011 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.273646806 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.278863882 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.273135739 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.278511632 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.277089199 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.273958796 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.273826423 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.274851148 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.272482632 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274530589 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.27552872 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.274956755 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.27417015 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.275772504 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.274462863 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.274626521 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275897187 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.274160088 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273355873 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.273001223 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276065476 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275249455 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.276169418 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.272786061 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.273623224 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.273501855 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.275403032 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.275530349 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.279845834 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.273830361 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276698321 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.276114285 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.275984212 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.274684784 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.277826388 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27715688 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.275995899 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282930544 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.29789625 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.276007678 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282273837 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.29865176 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.274595595 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.278214006 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.277895933 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.274728433 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.280469902 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.28768819 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.276867598 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.278121124 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.277114946 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276947828 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278579306 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.281752128 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.295118405 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.276360749 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.278714225 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.27813248 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.275454028 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.278446819 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.277762395 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.275470166 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.278665429 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.278358969 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.279460799 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278717448 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.279448532 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.279261856 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.279017213 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280841262 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.289548392 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.28227061 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.278322161 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.281424014 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.279739485 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.284227641 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.27785251 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.278627725 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.278149993 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.289687861 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.30376148 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284583586 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.300910435 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.280000622 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284994565 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.300975986 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.28333338 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279578374 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277322296 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.278646806 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.279097682 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.277520621 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279476344 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.281047046 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.280729242 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.281108132 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.285358223 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.279920321 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.279125976 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.280031918 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.280420169 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.280643825 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.27969972 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.281909833 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.281503646 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282683088 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.278687082 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.279955882 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.286099223 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.301075694 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.281865445 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.281428328 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.280134726 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.280042252 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.282194845 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.281721265 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.284434495 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.292733661 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.284548592 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.291836094 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.283321236 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.292238787 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.283618368 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.286169427 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.291757972 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.279988427 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.279953702 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.281609149 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.284167878 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.287256079 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.304072545 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.284136116 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.288083209 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.284722689 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.28355717 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.283102095 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.283530439 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282500245 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.283323064 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.289817226 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.302513309 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.287851739 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284004124 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.281820634 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.284114287 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.283633264 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.282297258 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.287025361 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.285053698 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.284697177 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.282503195 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.283932816 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.282909726 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.28329532 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.282591927 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.280306403 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.284173162 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28907437 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.306213575 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289732364 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.28422878 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.287932858 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.303998273 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.288004038 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.306346314 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.282724693 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.282546048 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.283298332 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.286161894 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.282574237 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.286011613 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.285628824 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.285697474 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.29070331 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.285799904 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.2866672 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.285743414 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.286930811 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.284297162 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.296170508 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.313843506 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.28506766 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.292082521 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.282866095 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.284387165 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.291579411 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.283965427 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.282580089 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.290257112 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.299434023 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.296632988 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.286877832 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.286700052 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.286647731 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.2874708 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.287419074 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.287775036 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.287676457 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.287680023 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.286955095 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.289435993 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289324026 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.286159159 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.287674932 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.289127331 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.288566718 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.298760003 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.31061871 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.288062924 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.288904337 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.28937435 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.289469007 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.288028084 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.288372048 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.28829732 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.28951838 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.289980753 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.296621243 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.297517165 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.29068674 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.289533704 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.289415778 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.288458519 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.28863351 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.290415994 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.288561221 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289358645 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.289580159 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.29004808 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.287399301 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.289267709 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.291399144 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.289216635 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.290594873 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.291577617 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.298958753 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.29048661 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.287187273 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.289999638 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290965769 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.288548235 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.289285265 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.296806534 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.316295416 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.302901889 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.301864342 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.295713418 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.289812254 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293622228 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.298811164 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.288751758 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.290708686 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.291566215 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.292863074 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.29145518 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.294807163 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.291020886 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.296168556 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.312341835 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.290264415 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.299121979 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.313384697 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.292131446 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.292945901 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.297351269 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.291364864 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.290479649 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.29368056 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.291419491 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.297685224 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.316816489 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.292460258 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292850413 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.292808989 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.294251524 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.297967883 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.293245968 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.293967706 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.29149745 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.293879592 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.294052402 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.293500594 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.290571468 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.293215918 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.292764858 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.297651409 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.30197592 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.29239884 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295292818 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.292908143 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.29406724 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.29476231 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.292868837 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.291568934 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.291461222 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.291923846 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.295032259 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.293310544 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.296027924 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.293187289 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.294526012 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.296674554 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.294134242 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.295483779 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.305312088 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.305759923 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.291792477 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.292626003 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.294399763 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.295942769 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.295354154 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.293048816 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.294759679 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.295818906 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.295925764 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.295397749 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.29558319 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.299385018 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.312334185 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.317483084 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.295062037 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.296003874 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.298519193 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.296633951 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.291465172 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.297088039 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.297101555 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.299576043 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.30700881 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.295499297 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.301189983 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.31738784 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.296710727 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.301798446 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.299783288 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.305490621 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.300124348 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.297000434 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.296977285 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.301153418 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.314788726 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.296829277 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.307751546 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.329041254 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.319911319 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.29942551 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.297532554 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.297590069 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.298496874 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.297961275 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.297813538 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.297410448 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.29894836 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.297594108 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.297955405 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.304210006 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.299526342 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.30032986 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.298102923 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.296298696 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.297467525 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.294997166 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.298252517 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.296462688 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.296580751 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.297377584 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.297888842 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.296369241 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.309879138 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.329027055 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.300850918 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.300825097 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.295678163 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.302980377 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.303100819 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.311661011 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.309416987 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.299779134 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.300446568 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.300168076 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.299971708 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.300094352 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.300760041 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.300439568 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.298804668 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.299343738 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.313617862 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.330625436 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.304921213 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.299974582 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.300147185 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.30125884 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.300840513 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.301211236 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.301129635 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.301320952 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.303383204 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.306084116 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.301855722 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.299544363 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.30448356 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.311978047 seconds)
  done (took 766.40011297 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.29864448 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297669643 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298206506 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.297596748 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297578452 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.298158014 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297373217 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.297910243 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.297379494 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.297658296 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.299791139 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298836385 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.299130754 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.301201585 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300225201 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.299824224 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.300856933 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.299225815 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.300357069 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301485299 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.300250068 seconds)
  done (took 28.487969749 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.304200309 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.301841154 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.300558032 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.304399673 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.301658847 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.303526278 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.301190702 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303297472 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.303901434 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302205918 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.304885091 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303332674 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.30122796 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.303093065 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300672513 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.304266397 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.304585513 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303137458 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.304840909 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.302445935 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30555811 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.302755895 seconds)
  done (took 29.877189575 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.305166859 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.30388532 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.303179437 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.303025804 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.306224225 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.300906451 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.305266842 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.305778563 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.304825799 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.304252852 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.303386499 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.304986677 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.312425379 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.312270391 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.30704319 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.305567267 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.450240819 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.305669471 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.306361137 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.305874333 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.302903784 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.310023699 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.32743173 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.303357705 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.303173528 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.30522407 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.30607468 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.306891224 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.306976043 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.307132146 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.312040353 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.307462892 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.306138451 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.308420297 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.306107843 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.306331484 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.312009589 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.307293028 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.303568608 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.306054024 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.316552919 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.331987029 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.30567439 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.312199424 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.330542768 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.308134203 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.311078119 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.315723724 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.303408231 seconds)
  done (took 65.458513974 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.307751876 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.307666038 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.305889363 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.306675955 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.308771338 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.307912844 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.308945014 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.309228245 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.305654594 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.305822567 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.308804452 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.306343159 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.306814071 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.308585654 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.30820174 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.306713495 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.305742657 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.305965341 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.306551057 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.307566686 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.307277061 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.309943462 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.310021482 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.308506737 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.311299896 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.307063409 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.305117338 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.310393284 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.305404856 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.307215197 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.310065195 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.308454657 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.311740958 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.307278229 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.307570633 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.308610886 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.311136813 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.307374292 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.310643599 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.306871569 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.311128825 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.309824743 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.311319635 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.310202387 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.306938725 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.306524036 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.3083996 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.306210074 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.3077871 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.310223753 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.311298305 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.308842494 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.31157391 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.308754353 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.312507318 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.311569627 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.309926086 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.310181411 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.311208902 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.308479134 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.310042968 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.311815679 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.309360401 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.312373682 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.312533786 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.310434207 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.309616345 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.31189307 seconds)
  done (took 90.213587383 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.31098573 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.312228674 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.31171609 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312174004 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.310962499 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.311240525 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.312037772 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.312323143 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.311413238 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.311759732 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.312664468 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.312363498 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.310449854 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.313475958 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.31103965 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.312994353 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.313111128 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.314312941 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.313420401 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312739449 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.313709338 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.311037298 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.313381967 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.311085671 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.313062911 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.312475362 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.311194796 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.31259501 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.311417829 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.311678067 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.311923097 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.313691888 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.31138218 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.312523789 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.313864291 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.311459423 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.31328148 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.31274538 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.312020425 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.314579841 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.312836488 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.314550671 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.313436043 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.316762727 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.31506822 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.314550681 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.314477109 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.31522429 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.316463167 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.315288744 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.315149425 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.314546111 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.31500965 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.314547847 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.314509543 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.31704623 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315688061 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.315342749 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.31533701 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.314547635 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.312855107 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.315059279 seconds)
  done (took 82.639830054 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.316377891 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.316997125 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.314466232 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.313200005 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.317388436 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.313869252 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.318179512 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.316567263 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.317301635 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.317908135 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.317698953 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.315695345 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313789495 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318531358 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.31436847 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314595265 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.315001801 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.314616897 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.317891904 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.315520396 seconds)
  done (took 27.540566608 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.315579198 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.318354666 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.316500732 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.316922941 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.318332404 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.314314401 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.318684911 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319569832 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316662097 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318521078 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.320137799 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.318898067 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317036882 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.314770899 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.320693806 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.314918642 seconds)
  done (took 22.302110813 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.31648393 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.320065529 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.318940182 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.31685915 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.316438851 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.31644837 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.319295572 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.316307 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.316966584 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.320290896 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.319510919 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.320712927 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.320090412 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.319517558 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.317132095 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.320554689 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.316753664 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.319225093 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.320711536 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.320829485 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.319049097 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.319180052 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.320510675 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.32179833 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.317818109 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.319452835 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.317030746 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.318579843 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.317935063 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.320687887 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.31884772 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.318773464 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.319003654 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.318758977 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.320691126 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.317449573 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.320542193 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.321377089 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.321512705 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.321824459 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.321570196 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.318582426 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.322362368 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.322313549 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.318549749 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.321774901 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.318841314 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.319557637 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.319407669 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.318370948 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.322219767 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.32254742 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.323112198 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.322316066 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.322106134 seconds)
  done (took 73.801113316 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.323072036 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.322579027 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.318523166 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.323375511 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.323562431 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.321123597 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.323460283 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.322765101 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.31990115 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.322188562 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.32256618 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.326067818 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.321133652 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.324231852 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.322634576 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.324908091 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.321450772 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.321465134 seconds)
  done (took 25.030564128 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.321872122 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.322463011 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.323655394 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.321291581 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.320681074 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.324965602 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.320663106 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.326189643 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.325484081 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.322938707 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321113419 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.32434966 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32512633 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.324625484 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.322025512 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32166236 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.32473763 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324708336 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.322637083 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.322286936 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.326403078 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.324964605 seconds)
  done (took 30.34283817 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.323652691 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.321449777 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.323183373 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.337835333 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.344417 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.346658669 seconds)
  done (took 9.225473895 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.334751715 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327394213 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.32352578 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324046643 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323891576 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321822331 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320479308 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321312695 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323611711 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322461999 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321653552 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325871448 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327163603 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.323557771 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.325872447 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327223034 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3240579 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325872991 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3251761 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326486095 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324358316 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327335771 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32366055 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324766746 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325077142 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323892298 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326637048 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32508988 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325525576 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32815307 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327175694 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32413443 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328193163 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324363571 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328344768 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326948702 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.324693265 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327804187 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329345253 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325975856 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.329383683 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328094029 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329523381 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326125622 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329002234 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327972229 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326602369 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326771027 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32603362 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329499972 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330583372 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325474277 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.330035691 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32919329 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329088904 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329539463 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327548481 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324918807 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330392983 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326087538 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325818306 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328517021 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32577133 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326938934 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32915175 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327054526 seconds)
  done (took 88.800749668 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32675831 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.326646441 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32648425 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329215162 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327933149 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327744206 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327414567 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328275755 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329022258 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327202469 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330153948 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330013579 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328257851 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327498056 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328611315 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329455535 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328406519 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327585944 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328924201 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329771172 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329090397 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329527242 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328614307 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329179032 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328722733 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332049744 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329228732 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328849877 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328951566 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330297187 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327562629 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328703399 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329766573 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.32767981 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329474744 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331209041 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.330557897 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331500952 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329424381 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333689251 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330388583 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333287967 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329702794 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330145714 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331751171 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330679561 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331227766 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332065882 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331185822 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331788591 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332020057 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333301121 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332334685 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331655157 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330839322 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329579946 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33221881 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331003262 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330884386 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333749109 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.331579159 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331397185 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3346153 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331149247 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332265089 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.332523645 seconds)
  done (took 89.016734679 seconds)
done (took 1788.053430791 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.49800126 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.448526099 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.331982066 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.382262274 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.324188797 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.34527825 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.343515114 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.323757639 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.33060591 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.333084257 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.33114979 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.548387346 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.387838222 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.325259202 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.331808175 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.427891749 seconds)
  done (took 43.250311472 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.364975058 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.339359836 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.467614919 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.359922944 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.364859472 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.544590746 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.396958986 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.338941091 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.53898144 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.386950035 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.219164547 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.36536676 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.337596902 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.673828655 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.360585587 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.542583229 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.619735408 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.227696263 seconds)
  done (took 31.688330672 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.867028824 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.359118713 seconds)
  done (took 9.467172823 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.360076444 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.337809853 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.338494688 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.336980162 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.33706662 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.321874584 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.336751932 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.329334913 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.568301757 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.482528043 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.339222442 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.34794755 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.361506505 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.337681869 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.335504296 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.378267705 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.498522721 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.33791245 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.334688427 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.343655832 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.339201846 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.444145722 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.383898895 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.337874784 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.483632496 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.572397497 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.341206359 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.34630488 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.477558456 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.33917454 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.337684168 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.337722062 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.339383027 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.996894475 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.871739984 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.34279132 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.359468779 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.349366139 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.339098896 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.521259966 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.341895479 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.344797823 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.332593742 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.88180749 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.504740938 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.477948697 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.817523627 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.360738907 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.340996625 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.407854253 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.340983174 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.340614632 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.373868016 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.172753491 seconds)
  done (took 113.519229883 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.363670689 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.721492843 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.504781188 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.358484695 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.211274704 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.114412392 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.350887657 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.67364908 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.372306133 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.331563839 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.687549885 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.888280794 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.3485568 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.374949387 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.852903494 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.390315763 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.333264944 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.253771594 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.349279165 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.335284144 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865522345 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.334799335 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.334044436 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.47175884 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.372889357 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.834399179 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.91522384 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.826421765 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.347341404 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.327362494 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.860721769 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.351380603 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.348235888 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.327687334 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.62023977 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.756221354 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.757411223 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.359083785 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.382939559 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.328219031 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.34135596 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.85324587 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.767537296 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.356376635 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.352683385 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.858908526 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.355813213 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.343315175 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.343354759 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.550601227 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.016761534 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.337113443 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.919129801 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.327838539 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.623521459 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.378104418 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.344056075 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.889634882 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.356223247 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.545619199 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.394530334 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.336043043 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.338087631 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.341259742 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.335950952 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.74513293 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.70694813 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.335203885 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.752360836 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.878664791 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.370488462 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.918029753 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.231737851 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.344156111 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.389268918 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.337493317 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.083276731 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.903187191 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.376384885 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.328776198 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.739289234 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.363365748 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.683483488 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.369137487 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.338711257 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879605603 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.345446424 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.33673609 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.337498224 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.339749723 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.097378297 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.341411855 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.655073865 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.41042673 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.338398605 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.33847029 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.345639671 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.338861189 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.33952772 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.337725018 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.918343429 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.358806032 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.339102224 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.363316891 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.340288278 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.342022835 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.344348013 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.339744061 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.572758466 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.821699442 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.362004868 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.341964391 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.336934222 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.344759388 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.484132195 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.340351349 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.711255915 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.359117456 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.339177976 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.364370113 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.061337624 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.401232769 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.336813432 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.344852879 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.288644893 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.548780356 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.363900627 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.343055064 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.340663716 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.363537926 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.853785324 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.364805517 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.417215474 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.344008429 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.097754448 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.393954313 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.360061141 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.682871343 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.342674179 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.340815784 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.34100824 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.340244641 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.644622021 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.63412639 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.615148657 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.336431515 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.363879783 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.087232054 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.381784756 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.486325175 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.366156052 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.340482636 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.544391701 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.474751288 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.342267123 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.94623827 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.34223548 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.569263087 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.34282114 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.675489393 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.895185145 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.362406203 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.345760455 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.111581629 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.073576806 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.180455466 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.344532796 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.67675558 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.310261159 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.824490742 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.34410928 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.344892537 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.908367331 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.344116847 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.352065277 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.3431835 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.343478031 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.404987012 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.521049804 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.622171497 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.345401705 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.865787097 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.397365412 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.338496444 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.372526665 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.345725608 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.691566665 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.397319255 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.351797146 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.351974261 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.348701028 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.349669591 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.888854255 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.269709221 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.345478103 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.504979198 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.037501367 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.366675575 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.348220043 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.020374944 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.627599346 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.962916293 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.393644736 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.722133642 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.373140008 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.387057368 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.128783679 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.436719135 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.927625726 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.368290178 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.348119039 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.005695898 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.366778283 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.407753716 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.344544637 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.347459663 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.967352642 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.3656806 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.349304829 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.732294886 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.373050999 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.607965089 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.347617147 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.389564764 seconds)
  done (took 1116.738746668 seconds)
done (took 1315.898219411 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.347095247 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.339630231 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.320330974 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.34537969 seconds)
  done (took 26.609397959 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.363720458 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.35270607 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.353349608 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.352684511 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.356419184 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.354124213 seconds)
  done (took 9.389452434 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.851477808 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.338234297 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.347085768 seconds)
  done (took 19.79224173 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.587520586 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.776321459 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.738684203 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.829795507 seconds)
  done (took 11.189761548 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.354879937 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.356422685 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.353899458 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.355187751 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.35913399 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.361488191 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.35681718 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.358063466 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.36287749 seconds)
  done (took 13.475712447 seconds)
done (took 81.709268737 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.140969205 seconds)
    (2/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.367659496 seconds)
    (3/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.374237042 seconds)
    (4/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.146455781 seconds)
    (5/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.2317194 seconds)
    (6/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.322148361 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.192342187 seconds)
    (8/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.343428353 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.005162092 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.618944934 seconds)
    (11/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.360297999 seconds)
    (12/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.752933902 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.384749344 seconds)
    (14/286) benchmarking ("sort", Float64, false)...
    done (took 5.756523099 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.368255272 seconds)
    (16/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.39104799 seconds)
    (17/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.056195364 seconds)
    (18/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.666456479 seconds)
    (19/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.270593851 seconds)
    (20/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.373960351 seconds)
    (21/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.252814804 seconds)
    (22/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.91540492 seconds)
    (23/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.913393993 seconds)
    (24/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.023086898 seconds)
    (25/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.567026013 seconds)
    (26/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.445909688 seconds)
    (27/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.413098529 seconds)
    (28/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.904037547 seconds)
    (29/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.274365713 seconds)
    (30/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.39335575 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 6.373953328 seconds)
    (32/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.388649097 seconds)
    (33/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.469422427 seconds)
    (34/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.960671896 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.468648238 seconds)
    (36/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.350148971 seconds)
    (37/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.083055814 seconds)
    (38/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.322862045 seconds)
    (39/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.355220233 seconds)
    (40/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.379095688 seconds)
    (41/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.333002101 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.738985919 seconds)
    (43/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.362290996 seconds)
    (44/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.325540712 seconds)
    (45/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.224826384 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.307235075 seconds)
    (47/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.324519173 seconds)
    (48/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.324969139 seconds)
    (49/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.836435989 seconds)
    (50/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.32439742 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.457778069 seconds)
    (52/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.211489969 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.607497999 seconds)
    (54/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.212039998 seconds)
    (55/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.972258919 seconds)
    (56/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.480611813 seconds)
    (57/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.416345157 seconds)
    (58/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.661610267 seconds)
    (59/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.394580076 seconds)
    (60/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.344420128 seconds)
    (61/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.475719085 seconds)
    (62/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.070703237 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.403136754 seconds)
    (64/286) benchmarking ("sort", Int8, false)...
    done (took 4.380646704 seconds)
    (65/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.371569615 seconds)
    (66/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.379768982 seconds)
    (67/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.380114237 seconds)
    (68/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.506438369 seconds)
    (69/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.760766057 seconds)
    (70/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.543789376 seconds)
    (71/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.269367652 seconds)
    (72/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.112382979 seconds)
    (73/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.756492192 seconds)
    (74/286) benchmarking ("sort", Float32, true)...
    done (took 6.346117069 seconds)
    (75/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.353508013 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.789707397 seconds)
    (77/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.233430193 seconds)
    (78/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.433123609 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 5.630955876 seconds)
    (80/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.485293198 seconds)
    (81/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.327961595 seconds)
    (82/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.288551473 seconds)
    (83/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.373887109 seconds)
    (84/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.345545813 seconds)
    (85/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.378788654 seconds)
    (86/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.387253782 seconds)
    (87/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.454692631 seconds)
    (88/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.78641486 seconds)
    (89/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.648249614 seconds)
    (90/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.217974329 seconds)
    (91/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.043785979 seconds)
    (92/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.243605205 seconds)
    (93/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.396049847 seconds)
    (94/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.262316193 seconds)
    (95/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.355980878 seconds)
    (96/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.367000109 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.165430162 seconds)
    (98/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.366637994 seconds)
    (99/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.36224725 seconds)
    (100/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.973528363 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.797213992 seconds)
    (102/286) benchmarking ("sort", Float64, true)...
    done (took 6.366021329 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.397203989 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.203936443 seconds)
    (105/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.479148403 seconds)
    (106/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.558660701 seconds)
    (107/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.414270341 seconds)
    (108/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.531126433 seconds)
    (109/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.889637503 seconds)
    (110/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.834369422 seconds)
    (111/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.946488425 seconds)
    (112/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.328245426 seconds)
    (113/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.335821591 seconds)
    (114/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.414282333 seconds)
    (115/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.881960408 seconds)
    (116/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.339473948 seconds)
    (117/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.954469556 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.785395016 seconds)
    (119/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.449085766 seconds)
    (120/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.33319453 seconds)
    (121/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.366001482 seconds)
    (122/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.279243651 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 1.887450908 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.398072779 seconds)
    (125/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.376061084 seconds)
    (126/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.387925356 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.628792182 seconds)
    (128/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.270275888 seconds)
    (129/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.36785678 seconds)
    (130/286) benchmarking ("sort", BigInt, true)...
    done (took 6.361754299 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.24234339 seconds)
    (132/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.435896756 seconds)
    (133/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.616829058 seconds)
    (134/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.363793768 seconds)
    (135/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.361076845 seconds)
    (136/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.367585931 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.460524019 seconds)
    (138/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.442742319 seconds)
    (139/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.38121894 seconds)
    (140/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.605788618 seconds)
    (141/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.912023682 seconds)
    (142/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.967202684 seconds)
    (143/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.23677233 seconds)
    (144/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.336086983 seconds)
    (145/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.379601133 seconds)
    (146/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.367643056 seconds)
    (147/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.696235643 seconds)
    (148/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.330748187 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.374398355 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.382345321 seconds)
    (151/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.386911229 seconds)
    (152/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.918993174 seconds)
    (153/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.742417025 seconds)
    (154/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.359423017 seconds)
    (155/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.50917173 seconds)
    (156/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.445189705 seconds)
    (157/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.17478651 seconds)
    (158/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.514288496 seconds)
    (159/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.395882315 seconds)
    (160/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.368527933 seconds)
    (161/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.469789018 seconds)
    (162/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.196801589 seconds)
    (163/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.330832032 seconds)
    (164/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.155417483 seconds)
    (165/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.363676518 seconds)
    (166/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.601876261 seconds)
    (167/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.552110471 seconds)
    (168/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.63526759 seconds)
    (169/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.899748254 seconds)
    (170/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.438624874 seconds)
    (171/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.385363212 seconds)
    (172/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.40195463 seconds)
    (173/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.339120491 seconds)
    (174/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.471702759 seconds)
    (175/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.398145988 seconds)
    (176/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.415520505 seconds)
    (177/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.927132571 seconds)
    (178/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.124796382 seconds)
    (179/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.382125998 seconds)
    (180/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.37939615 seconds)
    (181/286) benchmarking ("sort", BigInt, false)...
    done (took 6.353503882 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 5.463510101 seconds)
    (183/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.305403969 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.409234302 seconds)
    (185/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.469234754 seconds)
    (186/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.38364478 seconds)
    (187/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.3647062 seconds)
    (188/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.381346686 seconds)
    (189/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.424891594 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.009768649 seconds)
    (191/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.573038277 seconds)
    (192/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.35186929 seconds)
    (193/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.925693991 seconds)
    (194/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.341600172 seconds)
    (195/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.027039474 seconds)
    (196/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.47081196 seconds)
    (197/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.69777594 seconds)
    (198/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.366227772 seconds)
    (199/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.367097556 seconds)
    (200/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.343327337 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.790657631 seconds)
    (202/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.61191569 seconds)
    (203/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.374995541 seconds)
    (204/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.340728416 seconds)
    (205/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.377457371 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.399422248 seconds)
    (207/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.352498352 seconds)
    (208/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.907319222 seconds)
    (209/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.302741737 seconds)
    (210/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.362863592 seconds)
    (211/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.112187401 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.397268074 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.744723364 seconds)
    (214/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.749830953 seconds)
    (215/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.04460714 seconds)
    (216/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.986226487 seconds)
    (217/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.178288714 seconds)
    (218/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.509049991 seconds)
    (219/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.343696927 seconds)
    (220/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.561931939 seconds)
    (221/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.719412738 seconds)
    (222/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.390184676 seconds)
    (223/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.562249919 seconds)
    (224/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.40044646 seconds)
    (225/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.471764338 seconds)
    (226/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.130028739 seconds)
    (227/286) benchmarking ("sort", Int8, true)...
    done (took 6.385445869 seconds)
    (228/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.363963071 seconds)
    (229/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.368035909 seconds)
    (230/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.414461212 seconds)
    (231/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.93662485 seconds)
    (232/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.364346094 seconds)
    (233/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.440758012 seconds)
    (234/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.391106448 seconds)
    (235/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.612366928 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.432939097 seconds)
    (237/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.39191282 seconds)
    (238/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.417995126 seconds)
    (239/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.516398455 seconds)
    (240/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.390892138 seconds)
    (241/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.373876727 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.392664545 seconds)
    (243/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.344672394 seconds)
    (244/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.777197491 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.107766679 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.755293824 seconds)
    (247/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.362245622 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.461481593 seconds)
    (249/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.345680218 seconds)
    (250/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.476288894 seconds)
    (251/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.374494066 seconds)
    (252/286) benchmarking ("sort", Float32, false)...
    done (took 5.444273073 seconds)
    (253/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.346804518 seconds)
    (254/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.496211518 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.474654375 seconds)
    (256/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.345971027 seconds)
    (257/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.368452503 seconds)
    (258/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.452672443 seconds)
    (259/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.079765041 seconds)
    (260/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.794320601 seconds)
    (261/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.468539714 seconds)
    (262/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.358058438 seconds)
    (263/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.077784336 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.448295685 seconds)
    (265/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.346421845 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.449642124 seconds)
    (267/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.34625972 seconds)
    (268/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.368943468 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.474437541 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.168182809 seconds)
    (271/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.240574007 seconds)
    (272/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.445254455 seconds)
    (273/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.366462619 seconds)
    (274/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.377346959 seconds)
    (275/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.065517039 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.429768047 seconds)
    (277/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.095330517 seconds)
    (278/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.385292039 seconds)
    (279/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.477504055 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.110865737 seconds)
    (281/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.373601907 seconds)
    (282/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.341674696 seconds)
    (283/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.474890415 seconds)
    (284/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.378007427 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.391078636 seconds)
    (286/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.162213535 seconds)
  done (took 962.233695089 seconds)
done (took 963.488759157 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.399769088 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396238662 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.376815089 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.397907604 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.488988538 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.402499679 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.389592193 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.379039288 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.42594347 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.426641616 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.378047727 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.400325036 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.378473867 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.378063955 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.377779251 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393559832 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.635524335 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.379176793 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.396122983 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.387804924 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.394443531 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.37717071 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.427838051 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.401133676 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.382394205 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.382009549 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.382281034 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.397181136 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.490281645 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.382111238 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.38204717 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.390765505 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.636805971 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.378397721 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.374062339 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.398564559 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.391353689 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.391035679 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.384239457 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.41193427 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.134462341 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.396709583 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.381664485 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.38120093 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.381479709 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.385072757 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.381849669 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.388070539 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.395054745 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394970829 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.150070602 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.414745101 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.384712492 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.381645955 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.392813263 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.382125039 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.384494307 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.398041684 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.40222099 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.399599466 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.627852889 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.388194542 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.385081885 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.398035753 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.389707041 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.04649208 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.387899437 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.386944213 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.024778258 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.399240138 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.04832085 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.401280022 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.384513081 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.397067398 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.41438028 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.638850622 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.377626804 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.382161428 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.387939197 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.379283943 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.393287629 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396347204 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.387984197 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.383244668 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397535171 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.40643487 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.392839631 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.383759153 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.391988225 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.402623272 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.39130383 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.394875483 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.388813709 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.378919161 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.39478117 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.386220242 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.387699918 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.385246169 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.389652777 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.395936841 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.136639884 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.423801307 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.381047161 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.379684304 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.38219874 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.39742169 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.032046713 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.394743129 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.407001462 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.432186333 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.385515001 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.636280491 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.389506205 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.403893386 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.392983987 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.388073707 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.38012106 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.637331415 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.157298032 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.421117333 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.387427234 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.383100615 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.405404563 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.386322651 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.381382936 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.590621076 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.385677154 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.401058648 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.507101874 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.397464682 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.41769202 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.38474996 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.390937945 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.40933239 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.405265199 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.418380995 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.39066703 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.403801433 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.403292393 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.384275292 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.398849588 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.398145246 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.389515628 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.393271336 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.381918328 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.410726948 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.400808319 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.399950635 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.408205197 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.506847259 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.38657829 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.640785014 seconds)
done (took 236.918977784 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.444804439 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.379193865 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.465784246 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.385899316 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.489391353 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.490124541 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.384791628 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.385127483 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.384497878 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.761073226 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.382690383 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.385091925 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.385534407 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.383009613 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.467409307 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.387057973 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.384247559 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.774332259 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.387396211 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.455913964 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.382169541 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.384029189 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.386615892 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.775397784 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.37706582 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.379717866 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.455676085 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.386778292 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.735318108 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.385484207 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.383215422 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.737772888 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.475313554 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.406163538 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.396123645 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.393932083 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.490761231 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.412975757 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.467536436 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.463716858 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.47025935 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.427223476 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.386118955 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.387261306 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.389477466 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.388216565 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.386827508 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.415462872 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.380236315 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.386537404 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.77714878 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.397895173 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.396839004 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.388304735 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.387187521 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.409413254 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.387279538 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.389691716 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.475356551 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.390710701 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.451172064 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.774570935 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.762766811 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.390999644 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.388337784 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.389195812 seconds)
  done (took 152.098776048 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.453831268 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.465787707 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.516229208 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.406643237 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.43797046 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.520525594 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.40659968 seconds)
  done (took 11.495790546 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.395588165 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.392954901 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.440590896 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.439024354 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.389906386 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.567228427 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.389985643 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.40237672 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.388844846 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.442229002 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.389919812 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.389531324 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.398832065 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.382340197 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.438647491 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.401047602 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.504283154 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.391556706 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.392622537 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.549100567 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.390183319 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.399488779 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.443416615 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.402441588 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.394086689 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.397317065 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.201868942 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.392405026 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.391463511 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.392274404 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.390917339 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.468644978 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.392762107 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.391753071 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.389258894 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.507102189 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.391207556 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.391412517 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.392583302 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.390208998 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.393286305 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.392512094 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.392326068 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.38795113 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.391731396 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.414692279 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.394467646 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.393624652 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.393686499 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.394742113 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.442483439 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.395522879 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.392110936 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.39155629 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.450299083 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.400703603 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.394843554 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.392238777 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.394433894 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.391794923 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.550640562 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.441554008 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.393557996 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.441791515 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.395600376 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396865216 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.395515656 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.39378936 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.449380991 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.394750411 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.442514379 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.393430305 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.583715451 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.417971511 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.398059938 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.397598958 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.397453627 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.395966851 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.392303047 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.401167954 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.393602271 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.397393935 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.401542987 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.395188378 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.39300789 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.564382654 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.502398708 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.392548948 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.407322344 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.40141978 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.394667931 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.449189034 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.396923429 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.394284906 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.448111056 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.511339457 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.448702285 seconds)
  done (took 159.449900068 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.399965211 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.403585613 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.397945968 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.413204598 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.397031121 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.396635805 seconds)
  done (took 9.702226108 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.398828781 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.401068581 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.397483476 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.398067966 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.39900796 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.399365795 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.397488396 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.398884242 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.405082051 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.399258997 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.399547376 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.401001295 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.400786974 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.39969468 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.399540678 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.40056081 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.397881523 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.395484466 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.39848019 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.398101492 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.494346854 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.400651842 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.398967305 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.400113929 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.405103722 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.399906317 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.405623232 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.400295859 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.40123009 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.407522605 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.419218676 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.401528423 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.400358091 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.407325233 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.405103249 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.400202101 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.406532684 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.400380558 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.396775278 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.399599023 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.400804337 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.400379241 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.401224949 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.399983292 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.400143411 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.405270195 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.408065411 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.407520329 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.400710541 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.401641612 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.401864677 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.401811502 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.402815349 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.403157511 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.402976215 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.423887741 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.408447216 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.402856978 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.403369746 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.402271009 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.404783674 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.403454534 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.402466008 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.406909711 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.40826221 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.401807052 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.401159694 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.407875679 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.402222351 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.40278937 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.402169469 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.401351515 seconds)
  done (took 103.359780773 seconds)
done (took 437.388766636 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.710394073 seconds)
  done (took 8.010228976 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.964239695 seconds)
  done (took 8.26852414 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.20033389 seconds)
  done (took 26.510767142 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.400895562 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.494156903 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.424427982 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.41195532 seconds)
  done (took 27.033697686 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.49873701 seconds)
  done (took 7.800380394 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.407651427 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.397976142 seconds)
  done (took 14.108884322 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.880576551 seconds)
  done (took 8.179821564 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.637033838 seconds)
  done (took 7.94695703 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.41359821 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.412733808 seconds)
  done (took 14.146277018 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.376191948 seconds)
  done (took 7.678679442 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.391597708 seconds)
  done (took 12.695465105 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.410655882 seconds)
  done (took 7.716167371 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.432906728 seconds)
  done (took 7.736470718 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.806427597 seconds)
  done (took 11.109122008 seconds)
done (took 170.238421646 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.395337844 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.387479184 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.387761999 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.388709024 seconds)
  done (took 26.860185849 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.43718781 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.439237351 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.441564839 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.45007282 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.442119384 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.438291605 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.431818839 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.431709399 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.450799426 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.442594206 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.44085489 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.440731071 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.43973669 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.4315281 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.441379526 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.441174218 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.448258528 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.440641124 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.431549139 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.442245269 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.406218431 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.451162591 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.443165726 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.406501106 seconds)
  done (took 35.814009309 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.926284793 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.477727158 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.559129204 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.457838125 seconds)
  done (took 7.724962924 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.459877582 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.459952753 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.471066243 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.50995931 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.537302452 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.469580786 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.433632318 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.427801012 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.414706002 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.460727279 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.538657515 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.476525346 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.548578225 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.408781902 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.59362688 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.407020101 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.407713991 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.459807892 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.510834182 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.527967155 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.407417143 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.459934477 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.464037898 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.47621909 seconds)
  done (took 36.636609983 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.408236137 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.426794381 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.405866646 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.405932867 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.414652928 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.409602929 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.40805161 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.407516514 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.407439671 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.412212969 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.407352474 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.421034667 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.4068613 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.408378872 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.414163502 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.408756082 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.413881629 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.406821427 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.40731917 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.41317746 seconds)
  done (took 29.520397888 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.399803307 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.341428934 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.752467058 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.657038288 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.401069088 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.393927903 seconds)
  done (took 29.252458685 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.490736809 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.660590937 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.400565642 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.85613318 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.954964244 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.426333524 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.410028029 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.700861126 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.096583519 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.080312293 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.478585566 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.490437731 seconds)
  done (took 21.35482898 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.408948809 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.394831038 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.407599674 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.410614676 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.477222374 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.430183334 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.416319571 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.401581065 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.477525809 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.498146627 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.428582057 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.477676842 seconds)
  done (took 38.54056694 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493787268 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.460253167 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.58376872 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.478151077 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.204568983 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614675664 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.430161624 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.19189367 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.421953815 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678407047 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423080497 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488915772 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.664059463 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413520896 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.408447838 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.52746301 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64422614 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951216077 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401638984 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.931544585 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423249489 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.416491139 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.144796557 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.692881728 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.63919611 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.390595488 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.735177783 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.183788759 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.749147248 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.423745178 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417728106 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406835777 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68111839 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147303166 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524027785 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.663404921 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444412771 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.949546245 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.402336002 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.910859652 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415806526 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402355577 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418068947 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408672226 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.34341445 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410894144 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242997695 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.435001879 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.119975636 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409098947 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.723305614 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505568577 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.415426311 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.983439901 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.478637476 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.416679955 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.413352129 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506652535 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998463945 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.665293962 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422845381 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.345192185 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.413806888 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.852049742 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117100527 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.425023889 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.413828642 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413386523 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369506447 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.901854578 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419057974 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.58594017 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.431214525 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.098536469 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335906829 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.4459878 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.361405114 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016444619 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403012968 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.363446973 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639691245 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.181311723 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352360575 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.351355938 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.34388884 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.24346618 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420298672 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.966173367 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430398069 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.201630251 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.680757377 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448087449 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434939432 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.636961583 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.28664792 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413093234 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.42442989 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.554300897 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431685962 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246622023 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393420176 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.406997861 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670843348 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.624772817 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417870063 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.564726904 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007214879 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434791812 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.428197077 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.415128348 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.672905018 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.122775817 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.448725415 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.66351225 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432160072 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.190876449 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282026453 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426894766 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.417844661 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.425324815 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685142905 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.302955399 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.320132916 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481373357 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418953995 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.41527613 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.071564773 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.267040606 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.297805207 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.656789366 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44758893 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.425652381 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.415913773 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.433734171 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.40469621 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424673762 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.18628724 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.639170904 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41686026 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69073772 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349940527 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.588053795 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.480049515 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.640740294 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.862634449 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.439259089 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677739383 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42095777 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.419386896 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4273367 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435352968 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516715545 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438925223 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.420998533 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.674445514 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.420958863 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.419449296 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.084036955 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.195658013 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419693909 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.423133424 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421030471 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095451301 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438041216 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.415276396 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.312126533 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.431632772 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486336519 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.423096799 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.678243666 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.63164313 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445751756 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.415330085 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.427643281 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633637732 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.428305188 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.074705836 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.49912587 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.996418916 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11524889 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44153612 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.35353055 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.13027564 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.110587924 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416814289 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.607299472 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419133247 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.676286275 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.454258963 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419121526 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.088702125 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430748465 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.890765253 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.418505927 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430512841 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.425105533 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419152557 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.61195913 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.723579337 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423617502 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.430222467 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563853734 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.432164937 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.353448707 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.933830813 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.426828389 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.419753606 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.192988618 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45522001 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.997689134 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43957796 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701365748 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436038906 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.730873582 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.143865458 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.459311018 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.424745891 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421648685 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43064445 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.428419988 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429456046 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.434037894 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.903873948 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.91906404 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988171214 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379337439 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073709093 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.874245123 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.439162099 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.322529434 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.2574444 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376254138 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.082299251 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644137805 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.218055408 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.449666868 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995914293 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.898245962 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.329364697 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.730782623 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654474834 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.857792064 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.43579033 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.752901362 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.635194715 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453261252 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.438053919 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.382179749 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.696592012 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113783583 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.459018654 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496386401 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201587167 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440280942 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.194641099 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.443708946 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.398863156 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916279161 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.993099178 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.868058069 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.433574373 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.425670584 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435861574 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.444391411 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.954486413 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131684163 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.452623777 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.00689977 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.386810065 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.685474905 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.457032474 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.421907802 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.033708412 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.424585015 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.675596234 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.735775477 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362229558 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.436795515 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066235202 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.317535031 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.430744405 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426074615 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.310307469 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435856768 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.769596079 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.434186644 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.603650287 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450070406 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.36100034 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361481769 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.119986475 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.434190016 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438966955 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009984861 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.447524836 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428186156 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.43935825 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267545668 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.683878148 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.440865051 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.126164665 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673757203 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.42916273 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451532829 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.431881835 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432353126 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.410400636 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.309795809 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.664439849 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451426382 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.679701949 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.627430907 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.327109623 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.447935011 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.660528013 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.329410641 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.430198217 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721029248 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.159027856 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.446337825 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.879869714 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471194809 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.429402048 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.495772178 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.443005148 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448468551 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519831288 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.68950936 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.460811574 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.440205282 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922072071 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.457478503 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433580838 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.442980318 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523001534 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.733138383 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.542820705 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.194397287 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131339015 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404459041 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.14718575 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.769648964 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.431882693 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438588979 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.386301845 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570481842 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.960148715 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702702559 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.583064945 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.451068543 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454809407 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430354233 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432253349 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634880403 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703063664 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.306748284 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448675213 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.095180459 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.588815371 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.441945912 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.641947015 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026484432 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112155461 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545869591 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.445312187 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.272736849 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.726173096 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.522793318 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432662867 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.024390363 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.457355361 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.411905322 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.439290594 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431309217 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59771608 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753030019 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181498363 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.462485833 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.591941721 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.205196108 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.133700905 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.691680482 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.087742022 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.69995296 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158497678 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.300490869 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.703440061 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502766978 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696515203 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.577400619 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580683947 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.446618686 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.316281127 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.431372116 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287143325 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.143189719 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.443142041 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117712627 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.713234888 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.436829862 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.431069423 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457720467 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.443816141 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.658019693 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.270377486 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.66092075 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.443579504 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.443577785 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.416442626 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11193594 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.768613348 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394015763 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.428761995 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.728040562 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.693092237 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459833065 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.887352145 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.146290193 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057832765 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.403034207 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455575984 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.448689109 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.287595014 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120822768 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.653831156 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031710444 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.094764266 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43712804 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710867184 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.439751547 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.447583783 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710930064 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.440131616 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.434516305 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.701215011 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.136545139 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.377306844 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.440635697 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.194640557 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.374779517 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.665618672 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.459033242 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.421947489 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429265461 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.940146786 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.463924955 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.594967107 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439625021 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.447878619 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454445072 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.169929889 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.786210548 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.433966545 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.437203738 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.420351829 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.447652278 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535900668 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137628391 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.466475683 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.113706684 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.793221304 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.696536507 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.449167753 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.417874383 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.443549336 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43842874 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.212742279 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.464180615 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.436521629 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065650675 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.447803475 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.450469228 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.441410544 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.654211358 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647515334 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.451041971 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699869009 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.461816799 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477985593 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.338785705 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.263394258 seconds)
  done (took 1705.735833476 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.460313665 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.492506949 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.463190239 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.490688411 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.493252165 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.569568568 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.543374531 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.510728533 seconds)
  done (took 53.366301879 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.44822817 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.601806939 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.476586995 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.452503573 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.44914648 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.457060772 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.992963866 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.469167284 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.449004453 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.450819094 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.458002275 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.451434052 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.214124954 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.449002566 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.448614837 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.425669659 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.450732786 seconds)
  done (took 67.495738258 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.517055422 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.727217856 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.20519964 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.447119005 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.458911603 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.453244352 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.540253445 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.464285983 seconds)
  done (took 56.156067828 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.458317446 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.457317244 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.457374073 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.460349516 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.460239254 seconds)
  done (took 8.636605771 seconds)
done (took 2118.396590164 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.446184937 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.44762486 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.446729349 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.449330672 seconds)
  done (took 7.131475774 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.423143174 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.156007423 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.424423912 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.43766765 seconds)
  done (took 18.784041658 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.447067005 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.432703738 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.306593746 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.196204386 seconds)
  done (took 5.849508177 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.19202829 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.205187393 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.189781305 seconds)
  done (took 7.932747388 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.442696839 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.442100857 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.442555532 seconds)
  done (took 20.672331641 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.761041062 seconds)
  done (took 3.108906786 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.589757932 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.639282243 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.833554707 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.781285142 seconds)
  done (took 8.189232756 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.823553642 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.828852985 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.639198607 seconds)
  done (took 6.636862066 seconds)
done (took 92.525152455 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.873892235 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.443179655 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.647601808 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.876087928 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.664306186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.645750276 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.649007965 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.836105615 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.340707146 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.32095033 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.82687242 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.665586666 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.811940451 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.452011838 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.812717143 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.830274792 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.6768646 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.917201701 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.450348057 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.435479588 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.652710799 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.472375226 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.655966923 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.849448751 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.673893936 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.602493071 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.070796685 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.822170984 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.444101762 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.436090569 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.602881576 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.447682561 seconds)
  done (took 203.252687937 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.457545248 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.434801185 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.454846618 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.45110105 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.435532195 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.444630009 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.436423139 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.43578786 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.454651675 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.445071899 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.437368046 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.436025261 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.456392209 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.459597235 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.435107042 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.470780449 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.436165075 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.475161984 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.437105054 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.456614601 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.436873 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.447918586 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.439172068 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.473553062 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.452218007 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.438490676 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.436915035 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.458217906 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.436725111 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.465112701 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.448764678 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.473686745 seconds)
  done (took 207.70637271 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.445260388 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.440068828 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.456021882 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.457706995 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.457331159 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.447492539 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.437611787 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.456050111 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.446911023 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.447042876 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.449716422 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.440788732 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.440514761 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.438893106 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.465877895 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.439216053 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.460292217 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.460141366 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.439207123 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.467953806 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.442707593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.45850892 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.438097659 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.465233346 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.439407161 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.459133115 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.43907791 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.441539463 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.445136616 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.440656845 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.460434299 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.439420057 seconds)
  done (took 207.71386161 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.652474407 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.456789361 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.458025548 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.410603944 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.457296404 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.456071141 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.45185526 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.648701993 seconds)
  done (took 15.343208264 seconds)
done (took 635.357870063 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.099096355 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.789082753 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.681584534 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.476977578 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.448057344 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.497786741 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.478777046 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.68738356 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.474330236 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.698824546 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.958283156 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.493225429 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.123498318 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.475832009 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.776401999 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.59375256 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.499696042 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.646466973 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.845206499 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.205781363 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.778601187 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.149823585 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.70844733 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.48610643 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.138945354 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.146778627 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.414572136 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.492354025 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.495702424 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.854467913 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.443988828 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.69058221 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.559280891 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.552501365 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.61149963 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.592993196 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.667354846 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.550779686 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.702796011 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.89494275 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.208730463 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.27281257 seconds)
  done (took 101.71713528 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.443885439 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.440570831 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.442022519 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.442936642 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.443042169 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.441012264 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.441936384 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.442980302 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.44270244 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.44209008 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.443260076 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.444054821 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.442826593 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.444569627 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.441518359 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.442976937 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.444742638 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.445196463 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.442911098 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.442927405 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.443900818 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.444106301 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.44386124 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.443697693 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.444325402 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.442170557 seconds)
  done (took 38.877542315 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.462141903 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.74623809 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.941167305 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.468275753 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.461618147 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.466035924 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.560211606 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.465099996 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.465506644 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.465972392 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.654509298 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.467060344 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.503615655 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.973756356 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.464896738 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.464270262 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.462983368 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.464948987 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.75362419 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.474019301 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.585393829 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.466538253 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.562110722 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.473998526 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.489828236 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.462864233 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.468203509 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.045036802 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.485152624 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.656542957 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.422302832 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.558906606 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.991834513 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.974573136 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.422899804 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.465995216 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.46524265 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.659764463 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.466173313 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.463752774 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.562095455 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.463042379 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.955062701 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.177423543 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.491379357 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.466583018 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.069767286 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.682418705 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.775223924 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.473770823 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.982629742 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.469163277 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.468587113 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.46734013 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.775008221 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.473446763 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.466126281 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.090214661 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.492960163 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.563259642 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.467396814 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.4662549 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.767034709 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.466779178 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.752554133 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.469848986 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.473551538 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.488576993 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.957658796 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.468637451 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.201557311 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.490216216 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.466386861 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.658933707 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.756097312 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.110696038 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.490038416 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.768709397 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.008999108 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.581254825 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.470784299 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.03755197 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.586206788 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.47120319 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.472551185 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.4700392 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.469446411 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.516269638 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.561678542 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.136907086 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.206849576 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.119508448 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.589930048 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.479635994 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.469914775 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.091260944 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.492975809 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.470355546 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.949755396 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.20052732 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.492596539 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.474860498 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.207365244 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.49425083 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.567201931 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.475749325 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.965497196 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.470435736 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.516703523 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.469366052 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.475422887 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.49341134 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.565647979 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.472616341 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.471169173 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.172315217 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.688156267 seconds)
  done (took 194.544790827 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.464278672 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.475011071 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.462322052 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.454508031 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.462304861 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.470572414 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.463016048 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.462423616 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.470523141 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.464061016 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.463971856 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.464557632 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.465622111 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.485008979 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.4673908 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.471945159 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.076378423 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.465014652 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.464267738 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.455158609 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.306939141 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.465797712 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.463762733 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.455517229 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.46642258 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.46559668 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.496485035 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.458976973 seconds)
  done (took 155.873425112 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.474022187 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.195801952 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.493868331 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.637145432 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.500488497 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.469608587 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.633548278 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.543999134 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.49150195 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.469924924 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.470503732 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.859076649 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.476401024 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.136693098 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.710707954 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.655343097 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.134217607 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.490778113 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.470981297 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.472736628 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.638644463 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.484444273 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.861523834 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.197967075 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.493891769 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.19558504 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.45871458 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.474810277 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.473141112 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.199661284 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.491551734 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.865088384 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.570642299 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.548013137 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.219851964 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.155342945 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.158677167 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.664976037 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.474043731 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.47240657 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.473601098 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.458608806 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.203011675 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.495338112 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.475809879 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.192966204 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.500198252 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.476934358 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.482221816 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.473615182 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.54803293 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.569640968 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.888720661 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.207095753 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.591434031 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.486892548 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.641519562 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.871906585 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.478563255 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.138141288 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.459116208 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.206972686 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.495908122 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.459007543 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.475705214 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.482393901 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.66533874 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.640977611 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.139376802 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.494533591 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.140317158 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.684160756 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.475258409 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.474846915 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.478883259 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.206769519 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.159973315 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.679623712 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.643395379 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.719124962 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.461238488 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.476768669 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.459621881 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.572767916 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.476170865 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.212236981 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.119266027 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.488385376 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.478769145 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.478294479 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.478779152 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.695093926 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.22527026 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.593047177 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.085804667 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.880883709 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.870776992 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.479627214 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.550885833 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.495522062 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.872085205 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.481565631 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.549817365 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.941118343 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.870640018 seconds)
  done (took 179.387469375 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.770332721 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.936588563 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.584227321 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.651136039 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.170978066 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.112102002 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.908602384 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.645580666 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.609345288 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.778561839 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.879155617 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.568285583 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.735997191 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.571760338 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.303532978 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.584443505 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.602904639 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.644494608 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.656120965 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.634288494 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.2617832 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.805242662 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.704902227 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.618767216 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.588396126 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.404388591 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.11451325 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.037201351 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.690391845 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.045322841 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.067233926 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.733008001 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.625068951 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.303775924 seconds)
  done (took 72.720817473 seconds)
done (took 744.469387594 seconds)
SAVING RESULT...
DONE!
