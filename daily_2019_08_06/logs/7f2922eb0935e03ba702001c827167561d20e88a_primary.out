cset: moving following pidspec: 3892
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.339516898 seconds)
loading group "string"... done (took 0.541121831 seconds)
loading group "linalg"... done (took 6.78801377 seconds)
loading group "parallel"... done (took 0.157947039 seconds)
loading group "find"... done (took 1.104849578 seconds)
loading group "tuple"... done (took 1.723032216 seconds)
loading group "dates"... done (took 1.329634616 seconds)
loading group "micro"... done (took 0.230850338 seconds)
loading group "io"... done (took 0.961204272 seconds)
loading group "scalar"... done (took 38.48167457 seconds)
loading group "sparse"... done (took 11.512802858 seconds)
loading group "broadcast"... done (took 0.915843375 seconds)
loading group "union"... done (took 12.805885507 seconds)
loading group "simd"... done (took 4.392662219 seconds)
loading group "random"... done (took 8.887284941 seconds)
loading group "problem"... done (took 1.886542854 seconds)
loading group "array"... done (took 20.164543246 seconds)
loading group "misc"... done (took 1.687398786 seconds)
loading group "sort"... done (took 3.239390421 seconds)
loading group "collection"... done (took 16.713842221 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.47092921 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120393769 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112625261 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116008032 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.137665985 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113981563 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122815515 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082896149 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.847471074 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.137505837 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116263025 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.403441807 seconds)
done (took 4.976803535 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173127751 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081736468 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080120917 seconds)
  done (took 1.317398779 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065435691 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119497208 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065919691 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065929298 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065998131 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065253753 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065229597 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065338285 seconds)
  done (took 1.670147533 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071484763 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066823606 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067562851 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066199442 seconds)
  done (took 1.428071103 seconds)
done (took 5.821278504 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.753920599 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202097129 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18005426 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.387381504 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.12647732 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.163867265 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.644931967 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327819965 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.186503684 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.07912198 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10094661 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316630825 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107115113 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.639285728 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07863212 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.08829579 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137157255 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.42108065 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066132053 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080752952 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088251055 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12772807 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.0873621 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075418827 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142816864 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066685447 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.127255035 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079254949 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065201917 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.204547786 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171102696 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.64170988 seconds)
  done (took 10.159016994 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094352757 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09553585 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068261074 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121806206 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097123442 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070658165 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071670729 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068106507 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087879313 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126743373 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089741436 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102483911 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06648454 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069294526 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085194375 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205983831 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081319449 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081778303 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071318663 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075997665 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106217756 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079192768 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078542966 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07840486 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129807638 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182559229 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098355898 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09831912 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068344203 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081260524 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115961954 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127289796 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066474295 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066831613 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12486408 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095900986 seconds)
  done (took 4.626761476 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.903140552 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.137134464 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.08873033 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15882347 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066727582 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082364086 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105016034 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064529374 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082549054 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.195193585 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.123665391 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.434621563 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112807602 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.085774221 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067269312 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067168466 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066089834 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.340649971 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108143695 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11097778 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082902992 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072580937 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068508884 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.34039738 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065908247 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065579782 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066951689 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057197749 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11028153 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06713628 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.971156503 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.115804753 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067082767 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100948965 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.172150551 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093003328 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088346133 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13398575 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064805629 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064098525 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.145795473 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072442232 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064502123 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080204189 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101058163 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.100922467 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.19833896 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066498532 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161261878 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068497084 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087677299 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.722338888 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154092563 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077882063 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068360311 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065314159 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245565625 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085966549 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067990399 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065770787 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.20254461 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129658535 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068073864 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067043691 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067350822 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068911115 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.362264952 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068115725 seconds)
    (68/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064285688 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068732113 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07955372 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.986891347 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06801506 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065900693 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071488668 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07119467 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084078175 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067233361 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07009974 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066825737 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067484816 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06916228 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084738997 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.189690399 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065211052 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066210088 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063995885 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090160311 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095985793 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070175171 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066136046 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100866361 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068692531 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066411448 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102085138 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067946388 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085433209 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068305142 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112236667 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067071215 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.111057186 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065746783 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097174 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069134335 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09990646 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.077262943 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.160285873 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.21587671 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063946416 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063811732 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065925825 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067254588 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06669871 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068136451 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078617844 seconds)
  done (took 20.232983087 seconds)
done (took 37.077208323 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.27158897 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073888569 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073668639 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07396041 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073677074 seconds)
  done (took 1.807609641 seconds)
done (took 3.028354626 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118121515 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09717834 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063064583 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094187967 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063170962 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099004718 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098483714 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080414882 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100663612 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06521672 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097500937 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064604911 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064823208 seconds)
  done (took 2.348773266 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082378306 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083014558 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070496877 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082776862 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064403543 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083031045 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082075686 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089942953 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082234306 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072745945 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064573705 seconds)
  done (took 2.075242971 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080961446 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082958097 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068787187 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081058156 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062510764 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080169752 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079854902 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084957006 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082282352 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073798696 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064724765 seconds)
  done (took 2.058577153 seconds)
done (took 7.694306612 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07680488 seconds)
  done (took 1.284322369 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.578293899 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.036550128 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083352142 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113167912 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.180940606 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120577384 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277160123 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087991288 seconds)
  done (took 8.866633671 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086505076 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.081989921 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071278937 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067560931 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070066989 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068575682 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069708024 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068987776 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069846558 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069664565 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069478545 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072608967 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071027677 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072393066 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071451221 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069019939 seconds)
  done (took 2.425728501 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090713136 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.088540668 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072694245 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073238532 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070924885 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070767478 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073234449 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073282605 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071253084 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072881889 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074581042 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073016458 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071802123 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065504675 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074746908 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076193782 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071202185 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074718698 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075594241 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075756215 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074949438 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064864287 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071942787 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07418313 seconds)
  done (took 3.090138585 seconds)
done (took 16.883043889 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110807303 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070273005 seconds)
  done (took 1.394810776 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.07982581 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080396431 seconds)
  done (took 1.380984574 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.079800367 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064391077 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087701051 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076412676 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065307436 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064584792 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08535344 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065250345 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064587766 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06491484 seconds)
  done (took 1.939256476 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067084308 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07584362 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068679283 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079355411 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072148088 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063105111 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.0710972 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066481768 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07605192 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06165137 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069428163 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080411807 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069538252 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082092766 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070971439 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066905081 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.068913449 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065617309 seconds)
  done (took 2.496613185 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064627629 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065644218 seconds)
  done (took 1.354304326 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065292091 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062141562 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065648754 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065291285 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062047147 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061260033 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062060212 seconds)
  done (took 1.663656872 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.370526439 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108961622 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.292631032 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.0714731 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082730769 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24758267 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064346467 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068833563 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068984825 seconds)
  done (took 2.642611447 seconds)
done (took 14.10211045 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.076756963 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084300255 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.092906364 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.336964061 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090505644 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064629765 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112486081 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186597962 seconds)
done (took 2.284580849 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.207470182 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.557490632 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.366016312 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.192758306 seconds)
  done (took 2.346801512 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.312054121 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091385034 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059651417 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.0665896 seconds)
  done (took 1.766925368 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064833405 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068033463 seconds)
  done (took 1.368754517 seconds)
done (took 6.927550247 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065275023 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064638709 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063281282 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06495752 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081800197 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.061934726 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062713379 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064659127 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064995785 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064698583 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067893003 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.064781394 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064732428 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062590733 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062218969 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064839218 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062497753 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062078608 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064468583 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062306072 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065304885 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06581447 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064240625 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064038007 seconds)
  done (took 2.825508839 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081960039 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065681354 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070751657 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070695169 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068755709 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069855812 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069910706 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064777856 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070053966 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066765312 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068133665 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06871818 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066728415 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068485923 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067162697 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068629224 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070501399 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065112779 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066950444 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068672166 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069642873 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06500701 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068614201 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069761715 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068313507 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068747924 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066794548 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065300369 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06962796 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068229147 seconds)
  done (took 3.301869308 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.0684445 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06302156 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063318687 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070140985 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062830559 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063554699 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062136984 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06289316 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063186254 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062423282 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064033641 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062634854 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062681311 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063584733 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063258258 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066043709 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07747842 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063016184 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062708511 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063007172 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065916459 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064128638 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062571205 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062762837 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062322737 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062047106 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063040702 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062542021 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063333781 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062006802 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065841692 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066104316 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062732746 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06913092 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066031082 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062209416 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066309557 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062150074 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062921304 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062336218 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062214597 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.0627 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062620232 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068911809 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062821618 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064065318 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062352622 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063888429 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062883245 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065239037 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061821345 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062611444 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064305043 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063503703 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066529993 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063141309 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064916154 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063691009 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065418565 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064050592 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063950702 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063851177 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066478592 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06449046 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078670558 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070726211 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064303172 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06581829 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064918838 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066148565 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065553022 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076893927 seconds)
  done (took 5.903999545 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088056294 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.197184832 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0649911 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064560221 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061033424 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06442069 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066571529 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062940602 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064247135 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.06799499 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062996586 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06408127 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063847114 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075484253 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063281606 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064367196 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068556985 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062594452 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064832659 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067870415 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065257961 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068127126 seconds)
  done (took 2.851105187 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152772411 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069806413 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103243637 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071351067 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066503093 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071101347 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068824225 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068613182 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068632915 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066934055 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066721698 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068659183 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066191808 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066593047 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067504245 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069091881 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070288638 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068693419 seconds)
  done (took 2.600859237 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075697777 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065205099 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084483502 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065205028 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064755832 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067274274 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070884718 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074932941 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068928603 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06655788 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074529697 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069001019 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068865833 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066583642 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068594715 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066491823 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068668003 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066672719 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074340895 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071237215 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071191459 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074605827 seconds)
  done (took 2.794862448 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078711656 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067211867 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080243603 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067192227 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060967772 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063207589 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068801772 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065358397 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070495633 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068498438 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067130458 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064573078 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06998244 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06521886 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068852494 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066409809 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068292138 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066287275 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067795252 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062196761 seconds)
  done (took 2.609571448 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085315766 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066936958 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066396788 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074138087 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066316303 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067095187 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073719623 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066078192 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065895853 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086159914 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066107486 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065857835 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073301129 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070378667 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066216359 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075566233 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075503147 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074996084 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067597127 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067537383 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087758068 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067806899 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074907427 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068029642 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06768746 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068447081 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067888339 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072558249 seconds)
  done (took 3.248922231 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065386112 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064764671 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062312711 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062436655 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063172852 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062509046 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062390714 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062312391 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065075913 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062595308 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065014084 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065196018 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06486199 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065245474 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065533983 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064530396 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064727354 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064739775 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064560822 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063855394 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066375868 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066325702 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066539954 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064051734 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063596382 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066064838 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063778372 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063939245 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066307575 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064009025 seconds)
  done (took 3.190329531 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07359548 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071630245 seconds)
  done (took 1.40404178 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062377634 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078456456 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062414611 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06851815 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068662107 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065442291 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071825924 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068189336 seconds)
  done (took 1.7997636 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.079905876 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076045137 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06640158 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078840193 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075209972 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081250531 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130436571 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06593912 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072914524 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065081948 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080351774 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065887664 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073426953 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06755449 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072594125 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07327374 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064549886 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073296384 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069428528 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065516465 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068039455 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075308414 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067712474 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060642122 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067000071 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087394326 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078864873 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066323624 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069404888 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073979778 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071953925 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060755113 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066209506 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067306542 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064676171 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076399092 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082439938 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07020535 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075554951 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06768508 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077287573 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062059947 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071564115 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07341856 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076474934 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067669589 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067287804 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061816024 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064875473 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069069704 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061888819 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067060177 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061670689 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076472318 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070203132 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077487571 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06509666 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068128475 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069777523 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069884248 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073932987 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068486265 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06957713 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066919395 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076292234 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070848635 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075626891 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060397378 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059424417 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062989848 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075035936 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087614299 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071241186 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065664752 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065889012 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06277069 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06860782 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066559129 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071105049 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071820138 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065348382 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071231837 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073073096 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065489385 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06789133 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072914414 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063897222 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067901191 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06325036 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080763235 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064049986 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062918473 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063029667 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076092739 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068261529 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064985578 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063130095 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071921849 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059526231 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065273809 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065899063 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065619793 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075331647 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069854455 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070014602 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073145988 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071697206 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064734607 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066633265 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060672881 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064783367 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063187 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071262961 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05838035 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06677036 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064817313 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064566352 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200257442 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064789101 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065305007 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072875275 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071343468 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064103401 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062449657 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068239667 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065377934 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068484992 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073039295 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064418084 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060768215 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061041033 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069446096 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.064841312 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.068802845 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071023641 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06921121 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060208494 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063952797 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070840515 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074284522 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066008269 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066188346 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07205835 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06684832 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064841244 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072598081 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068422902 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065000468 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071097074 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067066228 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061612593 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069058559 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069300008 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063955115 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069905717 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069551961 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068533613 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067402473 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065665118 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074241646 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065946473 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06424363 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065018427 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064543067 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076027383 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067616907 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06141908 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063269209 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074038233 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064466542 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066948268 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066213771 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069642319 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067818327 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065361467 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066668971 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069290107 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077590806 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070922982 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068466499 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072391816 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078325485 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067048483 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069451898 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067011714 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068194136 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067726103 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074669414 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070543743 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069647326 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067383513 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062032396 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070633191 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072234887 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06420066 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062916052 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064149774 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06912584 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070282339 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068987397 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065893554 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063269214 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066111202 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068072162 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067955903 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065009694 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064502302 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071546391 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06357045 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072234443 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066503723 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075282261 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068622402 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060479002 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067805022 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063219639 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071582473 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060435149 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063171798 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065031047 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066496249 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064173051 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067558386 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059704179 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072121209 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072595026 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066284669 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064481949 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064713886 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070923789 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065909906 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06774986 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067268927 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069353484 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073705016 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063501259 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067198346 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.073784912 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063649504 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058251502 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069809761 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063685472 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062999401 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063691685 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062525597 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067048585 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072199575 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070453649 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059091312 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06661406 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062262209 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063171995 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.059743233 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.067952177 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.066492481 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064695497 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.070301055 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064612272 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064483508 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.06758014 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063568634 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064227083 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064744692 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066905301 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064472762 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06531289 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063017683 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066564602 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06280102 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061326606 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065304469 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063365665 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06421354 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068535358 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063196404 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063867183 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.066246835 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064523533 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064775112 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.064291447 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063696328 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06674427 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064732551 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064287821 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.066132914 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059272843 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070535915 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063009075 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071094133 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.063942763 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060899064 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069841594 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066459242 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.068675143 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064322655 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06443966 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065167242 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.062985565 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.066462479 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.069960543 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062093918 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07316097 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070779628 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063765574 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.065429826 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06409273 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065216105 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062830655 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.063844477 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063606071 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.063926294 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062859052 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.06724531 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.065271958 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.063704318 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066119982 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063549594 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06367705 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.063100142 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057345621 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062400252 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062967591 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.062343317 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070910094 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063452995 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06266937 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061652397 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.062859582 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062465102 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.060203066 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.068918794 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070360724 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.062925823 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.069425063 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.062727573 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.064767796 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.072526877 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057668097 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.061087274 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06043634 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.061691087 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069111354 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.063102474 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.071381224 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.063213509 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062362263 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060326603 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06383501 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.061908462 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.05774713 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061885653 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067088712 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062169053 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061787533 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063069449 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.065090175 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.063395913 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070893003 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06266237 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063683409 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.062993111 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060132524 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062237052 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.301797749 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.06999525 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067180924 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064918106 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064685989 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067265174 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068543494 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068646583 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067244707 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068563947 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076374727 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066216369 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069749994 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069733892 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06193326 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07016147 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066452929 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066518922 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065819175 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069915412 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069733212 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067963778 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075062224 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066047595 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067196156 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06654727 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064642693 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065694188 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066457209 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066585377 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065745563 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066901512 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074113756 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064441332 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069049895 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066163014 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06649324 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072285297 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066877519 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069309472 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072532226 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067054706 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068473204 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073760499 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070421645 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069243989 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067017031 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067417588 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07175538 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065454552 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072505717 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066192653 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066630261 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067777308 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064265575 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065633739 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.0657664 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06471235 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071583095 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066050454 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064922599 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06498829 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063627118 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066616162 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068405477 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07303231 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068477075 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06891325 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060676228 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062940242 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066242789 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063921662 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067397937 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068242504 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07159878 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068238905 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066184647 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064588766 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074690604 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071288241 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069279094 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064067246 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069155329 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066584441 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06775895 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06667983 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066215676 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066823639 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069906082 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067429171 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065681051 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072834528 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068788834 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066957221 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06725054 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067198075 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066416537 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060983301 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066278492 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067533594 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070817478 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067709916 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065276151 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075891719 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063694694 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065932808 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068689564 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064963098 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070372735 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060941632 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066908129 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066500057 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06646726 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061115213 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065379319 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063586119 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067616609 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064617026 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060217947 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075686257 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073886523 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068107261 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064092487 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064335567 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060312843 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.198831005 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065308136 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066707022 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067681375 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075795929 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065064955 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064696809 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061607375 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065613221 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068577116 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068847071 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063001078 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060680395 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065177368 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069070313 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.0710632 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064528782 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064628075 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068794739 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067955961 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064356768 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07147197 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064452189 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071770332 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080077307 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068497308 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068049524 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073693956 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075635808 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068034559 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063000049 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068096497 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07016479 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067303178 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067117204 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067232188 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079948956 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06883781 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065083459 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064291308 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067956642 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06547743 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073516747 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067157371 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066070834 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070214134 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067484087 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073999129 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068892047 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074124564 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068756847 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068635881 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064709596 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065986214 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063895055 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064764709 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066428234 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065965896 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070365831 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073318866 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065347767 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075513727 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074251321 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067775731 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062664416 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064775201 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06497492 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060685038 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066059525 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063723476 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063571211 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063379915 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064341154 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066229053 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070561686 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06617316 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066516828 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065417931 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060357939 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06792161 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067750271 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066248381 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062603324 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065365662 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066122679 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069142691 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068209696 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063247129 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06699607 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067022083 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065766766 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060720747 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071644381 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064324829 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068143283 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06500296 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064923274 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065879912 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068691709 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069881582 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066353153 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067500654 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068476693 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067035196 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062504347 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062527728 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070269147 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063464322 seconds)
  done (took 41.902280948 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099378104 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062399237 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061825423 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06190107 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072446453 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062521892 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061619371 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062408641 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062540964 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065110958 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061552069 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06164859 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070218712 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077315583 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072941515 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065900016 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061785386 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062677662 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062042828 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062773303 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070408753 seconds)
  done (took 2.79907687 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.0731042 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069857448 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071438535 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075185494 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066625717 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069888518 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071314847 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06976106 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075020735 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066931507 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075047418 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070060663 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075326241 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066546072 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066434339 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070471923 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074845343 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067009918 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069966675 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071442067 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070356029 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071563875 seconds)
  done (took 2.917209716 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066997389 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06538756 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067292381 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060925146 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065068332 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060762502 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069022733 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06349594 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068618932 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06473766 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064637931 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064802877 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067405083 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061091361 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066041506 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063677814 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107839263 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068299847 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065134131 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066175777 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061002681 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066991004 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060977726 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061797571 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064459433 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068780351 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065954434 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063319045 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064890931 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064448255 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065136495 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063010043 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06673993 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066320101 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064380882 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064670059 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066771549 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067023626 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062542872 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064269653 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067328586 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062527721 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066593502 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067204611 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063781667 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063231374 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066704049 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064644504 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06041378 seconds)
  done (took 4.585273599 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078575544 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107720047 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066953809 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087668168 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078944436 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074815418 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068672757 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088345405 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062706231 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063707387 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080457071 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078582423 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.0648929 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06927136 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071575934 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064707808 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06620729 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064546226 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070029751 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065240591 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068614359 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071356764 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078632447 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077618457 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06847189 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06415256 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064460178 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069051477 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076735009 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068944485 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069032918 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070137348 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079080232 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069834088 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064530135 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067132367 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080217657 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06476929 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066629075 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062362809 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067046103 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068342672 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070851152 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079953073 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064698567 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069121128 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064145852 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062239268 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076437727 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06684697 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071802192 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078612341 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068205533 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064546776 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068731643 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078632062 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064301438 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062892709 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067282206 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076307494 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062161327 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068093172 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077325965 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066478492 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071331734 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077898661 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06969706 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068379885 seconds)
  done (took 6.327065923 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073598523 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071493048 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079071878 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078705253 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071297789 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071233871 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071498477 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071076706 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07128084 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075624705 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071368908 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091289118 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066945309 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073648769 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071524413 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071229416 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071001974 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070992556 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071491496 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070968695 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071515163 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078254523 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071225753 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078461106 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096702114 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066690219 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072392513 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072956375 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08017459 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072232207 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078602182 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070833523 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071017761 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078547737 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07825363 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070921095 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064425121 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070615665 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071112933 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071118245 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066462944 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078542136 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070285981 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066569598 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07058262 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07040046 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078353414 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077860953 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073182856 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075473493 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070688106 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07812193 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070606558 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071139611 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078538577 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103153859 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078084985 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078405059 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070940103 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078193268 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078164407 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08435242 seconds)
  done (took 6.007298745 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082525843 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0738264 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074164518 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061055866 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063196212 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06856744 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063364475 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063266183 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072882049 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073271338 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075529208 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068703387 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071520393 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075133382 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068517112 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071357665 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068369498 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068362979 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073078602 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06832245 seconds)
  done (took 2.792223833 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073870184 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081811871 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065631985 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070556481 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068014709 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070241153 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067799827 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067860145 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065818742 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06787242 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074598294 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075179216 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06600495 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070814185 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07461788 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070023352 seconds)
  done (took 2.509901502 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073443083 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071750594 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078682593 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064876365 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063007366 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06163285 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064873932 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060587373 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061544901 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076439309 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064821741 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067136312 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065534207 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064290189 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062053602 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067747863 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061466174 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062414461 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064924951 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076837715 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075506158 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063573898 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065933185 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064803917 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066898716 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070541097 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064343455 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063025542 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062317466 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065413706 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065400504 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068774864 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062242353 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062833585 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063727787 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062187647 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064509141 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065071177 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06721968 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064986109 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062965808 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064732472 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064909845 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065961738 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061321145 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065495113 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06089214 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06655878 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062675006 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06457704 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064518546 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067296491 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065034143 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071171513 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067454899 seconds)
  done (took 5.000177035 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077436253 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068559826 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061057883 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062957622 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06781471 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06680753 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068518029 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066713117 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066850291 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063252421 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066855028 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067786646 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066790707 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068376776 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066946126 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068273617 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060975388 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066543062 seconds)
  done (took 2.595488521 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069992604 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065060865 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072584349 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065689808 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06485972 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067493341 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061284451 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063646556 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063605545 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064972249 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065102181 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067835478 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063627303 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067221555 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064880675 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064781855 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067287597 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06356724 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065225143 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060920761 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067533315 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063402693 seconds)
  done (took 2.826915799 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07129219 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.090596728 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136498589 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082778801 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080444461 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077552045 seconds)
  done (took 1.926591025 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088768752 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077749443 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06595962 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086769227 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07205952 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066228844 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066228134 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066610188 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0747248 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074893277 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066553188 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07469781 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074531388 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074141351 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072214511 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072361706 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066613582 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06646781 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065377437 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082734163 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066540667 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074713471 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067000648 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066265053 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066526911 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074001938 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074646772 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074863522 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066260937 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074785976 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072091412 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066853118 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074846478 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074905348 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068459451 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074838682 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066686326 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082737389 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072807716 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074552572 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068301314 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07252406 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074877242 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071973184 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074562705 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066764231 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0710624 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066815797 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066600638 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084330094 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072005805 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073440433 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072260875 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075237519 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074535672 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084836746 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074581922 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074148692 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071923624 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077601658 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074036178 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071753031 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074099727 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074541033 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071986437 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073989998 seconds)
  done (took 6.189880634 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079704819 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085713342 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066601632 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075738846 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074098304 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066581595 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066540848 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066861322 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067068301 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06662846 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10624772 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067194508 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074366879 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074292793 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066704294 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066424188 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066930903 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074242138 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066431744 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084566983 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066461619 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074304432 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074036701 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073960394 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075439659 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07197342 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066685438 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066695508 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066308544 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066585471 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071317238 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0670955 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073970661 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066230672 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07396702 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066702934 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066384763 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071106095 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066418755 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071972163 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074062191 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082248769 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066755608 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066624694 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07528512 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06637786 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066502865 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066263239 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066430784 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066639069 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07500373 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075224088 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075462673 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07452247 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066984162 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066747954 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066547336 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066701203 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066859002 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072231486 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073710072 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066404044 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084287959 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066641513 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066276483 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073793703 seconds)
  done (took 6.10302528 seconds)
done (took 128.246166435 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187743419 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.167847921 seconds)
  done (took 1.74126955 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067448441 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094895825 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076795466 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127502796 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065900696 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099343187 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097596312 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077020114 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065481697 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065828434 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065259333 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067493337 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129728479 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06578808 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065775732 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067071555 seconds)
  done (took 2.699569879 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096367826 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172213339 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.097996504 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064464293 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095748656 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072251187 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063991169 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074281488 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07007182 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064707088 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072058466 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069887165 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064400005 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069667307 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.0700267 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072211331 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064506759 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072082655 seconds)
  done (took 2.829505772 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098871691 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09037824 seconds)
  done (took 1.592322203 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156758011 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104738427 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148381251 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.33200434 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.159993387 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.230882093 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.131445835 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127367247 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117434825 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122613579 seconds)
  done (took 3.028975402 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096660235 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.145455397 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254740331 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114495046 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071875471 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090048406 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115273559 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07683247 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076615738 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076105186 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076134401 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075476678 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094881217 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072718871 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072681669 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074887294 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098308044 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07154428 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.0744222 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073450443 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095748922 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065430638 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072330911 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071691763 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073642102 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073973784 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064795488 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065156192 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073055101 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072888578 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075826043 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088606499 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073492629 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102782911 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069415921 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.103710052 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075161813 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070334453 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072655354 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.06989632 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074386129 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074630337 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071071662 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074608494 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064496701 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075054866 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06479542 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064425079 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077234784 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065996427 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077186419 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075907482 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103055575 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066162425 seconds)
  done (took 5.8879801 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.660575984 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102036408 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069673254 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.106689878 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095359806 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071274864 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.685114261 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089417897 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171421925 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090877839 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087074998 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069172196 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079615306 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081761385 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109654305 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.099924443 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092126987 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070868983 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.099248082 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.096952177 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06706738 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092141353 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.08847446 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.37425567 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066303701 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068696598 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066765556 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068720296 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.108961329 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076783924 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068834617 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.119017966 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082514661 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.119035856 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065949196 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066849066 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066674926 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078107755 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176894867 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.130335153 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.128176676 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066184344 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067022083 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067532904 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087832398 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066540837 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.108162297 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078665361 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.116350619 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068581648 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068786736 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066692811 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068059373 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078603592 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075892711 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079170124 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.22838166 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067353891 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067339139 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070063112 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.178471727 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078061525 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078102508 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090618437 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.128806084 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066863695 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.686164794 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083484431 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066823284 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068174946 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067039936 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068300954 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067114476 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.243430064 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.340274988 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068848996 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069307191 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067988176 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.161046125 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07851947 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068192274 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.109997447 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066886212 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068465988 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069462382 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06907775 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.116058486 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079094054 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069107034 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067655906 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069686741 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068116046 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067067281 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.160561319 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078700086 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078524981 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.158612146 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06881225 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110462541 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078292861 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069611398 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078554774 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067547938 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069437034 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068288456 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077872861 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.094757593 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078907649 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069548052 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067230052 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.096639127 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079444647 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067239278 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077406398 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.395377439 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078873546 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066481126 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079855203 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068242947 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.109334461 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068679027 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.174214566 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067705512 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077517986 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067763689 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066393002 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06735204 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.109095373 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069157596 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067781515 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068331008 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071488318 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079862603 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.131195454 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069221178 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.160868932 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.132076776 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068912935 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.117611844 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067434292 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.114457184 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06907474 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068397119 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066286382 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.710857093 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067157308 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067504003 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068608194 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.135953246 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067921511 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078656917 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076501247 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066307691 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.686916206 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077945478 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075123975 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.20987387 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069233629 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067857022 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067472507 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069588411 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.10953959 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.142703696 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069609186 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068213099 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076926367 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.110139809 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066685297 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077757413 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077098261 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077374496 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067779986 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069622803 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079598141 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.115810868 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077950685 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.134422208 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.511220987 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067368699 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076245231 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.141285423 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067597371 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084216511 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067588541 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080903521 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110182802 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075952627 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.226636459 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.112553897 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.136358461 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079627841 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081412179 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066889772 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067378099 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078499585 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067388076 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068920028 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076981835 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068879574 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068813421 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082355042 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067597145 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171175753 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066356667 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077881251 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066663628 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069031426 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082497213 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06750409 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068811841 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077863412 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069149813 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076301962 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.654252422 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077006522 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06723897 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069145227 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.133696571 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.110302452 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067452371 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067461458 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068822284 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.108398059 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.15420208 seconds)
  done (took 27.885729413 seconds)
done (took 47.075262798 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.203754559 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.147664592 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.19914237 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117408354 seconds)
  done (took 2.16603765 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12022451 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098671999 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09298442 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063957433 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100197493 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064212322 seconds)
  done (took 1.97543262 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.30206644 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.205730749 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178199989 seconds)
  done (took 2.118800305 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.193481257 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.183725347 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.389148765 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.249365678 seconds)
  done (took 2.556876363 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.139779493 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087143366 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066259782 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082230789 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131138762 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157525099 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099443112 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123131392 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076703946 seconds)
  done (took 2.449958888 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.141596296 seconds)
done (took 12.851732978 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.095563767 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.163957845 seconds)
    (3/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.20121677 seconds)
    (4/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07259167 seconds)
    (5/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.163671197 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064263351 seconds)
    (7/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.207672226 seconds)
    (8/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.180361147 seconds)
    (9/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079168779 seconds)
    (10/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.097403911 seconds)
    (11/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070376229 seconds)
    (12/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.085341824 seconds)
    (13/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.153005661 seconds)
    (14/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.21281635 seconds)
    (15/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.117388687 seconds)
    (16/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077366268 seconds)
    (17/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070698183 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.080934946 seconds)
    (19/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.152921023 seconds)
    (20/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076140954 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.092624127 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072468313 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.106893393 seconds)
    (24/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.091134311 seconds)
    (25/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.114077808 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.117797858 seconds)
    (27/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.21178299 seconds)
    (28/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07537362 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.103844504 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07272051 seconds)
    (31/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.166434136 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092602909 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.156088832 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.092767262 seconds)
    (35/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097738256 seconds)
    (36/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080745875 seconds)
    (37/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076225611 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088559749 seconds)
    (39/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051678401 seconds)
    (40/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076385991 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091140925 seconds)
    (42/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.104072076 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.103781496 seconds)
    (44/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.163289184 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112095156 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07088848 seconds)
    (47/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.148162185 seconds)
    (48/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069242631 seconds)
    (49/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069563545 seconds)
    (50/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.179849731 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.133370623 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.181671546 seconds)
    (53/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05250158 seconds)
    (54/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.155472106 seconds)
    (55/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067870172 seconds)
    (56/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.149164411 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071866853 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072302674 seconds)
    (59/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102147711 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131914428 seconds)
    (61/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.147981821 seconds)
    (62/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.174621053 seconds)
    (63/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07335636 seconds)
    (64/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073996356 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089414758 seconds)
    (66/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06419068 seconds)
    (67/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081985132 seconds)
    (68/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067790046 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067463779 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168202135 seconds)
    (71/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087484485 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.099798341 seconds)
    (73/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05395562 seconds)
    (74/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084443234 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074015484 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098414047 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087098557 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093538418 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089864535 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.063959995 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.180525254 seconds)
    (82/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.155885877 seconds)
    (83/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.136849777 seconds)
    (84/309) benchmarking ("sort", Int8, false)...
    done (took 0.135705575 seconds)
    (85/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.153141229 seconds)
    (86/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.213397346 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.152490998 seconds)
    (88/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106891549 seconds)
    (89/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.156453191 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068884106 seconds)
    (91/309) benchmarking ("sort", Float32, false)...
    done (took 0.128571473 seconds)
    (92/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052428524 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 0.067927856 seconds)
    (94/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073461449 seconds)
    (95/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.173728255 seconds)
    (96/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090915747 seconds)
    (97/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069739661 seconds)
    (98/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072692628 seconds)
    (99/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076748317 seconds)
    (100/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.102060338 seconds)
    (101/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072331336 seconds)
    (102/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079951976 seconds)
    (103/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067204339 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.052517036 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053238007 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054195118 seconds)
    (107/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073173438 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06699753 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06733766 seconds)
    (110/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.177033598 seconds)
    (111/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052586395 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.177900691 seconds)
    (113/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054408101 seconds)
    (114/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064653092 seconds)
    (115/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.052367131 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137325393 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177609447 seconds)
    (118/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076867172 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072910228 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075844128 seconds)
    (121/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07525709 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091913203 seconds)
    (123/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079356379 seconds)
    (124/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.309936935 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142624526 seconds)
    (126/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052378521 seconds)
    (127/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076686039 seconds)
    (128/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053571122 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.101955655 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.149896459 seconds)
    (131/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052855522 seconds)
    (132/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.06758806 seconds)
    (133/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.135659977 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106421828 seconds)
    (135/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066355073 seconds)
    (136/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076289762 seconds)
    (137/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070693286 seconds)
    (138/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071527287 seconds)
    (139/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07401934 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 0.13101966 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071932677 seconds)
    (142/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07224009 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071009522 seconds)
    (144/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.159177757 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13721773 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071554231 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073178761 seconds)
    (148/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073926967 seconds)
    (149/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067683222 seconds)
    (150/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089109052 seconds)
    (151/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060368972 seconds)
    (152/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.168147607 seconds)
    (153/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051759843 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071173378 seconds)
    (155/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.136052959 seconds)
    (156/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052108222 seconds)
    (157/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063014975 seconds)
    (158/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.135612232 seconds)
    (159/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052372841 seconds)
    (160/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063022411 seconds)
    (161/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053314527 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066026092 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073438584 seconds)
    (164/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.135697327 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.167755976 seconds)
    (166/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073167363 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093275187 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067817858 seconds)
    (169/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074293412 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074628438 seconds)
    (171/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052452272 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052049303 seconds)
    (173/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052786842 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170349857 seconds)
    (175/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072206787 seconds)
    (176/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072712095 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050474426 seconds)
    (178/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.113225231 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086562015 seconds)
    (180/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068271164 seconds)
    (181/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.098563044 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091495793 seconds)
    (183/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061007956 seconds)
    (184/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074847313 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064273784 seconds)
    (186/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050328062 seconds)
    (187/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059655713 seconds)
    (188/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064768816 seconds)
    (189/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067186304 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070733824 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064084322 seconds)
    (192/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.063836574 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.110054873 seconds)
    (194/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06692545 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07243766 seconds)
    (196/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.10047302 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143181058 seconds)
    (198/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051540228 seconds)
    (199/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.132287142 seconds)
    (200/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.062938849 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.239062721 seconds)
    (202/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.098168017 seconds)
    (203/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.145974978 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063769266 seconds)
    (205/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.137121455 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065008847 seconds)
    (207/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052810927 seconds)
    (208/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052441324 seconds)
    (209/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.08638644 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065964564 seconds)
    (211/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062238132 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073875897 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.090138258 seconds)
    (214/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065482456 seconds)
    (215/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183375731 seconds)
    (216/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065886073 seconds)
    (217/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.137802667 seconds)
    (218/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060128684 seconds)
    (219/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050445051 seconds)
    (220/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052051044 seconds)
    (221/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.051937733 seconds)
    (222/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051766615 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070547941 seconds)
    (224/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050837061 seconds)
    (225/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06541708 seconds)
    (226/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050807635 seconds)
    (227/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052049037 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070369877 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.076615386 seconds)
    (230/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061262035 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109309428 seconds)
    (232/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.136570958 seconds)
    (233/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067145807 seconds)
    (234/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051783342 seconds)
    (235/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050397605 seconds)
    (236/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050449995 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063067999 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065727727 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087587334 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107795698 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136375145 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065135665 seconds)
    (243/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050783463 seconds)
    (244/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064369377 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064651176 seconds)
    (246/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.168458979 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099627712 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144264116 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052893589 seconds)
    (250/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117566298 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091469878 seconds)
    (252/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050486736 seconds)
    (253/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065612911 seconds)
    (254/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06382254 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064810201 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088861942 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064594143 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064647612 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064511384 seconds)
    (260/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061210674 seconds)
    (261/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075322013 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17502922 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064575984 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071505125 seconds)
    (265/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070904021 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072069411 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125065993 seconds)
    (268/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073825528 seconds)
    (269/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.169353849 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116406539 seconds)
    (271/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.052639726 seconds)
    (272/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071800781 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050490176 seconds)
    (274/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066578766 seconds)
    (275/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066051953 seconds)
    (276/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071862636 seconds)
    (277/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071886209 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072181455 seconds)
    (279/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051932373 seconds)
    (280/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.04998003 seconds)
    (281/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067189033 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063202227 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.094265552 seconds)
    (284/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.050665737 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062819039 seconds)
    (286/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065175789 seconds)
    (287/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070040159 seconds)
    (288/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051419003 seconds)
    (289/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077618675 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071428144 seconds)
    (291/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.059916722 seconds)
    (292/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050648611 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067388263 seconds)
    (294/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064716702 seconds)
    (295/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050454998 seconds)
    (296/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050145409 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069769198 seconds)
    (298/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050318212 seconds)
    (299/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068308679 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13783355 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064412002 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087964559 seconds)
    (303/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077512848 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162868037 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070064002 seconds)
    (306/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050624756 seconds)
    (307/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065293665 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065720158 seconds)
    (309/309) benchmarking ("sort", Float64, false)...
    done (took 0.123530955 seconds)
  done (took 30.12990831 seconds)
done (took 31.577346079 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083287762 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090563774 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07333333 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092304618 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.078757995 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075283779 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071113343 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076519985 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078368208 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080153697 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077041097 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054044022 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.0724895 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072815096 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073072908 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089392821 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076979951 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071461261 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071472144 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063278335 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071616808 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064774127 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065938223 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054072723 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076428741 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070729608 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071284125 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07295985 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064308463 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06496845 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068232009 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072070352 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064577199 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076913184 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070908704 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071319291 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072627878 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074619147 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066146803 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064403923 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072501773 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06433858 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071605434 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071970203 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070238436 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069959833 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07163014 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076496519 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08921543 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066742509 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073169145 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075333199 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074902511 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071229139 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.067958263 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071926646 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069366034 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089678606 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07219226 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06676377 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072632852 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072870902 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070353054 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071681736 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071312631 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073700989 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074001673 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070269279 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073612281 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.06983517 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064456118 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071520198 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067673061 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064689718 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074274448 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075567106 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063142584 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069856233 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071801608 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069682811 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063685833 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066487811 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066263721 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070065012 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066218782 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053927452 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067684931 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070130797 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063408136 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071872776 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070673254 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070926156 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065838043 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074056579 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06350758 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069481177 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064515165 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06441209 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065732807 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067582121 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063893007 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066480633 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073090453 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065132196 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070247723 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077421912 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064380348 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070293872 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063404761 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063296249 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077750979 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073272207 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064270924 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066431748 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063334346 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07178387 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063557617 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.0643785 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064538203 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064710303 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070472437 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064736274 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066528596 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070829753 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076069795 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063834366 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067115281 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065811668 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063825851 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068847006 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064129084 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064207857 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.20023483 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061255972 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066801038 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064826145 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071213019 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066987401 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071765869 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065579207 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072367695 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069284499 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070662104 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069835622 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063729121 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058375923 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067578918 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066571917 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06705364 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065404363 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066272794 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065362878 seconds)
done (took 12.304306321 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065175955 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140115708 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096099045 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093336213 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084597605 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06538371 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07483148 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100042229 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066873805 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100360234 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08592496 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083641355 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110170968 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063608086 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065055676 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068405569 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066517351 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080158207 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099370351 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.0854027 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107386385 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06416565 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09304657 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088513918 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085490561 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.099501077 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065931653 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068473652 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068357065 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089643609 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085114347 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068779129 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065906908 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098536252 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.090201011 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081554692 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.064888075 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.080630793 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065374333 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064713832 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.079269838 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096020594 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078617217 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07833815 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06868086 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.067538504 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066122162 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.081726057 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087008055 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.076800466 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.084716428 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100980911 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067572501 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064736397 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063425559 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.083622307 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064300838 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06765553 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.064982987 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067415577 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064839162 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068048158 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079198573 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084995995 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068312929 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078767449 seconds)
  done (took 6.749009273 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.081881611 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088370811 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082231826 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08187056 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064404937 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065655633 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065894929 seconds)
  done (took 2.067735537 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066266061 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086819278 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087196906 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088210036 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083364866 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085402922 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074658989 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065740288 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079321935 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06679021 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086433215 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10007691 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.065801579 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071779826 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08906373 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06555166 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.088605415 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065714352 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068220471 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088115437 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067138954 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08042418 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068712191 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06602266 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079076489 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065820922 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111065901 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069459897 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067013841 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068520112 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063460996 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104458525 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078715783 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074281691 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0655714 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079748998 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079736724 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064079614 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081059763 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070791385 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.07900456 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066083975 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066948994 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063545647 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069423047 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075207954 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066191872 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066001087 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067877385 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084368007 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066155681 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078738633 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070015693 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.067710803 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06705544 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068907522 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074754895 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066125754 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084627035 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066659568 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.081414989 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081307286 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.078511991 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.080860064 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067816157 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078595298 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.078976382 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06818481 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067515927 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068894455 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081539765 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063923194 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067025692 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076348808 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067236296 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089496629 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091058205 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068788298 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077538907 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068543696 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06711815 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066262372 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088439274 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069050523 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066136579 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069826815 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068710447 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06475827 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065266333 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069398434 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064009116 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067414929 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068371002 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069200054 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068400738 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081857288 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068423334 seconds)
  done (took 8.707579193 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067908194 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066974719 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068097638 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067392704 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06640387 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06753134 seconds)
  done (took 1.960923766 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092526876 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068910784 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080219407 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070840379 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102925749 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085679731 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085740728 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077574919 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083520665 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077604323 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085492308 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087250115 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091309576 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071605337 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085527307 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071072985 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086445668 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07436004 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077515715 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071883883 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085017026 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071489299 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072080075 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080622946 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074560768 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071433738 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066756691 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077552957 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077397675 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07756418 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07177605 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074880841 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.06960424 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077073582 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08551167 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069569756 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070927679 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075894119 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071855458 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074631295 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087094651 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072051168 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073571765 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076013916 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077334494 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069564646 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076257012 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075105668 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084983281 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076542237 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076131551 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07093146 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074109562 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075752172 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069433597 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077191811 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075695416 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085017864 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071153214 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069120813 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067945061 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074273237 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076379855 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07423113 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077088398 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07601878 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.068977581 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071369003 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07165269 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07051745 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075979197 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068315358 seconds)
  done (took 7.045534201 seconds)
done (took 28.054926364 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539848889 seconds)
  done (took 2.064424753 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.611072582 seconds)
  done (took 2.157682022 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.905748059 seconds)
  done (took 8.447933011 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.388562211 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.499793119 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.703245624 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128158247 seconds)
  done (took 3.304611044 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.657896156 seconds)
  done (took 2.215423451 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.20734039 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.194106343 seconds)
  done (took 1.966508403 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.365400782 seconds)
  done (took 1.913062263 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.106878506 seconds)
  done (took 2.656207209 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.256365208 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160524321 seconds)
  done (took 1.971610558 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.461183215 seconds)
  done (took 2.011911378 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.82840582 seconds)
  done (took 6.384096733 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.203316623 seconds)
  done (took 1.799202033 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236293649 seconds)
  done (took 1.791562232 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.702616317 seconds)
  done (took 3.258680089 seconds)
done (took 43.497445008 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077999096 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079492826 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079915167 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076820497 seconds)
  done (took 1.858599124 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075620753 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07134838 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075618958 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070934881 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075269976 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070838423 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072624811 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075471784 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071054975 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071493548 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071576006 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071465554 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074460708 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072644104 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069658622 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073700488 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074472329 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071177311 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073874259 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.070996487 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069931372 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.072897244 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073643673 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070566076 seconds)
  done (took 3.301307484 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076354057 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072073333 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073610667 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070733238 seconds)
  done (took 1.858214509 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075748577 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090806973 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087996145 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.075799628 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09043108 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084371855 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067550589 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067956795 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072324998 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07591747 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067237017 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09416729 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.085982948 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075856768 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077379933 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064895139 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066755642 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08517669 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.075753743 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076279188 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068836632 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075853088 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06649855 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086831788 seconds)
  done (took 3.418345245 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075937427 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.100872911 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076004179 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.0859283 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088564777 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06405609 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073149214 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088212841 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.120864895 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064312228 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068556341 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064429401 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071501605 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06446803 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075239149 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.102994524 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106631509 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067295553 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094114406 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064231675 seconds)
  done (took 3.188107711 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071681594 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068438917 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.064846234 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067762829 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076969723 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071761344 seconds)
  done (took 1.993735843 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066751468 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.0660152 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065912951 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065384194 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070770225 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066400348 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064975981 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065794919 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065716481 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065834353 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065722671 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064422858 seconds)
  done (took 2.361675154 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.319200605 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067548147 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067903 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064817477 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069650845 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065568809 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.07869397 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066934676 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08940148 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065481881 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065572798 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067702478 seconds)
  done (took 2.659614122 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200838615 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074902712 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23162692 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134559642 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10900967 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112860493 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10213278 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110941331 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139562089 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099153212 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16396784 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161508041 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104868358 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133761383 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087938963 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096872616 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152015965 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158492659 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10109493 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162268003 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140555775 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121892985 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143612339 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098880173 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103512197 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119091258 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069483789 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079008875 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165956513 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128569389 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142855743 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108661761 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091665608 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172225071 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166432359 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139055094 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131701771 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082373946 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100371457 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130480061 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194380476 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087059817 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160364438 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243694504 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080324897 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137683559 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117591517 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118529828 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10519924 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088444178 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141925289 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178448191 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.13658352 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085390175 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110586456 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112642734 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113580684 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102059741 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177340701 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157514312 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125722948 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070256342 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097945807 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149576963 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128886856 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107290068 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12380437 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092103214 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130613865 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152263627 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116396336 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139464486 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126289333 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086725711 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116689947 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136733897 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125113495 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166035623 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122441647 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071099129 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121323513 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101015498 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079376641 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140208999 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073678058 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17145087 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096772653 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104389213 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110604771 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106060777 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10636303 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15716319 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139995028 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241988295 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064971925 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103209346 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118380092 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144794482 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086089775 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106255008 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11389478 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076701147 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135787767 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073932626 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120650252 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074026513 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123035081 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129180746 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074319971 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118121656 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099182773 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098129793 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129948476 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155467844 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086322925 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080805308 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163294487 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119676216 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102231305 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140673696 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1519377 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097069676 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100799664 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146021879 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176192375 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087953008 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159202961 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105273571 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082002509 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08617479 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120834142 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110151832 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119380722 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080467853 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115918987 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164302494 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073761021 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093376779 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130177832 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077612595 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079226524 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101469951 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098666152 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093348667 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097680306 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101620658 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135170228 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120043315 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102158636 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266885116 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097206231 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16706739 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086965574 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098698588 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101504135 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068531248 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13380272 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153943352 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078313807 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160872266 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121448635 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102690742 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117588386 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081704575 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137434818 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076814888 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069026025 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142202425 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108691984 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108786692 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14740103 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102756003 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124555001 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116939842 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131977447 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129220586 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12652503 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103582681 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086218013 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109327874 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122839301 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071645994 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089388637 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078389427 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101848627 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093390014 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081524265 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139232258 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121732035 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098104733 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109926087 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094830194 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144328114 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074717769 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126580045 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117078896 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092312548 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148937988 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148172676 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127890888 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096654374 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141493757 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069220484 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072122426 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.230431961 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121637889 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081997728 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083532369 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115548932 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144559714 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126597845 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135245247 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108765441 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119164303 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152397087 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068637237 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113202067 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144229956 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118992254 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103162941 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088240316 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.096995684 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139493272 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105847568 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177099468 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111687567 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124575194 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149939047 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098232395 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078525057 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100678762 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138092509 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102658569 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141971177 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098193445 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08629961 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107992958 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.072917346 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097811153 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12439696 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117168065 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13258712 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111892102 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130018797 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075448327 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114698041 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11795747 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120220759 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063209801 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118318049 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15779267 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09147341 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115090777 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148770669 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077859679 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122095969 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318439553 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143817792 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083283568 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10764318 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116603184 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12630324 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11795592 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137708169 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107946552 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131976489 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107039536 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083374212 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08542619 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095041773 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103503798 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093654947 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10470028 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112482429 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093125607 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129401906 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101699878 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107428796 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115870726 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.094434591 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088178861 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094997159 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171562184 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116914973 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167997188 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096368639 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141247753 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160315581 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073259192 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077736757 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076675638 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136866167 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082677111 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127491066 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096085664 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103563813 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121657752 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138300772 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093233866 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067622624 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106228883 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130727029 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109882166 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096968619 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102620799 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159603587 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098380844 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077711093 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110981944 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101980395 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099678222 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312308276 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06133091 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095431221 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075516272 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079217766 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125482338 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151314045 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078685887 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101423522 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1180775 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108369313 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124796003 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099396682 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097332934 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112352399 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146779414 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125972476 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087524035 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109614534 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127331802 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170575882 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102777471 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093460308 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167779953 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148562662 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157520948 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087066359 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111602982 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111590787 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108659372 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135727537 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081516568 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160310165 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080044721 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133015644 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101879073 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088209745 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126917246 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097092294 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08681881 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144366062 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115543533 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081379156 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076473278 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115578606 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118112756 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10479972 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073981229 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136294455 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071867386 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12918076 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164470606 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079439397 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101905549 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238757242 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078387435 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106556184 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101012422 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087899797 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097362911 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170146277 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086487273 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146557592 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138922789 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111634772 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134191326 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098017092 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.633468894 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076178391 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147767544 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11442119 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169384339 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095654771 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11488071 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106434396 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120667967 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141822183 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103270858 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17637563 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129407008 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114477271 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078966506 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100387042 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101639623 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087366024 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102854367 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111200485 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114251905 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092141425 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113583166 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120803481 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080221155 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093481312 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152484091 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114616695 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141449406 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137551802 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083572615 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115573834 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135556261 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077949789 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118589854 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147415499 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103271392 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095791836 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078268344 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.243808693 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16796797 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07260267 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15929909 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117569691 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107819735 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111501972 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111554611 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128151802 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10563395 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118790029 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091887661 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108408616 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110192546 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079569273 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076268836 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102359744 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110064518 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095840702 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096614203 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097023767 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148302646 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.069619994 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093433033 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101199385 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141908124 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171530561 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086199598 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081390749 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116260958 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111051078 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11100487 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118364803 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077960645 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08057779 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080165915 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076148359 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106373335 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110095908 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101908896 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108939175 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160759584 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.080689599 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.220790056 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09335133 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103001728 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068535675 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076659451 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093602 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095571126 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105973698 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09866217 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166868026 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092804587 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087713957 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090638357 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071871833 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081118606 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.268927246 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108661218 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117788268 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095364573 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061856441 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107181423 seconds)
  done (took 57.794861758 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.106512828 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081283926 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09602994 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150106678 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121064969 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210441121 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15655754 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197283839 seconds)
  done (took 2.789539733 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067492819 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.092307101 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098391842 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081194239 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065637185 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06686614 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22132332 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078540481 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06561518 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.086795687 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07695534 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067713471 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.393892778 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066696454 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066561135 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061776252 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067990852 seconds)
  done (took 3.388497592 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.37084036 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.36151424 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.367673848 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072288716 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.669971095 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087286606 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.077735207 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.094064764 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.069337909 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.269325678 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.70046192 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.090988743 seconds)
  done (took 13.903640496 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074401348 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068470586 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.081958203 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082473917 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071188478 seconds)
  done (took 2.046580591 seconds)
done (took 102.162622984 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078042981 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.290586239 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052128915 seconds)
  done (took 2.039964215 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081104289 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.082721028 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.082471382 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081257218 seconds)
  done (took 2.00557881 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073208755 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075036498 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.082982599 seconds)
  done (took 1.904943321 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.218545304 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.13755536 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085168195 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080680992 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076552462 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077320618 seconds)
  done (took 1.914248134 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070842695 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073899678 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070837707 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075396927 seconds)
  done (took 1.966120996 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075255359 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051347577 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054078552 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.054804427 seconds)
  done (took 1.910833229 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084077735 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077901826 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076940038 seconds)
  done (took 1.915532976 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104672788 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.083412868 seconds)
  done (took 1.864574406 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080612431 seconds)
  done (took 1.759051327 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09707599 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.111325841 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.125049027 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.106573977 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.1343954 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.106731555 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084148634 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.084808198 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07544148 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085246342 seconds)
  done (took 2.688245395 seconds)
done (took 22.157216922 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077592024 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363670694 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359621788 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089529387 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669097311 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355316412 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.984592658 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090578941 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118896624 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066438592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082606711 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648639153 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.013656364 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.318000976 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.000678248 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322400429 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648996223 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066893199 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066472322 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066684566 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.972416408 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066104209 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06628539 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066968596 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648097016 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370151497 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066758426 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322692648 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066251703 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06814755 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353459706 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06689753 seconds)
  done (took 16.2098557 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069544251 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116414353 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07269733 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082522965 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069933314 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06855957 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070353026 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067724979 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123670188 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066713895 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083437532 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067171836 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071120502 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067565736 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085747674 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067109378 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067583041 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067452909 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06721898 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067187483 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084786002 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066642282 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066958879 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06744043 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066931884 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078474328 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067021347 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067127387 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067563915 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069188987 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069875921 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067544009 seconds)
  done (took 4.04889636 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113654795 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123120371 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072707392 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101632753 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110081489 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069052688 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141771262 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09144004 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125221896 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066858598 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08323297 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066795291 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099541922 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067710034 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086158188 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067456125 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067727279 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067471554 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067598155 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067504151 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085823636 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066644439 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067283173 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067637624 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067080625 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079627406 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067544485 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067176488 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068141707 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06934192 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070402098 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067460763 seconds)
  done (took 4.291515339 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071553927 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074533307 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081253468 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083161165 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068927161 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070742336 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071967165 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068505421 seconds)
  done (took 2.284107158 seconds)
done (took 28.518756265 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077190853 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.0681082 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07123495 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079689447 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071537494 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077395761 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065900222 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073025007 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070779736 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071774277 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073743331 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066531951 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069986321 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066791186 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072444035 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066857328 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.077896868 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070382534 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078458213 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078095774 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069100523 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072203367 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072782876 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078014889 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077428143 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07759696 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075666493 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071918264 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068130292 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069421804 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075515622 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082487209 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067240491 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.07786502 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066860021 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066795851 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07042111 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067048351 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.077812084 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07527905 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068257908 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074541955 seconds)
  done (took 4.723554286 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086129491 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089352731 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083596918 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06063764 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066379533 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06381672 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087357828 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058724579 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059165666 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086627084 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055289683 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05836539 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061973536 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053163513 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058434959 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055861108 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061077145 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.0549354 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058267756 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058431161 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057189257 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053787803 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059316081 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064332793 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055788851 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061592072 seconds)
  done (took 3.370692607 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073004603 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082854884 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086793396 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124380282 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.101554206 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075513559 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076189169 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.085976595 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.083714448 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065829721 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069861195 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092198948 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086018202 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.083526758 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066428048 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082129019 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080420854 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068015152 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071899193 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089027431 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083141597 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.076494664 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.090856658 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.078916047 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065872209 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068365959 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070017643 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.07965667 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070762851 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.074579633 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069822484 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069447637 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.067946217 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077328186 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07043229 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067794075 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087908056 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075550021 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076865949 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066687809 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069255159 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067663148 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.087624201 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12075837 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065570105 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072979498 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073945981 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07531919 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066151082 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084801077 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076706127 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066051487 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068761997 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065345642 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06649824 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078822134 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068342819 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068728239 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.074724802 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069005991 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.078524225 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070059364 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081376611 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065741632 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073991743 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06585536 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067083428 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065554067 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091142636 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.067919036 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.106399138 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067393585 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067475691 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07481017 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073777853 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072257339 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066761105 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08103716 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076252035 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070311959 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07487216 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069289503 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.068988329 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.085950069 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068780428 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067763384 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067007682 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072021105 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069078218 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067730743 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079183937 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06646697 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068927272 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082613013 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066318585 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067895268 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071805201 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070856208 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066080484 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077312765 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071263837 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067214668 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075450033 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066286919 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069345 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076553803 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072613912 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065635307 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07060589 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072452392 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066994393 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068049867 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069705973 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06831162 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075618259 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073019235 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070666817 seconds)
  done (took 10.43692172 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.156838653 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150616973 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.06986513 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142404246 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075246046 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077862319 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144121231 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.092797394 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066557303 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066902053 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068017161 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113135155 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10363552 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121243569 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07687591 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066370745 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.081573017 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115155261 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145913042 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.139977036 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.081742697 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075531815 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068348876 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067752503 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073529307 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080618379 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090054064 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075046906 seconds)
  done (took 4.423761475 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079255061 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.09922275 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072374159 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087045413 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089098078 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066771236 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068700198 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068242802 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.07906748 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077111948 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066257748 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072192134 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073353755 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072466301 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067632141 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073356264 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073660553 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06842821 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069784306 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072232113 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076040702 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079481315 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070954382 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066230776 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073065516 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065912699 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063224342 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082874252 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067260192 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088966129 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064851828 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073638357 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080333551 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068286034 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067196341 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06772455 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069136961 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069048158 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070962786 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067769534 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067649347 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059102061 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068646399 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080728782 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075606752 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.058151244 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07324156 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073850642 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072641702 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064504317 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069721532 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069438127 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069752937 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073585239 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071500259 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071804409 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067572638 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.064909938 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074266983 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066468248 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063744941 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06523018 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071312844 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064606645 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074328603 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070830717 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065187862 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066381417 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068245024 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072515183 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066603063 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070091458 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064320594 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068265076 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07101731 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068419644 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067548376 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065295673 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066260139 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066642893 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054571117 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066173889 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052857805 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069218154 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064394425 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065289417 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066471506 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070881296 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078339131 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067701229 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072261456 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06712206 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065758931 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069472381 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059468703 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069139748 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081380469 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080827011 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066500312 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064297407 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080853746 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070950873 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065215345 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055311784 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07365793 seconds)
  done (took 9.10761926 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.092828499 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087166697 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069002759 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082013345 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.089767829 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085982877 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073689845 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075422479 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06838456 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.080947695 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072089772 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075298074 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067128573 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075745471 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.09246407 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075713695 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068477044 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075432922 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070461424 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100433098 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081290559 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080432925 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.073492942 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066879176 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074957158 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078685117 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088198511 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078884052 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077010978 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.073940696 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078760225 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088731322 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.072907262 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.070645419 seconds)
  done (took 4.405097445 seconds)
done (took 38.156261892 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.788760926 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.028511126 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.780412271 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.151356274 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.861335566 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.9324703 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.786352041 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.774161131 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.921582134 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.814913999 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.011520559 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.813444843 seconds)
done (took 65.382611798 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.81838899 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.915422667 seconds)
    (2/2) benchmarking "String"...
    done (took 2.047862702 seconds)
  done (took 5.68135843 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.12753746 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.306794445 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.020193736 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.772413634 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.779408442 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.082323558 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.581125217 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.298829535 seconds)
  done (took 30.558460821 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.01997703 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.981169287 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.456052647 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.499587723 seconds)
  done (took 15.724605319 seconds)
done (took 63.709023931 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.791174871 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.797181159 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.791384313 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.759379172 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.829853066 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.78421844 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.871149965 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.970496599 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.768502908 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.756056667 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.769443692 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.19812566 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.765510379 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.869787293 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.765519147 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.763163757 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.819561658 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.184399581 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.920643121 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.778151781 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.782842008 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.785404475 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.767116534 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.76479602 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.784876251 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.762983051 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.184716352 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.778367902 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.560106088 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.765754057 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.805273953 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.077801363 seconds)
  done (took 204.490637399 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.763273427 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.62902189 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.732564321 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.775177209 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.15883672 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.956676892 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.901599253 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.180858024 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.765770309 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.786059903 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.94121335 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.764316654 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.97224826 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.711866152 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.770089018 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.768473462 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.93835733 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.975625548 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.759671548 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.001165976 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.753675625 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.766402558 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.721451185 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.902626968 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.796623431 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.788411034 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.771303243 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.758300477 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.946958661 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.89384238 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.799814426 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.775794713 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.966541585 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.625753616 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.765544476 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.763104369 seconds)
  done (took 168.757475176 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.125579992 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.753234484 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.752371634 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.754264871 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.759408988 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.753271171 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.753733467 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.878806053 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.885554552 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.20626651 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.297868694 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.80410628 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.588307796 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.754747426 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.819848883 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.766459263 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.75562508 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.766316471 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.778662688 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.751631893 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.75228336 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.876846138 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.763457303 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.915831624 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.756974395 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.750655081 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.758431414 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.119715188 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.750923384 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.75614929 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.99334299 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.751808549 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.75046985 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.646166872 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.146992699 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.754214522 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.831223392 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.75039012 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.754258356 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.748849421 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.969376738 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.749548228 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.74952815 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.75096952 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.931625585 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.749012349 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.871955382 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.747057855 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.252711457 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.750496765 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.745647466 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.528413143 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.431254468 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.747940959 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.744338473 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.744605431 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.746943885 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.745058333 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.744418581 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.750589516 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.486779559 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.818290527 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.745868902 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.748884421 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.750447008 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.744225778 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.836016536 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.746961676 seconds)
    (68/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.743041756 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.798509691 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.965782018 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.371456211 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.868991354 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.746513655 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.811001573 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.838145472 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.743880777 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.741739307 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.741783092 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.741795909 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.82290615 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.743814859 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.860819866 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.748797042 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.743412903 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.790076075 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.812485299 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.743011683 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.632138167 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.745216648 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.743963643 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.07249745 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.811851719 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.741150743 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.742119258 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.742054137 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.861554603 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.874674932 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.513186196 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.744368353 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.457031276 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.744678496 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.870961386 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.741265938 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.934676225 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.744815912 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.822165006 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.74490579 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.741407159 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.740341339 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.770683782 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.740761661 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.797474183 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.744862778 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.11066284 seconds)
  done (took 400.253597019 seconds)
done (took 777.401434647 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.42140253 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.390388043 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.501593944 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.417011206 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.394640015 seconds)
  done (took 13.807341413 seconds)
done (took 15.491021273 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.828396529 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.830432087 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.764765681 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.828962956 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.761554378 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.829223441 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.811337322 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.766140603 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.796528503 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.765514923 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.797084171 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.767126257 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.752992885 seconds)
  done (took 24.982581036 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.97834835 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.995317788 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.812880987 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.981358524 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.78862202 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.96911875 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.908986088 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.894455208 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.893380749 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.757623277 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.754699511 seconds)
  done (took 22.418157574 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.977306143 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.981895296 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.817249807 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.981702921 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.791211018 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.982754438 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.90820187 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.895886155 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.896498721 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.756656839 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.754489896 seconds)
  done (took 22.426715896 seconds)
done (took 71.510917967 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.749711169 seconds)
  done (took 3.434449694 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.773249524 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.907514803 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.754418175 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.755380874 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.749728194 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.751540723 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.755529498 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.74946408 seconds)
  done (took 15.881118588 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.746937007 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.749574087 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.749054504 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.746782829 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.74896235 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.747649306 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.751138883 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.747724638 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.746500312 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.746861786 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.747045985 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.750913261 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.750094919 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.751204287 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.750262457 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.747008997 seconds)
  done (took 29.662635962 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.752123693 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.747758987 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.746765344 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.748499753 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.74716693 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.747503721 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.750245754 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.747652715 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.747899283 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.747386426 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.748354421 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.747733911 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.748513799 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.748646078 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.74799023 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.748018549 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.74806628 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.749170869 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.752153446 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.748458478 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.749095876 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.748361842 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.748871837 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.750872183 seconds)
  done (took 43.654478752 seconds)
done (took 94.316245655 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.522486858 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.436350302 seconds)
  done (took 8.64417633 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.758285546 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.757167211 seconds)
  done (took 5.248997557 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.757441311 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.758445528 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.757722136 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.758144032 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.75777445 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.757851347 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.758719826 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.758874281 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.758382089 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.758945845 seconds)
  done (took 19.274612709 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.758117228 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.758893914 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.755898546 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.758451539 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.758698043 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.756914467 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.759765231 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.759471508 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.758582117 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.756359532 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.758665522 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.756622632 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.760241738 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.75630088 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.758789238 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.755943815 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.756110915 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.75632408 seconds)
  done (took 33.332348018 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.759655525 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.758957919 seconds)
  done (took 5.211122327 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.756678418 seconds)
    (2/7) benchmarking "second"...
    done (took 1.756700832 seconds)
    (3/7) benchmarking "month"...
    done (took 1.757160927 seconds)
    (4/7) benchmarking "year"...
    done (took 1.756640801 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.756872147 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.756714089 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.75663031 seconds)
  done (took 13.990307693 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.760291549 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.919746447 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.989415852 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.448569985 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.760296597 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.763870094 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.698260691 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.763102454 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.764054016 seconds)
  done (took 19.561403457 seconds)
done (took 106.948676214 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.596927419 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.756517548 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.102386808 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.820642711 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.810400996 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.05252122 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.768987705 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.977104539 seconds)
done (took 42.57970162 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.795479395 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.227503421 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.234982292 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.452920489 seconds)
  done (took 11.610623471 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.739501118 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.274980644 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.799126695 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.349098067 seconds)
  done (took 19.869058191 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.125573872 seconds)
    (2/2) benchmarking "read"...
    done (took 2.131344698 seconds)
  done (took 5.956016544 seconds)
done (took 45.926581957 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762100226 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.761866507 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.758638837 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.760065384 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.758456224 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.759552424 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.75858765 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.761618158 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.7618867 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.761420981 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.761273527 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.76292115 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761765094 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.759167691 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759540323 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762169995 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.75972849 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760548982 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.761634834 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.760469494 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.760341714 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.76154412 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.76082957 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.760109382 seconds)
  done (took 43.951742605 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.762665012 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.760322284 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.762434312 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.765332791 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.760593932 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.76302109 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.763633876 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.759686934 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.762765298 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.763901239 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.761446331 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.761528212 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.762689554 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.760254356 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76443491 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.760714824 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.762908284 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761030006 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763658522 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.761684089 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.764768624 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76089218 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.761369591 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.764426591 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.76116453 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.760827376 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.764306058 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.762071198 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.764017134 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.761306858 seconds)
  done (took 54.566120695 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.769833815 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.770607529 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.764386077 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.764676274 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.763780738 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.765227103 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.765602511 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.763555173 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.764930281 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.764113121 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.764791631 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.764660264 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.765122108 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.763483576 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.765086719 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.764898154 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.765576485 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.76514352 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.765463317 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.765140773 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.765561404 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.765727421 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.765459885 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.767330397 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.764958602 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.765361584 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.766137351 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.765305108 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.766066273 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.766354538 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.765869914 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.765648232 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.765996436 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.766474798 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.766889454 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.766077775 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.769895571 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.772844027 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.764990176 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.765716356 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.766740486 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.766371872 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.765703116 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.766984916 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.765926511 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.766418806 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.76688439 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.766439362 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.766496194 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.766236285 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.766612425 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.767493692 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.767082232 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.766849084 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.76663409 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.766851282 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.766741197 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.767838422 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.76663988 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.76566436 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.767516512 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.766483113 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.767368158 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.767931521 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.768095687 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.767390203 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.767867325 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.766663911 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.768285081 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.768005525 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.766624077 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.76803132 seconds)
  done (took 128.878038783 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.767616381 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.766642207 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.765568385 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.765636288 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.766258125 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.768157764 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.765345142 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768621397 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764995228 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.768124135 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768268209 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.765285766 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766784417 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.767350344 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768344866 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.765557406 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.767766463 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765672369 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.770331202 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.768291378 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.767754425 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.766112149 seconds)
  done (took 40.576732564 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.76861046 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.769480955 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.766108098 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.768559476 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.766206879 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.76916749 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.770422692 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.769072134 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769618734 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.766154009 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766142426 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768973962 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.767967852 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766851655 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.766165746 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.766512159 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769728706 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.76692741 seconds)
  done (took 33.525436979 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.76611496 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.76760884 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.768579924 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.766907613 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.767860096 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.769989209 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.766956664 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.770394712 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.769930719 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.766991161 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.771449921 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769543787 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.769693263 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767819708 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.769760995 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.767968379 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.770720881 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767259562 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.770279982 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.767713037 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.767454989 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.770890311 seconds)
  done (took 40.61581133 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771090629 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.771805182 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.768446119 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.767716982 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.770195444 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.771000777 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.77106165 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.768132828 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.770650033 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.771063154 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770000607 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.770543384 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.767871928 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.770021408 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.768270216 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.769086803 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.771338654 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.769633907 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.771758117 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.768988283 seconds)
  done (took 37.103102817 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.773303471 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772641597 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.771790788 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.772335525 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.772593009 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.773022026 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.773397792 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.772665567 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.772743464 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.772347887 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.772222097 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.773552453 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772595033 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.773058005 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.772459906 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.773375986 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.77377652 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.774554437 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.773161365 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.772112234 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.773683084 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.773202657 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.772728617 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.775752765 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.773652505 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.77370893 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.773460262 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.773317785 seconds)
  done (took 51.353837382 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772998646 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.773638087 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.771184142 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.771184946 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.770745402 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.771707396 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.771321563 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.772034749 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.772875647 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.771315825 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.774196613 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.773984419 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.773810495 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.773599137 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.773227688 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.773567336 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773949296 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.770974648 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771218795 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77080336 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.773132556 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773931688 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.774590667 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.772773087 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771817261 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.773615468 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771142074 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.771521805 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774361086 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.77237298 seconds)
  done (took 54.886261155 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.792950139 seconds)
    (2/2) benchmarking "in"...
    done (took 1.793502312 seconds)
  done (took 5.293792712 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.772233524 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774591917 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.775789302 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.772870065 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.772435676 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.777370058 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.775812484 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.77293119 seconds)
  done (took 15.902811945 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.77534257 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.775174913 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.77575524 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.775329032 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.775422516 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.776810562 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.78315681 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.777263991 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.777510821 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.777002936 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.782224296 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.783757896 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.780064156 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.777178276 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.776774602 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.777253183 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.775199838 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.77572703 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.77672791 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.775909035 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.776957138 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.77831544 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.778352283 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.773975546 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.778992829 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.788353237 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.782338753 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.775904303 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.778151164 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.782539194 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.78039814 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.774093415 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.777369751 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.777060921 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.776919162 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.777763054 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.786491224 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.777919133 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.785194815 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.777041328 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.777581643 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.776368212 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.778363277 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.781349031 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.77901593 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.777270207 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.778081696 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.774722686 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.777833126 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.780425245 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.781399741 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.77640389 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.775181469 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784453089 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.779223942 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.785253847 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.778746902 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.780865246 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.787103218 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.789367317 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.792296043 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.785818606 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.779767493 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.780006231 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.788067301 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.800682357 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.787685733 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.775785616 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.775397658 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.77956781 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.787739264 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.795178226 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.788001306 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.779807109 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.780142153 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.780107768 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781271873 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.779521504 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.787983041 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.783669704 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.781193104 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.780587595 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.789198503 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.800515738 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.780109117 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.781331765 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.781450142 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.779512592 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.781447081 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.79137325 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.780217707 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.781575373 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.780542767 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.780338074 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.782851381 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.780170124 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.779098642 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.782118338 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.777411711 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.780517894 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.780898822 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.7835744 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.789697559 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.781724123 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.781283342 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.788402881 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.780844828 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.780942623 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.791349351 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.780710498 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.781608351 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.782466622 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.789321663 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.77773692 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.785311463 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.789600951 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.782602571 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.784038628 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.781472425 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.781564372 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.790086886 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.806598468 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.781970083 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.782116856 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.786797113 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.792986995 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.782732353 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.785623163 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.782169992 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.779829318 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.779443303 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.784653663 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.78231694 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.784155566 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.782126702 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784127446 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.779865213 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.781968809 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.782703394 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.783843717 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.785316239 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.783545625 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.785062959 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.78650042 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.783088365 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.785605609 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.790697274 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.784943827 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.784093859 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.784759421 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.780518215 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.78377578 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.785006899 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.785216168 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.78470648 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.783580175 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.783842723 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.784206198 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.783814292 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.784150761 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.783951377 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.784797014 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.787049379 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.784111942 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.790181566 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.784145503 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.780804472 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.783512333 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.784696305 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.7840826 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.784372105 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.783168595 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.78697692 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.791895471 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.783920385 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.785448402 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.790684662 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.784669082 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.785897957 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.785000298 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.787135783 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.792605088 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.785873708 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.794080695 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.785433677 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.785271675 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.784885655 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.786998317 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.785225811 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.786426186 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.78888097 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.792770277 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.801903502 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.794079182 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.786343907 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.789511055 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.787486503 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.789661098 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.792937129 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.785348319 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.78566105 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.786568551 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.785323709 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.787615811 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.789009628 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.78567974 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.78558774 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.786094933 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.785997817 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.786606698 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.786155825 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.787580447 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788766357 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.782769092 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.785918478 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.787011848 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.785613227 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.783921274 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.785569903 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.786610965 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.787864483 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.787997702 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.796109359 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.784164362 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.78916066 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790013767 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.78935238 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.786809134 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.786879965 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.790230114 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.787156149 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.795334718 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.788814279 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.789156117 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.79454915 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.787717804 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.788138196 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.79215956 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.788382201 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.784884382 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.791224788 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.794997418 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.788849149 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.789016942 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.789368063 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.789209343 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.788813298 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.796262087 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.786477316 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.78855994 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.788226953 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.791736648 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.784579433 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.789639267 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.790869697 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.789606113 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.791576917 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788899887 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.788883257 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.791833304 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.789722034 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.788927738 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.790479796 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791796706 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.796612745 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.795372319 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.790469315 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.793378627 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.789849617 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.792275112 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.791112173 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.790251892 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.789685371 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805711635 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.797541086 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.798597425 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.792686155 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.790179947 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.79669429 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.791083029 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.794408063 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789998246 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.791488541 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.791257073 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.789555056 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.787514942 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.792038051 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.791795628 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.790828225 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.791635961 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.793714835 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.79022447 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.789902831 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.792264241 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.791107347 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.790704789 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.790754616 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.789999875 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.796234986 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.794249371 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.791500223 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.791786554 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799653824 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792137872 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.794525584 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.791699064 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.791929648 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.791523881 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.792878684 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.792107051 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.795660651 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.79945776 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.794121513 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.801969767 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.7937228 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.803361113 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.792046858 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.794410489 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.798946649 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.78935516 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.791785328 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.794211195 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.792407377 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800618268 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.793142214 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.793185715 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.798215241 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.793177145 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.793225582 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.791796131 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.792977444 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.791624074 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.793440097 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.802267934 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.794245216 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.796894181 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.794820939 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.791607807 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.794024669 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.792901344 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.792775307 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.799993741 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.793191809 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.795080812 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.793008365 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.795468162 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.792382057 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.79349301 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.793560291 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.790406391 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.792930238 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.801478497 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.794228748 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.798881001 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.795474363 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.804829416 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.794584067 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.803055435 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.794539604 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.794421477 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.795225001 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.794513323 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.797266423 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.794716 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.796817726 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.795398842 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.795640356 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.798247047 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.795922288 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.798110829 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.795024891 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.796557602 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.795105102 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.803759472 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.816824543 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.795694672 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.797919805 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.79177311 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.796228457 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.799285979 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.795494694 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.794557392 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.798234225 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805634613 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.802338646 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.796519037 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.796472797 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.79747618 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.795591402 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.795443875 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.795504094 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.795887029 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.795609216 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.798283137 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.796097739 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802100298 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.796369286 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.798189495 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.798487606 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.798402737 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.808432176 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.796795838 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.797273436 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.796515352 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.796771213 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.798293831 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.797030165 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.798234818 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798964792 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.797372393 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.799495001 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.802601115 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.803226165 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.799272821 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.797289875 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.798048688 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.797827586 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.799473142 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.797680688 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.797370502 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.797798509 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.798713372 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.798134609 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.800795721 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.797078545 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.797146154 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.79973717 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.797882193 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.80004845 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.805092224 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799189113 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.794879701 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.797711195 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.797938793 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.797079888 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.799350632 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.808693159 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.800746328 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.808061125 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.806360378 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.802147014 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.799623849 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.800715024 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.806710491 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.797542213 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.799570535 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.799226903 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.802019381 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.799188951 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.803393139 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.799393389 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.807173632 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.799251555 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.799532276 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.809824897 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.800493484 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.799734881 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.801030327 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.804625249 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.80017777 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.79784575 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.799883193 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.800054728 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.807842556 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.80403158 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.800737125 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802325673 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.799020484 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.801831228 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.805066573 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.799835403 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.802404974 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.797872295 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.801057828 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.800634569 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.800977687 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.797834935 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.801320363 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.801103973 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.803481415 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.808087911 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.798208224 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.803006957 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.801657187 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.80239338 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.802259633 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.800330823 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.798702479 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.798212562 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.80102305 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.801374693 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.801985668 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.804716786 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.803435659 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.802301433 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.802509027 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.801461193 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.804504956 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.810925869 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.808319676 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.798268995 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.801028058 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.802449601 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.80551748 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.802480741 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.802218147 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.802478969 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.804856103 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.80185601 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.801654995 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.802197869 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.80477326 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.819117837 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.801700999 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.802926698 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.803798845 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.808226982 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.801858288 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.799221301 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.801934511 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.806204354 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.806617539 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.809869607 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.803664484 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.810346007 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803719236 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.804654708 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.80589365 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.805808949 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.811417838 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.805860055 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.803211785 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.803077679 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.808631195 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.820332011 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.803803777 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.814082532 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.833279253 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.804112781 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.805230491 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.804297191 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802977159 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.804317987 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.807484594 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.8035285 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.803615331 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.80367066 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.80427303 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.80553651 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.809919317 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.806574278 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.803832818 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.80401112 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.805177842 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.808368484 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.801633962 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.804828104 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.804164932 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.804159214 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.805097475 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.805430501 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.80502211 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.81961664 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.815702975 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.803779047 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.806009006 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.802022159 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.809742906 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.808185758 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.814670722 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.812097172 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.805887915 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.80558897 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.807477454 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.806357251 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.80152098 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.806452075 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.80681119 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.805769047 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.802645196 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.820403951 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.813720333 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.813957142 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.806973435 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.8075104 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.806199 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.809334828 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.808326361 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.808038661 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.809814552 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.806750664 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.810755692 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.806743433 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.807949562 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.810298924 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.814901104 seconds)
  done (took 1070.498927962 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.804078594 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.80602311 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.804787828 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.803341538 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804385049 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.805310439 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804733355 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.80557885 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.804486422 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.804219535 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.804787386 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.804748991 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.804811797 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.805604949 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804831868 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.805360752 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80415535 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.8046714 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.806053283 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.805596001 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.804560704 seconds)
  done (took 39.641352672 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.806701737 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.80572127 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.804434247 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.806915531 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.803980222 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.807988566 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.804863413 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807583237 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.807980522 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805227056 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.807677224 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808710075 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.805649616 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.805216843 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80557284 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.808823002 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.809421097 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.805729081 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.809143239 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.806128369 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.808366799 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.806563773 seconds)
  done (took 41.488471895 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.809542231 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.809667864 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.808169048 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.806829863 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.80948335 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.807154375 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.812258888 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.80925296 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.810015762 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.810811105 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.808811264 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.810129879 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.816299132 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.813570928 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.812524235 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.809892657 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.953534571 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.810851873 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.809975325 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.811262125 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.807591826 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.817313195 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.808095807 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.808673622 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.808463563 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.810147308 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.809593576 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.81026639 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.810305299 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.810856532 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.814192263 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.809860903 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.810912356 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.81236324 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.810775678 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.811682494 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.815224173 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.811626927 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.8076087 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.810609551 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.820664493 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.830099345 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.810554511 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.819979861 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.810860583 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.811810734 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.814881567 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.818435707 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.808643825 seconds)
  done (took 90.654798144 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.811710387 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.811337853 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.809034778 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.811285378 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.81162048 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.811549013 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.812484598 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.812134251 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.808516048 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.80886151 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.812981537 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.808446597 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.808759904 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.811827364 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.811560595 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.80756385 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.808592494 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.808867816 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.808512303 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.80894631 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.809355236 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.811474569 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.81137388 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.809126112 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.810489642 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.808838674 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.807933184 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.811056336 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.809193135 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.808601299 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.812030879 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.811208184 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.811844024 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.810233639 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.80964185 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.812412308 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.812381575 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.809715318 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.811986419 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.811273089 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.812372838 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.812027823 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.813389076 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.812547658 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.81053044 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.809971271 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.808821561 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.80960324 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.810055207 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.812099676 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.814000393 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.810156848 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.813665845 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.810458235 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.813632351 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.81349229 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.811410746 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.810565697 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.81265225 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.811053867 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.810126578 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.81427342 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.811263852 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.813493539 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.813335515 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.811163496 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.812631893 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.813408582 seconds)
  done (took 124.89293115 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.815113133 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.814253725 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814544294 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.81601086 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.814155149 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.813746842 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.813938708 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.813994546 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.814684798 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.815556034 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.814530668 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.815357979 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.816018634 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.815846683 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.816025168 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.815955858 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.817052341 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.81593999 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.817064984 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816068615 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.817037938 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.816353007 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.816366102 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.81699581 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.816945711 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.817516297 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.816495809 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.816424707 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.817040267 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.816861616 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.817056545 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.817288295 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.81830915 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.817687979 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.818366859 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.817443441 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.818279894 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817773282 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.817796377 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.817961968 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.817607141 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.817168919 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.818486444 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.817551258 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.817889715 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.8188015 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.817175175 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.819439393 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.819614055 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.817168155 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.817861891 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.818019603 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.818251763 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.81864546 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.818018248 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.818149132 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.818180659 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.81805433 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.818936444 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.817893733 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.818402728 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.818178611 seconds)
  done (took 114.39964568 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.818320651 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.81881709 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.815014474 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.81648125 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.818252411 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.815139206 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.81791209 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.818337594 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.818449095 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.818634628 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.818053183 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.815961703 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.816676452 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819152783 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.816269 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815855953 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.816892525 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.817520552 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.819852639 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.817331279 seconds)
  done (took 38.099645256 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.816322157 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.819981004 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.816870982 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.817308396 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.819770111 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.816582505 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.819378859 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820457612 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.817558942 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819517416 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.82004508 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.820804005 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817768873 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.818373383 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.821128353 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.817088872 seconds)
  done (took 30.849981854 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.81850246 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.821126812 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.821562945 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.820306388 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.817526434 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.817661545 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.821245747 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.818799324 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.818149886 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.822434774 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.823619502 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.822154814 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.822824947 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.822287009 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.819314874 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.821421632 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.818678748 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.818166542 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.820838136 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.821884058 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.818811626 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.818076549 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.821610449 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.822290449 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.818942063 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.81924146 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.819203707 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.821228655 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.82198466 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.824210275 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.821433753 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.820930634 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.819966097 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.818941721 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.822917496 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.818873953 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.82209331 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.821142459 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.823037444 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.823264126 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.823624631 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.820796817 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.822134731 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.8219557 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.8195847 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.822609543 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.82054108 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.820412455 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.820832298 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.820615747 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.822682292 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.824423819 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.823420873 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.822719795 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.823608753 seconds)
  done (took 101.911648811 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.822940825 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.8232959 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.821391158 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.823124818 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.823514391 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.822093655 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.824487727 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.821689292 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.821672726 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.824319519 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.821400852 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.824056606 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.820632174 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.823290064 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.822783922 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.8247963 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.820461839 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.822294114 seconds)
  done (took 34.564111079 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.822219253 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.821334348 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.823842561 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.822440293 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.820846645 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.82481696 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.822058081 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.82405124 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.824387668 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.822308861 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821694195 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.824961033 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.823999203 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.824225486 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.822982745 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.822394086 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.825715033 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.824865507 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.822529346 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.822084979 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.825671604 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.825051664 seconds)
  done (took 41.871333416 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.824917047 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.824017404 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.843209624 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.867567872 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.855503703 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.824830559 seconds)
  done (took 12.798000758 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825106158 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82666893 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.822692966 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826295378 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826425936 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822479157 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823694442 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822929745 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825493867 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824628766 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823529905 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826017432 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826037314 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823174342 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826567948 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826138727 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823384456 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824034523 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824330117 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826887019 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823824388 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827652944 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824027312 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824182381 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823815034 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823569955 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827467738 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825000534 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82416792 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82664707 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827759803 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824559174 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826441561 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825109463 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828118965 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827812264 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824347802 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82772529 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827749997 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826252853 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.82752515 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827551509 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828023795 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82521517 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827539952 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824729229 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824852135 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82533984 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824827038 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827984023 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828128754 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825556423 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827866236 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828644849 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828784979 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82967477 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825809571 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825246103 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828553151 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826990517 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826258261 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828906505 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826435379 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826339086 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829411587 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82663755 seconds)
  done (took 122.276046008 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826685423 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.827262594 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827676672 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827767231 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82705509 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827743219 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826853685 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827343705 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827233559 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826253134 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829326753 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825915825 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827467649 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826654984 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826982142 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827284972 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828153369 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828666412 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827581163 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830387809 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827320999 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828306274 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827649758 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827373904 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827945955 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830165285 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82789424 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827167027 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827984722 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828398536 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827902392 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827118377 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828531174 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.8276436 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828568861 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82797447 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828599915 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828199489 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828169079 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830696836 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82855816 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83181263 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82899144 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829488566 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829526105 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828756011 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828319261 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828418113 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82990021 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829439112 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830204153 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828985435 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830048381 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829268091 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8295065 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829461693 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829186874 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829889762 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829497482 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831798621 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829259976 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829619089 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832276115 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829636801 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830064385 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830663703 seconds)
  done (took 122.450090769 seconds)
done (took 2494.7463518 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.833735606 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.903322458 seconds)
  done (took 15.501232583 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.994890084 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.945294279 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.831511459 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.852378634 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.83109742 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.853842448 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.847985719 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.831019297 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.830961077 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.831381959 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.831814291 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.017289013 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.826313094 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.832577208 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.832085849 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.926064835 seconds)
  done (took 51.683696828 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.834247693 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.835974094 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.846557064 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.837672622 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.835755486 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.846345502 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.867203082 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.838702253 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.868186477 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.857302439 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.903048715 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.844027021 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.835844782 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.883296924 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.845958492 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.850191533 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.934962834 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.907660786 seconds)
  done (took 35.238613541 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.911090545 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.839052399 seconds)
  done (took 10.521085925 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.840226591 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.856010308 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.827457334 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.849734238 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.83646489 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.848937293 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.86567816 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.873665674 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.84898153 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.842809519 seconds)
  done (took 70.275829553 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.841144916 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.83618621 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.835548677 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.83494114 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.827461449 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.832527331 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.83574133 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.828678596 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.513190623 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.869100536 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.840886285 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.840667318 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.83522235 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.837236197 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.833644776 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.85678692 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.995627366 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.833578999 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.832960608 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.840709867 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.836025114 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.900360737 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.848035465 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.835442903 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.863500347 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.513954919 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.843157909 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.841264614 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.957634753 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.834768088 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.836556001 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.837509766 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.838337802 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.212220728 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.154191012 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.835265908 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.844365582 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.844380756 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.833867657 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.94606278 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.836753785 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.843473491 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.771017727 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.137709005 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.930189054 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.878402253 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.182995383 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.839917104 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.838012247 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.866153304 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.838625666 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.838206358 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.850221164 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.351103381 seconds)
  done (took 130.832756032 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.852470555 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.317928813 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.98572677 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.832914191 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.124806167 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068078836 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.833830481 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.882510388 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.853023483 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.082953946 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.009150254 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.951238384 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.83338247 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.832844069 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.836400818 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.832139224 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.981818973 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.904242257 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.8345939 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.835940895 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.869332283 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.098210212 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.95896801 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.976420091 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.857497433 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.058299502 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.959713581 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.94940671 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.837463941 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.832173462 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.900720303 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.840356123 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.834958613 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.832307483 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.999529827 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.939157464 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.929968268 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.834826139 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.881177832 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.834071555 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.862219001 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054241134 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.941286402 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.971521816 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.082542066 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.061101985 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.835772574 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.833191169 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.841245449 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.026332534 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.048310781 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.087166043 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.963661643 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.836134773 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.172846675 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.833930193 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.854209544 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.085666156 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.066913473 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.94589426 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.883788961 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.837400552 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.833681342 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.149618104 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.839506445 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.941916939 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.182343673 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.836249742 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.942912045 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.948206346 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.068614947 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.074143051 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.865605886 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.83937173 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.882233098 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.118570023 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.907167946 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087127093 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.854480872 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.836129034 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927090718 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.837068527 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.009637133 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.152233188 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.100931525 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.877392084 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.840614833 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.835048047 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.084513662 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.085606124 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.109562291 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.079718155 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.002592838 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.884477397 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.836674248 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.836327622 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.881454777 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.96828305 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.837862771 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.19646409 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.083027304 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.610381887 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.866925939 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.152353959 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.974389263 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.839431442 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.836275741 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.836861486 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.042458485 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.880513234 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.842761276 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.836438829 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.083537146 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.781698968 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.961542129 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.529451274 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.904109491 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.840177676 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.10311682 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.844335243 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08569204 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.86632181 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.149247432 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.465791323 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.881124619 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.03172412 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.08183448 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.839450398 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.101658555 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.151391083 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.961419434 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.086130149 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.571090677 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.839038063 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131034594 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.851001735 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.873433251 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.010786323 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.84574308 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.993923164 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.840448646 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.145686774 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865873412 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.009423058 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.112106292 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.114226233 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.884051123 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.890915612 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.856132753 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.973782759 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.841178723 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.860479463 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.02325735 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.933723833 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.840250287 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.403776119 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.840052008 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.988307377 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.138401455 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865234692 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.911804822 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.841693873 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.847819201 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.933109856 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.867618055 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.443100638 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.842015237 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.010924681 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.798070484 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.288444832 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.83927588 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.1497578 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.052518291 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.84190659 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.839279371 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.640668998 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.840247055 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 7.007792786 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.000966312 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.66410515 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.840297013 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058504076 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.844367328 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.973948733 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.846054526 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.842241379 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.190725972 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.93408886 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.842903849 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.848969169 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.83973339 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.83998238 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.070347213 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.869355821 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.56187734 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.979707585 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.090630192 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.152828066 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.103939719 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.891788035 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.845497279 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.106307253 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.871223749 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.909864946 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.843698469 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.866838171 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086038176 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.845846517 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.068196564 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.129824686 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.863780668 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.893110717 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.844145933 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.923625614 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.842271476 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.983061225 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938635601 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.844691884 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.842937308 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.961582493 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.967907719 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.036787929 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.843685909 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.850128121 seconds)
  done (took 947.996977376 seconds)
done (took 1263.815328178 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.842895634 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.843391847 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.831922504 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.842630834 seconds)
  done (took 29.141551125 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.846556737 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.844132997 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.844004503 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.843866865 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.84563527 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.843732024 seconds)
  done (took 12.843473793 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.890647104 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.838370409 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.840739763 seconds)
  done (took 21.345402984 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.912432409 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.246475036 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.948932639 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.285201674 seconds)
  done (took 10.168714972 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.846187882 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.845669834 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.844664257 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.846420883 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.84679138 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.848126361 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.846679033 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.847227382 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.848158453 seconds)
  done (took 18.396343424 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.036900961 seconds)
done (took 97.71452085 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.988130265 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.21255625 seconds)
    (3/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.086829944 seconds)
    (4/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.867143277 seconds)
    (5/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.91612824 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.165133626 seconds)
    (7/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.180526419 seconds)
    (8/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.141892477 seconds)
    (9/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.008975237 seconds)
    (10/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.497286952 seconds)
    (11/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.932050227 seconds)
    (12/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.897705541 seconds)
    (13/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.13085387 seconds)
    (14/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.826212135 seconds)
    (15/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.990916698 seconds)
    (16/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.841836807 seconds)
    (17/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.001938282 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.059156111 seconds)
    (19/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.979531366 seconds)
    (20/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.882959401 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.136810539 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.868456341 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.699302578 seconds)
    (24/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.747807396 seconds)
    (25/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.972734679 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.890689578 seconds)
    (27/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.948197306 seconds)
    (28/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.931802761 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.989326604 seconds)
    (30/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.947226492 seconds)
    (31/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.181644209 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.74674025 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.846189958 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.143269183 seconds)
    (35/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.972791532 seconds)
    (36/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.347729567 seconds)
    (37/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.586027338 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.871090348 seconds)
    (39/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.831885603 seconds)
    (40/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.94928699 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.481310136 seconds)
    (42/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.863516158 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.206937446 seconds)
    (44/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.058393793 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.920045039 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.943619815 seconds)
    (47/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.005185506 seconds)
    (48/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.974992562 seconds)
    (49/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.863802418 seconds)
    (50/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.184821524 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.868207121 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.00317526 seconds)
    (53/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.146307083 seconds)
    (54/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.436452514 seconds)
    (55/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.951957364 seconds)
    (56/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.337637532 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.951817859 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.103012171 seconds)
    (59/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.827109182 seconds)
    (60/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 8.488818705 seconds)
    (61/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.063290644 seconds)
    (62/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.040348065 seconds)
    (63/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.174024822 seconds)
    (64/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.870344035 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.846913811 seconds)
    (66/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.266229921 seconds)
    (67/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.738445708 seconds)
    (68/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.248465666 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.902759167 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.84054438 seconds)
    (71/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.858679352 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.493362854 seconds)
    (73/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.076057834 seconds)
    (74/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.670639136 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.875361199 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.841244513 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.432003707 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.121186847 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.635078985 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.065558621 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.203378997 seconds)
    (82/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.466475816 seconds)
    (83/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.938028546 seconds)
    (84/309) benchmarking ("sort", Int8, false)...
    done (took 4.841287983 seconds)
    (85/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.347410001 seconds)
    (86/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.929785465 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.272642502 seconds)
    (88/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.031842691 seconds)
    (89/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.434093282 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.842333349 seconds)
    (91/309) benchmarking ("sort", Float32, false)...
    done (took 7.20414586 seconds)
    (92/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.039805942 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 5.542646929 seconds)
    (94/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.243105298 seconds)
    (95/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.421404497 seconds)
    (96/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.962641221 seconds)
    (97/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.904675911 seconds)
    (98/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.866542006 seconds)
    (99/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.980718737 seconds)
    (100/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.076559647 seconds)
    (101/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.860805472 seconds)
    (102/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.866909912 seconds)
    (103/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.937530654 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.938170455 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.163171851 seconds)
    (106/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.21268016 seconds)
    (107/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.874059847 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.432250285 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.081291619 seconds)
    (110/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.831390548 seconds)
    (111/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.074770956 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.130500781 seconds)
    (113/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.226910687 seconds)
    (114/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.391267474 seconds)
    (115/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.441069702 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.844290388 seconds)
    (117/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.843514104 seconds)
    (118/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.846062084 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.085350724 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.845008784 seconds)
    (121/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.975668027 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.63816719 seconds)
    (123/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.411687511 seconds)
    (124/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.943738457 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.929821935 seconds)
    (126/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.144522744 seconds)
    (127/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.934042352 seconds)
    (128/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.17799965 seconds)
    (129/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.845898635 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.948384166 seconds)
    (131/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.977480949 seconds)
    (132/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.898855425 seconds)
    (133/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.874136178 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.83522802 seconds)
    (135/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.998224741 seconds)
    (136/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.845880838 seconds)
    (137/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.927050511 seconds)
    (138/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.92913746 seconds)
    (139/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.928893897 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 2.294401685 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.869759755 seconds)
    (142/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.927067712 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.118982907 seconds)
    (144/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.214839882 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.941510361 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.060380004 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.102872093 seconds)
    (148/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.87087408 seconds)
    (149/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.964018443 seconds)
    (150/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.846800703 seconds)
    (151/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.367752877 seconds)
    (152/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.201731414 seconds)
    (153/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.439178804 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.948979473 seconds)
    (155/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.902019963 seconds)
    (156/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.241365027 seconds)
    (157/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.953258473 seconds)
    (158/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.14990366 seconds)
    (159/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.026485892 seconds)
    (160/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.161623091 seconds)
    (161/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.832945272 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 3.751074723 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.875139246 seconds)
    (164/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.851598395 seconds)
    (165/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.727535657 seconds)
    (166/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.876564028 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.891437997 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.846106104 seconds)
    (169/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.027267444 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.964152234 seconds)
    (171/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.912433617 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.729096528 seconds)
    (173/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.835656842 seconds)
    (174/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 7.315505657 seconds)
    (175/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.992247068 seconds)
    (176/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.087709907 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.250773715 seconds)
    (178/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.904965935 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.088642595 seconds)
    (180/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.913493085 seconds)
    (181/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.98069735 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.903929225 seconds)
    (183/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.047703131 seconds)
    (184/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.864029239 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.006001919 seconds)
    (186/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.136159876 seconds)
    (187/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.024408638 seconds)
    (188/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.855319972 seconds)
    (189/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.930005736 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.874429906 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.092950238 seconds)
    (192/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.255241108 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.953753986 seconds)
    (194/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.835711592 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.907058059 seconds)
    (196/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.82974459 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.852236766 seconds)
    (198/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.716168677 seconds)
    (199/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.838461668 seconds)
    (200/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 3.366682717 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.766964864 seconds)
    (202/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.000308962 seconds)
    (203/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.046034061 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.911619218 seconds)
    (205/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.994561389 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.243912766 seconds)
    (207/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.437958096 seconds)
    (208/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.230838136 seconds)
    (209/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.937386573 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.507420408 seconds)
    (211/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.172381959 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.380384319 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.067344645 seconds)
    (214/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.921394701 seconds)
    (215/309) benchmarking ("sort", BigInt, false)...
    done (took 6.940908946 seconds)
    (216/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.95413124 seconds)
    (217/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.069802584 seconds)
    (218/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.030456457 seconds)
    (219/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.743940121 seconds)
    (220/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.838780169 seconds)
    (221/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.147846772 seconds)
    (222/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.279256731 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.129347903 seconds)
    (224/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.052609052 seconds)
    (225/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.85500073 seconds)
    (226/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.9753067 seconds)
    (227/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.361301105 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.882546723 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.223880536 seconds)
    (230/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.141414149 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.930771355 seconds)
    (232/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.956749348 seconds)
    (233/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.067382186 seconds)
    (234/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.967697129 seconds)
    (235/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.949164488 seconds)
    (236/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.034250583 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.896760658 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.850603646 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.637167019 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.841041963 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.863663829 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.181316015 seconds)
    (243/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.05607085 seconds)
    (244/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.101133214 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.150086571 seconds)
    (246/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.854699982 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.92692769 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.851479321 seconds)
    (249/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.839631206 seconds)
    (250/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.865640148 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.882363638 seconds)
    (252/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.154565784 seconds)
    (253/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.992141344 seconds)
    (254/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.866086744 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.23919522 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.541261389 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.200027277 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.205686629 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.952094415 seconds)
    (260/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.136801354 seconds)
    (261/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.863054248 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.851487315 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.174471723 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.880706462 seconds)
    (265/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.87774098 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.23015421 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.948338273 seconds)
    (268/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.936575924 seconds)
    (269/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.853579605 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.333570532 seconds)
    (271/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.199246262 seconds)
    (272/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.944367135 seconds)
    (273/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.036835452 seconds)
    (274/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.980467116 seconds)
    (275/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.976328341 seconds)
    (276/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.862967692 seconds)
    (277/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.877934351 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.935134451 seconds)
    (279/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.370557396 seconds)
    (280/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.084761869 seconds)
    (281/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.926401194 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.935638025 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.149626767 seconds)
    (284/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.928683837 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.031497157 seconds)
    (286/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.854045663 seconds)
    (287/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.019647483 seconds)
    (288/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.008743807 seconds)
    (289/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.369897753 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.000879855 seconds)
    (291/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.022712948 seconds)
    (292/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.235709829 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.842372127 seconds)
    (294/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.971287038 seconds)
    (295/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.23375989 seconds)
    (296/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.119469767 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.897975813 seconds)
    (298/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.923705704 seconds)
    (299/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.989930403 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.876934526 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.14855471 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.4997886 seconds)
    (303/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.542330631 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.860043516 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.881227307 seconds)
    (306/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.455937235 seconds)
    (307/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.991823418 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.943720439 seconds)
    (309/309) benchmarking ("sort", Float64, false)...
    done (took 5.65111416 seconds)
  done (took 1017.660245586 seconds)
done (took 1019.451492592 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.88901173 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.883471221 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.866720316 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.888383446 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.978401317 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.895999135 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.877060721 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.86868358 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.916185421 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.916931069 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.866686921 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.895093209 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.868930412 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.866819939 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.866260628 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.880606766 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.170374538 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.891503253 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.885364681 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.879860146 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.884407564 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.866795257 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.916720085 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.894268967 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.871080241 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.868768691 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.870241283 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.887276838 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.980134398 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.870857526 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.870573578 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.87948635 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.170079218 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.889958195 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.861997669 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.888001124 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.879210238 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.877545766 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.87195259 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.900825282 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.310120358 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.874244768 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.870693007 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.868836477 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.868724416 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.87401801 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.870017396 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.875285975 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.881281386 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.883583825 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.310126936 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.889095047 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.87235018 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.869852323 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.880194616 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.8700405 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.873112621 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.885387371 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.889399947 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.886090062 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.163738702 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.898523017 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.87145787 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.885523864 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.877273786 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.345224821 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.871209249 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.874172602 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.311162922 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.881086616 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.345745672 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.884278855 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.871456402 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.884706729 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.902392585 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.173044816 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.88952899 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.869009352 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.877190538 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.869514412 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.880466206 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.883893205 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.87515549 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.871308895 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.884649521 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.899482556 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.880420155 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.871628068 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.879959395 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.891055369 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.879669935 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.882159084 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.874039373 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.866656112 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.880101654 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.875224288 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.874239503 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.87573038 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.876237616 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.882406609 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.312101562 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.893892088 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.868309756 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.868725421 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.871131602 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.885733852 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.311480511 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.878567294 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.893735796 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.919982251 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.873468536 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.164453047 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.899174332 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.889274083 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.881748204 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.87540017 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.867964805 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.165762736 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.335952792 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.89289907 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.874324147 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.872074292 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.888724507 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.874527439 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.869495956 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.175802176 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.896973906 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.887739064 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.994805769 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.883543412 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.905378253 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.871866289 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.87700851 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.902163583 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.889981446 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.904698333 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.876065143 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.890590122 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.88987724 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.869991745 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.884855024 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.884556226 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.875066858 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.878277375 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.868437444 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.906405386 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.887997776 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.886397788 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.894858541 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.995516002 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.871295752 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.168030035 seconds)
done (took 294.036583587 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.941906997 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.863564093 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.965690185 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.870991493 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.955323965 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.956457318 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.868331384 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.868707979 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.869048104 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.247591775 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.868750448 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.870375934 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.870219489 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.868437132 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.954094387 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.870506211 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.869136941 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.2104313 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.872341503 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.942274418 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.863581904 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.869280509 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.87184642 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.253356549 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.868013803 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.871875614 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.942238573 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.872728596 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.218015298 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.864433311 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.872595741 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.219037001 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.961757652 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.891352567 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.882658244 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.879246565 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.956424742 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.877030163 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.955088678 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.953752486 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.967510038 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.91329378 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.867134661 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.870959565 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.876761724 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.874867573 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.869850293 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.900710241 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.871863642 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.870941118 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.212393728 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.884575673 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.880529599 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.871188708 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.871045003 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.895121144 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.870683732 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.875360878 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.962866109 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.874806789 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.935840305 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.256290333 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.250019306 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.873819125 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.866959799 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.871746537 seconds)
  done (took 184.487543201 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.942799751 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.947899409 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.941489492 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.878000464 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.92517308 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.94617208 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.877463928 seconds)
  done (took 15.261435614 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.880697781 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.874826024 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.924754918 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.924469323 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.875921528 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.026051167 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.875017843 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.886431255 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.872456487 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.928386972 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.875799481 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.874659057 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.882968017 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.870501703 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.92368724 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.88621779 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.990153319 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.876183443 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.877122837 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.031600446 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.872906713 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.883212879 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.929630134 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.886847994 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.877541741 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.882153271 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.458472791 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.87633926 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.87283834 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.875653054 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.873348899 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.91701667 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.87595498 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.875376472 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.873169861 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.991457636 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.876286651 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.87348218 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.876278483 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.870084855 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.87611892 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.876875593 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.876446044 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.873746253 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.876662365 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.90112838 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.876171504 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.87613962 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.876915835 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.877633072 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.928197804 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.877514082 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.875454514 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.87709536 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.933255717 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.883433739 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.878723392 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.874736035 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.878173036 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.873999924 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.034480985 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.925016993 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.877347263 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.926211607 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.877223004 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.878793622 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.877372331 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.87795848 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.932777182 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.877079307 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.926167111 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.8754561 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.035118892 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.901670775 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.87835053 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.880707497 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.880828781 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.878619599 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.875986767 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.884694218 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.876042575 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.879447574 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.885147434 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.87652685 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.875629435 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.985473253 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.987429126 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.876043189 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.892023246 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.886344539 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.875714342 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.931796813 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.879048071 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.876575476 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.931187849 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.994401908 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.935351697 seconds)
  done (took 206.497987686 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.883749329 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.886793676 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.880248637 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.895893028 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.879762872 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.878628995 seconds)
  done (took 13.11343626 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.881900415 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.881349846 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.880132711 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.880625893 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.88099121 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.881571774 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.881017542 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.881465439 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.884878792 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.880797781 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.880614431 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.882432492 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.881867344 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.881368927 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.881081804 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.879854828 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.881874451 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.878097099 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.881411632 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.881138111 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.02504429 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.314959803 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.881743702 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.882756787 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.885672068 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.879946078 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.889633809 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.880558429 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.881468482 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.88958908 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.884981082 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.881471496 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.882357543 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.886804137 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.885866445 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.882436183 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.885467745 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.883762686 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.880113824 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.883037583 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.882431209 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.882153046 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.881691376 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.883978243 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.884676012 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.887400388 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.886607225 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.890766206 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.883067666 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.88415205 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.885051248 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.882412592 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.884377261 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.885298491 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.886344556 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.888227521 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.888184683 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.884240695 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.883412027 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.884738505 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.883398387 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.882439334 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.884645835 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.887933749 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.889756623 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.885046807 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.88469844 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.887622333 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.884549069 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.883249455 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.884447447 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.880624752 seconds)
  done (took 139.001657937 seconds)
done (took 560.176211904 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.138814919 seconds)
  done (took 8.951321648 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.038307584 seconds)
  done (took 8.944546415 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.171920808 seconds)
  done (took 9.984453283 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.884761333 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.913464075 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.88848549 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.884901014 seconds)
  done (took 29.39306385 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.234834901 seconds)
  done (took 9.047491698 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.892617307 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.877577141 seconds)
  done (took 15.653414826 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.95439786 seconds)
  done (took 8.768726208 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.01359787 seconds)
  done (took 8.833605284 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.893612666 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.878807575 seconds)
  done (took 15.598846707 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.864606441 seconds)
  done (took 8.67773759 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.573104933 seconds)
  done (took 11.395196674 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.884258072 seconds)
  done (took 8.710064158 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.939581351 seconds)
  done (took 8.753286588 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.962426157 seconds)
  done (took 9.775755526 seconds)
done (took 164.301439921 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.881457128 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.879847926 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.88103402 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.881284121 seconds)
  done (took 29.337586501 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.919467263 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.918048055 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.9207328 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.929179267 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.921451024 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.91821834 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.910944818 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.910154403 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.929968906 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.920679825 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.920991594 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.920743279 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.918030308 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.911377426 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.920989789 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.921050533 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.930390284 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.920018044 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.910705507 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.922493932 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.885999081 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.930444419 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.922191015 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.886481599 seconds)
  done (took 47.835885666 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.084431586 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.957472136 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.039319164 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.938636764 seconds)
  done (took 9.834450038 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.938438079 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.939390218 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.951748175 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.997444441 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.016823918 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.949482765 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.912792756 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.907511244 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.89408353 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.93957374 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.014736962 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.955647838 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.025367996 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.885639222 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.079569344 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.886832293 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.887532807 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.939609777 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.990549882 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.004385952 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.886677605 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.93967303 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.941856168 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.955851125 seconds)
  done (took 48.657355232 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.885458512 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.894917181 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.8925329 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.88663385 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.887005271 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.887189217 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.89271301 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.888084966 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.907825642 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.888119186 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.886494232 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.886645524 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.885690863 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.886637978 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.886508728 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.89945543 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.901404506 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.887616414 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.89034285 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.893005386 seconds)
  done (took 39.630406061 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.881407696 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.735241174 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.234033584 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.138379991 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.881891522 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.884938785 seconds)
  done (took 31.573419724 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.901562757 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.949864776 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.894791188 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.943311897 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.023647103 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.895280942 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.888933676 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.954182662 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.995523631 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.958254836 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.9052346 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.91434819 seconds)
  done (took 25.043571551 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.883901852 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.885640115 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.885324458 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.902293224 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.898851797 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.896707927 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.895828641 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.882038032 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.904202437 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.907159698 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.896057475 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.900390954 seconds)
  done (took 44.559585416 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973121836 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.930209425 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.911939265 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.59574749 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.263395219 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095684098 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.492260106 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.214809544 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.889347718 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158140674 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.899759926 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990347291 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.141683486 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.2986746 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.913387524 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.358550616 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181322811 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093258426 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913077988 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.576440096 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949938674 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.990146725 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.643801095 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.944579501 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.097322424 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.017860436 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.147048887 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.886262363 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024416991 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923997588 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896941439 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.88658097 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.160221362 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263594026 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990507581 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896985283 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.499310811 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.601376294 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.876486252 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.752725002 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.627436767 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.011927594 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897167607 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886543384 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.821019842 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.95580264 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256879947 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.892174489 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.597905794 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.886536697 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898021376 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982144577 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.891768413 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.702422671 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797719344 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.889429092 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.885235961 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894448908 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.464157949 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.009088784 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.997090557 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.85832497 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.979750677 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.691689216 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274223721 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.036819125 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.891843331 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.891653317 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821937417 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.578028432 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945472811 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217853899 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.909999634 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.537956974 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198329664 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.9681898 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.831725916 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154889456 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.339041782 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.858465238 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116549896 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887621672 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823749015 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.8370547 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.8222676 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149582608 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926319012 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.650345605 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928683482 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.217975464 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.90134111 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910544571 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914252269 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.112474153 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.774359622 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890799594 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.704096564 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.034861872 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91267373 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.218050087 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823980849 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.894587714 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147472098 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.102238172 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.886219434 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.393643767 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046279121 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.371981797 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.939974417 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.961309181 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.935241762 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.157564014 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948018398 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.016621156 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945351849 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.891971971 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18422659 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.397026783 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.025721609 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.034494485 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.017552237 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.222285631 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91932711 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972986145 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.902335131 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.892649603 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.654626704 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.445160001 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.891641023 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.894131982 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.889041516 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.935984108 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.893107161 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840300027 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.525141182 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.905174648 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.907727675 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.116117059 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.379584029 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200566086 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826922691 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221692119 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.948101146 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.115903296 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.54188683 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.968441039 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153949625 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.890559804 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.921836137 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9381541 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911688293 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991264633 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915240923 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.9588515 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.184056755 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.89716343 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.897164739 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.684326756 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.930377658 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89231466 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.89805801 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.642067698 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163366298 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.923748586 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.899022528 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.782957413 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.906917797 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958245512 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.8990927 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.904402072 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.432847206 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.603818984 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.900024403 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.490305451 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12198372 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904951831 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.623358352 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010548384 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.975009857 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.163653607 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953807384 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.829449088 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.605478723 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.588478246 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894862254 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.830247073 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.895089378 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904533513 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906440845 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.090666682 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.165734775 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938337764 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.588483562 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.93797749 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906040537 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.90094868 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893913382 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.404982189 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.016816817 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.006152427 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.93863919 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039733521 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.909632047 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.829734864 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.899780196 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.901261575 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.895872369 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.895961659 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929740597 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.586507139 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270657536 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157227904 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.502015183 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910003789 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.61444077 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.955265715 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.895406642 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.707935972 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.984861893 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.924116926 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911965226 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.906823549 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.681593616 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.592833887 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.468074042 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211370491 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.19672993 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335735454 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.031172289 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.923686848 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.232587681 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832062935 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.462008067 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.954506802 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.236141391 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841856059 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980986418 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.54554372 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.240698757 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911394228 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124266669 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283203829 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.784632991 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922383917 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.108896567 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932474461 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.975424978 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.857442184 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.184213548 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038804195 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.599443514 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.103046553 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229444308 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.716366236 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.913421432 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.897871588 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.569654014 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982360508 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.608732075 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.06776563 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.010372044 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.811887303 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397600822 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.907002186 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.125393557 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243111344 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.983058264 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.017636516 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835358449 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.909870222 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.910420917 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.901013728 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.895647721 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.775594047 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.153085286 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910725965 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834174072 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.937129544 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.181927891 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.801969381 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.905611822 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899858333 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189263924 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.354801534 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069294863 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.925177509 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.4156898 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907932494 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.834865824 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835800645 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.593537033 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.907026145 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.877221811 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104684021 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.002161558 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.810681593 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.902475359 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.145575293 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.157340818 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.915138758 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.168098575 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174762936 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.596465507 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925666259 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.002162358 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.565134561 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.01026539 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.901679117 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.137565574 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.652452728 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.127079567 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.918529227 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.853975272 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.90152275 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115724736 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.902942274 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.788266434 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133603995 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.624096092 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.931409994 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211229325 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97579938 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.807882557 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.947592812 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.993048817 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912358418 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981883112 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912884823 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.913687294 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.913945627 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948928834 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.800990824 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.026194004 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.916643321 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996021392 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.028949471 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.425471896 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.908449393 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17439026 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256903176 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.225532527 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962223632 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.904310479 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907473059 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841959059 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054106406 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.131231119 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178819723 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.03625881 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.022035 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929883696 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.566741164 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.035041206 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142716153 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180272163 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.799807693 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.328781021 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.942559042 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.905338312 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916411064 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.116052309 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112600363 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201738093 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042682408 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.911382127 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.260565912 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180729963 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.906514312 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.905451835 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.498947664 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.948010185 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.580548054 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.948871545 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.842222243 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183109701 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917602479 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283603647 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.928781257 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.062080595 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.678974429 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.638851028 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.197037678 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.895707934 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.967446242 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.175831934 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.28494755 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220440107 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974202841 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917992057 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.007780334 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05614438 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.787790684 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.908912433 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909257912 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.137357402 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.617474824 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.917764844 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181992918 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217417049 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.905543809 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.791227359 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930931661 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.917567152 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.1316994 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169215897 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.160408772 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918773206 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.914241477 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.724149416 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.178473891 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96752122 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843994544 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.912294934 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008479497 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.157150577 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932336534 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.36211727 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.62002499 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17726672 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.908631046 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932351103 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.984641418 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.266671711 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228020213 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.442175745 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.115015605 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.496865039 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.398482673 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207660395 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.914341222 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.985790135 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210037703 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.913527553 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.913749101 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944887646 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.175149309 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.221447537 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.915194691 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.609261148 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.881071629 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.250516581 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.465773252 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849320152 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.919894768 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.971592558 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.911019811 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.041343092 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922993495 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.795391866 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.995643958 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.667726261 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.186397032 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.916019532 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.902475659 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.636952241 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.117104384 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941942194 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053455759 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911634696 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.586134464 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.263140814 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.168824353 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.917447401 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.917416287 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.915217975 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912748386 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.898008901 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.110782052 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.108323854 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182227432 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.942738448 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.947790263 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915651201 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.129129047 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123068316 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.793430855 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049786841 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.915971236 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951662246 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.818574501 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.420036571 seconds)
  done (took 1685.209298338 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.936886019 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.929801958 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.933247586 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.011288801 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.935160853 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.918610248 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.06569341 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.936387146 seconds)
  done (took 57.514436597 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.91285027 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.134630058 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.92241784 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.912832357 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.922451993 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.912817383 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.07817114 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.921695564 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.922096252 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.923817769 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.914375453 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.913104906 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.236221669 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.934345157 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.9141771 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.898671284 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.922889837 seconds)
  done (took 75.167762288 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.914680058 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.964542815 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.945604983 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.92936594 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.026615962 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.933907943 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.759384265 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.921194454 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.91512948 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.947895592 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.546351599 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.936526422 seconds)
  done (took 87.590831591 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.921699146 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.920654599 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.921164565 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.921248554 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.921741333 seconds)
  done (took 11.456882503 seconds)
done (took 2195.25353603 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.166691919 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.127811804 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.139112825 seconds)
  done (took 6.116304272 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.06534524 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.112405083 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.23225761 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.239028957 seconds)
  done (took 10.501659997 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.200740095 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.293624737 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.125648968 seconds)
  done (took 8.470051328 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.314689521 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.925461813 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.023235135 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.914077926 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.917984455 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.917353753 seconds)
  done (took 22.599979098 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.919037369 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.923108248 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.919764777 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.923077218 seconds)
  done (took 9.53657479 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.901205717 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.638076257 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.901342926 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.918420574 seconds)
  done (took 21.209525804 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.668987941 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.681049959 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.663544932 seconds)
  done (took 9.864192788 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.617182297 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.834563799 seconds)
  done (took 9.303226525 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.187283987 seconds)
  done (took 4.038498392 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.052194796 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.186019704 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.381521063 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.414083964 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.469474952 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.773766255 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.225901717 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.160384056 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.308670012 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.35056763 seconds)
  done (took 25.173972456 seconds)
done (took 142.094217144 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.301887696 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.155559369 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.118874677 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.258618794 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.143077407 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.120588209 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.127329189 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.245992866 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.77385984 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.766894986 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.262246054 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.146323072 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.283901772 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.164047719 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.282789541 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.918254609 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.142972782 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.324670968 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.958160667 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.198510125 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.129044825 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.901219923 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.099218081 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.915425264 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.144064168 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.072346221 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.476058162 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.166610066 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.112971522 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.487042731 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.075373101 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.347869061 seconds)
  done (took 173.474693878 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.693933826 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.920644021 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.919647884 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.919793774 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.219512792 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.921399365 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.919810167 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.920237701 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.187669893 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.178197796 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.919757882 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.205154721 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.922418003 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.920070327 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.922610215 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.920197164 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.299742974 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.729657997 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.924700528 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.92736631 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.930151635 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.137996694 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.932762544 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.17585427 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.341687542 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.940430861 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.921009946 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.940359052 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.92697531 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.929561144 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.931824789 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.92137695 seconds)
  done (took 209.377272739 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.921483523 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.92259699 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.920921212 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.922843525 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.923726627 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.924585353 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.922361121 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.922168895 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.505564641 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.499230616 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.931003383 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.929444443 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.925829506 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.922365297 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.931482174 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.922411267 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.923315736 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.928198099 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.926915349 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.931358177 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.935168739 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.634484519 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.935062273 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.620654369 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.931014545 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.929660779 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.923825558 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.931270345 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.933240426 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.933834576 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.933011995 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.923503546 seconds)
  done (took 222.092839074 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.125176814 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.928793848 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.93039176 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.882751348 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.929787276 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.929691331 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.925254112 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.12866604 seconds)
  done (took 19.651650758 seconds)
done (took 626.45880727 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.347459937 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.190791589 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.098090247 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.952451021 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.183232779 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.980577541 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.951441944 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.015396231 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.129201841 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.018712589 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.636367944 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.964653727 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.732869281 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.970624549 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.073921607 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.007792931 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.519438776 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.605306055 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.121400198 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.007231557 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.113176486 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.907368248 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.020207305 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.178343769 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.757206527 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.943950305 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.113827546 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.524999778 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.959115642 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.109822361 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.645048988 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.308235851 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.958843596 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.946967156 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.000348167 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.982605608 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.289413603 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.956866821 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.071305798 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.718062472 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.00572225 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.015118131 seconds)
  done (took 106.89294078 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.921260281 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.920032991 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.920485359 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.920962822 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.921572593 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.920437462 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.920203103 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.919907373 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.920503855 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.920170181 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.920061521 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.92193782 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.92028555 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.921903686 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.920402862 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.920445827 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.921416063 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.923633857 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.921304931 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.921161971 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.922224807 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.922050575 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.923294926 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.921477775 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.922609509 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.922335161 seconds)
  done (took 51.825036968 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.933564197 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.076985134 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.155059455 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.949218367 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.933814292 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.936577329 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.952414892 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.938957874 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.936413686 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.936004642 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.027530674 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.940458315 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.95231659 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.16394329 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.946437415 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.934455582 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.934784101 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.934521888 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.084288073 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.949278127 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.954285949 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.938682008 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.952220671 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.946594936 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.936697793 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.935097366 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.938763215 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.366064013 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.940873113 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.027334433 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.97598443 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.955710122 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.321797826 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.164250876 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.985432998 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.942667622 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.936595393 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.031848624 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.940780172 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.936103036 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.95322955 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.940173934 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.158858596 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.424994621 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.947112635 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.937268003 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.376391426 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.035795551 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.97648044 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.947158897 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.162524369 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.949109105 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.937621236 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.937336119 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.974035667 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.946489677 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.936871734 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.241615339 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.94597921 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.953997799 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.941343078 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.937617987 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.090999063 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.943373578 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.081488654 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.944212357 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.945231156 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.937806506 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.157674536 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.950140684 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.42950522 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.947957098 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.93755585 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.028917442 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.083878174 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.401264079 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.947868503 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.094837209 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.337262254 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.958837214 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.943902527 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.356751235 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.962512645 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.944419563 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.940103022 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.940056331 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.939120293 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.982596103 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.954154129 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.371514727 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.433566217 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.252171635 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.962551536 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.953559718 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.939787506 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.243989163 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.946169713 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.939700254 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.153791845 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.444040186 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.949414408 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.94620576 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.415625144 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.94983882 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.957516963 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.947301746 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.16321102 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.950223331 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.983010334 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.94014996 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.946434635 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.942116166 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.958112023 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.946365183 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.939146516 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.407440772 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.045219818 seconds)
  done (took 239.383217966 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.933347354 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.93417914 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.935163059 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.935935375 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.934257106 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.940209635 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.934702286 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.934844492 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.93965359 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.933671128 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.934234724 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.941130994 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.935705295 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.938393264 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.416741459 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.943706415 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.546462726 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.942790056 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.93811093 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.938910212 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.619376328 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.9454612 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.937038903 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.961598796 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.939155357 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.940703985 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.955641857 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.968755729 seconds)
  done (took 169.969470982 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.944124631 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.128246279 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.966284579 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.979316382 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.95220644 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.941390987 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.968904407 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.963415929 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.949458891 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.942490621 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.941893541 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.005232672 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.957112951 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.07374867 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.976330569 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.976585495 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.048971589 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.9523071 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.943014255 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.942858768 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.973730202 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.940639228 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.00730539 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.071518017 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.966176705 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.06248921 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.953850577 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.945867252 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.945233674 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.063282209 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.963682363 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.005753792 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.977445805 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.965801481 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.068221501 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.067298848 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.053149005 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.976968178 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.951180814 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.944975391 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.944995865 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.934788776 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.063924869 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.968841568 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.946944927 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.055651717 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.969820311 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.948012377 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.954929818 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.944915434 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.959568932 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.964376333 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.013343132 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.082723563 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.980743346 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.972278971 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.97119265 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.248639023 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.956440472 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.047598505 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.94141363 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.064093939 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.968538637 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.934690283 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.946238745 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.951594274 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.975618241 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.978781166 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.052581157 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.954994162 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.04837152 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.982211784 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.952895016 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.945312226 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.947829681 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.064010969 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.069399101 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.982817228 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.983623611 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.978418123 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.943220483 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.947270859 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.936358967 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.965373114 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.951591929 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.065565303 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.069518815 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.954937782 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.949365128 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.949413494 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.949351918 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.973077469 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.074224133 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.983863796 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.049822446 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.016868713 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.02711775 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.967064294 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.960897551 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.951500007 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.013585139 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.967230047 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.960271227 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.301352642 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.021254599 seconds)
  done (took 210.937450633 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.042914425 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.416307841 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.001451006 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.003715898 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.223560165 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.378622591 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.750669978 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.997786547 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.997523827 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.022609249 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.159433083 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.057058706 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.01037114 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.984671697 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.411064934 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.987393043 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.996707514 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.017772891 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.003476349 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.578324256 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.303031882 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.126988844 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.995936272 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.131852039 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.984568434 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.289929016 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.495822663 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.382895942 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.031861344 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.344070605 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.32434121 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.674023176 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.207603009 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.244467103 seconds)
  done (took 77.462264965 seconds)
done (took 858.328874309 seconds)
SAVING RESULT...
DONE!
