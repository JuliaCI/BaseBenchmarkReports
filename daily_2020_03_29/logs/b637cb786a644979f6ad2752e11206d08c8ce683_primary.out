cset: moving following pidspec: 4913
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.204664992 seconds)
loading group "string"... done (took 0.571921985 seconds)
loading group "linalg"... done (took 7.477111168 seconds)
loading group "parallel"... done (took 0.152427085 seconds)
loading group "find"... done (took 1.183308829 seconds)
loading group "tuple"... done (took 1.75737835 seconds)
loading group "dates"... done (took 1.235666076 seconds)
loading group "micro"... done (took 0.215291391 seconds)
loading group "io"... done (took 0.901178797 seconds)
loading group "scalar"... done (took 36.802209715 seconds)
loading group "sparse"... done (took 11.633961374 seconds)
loading group "broadcast"... done (took 0.932946173 seconds)
loading group "union"... done (took 12.041070084 seconds)
loading group "simd"... done (took 4.435359098 seconds)
loading group "random"... done (took 8.897794863 seconds)
loading group "problem"... done (took 1.808531617 seconds)
loading group "array"... done (took 20.52595139 seconds)
loading group "misc"... done (took 1.688015037 seconds)
loading group "sort"... done (took 3.24163009 seconds)
loading group "collection"... done (took 16.932996334 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.520462027 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12335794 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13233199 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118595204 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14881239 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118062652 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124712681 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086675986 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.822057172 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147365348 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116056327 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.396237875 seconds)
done (took 5.317921046 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.180012929 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086327423 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08527549 seconds)
  done (took 1.322226415 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068591313 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128283227 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069390545 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070279327 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06996626 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069921376 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069615503 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069367324 seconds)
  done (took 1.69704347 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077606971 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071893804 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068892077 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071375578 seconds)
  done (took 1.437449887 seconds)
done (took 5.867200566 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.743077334 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211031105 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.186152305 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.382114736 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128364196 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.16905661 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.648621648 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317136398 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188979681 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077544722 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108243782 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.336613563 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.120478796 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.642600272 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076174938 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091582974 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140844612 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.432972205 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070380808 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08470946 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091578098 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131396838 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087414434 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076186642 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146048386 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069955665 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133430675 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084576801 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068547833 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214819725 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175085449 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.667996126 seconds)
  done (took 10.292488486 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102045497 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099652904 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070762627 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.127520293 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099589382 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072613886 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077568935 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070171438 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090996269 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.13037484 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092859464 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106368508 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068934453 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071590979 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086091308 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210115482 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083779684 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083459844 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072924919 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079782892 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109110271 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079943181 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082137011 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082141737 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130798648 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183558448 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100152663 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100016198 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068655367 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083522201 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11754496 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129205777 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068215221 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070886158 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127139128 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097180099 seconds)
  done (took 4.713117362 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.949250124 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140373872 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089425306 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131211082 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068071848 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106951978 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068627451 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082420511 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.203534948 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086557631 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.413488968 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.569402425 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.111026688 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112236305 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103815149 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070512987 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070605375 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069682607 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.423263203 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.100309889 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107034485 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082474855 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072394131 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071239977 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067397705 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069053476 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066372636 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070143574 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.114754048 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07823438 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.307697984 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.118767755 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069982137 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.900656571 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.163209189 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06870285 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.242866908 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.171263584 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091686951 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137248284 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072180611 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068623655 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.15576672 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067855047 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072632678 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068916991 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089405381 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105823526 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119541432 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068750028 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069698307 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165290467 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067906927 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081040242 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.113584027 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154844869 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068644987 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.280301974 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091725408 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072658365 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068080363 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.167656512 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.121146751 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093667618 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070284312 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070176155 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070642418 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071404345 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.360986309 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068734772 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.892448091 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075703306 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080418096 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072191111 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071985266 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074985415 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074948768 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09088469 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068591075 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075884373 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068579075 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068700892 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06907805 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084511075 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067184484 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.362185558 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06882142 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069947928 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067206896 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091778726 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097917117 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068453849 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067132036 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101167146 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06965418 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068027553 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068170787 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083717124 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071688693 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114568781 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06758791 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.088730369 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095377355 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069439182 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100066954 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081166711 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06871253 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.389011923 seconds)
    (108/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.070186325 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066537749 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068652724 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066847975 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.06834051 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066727977 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.077941473 seconds)
  done (took 21.468072822 seconds)
done (took 38.574708662 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.24990747 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07708987 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076565864 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076465971 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076161434 seconds)
  done (took 1.805839899 seconds)
done (took 3.076458428 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120300356 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098489505 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068161275 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097285387 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067263803 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102889449 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099678034 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.078220516 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099247068 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067508183 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.0965476 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067054704 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067153068 seconds)
  done (took 2.370098012 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08759064 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086559628 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073016318 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085339582 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06636411 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085276216 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084964988 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093099959 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084159334 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075278332 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066376771 seconds)
  done (took 2.10725746 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086520749 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086065698 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072068543 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084339604 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066037614 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084835367 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084129889 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087691021 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084396032 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076194369 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066827942 seconds)
  done (took 2.095807093 seconds)
done (took 7.786937891 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081289737 seconds)
  done (took 1.284209489 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.520907573 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.664271493 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082562706 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.105966558 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184863219 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.112356701 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.242682233 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086918201 seconds)
  done (took 8.374405486 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102548412 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07264051 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072264245 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070933757 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074969492 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073707415 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070771853 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071655777 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074439306 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073206595 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071026892 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07211984 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.0745934 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074337914 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071166997 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074308171 seconds)
  done (took 2.48057682 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093409367 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092232761 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076104651 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077225355 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07473116 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073532748 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076681268 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075544792 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072639063 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074646801 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077234186 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075503681 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073698559 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066892001 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075760879 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078089134 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072893902 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075900126 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076321075 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077014341 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076842621 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066704059 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074000331 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075946906 seconds)
  done (took 3.139387115 seconds)
done (took 16.493961284 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.108060801 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070187188 seconds)
  done (took 1.3881372 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084719087 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083764896 seconds)
  done (took 1.395741068 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086006497 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067331153 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090678987 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079188895 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068118633 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067837182 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087405703 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068529646 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068092407 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06814101 seconds)
  done (took 1.97410317 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071611015 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077352381 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071826065 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082991179 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074508662 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067097801 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073094818 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069607917 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078303545 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066221161 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073052928 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084419523 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072933997 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085887126 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073131501 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07020919 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072488503 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069208645 seconds)
  done (took 2.558006593 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070043484 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070024966 seconds)
  done (took 1.368903651 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07182345 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067652217 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069366063 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068343564 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066374093 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064969544 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066027022 seconds)
  done (took 1.69692192 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.36671605 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117603336 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.300735043 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073940174 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083367078 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.251330865 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068823174 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073531263 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073746215 seconds)
  done (took 2.673514675 seconds)
done (took 14.287982584 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08384725 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08772782 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096669759 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.36926589 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093750593 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069068816 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115744333 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.176538783 seconds)
done (took 2.33302676 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210206516 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.658437132 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.407570036 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20270099 seconds)
  done (took 2.492261675 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33744293 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089977023 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063338047 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070163299 seconds)
  done (took 1.808319833 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070538 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072022586 seconds)
  done (took 1.379453645 seconds)
done (took 7.13593804 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071259401 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087625544 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068894725 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.067331339 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067007123 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068781275 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066086916 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.0665383 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068606016 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06923068 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066399887 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068868045 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.068818672 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068503834 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066679066 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066613476 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.182059894 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068649153 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066187943 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065975909 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066079978 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068790248 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066059832 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066690173 seconds)
  done (took 3.023967258 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086460298 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069245429 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073401261 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072577271 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070849432 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073293694 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072289141 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068262354 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073049709 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070420092 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070538799 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070525076 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070578986 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070385753 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070772973 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070514043 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072226644 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068410747 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071030465 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070440563 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07243698 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068347838 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070704466 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072809049 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070371465 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070406185 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07109661 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06869043 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072442076 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070469723 seconds)
  done (took 3.3988063 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074101343 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066612359 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066753111 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073561943 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065866873 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067371511 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065933529 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066111392 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06667262 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06574519 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066965094 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065574848 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065743311 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066699596 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066731773 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069619975 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.0809109 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066370369 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066031075 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066570132 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069463123 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068478089 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06604316 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065648957 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066013499 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065586744 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066599282 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066023684 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066473571 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065672552 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069509045 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069908675 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066009651 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072763895 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069878207 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06583372 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070677307 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065889622 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066930472 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065873044 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065912451 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066247942 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066233273 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073000661 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066328715 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066919618 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066053821 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067262553 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066436691 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068118066 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06553222 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065906091 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067529186 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067385753 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069968695 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065844984 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06717743 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065854661 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066646765 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065747552 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06552352 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06604077 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068370854 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06680184 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080719143 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073109169 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066181708 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067664049 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066888392 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068642559 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067821477 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07990405 seconds)
  done (took 6.142940776 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092411272 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088216921 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068348305 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068035637 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064889102 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066574284 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071513007 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066625492 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068105132 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084326086 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066891044 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06882548 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068864176 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070188332 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066640426 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067896727 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074337239 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064416603 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066591159 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070605763 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066809011 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071452396 seconds)
  done (took 2.833232069 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151068687 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072601473 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10557594 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077425146 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072422301 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077336521 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072179588 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072301899 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072095819 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070349683 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070201394 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07209828 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072364641 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06968658 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069824023 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069697635 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071908973 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070096733 seconds)
  done (took 2.668678242 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079907564 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068202362 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088262215 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068649216 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068301804 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07119682 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07251427 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075643247 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.070450281 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068526888 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075717954 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071062888 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070554574 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068924344 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070420768 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06859861 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070570972 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068486358 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075599465 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072374954 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072028764 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075501227 seconds)
  done (took 2.851215342 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083988216 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072397681 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083746763 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069847619 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064069064 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066439334 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072146859 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068267428 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072194628 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070707275 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068090649 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066394748 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070828004 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068029799 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070535433 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068271692 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070565806 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068487679 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070658157 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064113894 seconds)
  done (took 2.670459715 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088751337 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070417118 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070825562 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07681074 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070334436 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070391388 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076400892 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069943228 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070103364 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090089656 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070011177 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070389311 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077079242 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076613448 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070143083 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076464913 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076285422 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07641395 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069713729 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070288831 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090257224 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07011231 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076103644 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070562583 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069948964 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070204496 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070283806 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074225121 seconds)
  done (took 3.342119644 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071284037 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06929839 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066648406 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066596085 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066362715 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06622724 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066060292 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066601671 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068816252 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066425425 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068701148 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068841412 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068807873 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068956614 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068705614 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068661904 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068707366 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066388757 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06633269 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06641612 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068837905 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068735714 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068914445 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066703357 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06615622 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068758582 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066289495 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066553976 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068528846 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066920246 seconds)
  done (took 3.299985263 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079568771 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075171325 seconds)
  done (took 1.422794522 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068173282 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083346986 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065940173 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073153829 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072475855 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069459177 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075158645 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071752491 seconds)
  done (took 1.842590984 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086307368 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079209561 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070093708 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079562403 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078066841 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084829905 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.122449051 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069068457 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074909239 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067174209 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081264501 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068828421 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074955425 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069335479 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074664228 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075470485 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066511866 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073622007 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070025064 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066923243 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069402865 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076951308 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071499458 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064720668 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070399214 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090441311 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079423637 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068798988 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071839764 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075924196 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074500381 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063855956 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068683241 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068835112 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066655458 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07753131 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08330001 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071524238 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076776675 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068866821 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076809274 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06404779 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07330276 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076213837 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078758702 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069081151 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069020654 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064087635 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067701203 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071605782 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064386535 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069759069 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064306458 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075823922 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072663629 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079177996 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067547843 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070421089 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072010772 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071865209 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075227997 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07053738 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071896342 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067941107 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078908245 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073573441 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076462093 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063928317 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063801188 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066522692 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077696635 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090665323 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074399511 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068692183 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069263203 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066230455 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071914377 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06934285 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073714314 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074999584 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068141604 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073100311 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07617879 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069139218 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07126953 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075109282 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067238908 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.0709902 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066569306 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083397931 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066557399 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068593552 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067135249 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078242428 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072224916 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067633242 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066441303 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074668195 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062822822 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067566955 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067830465 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068705176 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076858612 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070932988 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070923499 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075944502 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073845718 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068179805 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069770218 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.190085796 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070254236 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06923127 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076763651 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063684887 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07254973 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070710745 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069465276 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077572357 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067573001 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068965798 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076524009 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074474733 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068160941 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066305683 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071911418 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068654765 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071281185 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077308613 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067455322 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064527763 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.064322955 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073134039 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06923064 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072775557 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07285888 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071941418 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06384275 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067269579 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072795634 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077235012 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069744192 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070297421 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074791126 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070658597 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068027058 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075574069 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071871338 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06854702 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075025726 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071025743 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063989998 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070816974 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071569621 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068388081 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072966494 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07134146 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071114208 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068778431 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067336281 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074376871 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068979932 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068668776 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068978401 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067639356 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079167539 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071197978 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064023392 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066038168 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075180146 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067259069 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068416891 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068032041 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070821983 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068833973 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066692213 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067918624 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070854129 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076320302 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071540764 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069288598 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074472592 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080063637 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067771172 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071150728 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067872808 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068726698 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069598589 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07783685 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074546161 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072642116 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071461725 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066751746 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07378896 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076669043 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068715173 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067061187 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068533927 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072037487 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074669396 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071911041 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.0692348 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066843249 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069312183 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070530727 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070389466 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067727295 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067811044 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073441531 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066322112 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073386074 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068378596 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077619737 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071083374 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062861267 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068989295 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065509056 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073911206 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063128322 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066786795 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067063698 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067380337 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066599755 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069973214 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.192335113 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077348087 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07766532 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07138877 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069758443 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068980228 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076502981 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071415073 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072780409 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073770802 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075609157 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079792345 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.069337936 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072644834 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081887249 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068551354 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063134653 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074358549 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067989007 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068270404 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068643128 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067332284 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072391889 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075426452 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074939277 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063725869 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071379281 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067363106 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068859402 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064776972 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074298508 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071689338 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069921844 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076018404 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069360037 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069325904 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072121922 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068522095 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069417496 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069757254 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072031512 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068831361 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070617887 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068325779 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071782653 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068240559 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066277769 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070459888 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068304424 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069419659 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073590364 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068109613 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068939044 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071117224 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069115625 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069843195 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06949756 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069111867 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072130724 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070312433 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069172224 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071193819 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064115963 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076207514 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068057795 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076302236 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06979397 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065854005 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074274646 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071282838 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073065204 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068835131 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068829137 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070731669 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068137434 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072107584 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075923741 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067379295 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079276839 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075572958 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069815556 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071734111 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069045806 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070598361 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06870729 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070145474 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069590838 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069957516 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068198735 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073089205 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071659449 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06971645 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070728128 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068747393 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069006438 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068677756 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062908381 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067836594 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068055688 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067426544 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076759614 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068006707 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068516683 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067004809 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068267871 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066764728 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064832617 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073231102 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073174677 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067243722 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073359007 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067270352 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06903931 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07768711 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.194952334 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068015303 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067842102 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067487606 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077098637 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069504012 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078538302 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069655885 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069279228 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067039136 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06967364 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06779958 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063542086 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067280428 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072107094 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068582798 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067657414 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068816907 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071876523 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069447654 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077042438 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068462231 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07058648 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068654934 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066137229 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068795292 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069121521 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072199692 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069498359 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067232546 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066189286 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068036796 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070103049 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070937057 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068307523 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070921662 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075808082 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068941739 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071688809 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070932688 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064235607 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072309259 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06844963 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068503149 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068412943 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072460287 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074504352 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069271381 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077920016 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068408809 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069967042 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069308004 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066888714 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068024729 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068201901 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068392114 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068602895 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06912877 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076204691 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066694124 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072161178 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069158984 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069812592 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075961381 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068753283 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071825313 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073743794 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069640519 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070560712 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07689621 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072021678 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071961684 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068984989 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070123355 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074434551 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068562089 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076188137 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069684554 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069076862 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070447364 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066959183 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068398198 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067994741 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068143293 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.0749901 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068965928 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068580147 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068454169 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066647461 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070271556 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070845839 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076816618 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07161059 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071953884 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064372425 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066418112 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069464079 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067244969 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070076118 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070709942 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073853209 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070444948 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06895951 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066891354 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076609695 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074286646 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07227246 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06678625 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071372826 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067928624 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069780516 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068985813 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068496979 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068112974 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071597361 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069380875 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067076107 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.205468593 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07384964 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070235219 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071873207 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070667724 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069751675 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064907661 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069178596 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07124295 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073924742 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071947679 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069330455 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07969502 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06762076 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.07011938 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071437805 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068003218 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07369891 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064592643 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070259341 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069695165 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069904481 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064636454 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068397353 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067975736 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072051092 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068861373 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06455465 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079238544 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07789961 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072194406 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068284988 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067613807 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063721985 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063810896 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068428042 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069598334 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070464743 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078653367 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068635173 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068383561 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064332016 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069323298 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071955865 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072139068 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065710409 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064522542 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068223665 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072174426 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073757504 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067603265 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068029961 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072065101 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071022133 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066782336 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070849723 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066092477 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072623066 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080498952 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068719074 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069844564 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074454739 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076201164 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068553298 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064249469 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068750205 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072223371 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069780711 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069487279 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069537921 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084032249 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072079707 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068204411 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067757712 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071643352 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071440779 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076960985 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069677729 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06894592 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073550356 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070871158 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07560591 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072306562 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075808387 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.0726026 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072284036 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06831982 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069913671 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067831586 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068724425 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070026241 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069619115 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073479269 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075463942 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069083475 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078959699 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078035461 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.07012725 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065262126 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067518295 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068482667 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063605653 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068693639 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066462461 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066720779 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066552564 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067121624 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069393547 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072647809 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06922976 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068597564 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067214679 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062260873 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070638738 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069817567 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0688475 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.198998153 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069912344 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.07087945 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073740244 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071901211 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067973211 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071108175 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071652801 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071093664 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065025634 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076091189 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068729606 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071100532 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069256242 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069431482 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070105617 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072202445 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072760592 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070587073 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071391921 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073389574 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07065461 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06719809 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066835546 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074052509 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067354635 seconds)
  done (took 44.078743565 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102661067 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066080725 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064770142 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064342485 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074521744 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066133577 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06449562 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065444507 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065990148 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067143904 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064508628 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064562041 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072457901 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078413453 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074465881 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068859464 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064382825 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065412245 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0645161 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065552757 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071897439 seconds)
  done (took 2.814036338 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076598998 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078692133 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07689116 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083712365 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073210046 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072147772 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077132268 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072217179 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079710741 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073780228 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079687767 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072234404 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074070398 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074447271 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074181627 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072415465 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079715353 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073023092 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072157009 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076687537 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072466684 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076234154 seconds)
  done (took 3.010449349 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070551114 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068540852 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070495764 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063590224 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067841555 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.064071233 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07073106 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066555621 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071008833 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067820657 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068501097 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06794402 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07028308 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063951413 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069084029 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066583509 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107045778 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071031335 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068533851 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069119644 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064013571 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070769334 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064153548 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064455859 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067760397 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.086893983 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068517716 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066598596 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067506201 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067664293 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067939933 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065966484 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069815302 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068903447 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067739896 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067770737 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067441329 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070685867 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063726486 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066226891 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068673494 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064150557 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068300303 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06932156 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06718186 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066055071 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069894868 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067690984 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063457874 seconds)
  done (took 4.723046744 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081368155 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109088752 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069323618 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089852663 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080033427 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074209862 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071805181 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091113589 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065572619 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066431552 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081806362 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079183896 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067809026 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071941659 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072377198 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067648597 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068519745 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067083483 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071051437 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066981197 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070995136 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073753766 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080205902 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078745753 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07151097 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066722769 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067515309 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071700435 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078132331 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071560763 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071662315 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072501562 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080793629 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071606266 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06671655 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069995504 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081770681 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067782889 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069847127 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065586475 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069682638 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071863346 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07349085 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081946007 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067665524 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071659595 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067619 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065388198 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078162497 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069574652 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074272126 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079357726 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070862842 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067466715 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071651908 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080756264 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067596755 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066541823 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070282025 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078041295 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065646546 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070938206 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079559286 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069589226 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074393245 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079471325 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07154795 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070733732 seconds)
  done (took 6.48300687 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0794309 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097002464 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083921085 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083547981 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077047617 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077198525 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077078002 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076997663 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076806793 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080802017 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077240794 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115230252 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073023898 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.087726024 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077178656 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077325413 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077347581 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077000287 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07756143 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076719394 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077268168 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083517638 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077348801 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083444077 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080449755 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072772606 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076739698 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076959474 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083896954 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076898189 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080113297 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076794779 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076748394 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083293339 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080030189 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07654193 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06739159 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076490645 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076858177 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076726777 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072812108 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082925494 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076441868 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.073188138 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076830719 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076400543 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08329319 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080038522 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078914943 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080573135 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077183539 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083487389 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076777956 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07718445 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083123387 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085626122 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083316471 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083147974 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076914643 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083505344 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083246392 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085998405 seconds)
  done (took 6.338958064 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083348326 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07523452 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083164039 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063985964 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069513355 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073927954 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066741426 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066614729 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075162468 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074762081 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076731908 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073414603 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076279173 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076955958 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073536721 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07629743 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073360809 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073645058 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074673009 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074070216 seconds)
  done (took 2.87335351 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077563146 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083951931 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069651529 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072998877 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071604448 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073214542 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070802345 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071505341 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069109751 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071375005 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077091968 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077515469 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069413594 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073227395 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077110286 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073013203 seconds)
  done (took 2.560365544 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08496474 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074210076 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080244883 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068826244 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068394629 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064666042 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067878764 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064208111 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064950125 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079792996 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068261148 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078007149 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068557407 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067105427 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065134393 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073248566 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064716518 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065726958 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067674388 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079303437 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07139652 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066717152 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071695125 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.0676534 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070568623 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071828711 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067383572 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068387273 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06537826 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068211201 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071131284 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071649152 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065508753 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066287911 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067428908 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065792439 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068061191 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068901142 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073133804 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068142221 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066878026 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070583929 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067990456 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069030745 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065209384 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068646115 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064710442 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070565487 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066122243 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070348178 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067897685 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.07063794 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068532398 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074983109 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070861964 seconds)
  done (took 5.206817342 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083205663 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071593061 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063772935 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066476161 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071230066 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069069072 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071730318 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069121497 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069582716 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066504062 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069717963 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071308238 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070341384 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071873874 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069796024 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071873987 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06431469 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069244834 seconds)
  done (took 2.655570399 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07573849 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068855873 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07565843 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068741195 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068587349 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071628358 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064612537 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067245928 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066917348 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068567754 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06851155 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070884147 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067369875 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070870768 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068409702 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068440848 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070986358 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067357187 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068467498 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064535299 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070997936 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067599489 seconds)
  done (took 2.909503526 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095949478 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084772975 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139877045 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081265228 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087691104 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074373918 seconds)
  done (took 1.952825941 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09403715 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102079853 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070212546 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072040806 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077639124 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07264567 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072459273 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072785667 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079717052 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077633357 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072650799 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082239405 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079416074 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078791678 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077226036 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077539719 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072552847 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072463133 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068634141 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084340163 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072321339 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079458964 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072439977 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072543603 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072399187 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078496588 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079567335 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07691018 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072247601 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079436301 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077345525 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072516314 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079918216 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07700018 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071881973 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079305584 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072240876 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084146183 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077369873 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078730455 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071469727 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077375044 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07925525 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075925088 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080027453 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072979694 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076159254 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072110615 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072532399 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085946718 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077586085 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078488979 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077557088 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079816899 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07975585 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085476433 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077051285 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078963925 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07710541 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076966414 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078415171 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07708304 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078370045 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076868369 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077552738 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078433934 seconds)
  done (took 6.493148218 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104724297 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069020724 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072870886 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077434214 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079893469 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072543058 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072455371 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07240602 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072502996 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069964785 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108398848 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07253752 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079087316 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078744966 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072726143 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072223347 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072596059 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079080867 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069397458 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085838727 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072966769 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079268084 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078719145 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07853158 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077321705 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077435542 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072578053 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0724886 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072403676 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072356872 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076270235 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07239494 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07850327 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069004596 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078675336 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072273657 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072233861 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075976703 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072379911 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077520643 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078589292 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084230058 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072321594 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072120002 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077272019 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072111238 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072235216 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069723543 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072382261 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069347712 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077209262 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077397594 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077625752 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078543451 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072317578 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072247419 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072449449 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072347552 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072238017 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077504236 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078501829 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072354534 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085898025 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07240839 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072723191 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079320258 seconds)
  done (took 6.413872834 seconds)
done (took 133.250508949 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.195648885 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172294929 seconds)
  done (took 1.742325394 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07155206 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09912352 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078477722 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130431504 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06893493 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102772795 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102162898 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079413791 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068721088 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069178674 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069071712 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070831794 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133294003 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069214313 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068684828 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07089008 seconds)
  done (took 2.748088313 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099022575 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157842484 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102109519 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068522031 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100352582 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074489547 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068081258 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079841603 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073004437 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068372076 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074730515 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07244887 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068099305 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072301282 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072974946 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074381502 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067986065 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074950203 seconds)
  done (took 2.867817143 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098944907 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092563229 seconds)
  done (took 1.593155461 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157522308 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134899321 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20177139 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.330873989 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.154684936 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.147005327 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143938507 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.14228476 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114062272 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.137663939 seconds)
  done (took 3.060458046 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101473116 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.148571893 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.267502632 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116441144 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074987807 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092621374 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118266527 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081000648 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081944519 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081331888 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081667929 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078124993 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099738967 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075912023 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076919603 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077958769 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103579061 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075643177 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076800206 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077114292 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101287692 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069380116 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075724323 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075826351 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079095931 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07852816 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068634694 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068835442 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077352071 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077501146 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077970988 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091684417 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078651425 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103841861 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073556249 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104751428 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078622211 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075392668 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076829914 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075166428 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07922304 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078856911 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075612259 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07784145 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068632673 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07823188 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068700545 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069376147 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079467483 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070027478 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079026651 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078065855 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103660373 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069965675 seconds)
  done (took 6.100216297 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110161861 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107268148 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072959609 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113613629 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105115239 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071741577 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105875208 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098883597 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108311383 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072227437 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070888329 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072093311 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08130141 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082656202 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115543902 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108605135 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074100831 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07176251 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1086851 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108437011 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071292985 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102408804 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098486092 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107412859 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070233025 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072514915 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070497825 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071785908 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077077001 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078638085 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070659096 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079832167 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084237363 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07823879 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069627765 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070498847 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07060729 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079553715 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079950183 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079741574 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077852747 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069715241 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070316747 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071421058 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071000714 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070019891 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079330921 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080252089 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078761055 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07037582 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072005802 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070846756 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071515517 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079884831 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077806562 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080377105 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080446816 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071194205 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070581657 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073493868 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080228839 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079597522 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07939153 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071367679 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079973567 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07322658 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080859814 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084245334 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070581631 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071794842 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070893408 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070826045 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071568474 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078222205 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078082964 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072093838 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070562209 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070860442 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079816852 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078386625 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070661938 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07728953 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069082861 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070195108 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071279496 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071197025 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077051811 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078787266 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071412839 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070504457 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069964143 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06995889 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068209397 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075384116 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07777603 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077526402 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077415301 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070285293 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077151182 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076018874 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.206919029 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079667107 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071813866 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072776142 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072397158 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078969327 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078628664 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079989127 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07138679 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071162942 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079060139 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081042613 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071087978 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078391037 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08100405 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079196805 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069800456 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082130816 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071696981 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080697096 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07072959 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081315837 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07089658 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079600549 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070386823 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070248985 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070930866 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079648253 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072224959 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070749017 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072225289 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070817427 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079308764 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081712503 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07205146 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079188116 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079183564 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072022759 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079163713 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070854665 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080077787 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070545833 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071685293 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070096348 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081145925 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070904975 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070480313 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070564599 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080060164 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071074213 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080660853 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078004576 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069709618 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08142749 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080351668 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077550182 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080164194 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072215172 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07142918 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070436044 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070376862 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077996854 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079412824 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072291763 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071064563 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077627265 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080645302 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070003122 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077857243 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079309931 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078394186 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070498588 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07081951 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080599537 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080186468 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078158834 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078621196 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07876243 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070741472 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077788654 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078462139 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07103405 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083974212 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071021268 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082598726 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078296535 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077173704 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078583527 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078996714 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079200697 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079504366 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081870195 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06934401 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069596173 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076617156 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069121072 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069590788 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075961523 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070879911 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070651325 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08073809 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070014292 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.217570394 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071186563 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080504982 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070902201 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073324382 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084308287 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071974925 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072714924 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079584397 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073692775 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079195794 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081502962 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079074292 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071371588 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071963078 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079936539 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080165547 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071485969 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071062786 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072149811 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078402618 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077831015 seconds)
  done (took 18.980971111 seconds)
done (took 38.503529492 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.190526545 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.143667205 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.156323303 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111276519 seconds)
  done (took 2.089827555 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.111795168 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097235718 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091091699 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067788635 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096311308 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067484746 seconds)
  done (took 1.968356345 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.268482885 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.183991941 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168145727 seconds)
  done (took 2.054003415 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.191823333 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.177334638 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.420544773 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254940446 seconds)
  done (took 2.576135053 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.137045325 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086183995 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069120335 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085151291 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.125987984 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.152721194 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096675758 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12049555 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.08037589 seconds)
  done (took 2.436031235 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.140450884 seconds)
done (took 12.699980643 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.128788474 seconds)
    (2/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.196451225 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093203138 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069925769 seconds)
    (5/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100946284 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.098317065 seconds)
    (7/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.155116182 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077753625 seconds)
    (9/309) benchmarking ("sort", Float64, false)...
    done (took 0.127969582 seconds)
    (10/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.190691555 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.118394367 seconds)
    (12/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.195220314 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089081492 seconds)
    (14/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075877157 seconds)
    (15/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076026271 seconds)
    (16/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.091469839 seconds)
    (17/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.159555087 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152162915 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089541919 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076572749 seconds)
    (21/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.214617875 seconds)
    (22/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.111816542 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.20891304 seconds)
    (24/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.077984276 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084107542 seconds)
    (26/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.126650811 seconds)
    (27/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.053937963 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.08891971 seconds)
    (29/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.222894488 seconds)
    (30/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076317658 seconds)
    (31/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082743614 seconds)
    (32/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.17817558 seconds)
    (33/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076809984 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075265006 seconds)
    (35/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.17371334 seconds)
    (36/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.147361752 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.290934781 seconds)
    (38/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088924226 seconds)
    (39/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.098352579 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.140927023 seconds)
    (41/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078141088 seconds)
    (42/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.170211846 seconds)
    (43/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071635445 seconds)
    (44/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.159583031 seconds)
    (45/309) benchmarking ("sort", Bool, false)...
    done (took 0.144320023 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.101023575 seconds)
    (47/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.223853258 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088277826 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088345009 seconds)
    (50/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.177056538 seconds)
    (51/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093914009 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 0.068960617 seconds)
    (53/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.19656391 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084407131 seconds)
    (55/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113268214 seconds)
    (56/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.081544831 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067977323 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076704638 seconds)
    (59/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055751863 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.07513906 seconds)
    (61/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078382086 seconds)
    (62/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.176593468 seconds)
    (63/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.174930401 seconds)
    (64/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070358566 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066530072 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.199166665 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08717571 seconds)
    (68/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053481105 seconds)
    (69/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.188424909 seconds)
    (70/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.149290127 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.077629271 seconds)
    (72/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077504606 seconds)
    (73/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.150956747 seconds)
    (74/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.158689286 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.057462904 seconds)
    (76/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071868868 seconds)
    (77/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.1884874 seconds)
    (78/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.176936671 seconds)
    (79/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.170681876 seconds)
    (80/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.342970212 seconds)
    (81/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.057745186 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075926166 seconds)
    (83/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.105562803 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092283388 seconds)
    (85/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.183824301 seconds)
    (86/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.078130985 seconds)
    (87/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.05473547 seconds)
    (88/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076616503 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178132042 seconds)
    (90/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056149395 seconds)
    (91/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.159443292 seconds)
    (92/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.190302034 seconds)
    (93/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.057468574 seconds)
    (94/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074295996 seconds)
    (95/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055990083 seconds)
    (96/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079250454 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.100602258 seconds)
    (98/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055992301 seconds)
    (99/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.077094694 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.09832711 seconds)
    (101/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054233644 seconds)
    (102/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.179023417 seconds)
    (103/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.159800265 seconds)
    (104/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147971853 seconds)
    (105/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.066401607 seconds)
    (106/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075267396 seconds)
    (107/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065582381 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095058714 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069276321 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091621338 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075224366 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075746592 seconds)
    (113/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076065922 seconds)
    (114/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188283524 seconds)
    (115/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083765665 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069055366 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089054761 seconds)
    (118/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.17766707 seconds)
    (119/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07124762 seconds)
    (120/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054010744 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176387532 seconds)
    (122/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083411086 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091828575 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086849925 seconds)
    (125/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.155838904 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074228233 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.12784311 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131699728 seconds)
    (129/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100332248 seconds)
    (130/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055709096 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138277391 seconds)
    (132/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07673206 seconds)
    (133/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.112362354 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068973448 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068077863 seconds)
    (136/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054505797 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06796112 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092721985 seconds)
    (139/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069062787 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075352491 seconds)
    (141/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119239077 seconds)
    (142/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077702151 seconds)
    (143/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.056047013 seconds)
    (144/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.099108823 seconds)
    (145/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092160332 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074821057 seconds)
    (147/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.054537138 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096354846 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.091672643 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171120658 seconds)
    (151/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068236823 seconds)
    (152/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081044479 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075639705 seconds)
    (154/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082462575 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067954876 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074320574 seconds)
    (157/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.150113456 seconds)
    (158/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090089953 seconds)
    (159/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.171357125 seconds)
    (160/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055450621 seconds)
    (161/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075989993 seconds)
    (162/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092401851 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067630552 seconds)
    (164/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066438122 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088532596 seconds)
    (166/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078395764 seconds)
    (167/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075821193 seconds)
    (168/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073620698 seconds)
    (169/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.09887222 seconds)
    (170/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053897963 seconds)
    (171/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.065892257 seconds)
    (172/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167085173 seconds)
    (173/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054699327 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067840282 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.108311968 seconds)
    (176/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078270054 seconds)
    (177/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.150379277 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141082503 seconds)
    (179/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074251583 seconds)
    (180/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076722184 seconds)
    (181/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056319117 seconds)
    (182/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065338058 seconds)
    (183/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.226871583 seconds)
    (184/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075632727 seconds)
    (185/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.068102172 seconds)
    (186/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.111977198 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071822064 seconds)
    (188/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067097725 seconds)
    (189/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070985483 seconds)
    (190/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091556537 seconds)
    (191/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069554208 seconds)
    (192/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068641043 seconds)
    (193/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054671404 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055319886 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068196963 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108497377 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088788039 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068384101 seconds)
    (199/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.069549065 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056634562 seconds)
    (201/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078360063 seconds)
    (202/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071596757 seconds)
    (203/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075442705 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06843222 seconds)
    (205/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069536945 seconds)
    (206/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075659201 seconds)
    (207/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079160409 seconds)
    (208/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.056239162 seconds)
    (209/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067876606 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055458973 seconds)
    (211/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.112459071 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111134484 seconds)
    (213/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.054815681 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074357017 seconds)
    (215/309) benchmarking ("sort", Float32, false)...
    done (took 0.130301451 seconds)
    (216/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.055148559 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141324163 seconds)
    (218/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.080366722 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144239217 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074365348 seconds)
    (221/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.055265851 seconds)
    (222/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.058064237 seconds)
    (223/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076403084 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.114966822 seconds)
    (225/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079036731 seconds)
    (226/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072722969 seconds)
    (227/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071127377 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076809841 seconds)
    (229/309) benchmarking ("sort", Int8, false)...
    done (took 0.144144533 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075362976 seconds)
    (231/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055524055 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137749986 seconds)
    (233/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055779209 seconds)
    (234/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07645302 seconds)
    (235/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075255149 seconds)
    (236/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071972479 seconds)
    (237/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069538227 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136286202 seconds)
    (239/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.079965208 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074817443 seconds)
    (241/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095068177 seconds)
    (242/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075307028 seconds)
    (243/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054554388 seconds)
    (244/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054977709 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.153735669 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069395853 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100634209 seconds)
    (248/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066402532 seconds)
    (249/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055804833 seconds)
    (250/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068828131 seconds)
    (251/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074398807 seconds)
    (252/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054638725 seconds)
    (253/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07545736 seconds)
    (254/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070801588 seconds)
    (255/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066773171 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091019919 seconds)
    (257/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056331472 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054717192 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054586396 seconds)
    (260/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.055050409 seconds)
    (261/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068155736 seconds)
    (262/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067614181 seconds)
    (263/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075829415 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069089517 seconds)
    (265/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055287283 seconds)
    (266/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054388415 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067989292 seconds)
    (268/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.0551408 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.120242192 seconds)
    (270/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066427394 seconds)
    (271/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054229807 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075656632 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109079329 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135722602 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073910842 seconds)
    (276/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054038051 seconds)
    (277/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054815159 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.118125336 seconds)
    (279/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066755709 seconds)
    (280/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069221308 seconds)
    (281/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081187612 seconds)
    (282/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056330858 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164764836 seconds)
    (284/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055518356 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087344598 seconds)
    (286/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054577324 seconds)
    (287/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069571757 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090104099 seconds)
    (289/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075508736 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067759885 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074617677 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074036752 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089773903 seconds)
    (294/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068701482 seconds)
    (295/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055330717 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067469717 seconds)
    (297/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078240407 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09000997 seconds)
    (299/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055405931 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073506484 seconds)
    (301/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067535128 seconds)
    (302/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053703853 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067219765 seconds)
    (304/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077898635 seconds)
    (305/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054376411 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066556043 seconds)
    (307/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.235422462 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073289023 seconds)
    (309/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.056209394 seconds)
  done (took 31.357265353 seconds)
done (took 32.803233977 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085986243 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09599418 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079293088 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096498037 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084593382 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079424152 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076740626 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081641449 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083738165 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085249688 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082500471 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058837759 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078653628 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078897163 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078425462 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093459534 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082550096 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077101561 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077120232 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069007799 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07708507 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069019053 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071086712 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058311471 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.081514498 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074741005 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077497466 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077608095 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068698016 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069225592 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073132566 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077233139 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068378296 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082599368 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076331084 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076494563 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077985063 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07962447 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070715715 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068964123 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077896577 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068924167 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076288513 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076671799 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075372676 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074473733 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076832304 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080535768 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092509484 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071055421 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078331693 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078879097 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079851627 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076023288 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072947566 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076616632 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074066543 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092670074 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076761501 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071032274 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077339876 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076919992 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074099479 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077066532 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076482838 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.0789547 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079398688 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074274878 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078338759 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074981384 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068264011 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076867161 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072694091 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068543542 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07897407 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082926966 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06761297 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074445561 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076170593 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076686339 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068082995 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070400698 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070329324 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075282113 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071199042 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057814836 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072811214 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075228727 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067561882 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076655639 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075547425 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076514886 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070332884 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079639838 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068116601 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074127209 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068828489 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068942091 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070383857 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073260934 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068464893 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070721852 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078304359 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069627328 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07474454 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080389181 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067772976 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074824286 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06690183 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067280573 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081204528 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076920228 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068251862 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070034859 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06677347 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075092561 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066242739 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067315345 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067433184 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067141711 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073164717 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06802844 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069528226 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.216977298 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.083867528 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069363981 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.0739463 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071623663 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069080931 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075340561 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.069031113 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068828563 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.07072812 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065744573 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071152758 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069420639 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076463083 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07071077 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076752427 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070031497 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076972798 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073979189 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075184335 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074894209 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067631816 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062719664 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070810678 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070750713 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071132498 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068554089 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.07029875 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068243021 seconds)
done (took 12.983442986 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071736815 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.132340014 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.095614679 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095315925 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086279957 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069411238 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076765721 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.096122391 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070903769 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.098334997 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088183403 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086935644 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110143839 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067966196 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068659227 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073170249 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069907701 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081882185 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097612779 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087890276 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.112369269 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068274317 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09213868 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090045008 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087789724 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102703532 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069841126 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072991676 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072877043 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092112369 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089417851 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073196414 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069512889 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.095965557 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093785009 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083576721 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069196533 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083677 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069473636 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068802901 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070448056 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096879888 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080771769 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081233884 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072739052 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078173818 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070424877 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083314457 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089172676 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079826726 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085660566 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.099012188 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071640887 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084300272 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067796442 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086072693 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.077843314 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071253185 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069272702 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.076825368 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06926503 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072862032 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081487208 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081104002 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072895912 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084648727 seconds)
  done (took 6.938151047 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089092798 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09570389 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084923202 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087161573 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068671315 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069382337 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069417603 seconds)
  done (took 2.116166189 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072028531 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089403664 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.0900522 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09024022 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083132909 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092791449 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077586441 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069370439 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09296033 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070518427 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08839293 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098468404 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072429919 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081648299 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090680208 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069906591 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091297286 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069584435 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072164887 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091041124 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075343377 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.098184646 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07663061 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069982546 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082482753 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069956368 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112933263 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073134841 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07155241 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.07283499 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070557653 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105880373 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08228163 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076858373 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069897299 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08362348 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083305807 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072800928 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080637249 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077598381 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082270901 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070014361 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070339127 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.071135568 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073167799 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079243605 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071127056 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.074219822 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072770836 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088157541 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069169487 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081778077 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071894507 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074591614 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07106202 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07568957 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078917657 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070431601 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087800145 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071170706 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084430613 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084168206 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082568958 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084372153 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071650812 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082096806 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082301181 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072530396 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071380542 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073257577 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083638125 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068312718 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071592302 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079276985 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071855102 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090736645 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090544691 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070960623 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082034644 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069759957 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070168319 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069493301 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090441845 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07511338 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069629768 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073541843 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073179594 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.07275437 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068630442 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073665426 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06835004 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075400508 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072472946 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072455189 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072521285 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084300264 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072293376 seconds)
  done (took 9.122065107 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07299739 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070496068 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072547163 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070855469 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07062961 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070464907 seconds)
  done (took 2.004038268 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093196205 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07126323 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081829526 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074165835 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102556539 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087585772 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088866316 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079651672 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08457323 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079919845 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087849874 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089474587 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092584829 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074843625 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08831193 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073376414 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088409037 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07633156 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079656323 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07472743 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08675571 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074589623 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074650093 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08307468 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077540132 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074012856 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080272351 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080631821 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079738419 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07952792 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074066956 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077652454 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073106395 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079387713 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088215597 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07295879 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07341139 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07869634 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074251499 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080073984 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088394104 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074260746 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075605882 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078545941 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079194173 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072604499 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078781281 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080569368 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.088164103 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.079019514 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078648082 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073274639 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077234635 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.079610527 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073058278 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079032911 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.079000323 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087969206 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074165267 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072799423 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071139416 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077599663 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078588726 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.077853055 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078959246 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078676212 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072790149 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074228691 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07534977 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073975825 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078928855 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071411128 seconds)
  done (took 7.255159825 seconds)
done (took 28.968785348 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54675967 seconds)
  done (took 2.070225586 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.597902136 seconds)
  done (took 2.155798931 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.500032379 seconds)
  done (took 8.057809285 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.362073702 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.463129326 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.701432425 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136610932 seconds)
  done (took 3.243995603 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.709853826 seconds)
  done (took 2.276287791 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232176224 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221965704 seconds)
  done (took 2.035123711 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376837507 seconds)
  done (took 1.933063339 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.08803378 seconds)
  done (took 2.649175595 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.234454306 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175675043 seconds)
  done (took 1.97962205 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.452017666 seconds)
  done (took 2.023293273 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.800734222 seconds)
  done (took 6.365753677 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.215936977 seconds)
  done (took 1.82423941 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238538018 seconds)
  done (took 1.806100334 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.739671555 seconds)
  done (took 3.304711157 seconds)
done (took 43.295382799 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085645095 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085983406 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085967951 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083025639 seconds)
  done (took 1.887090448 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078428694 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075122729 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077819673 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074659495 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078400855 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074733536 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076193028 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077308852 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075009067 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075128168 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074774871 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.075008858 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077232588 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076379487 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07310636 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077011965 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077665293 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074857448 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077648537 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075161398 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072818109 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077122956 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077020137 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074009897 seconds)
  done (took 3.393234255 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080250298 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074704415 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077123128 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074036235 seconds)
  done (took 1.882770117 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081276758 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091724332 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08978842 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080483086 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092245972 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08699473 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07229527 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071266351 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072913108 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079870652 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070313339 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095620508 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089142974 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080157314 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082083619 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068500018 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070552209 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088144613 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080945538 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.081008594 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073329968 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080597301 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07091213 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090151729 seconds)
  done (took 3.513064502 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086882038 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101381492 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081625775 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09094077 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093833921 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067914402 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.08713225 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093133785 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124749688 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068040929 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073539167 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068016347 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076585278 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068478711 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082400832 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110866193 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111847333 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071331324 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099060043 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068295804 seconds)
  done (took 3.31284436 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075121105 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07181561 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072877251 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068043056 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079467311 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075070938 seconds)
  done (took 2.02061813 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071193537 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.07087883 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070084335 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069189312 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073774956 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069814891 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068655833 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.07026187 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070873098 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069771969 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069423524 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068508808 seconds)
  done (took 2.413999693 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.182773158 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071489653 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071228606 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068194002 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072292742 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069521509 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083075498 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070870798 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093745742 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06920892 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069125141 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070963353 seconds)
  done (took 2.566473767 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193463407 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077529322 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221855395 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147884938 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108569028 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111445155 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110460084 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109539678 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.13457254 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098892065 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157722485 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158749623 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10575924 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132717106 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089813117 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.10002725 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147631574 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158623959 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105004402 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158112601 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138760272 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123311737 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141696181 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100539554 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104602211 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118321103 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073604842 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080905487 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161439465 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127808922 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138385796 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110156881 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096359325 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168111437 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16122091 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135304892 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143547646 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084671627 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102452979 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.12846922 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186239456 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088524445 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.299467318 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110769788 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082565824 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131290239 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115325758 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117509683 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103404998 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090642125 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141910992 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174835236 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.129984126 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087977981 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121184578 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110993699 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110591925 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111024936 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170411324 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153413119 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125291148 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07375384 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10990699 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14569969 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128480911 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105597546 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120466173 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093908895 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128631108 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148039519 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119213621 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137000227 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.114191687 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089207597 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117461921 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133918545 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123588342 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154149716 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121375688 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075216453 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120016705 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09927694 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082093844 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144542387 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076366643 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166012688 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09881593 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104972857 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119914023 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105386701 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105835351 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147975759 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28565632 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103608308 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068575254 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104559281 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117594527 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139982168 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088002751 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106680099 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114743246 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079829439 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132357553 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077771065 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121452861 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079094881 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120839328 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127079001 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079026234 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119135525 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102731411 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100529767 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127685313 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151602951 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088769599 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082457293 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15879667 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119461039 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10120763 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137550304 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149757923 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100053679 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098281359 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141970387 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163942021 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090178216 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156089492 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10402658 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083974542 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087199262 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120039707 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10895101 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120511902 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082762648 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116004386 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158015608 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076936471 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09507865 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129648293 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079381044 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081515884 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103583794 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102681801 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095946442 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097514735 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100152328 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130458364 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27290901 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107408505 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1221574 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09867 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159875502 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088723619 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101495675 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103781805 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072560462 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.127978999 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148801751 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080554339 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155251507 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.118501832 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113498626 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116676389 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085462036 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133328655 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080815816 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072383826 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137636872 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108777229 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107401264 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.144305669 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114031921 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.122533539 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115896571 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127221291 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125633207 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125479444 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105538341 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088319717 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110408166 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124461342 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075437665 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090639775 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081358633 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104066613 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095507278 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085126636 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135893338 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119973681 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111254751 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109687253 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096786205 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139632744 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077115864 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122011509 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116022181 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095007649 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144774967 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144227074 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127268469 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096851218 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28739758 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07355747 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076181274 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088613561 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118757625 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084804131 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085159975 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112747356 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140907338 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124874524 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132750228 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119936516 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116725999 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148012363 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071759895 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118532764 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139692736 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118599877 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103962806 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090783288 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097762645 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136755298 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103997055 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169525384 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111149419 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120885929 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147987471 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100829464 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080810452 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101519685 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128083739 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101879149 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137082155 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097660979 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089035482 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106803 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079563824 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097633608 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123504077 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115529603 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131132417 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112453789 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129639551 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078688304 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111524596 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118217895 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117744069 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066134686 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114401138 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151381839 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094820448 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113228397 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300025118 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080332256 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.13346478 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165212751 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139080115 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085394301 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106266426 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117124332 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124255122 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116411593 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133690751 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1045783 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132678971 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108495128 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086169735 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088860814 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095896921 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102384059 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093271446 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103153212 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.111289435 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09629752 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127646467 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103139472 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108378948 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115175169 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099716919 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092022213 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096676686 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166390572 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115178808 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161425063 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099406521 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.136539991 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154535027 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076914484 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080535763 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079470058 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133535582 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086013618 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127168638 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.10873954 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114857848 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120562001 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134027156 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094909718 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070701727 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106105854 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128154654 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120051317 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097009355 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10087883 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152064559 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.095498912 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232733662 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111149816 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114784911 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103863014 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162395855 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065171264 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104399725 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078632446 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081656749 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12284946 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143985859 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081680164 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.099752417 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117599765 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110534611 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123303878 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099502379 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109690768 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121928071 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1426479 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123505642 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090032873 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108933566 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123520572 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148782869 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102111241 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097284156 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166581868 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145130017 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.151617708 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087157851 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111662235 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111673775 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10729417 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134181231 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084644433 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154385492 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083000786 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132076447 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10171648 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088890864 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124848 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.109796868 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088326847 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138490936 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113548418 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083712033 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078276291 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112905218 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115372743 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102243636 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075825934 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287390653 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076846393 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129536258 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154540947 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083095081 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104243541 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096600083 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081933163 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104377244 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101666923 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087897974 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.101435532 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162818837 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087293183 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141914916 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129662164 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109679714 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130091603 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101780097 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638163512 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07940261 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145051182 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112743879 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162294588 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098714848 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114968722 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10758853 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118129961 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137972466 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101427165 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176190997 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127528281 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113811397 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080332904 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101578804 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103325763 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087477196 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105842906 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111422018 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113293947 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092800684 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113713635 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121228581 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083848543 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095826301 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147910955 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112549659 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137186851 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13266505 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084957145 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114223889 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286819288 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082025165 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.115771512 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14492261 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104817253 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09957533 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083694412 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09910977 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154232397 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075374712 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152393 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121359846 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107510576 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110601575 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109808953 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127392442 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103758097 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119123862 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092086381 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.106301612 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111578628 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082401472 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078393524 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103621746 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10835186 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098104654 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096551669 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100031486 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144327358 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07440963 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097746331 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113128011 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137730858 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164164058 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087767106 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083933031 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116757144 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11354061 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110214156 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118600545 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080399785 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082689967 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081138177 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.08215873 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106314117 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112062535 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112041169 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108198087 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154587817 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083694097 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222750141 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094198776 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101796166 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070724632 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078219683 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094939633 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094982641 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258176014 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111446862 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152743027 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096301843 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090568393 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091517086 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077521204 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085494212 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123149019 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106906289 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116446884 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100656248 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065250996 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106026838 seconds)
  done (took 57.85887379 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109543848 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08387211 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097887595 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143924882 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122058527 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199946526 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156280941 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189056775 seconds)
  done (took 2.806484899 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071226654 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095951465 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104321484 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084410778 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.0696706 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071584673 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.219276939 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082328504 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069052788 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094232834 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079427041 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071398696 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.412935043 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068556724 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06972702 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06419347 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069848146 seconds)
  done (took 3.491198235 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.377299609 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.618002981 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.332247903 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078841311 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.940103738 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092214852 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.171950222 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.135838409 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08050768 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.54536886 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.406325387 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134080175 seconds)
  done (took 18.614638332 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086331893 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078859888 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.092060578 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091521886 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081391501 seconds)
  done (took 2.198637972 seconds)
done (took 107.551955433 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085861963 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.586569766 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057561236 seconds)
  done (took 2.366684732 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089207298 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087922121 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08718356 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086356821 seconds)
  done (took 2.056678487 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077460582 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079303093 seconds)
  done (took 1.857775605 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225305258 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.168719153 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097668592 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084913824 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082211603 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08362884 seconds)
  done (took 1.950393286 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075593725 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077197429 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076164271 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079342882 seconds)
  done (took 2.001701124 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079879036 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056558133 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058134522 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060762789 seconds)
  done (took 1.951537922 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08881153 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.0839573 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080392303 seconds)
  done (took 1.947762359 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101167406 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089384495 seconds)
  done (took 1.886765433 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084303826 seconds)
  done (took 1.783986542 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094424958 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100085731 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129662873 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110152472 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135620824 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107248722 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085813903 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08685969 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078306892 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088039637 seconds)
  done (took 2.714565878 seconds)
done (took 22.796959566 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080214075 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.3757253 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362560427 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092054561 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672417453 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35991781 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.983316251 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095548652 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.140831758 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070511919 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087421336 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652360436 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.976704548 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.332107021 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.958412733 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331055231 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653289653 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071377668 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070745155 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070989175 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.966481754 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071026208 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071111819 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072637888 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654668626 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375086718 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071611003 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.332939539 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071333374 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073219443 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359331809 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089857308 seconds)
  done (took 16.32141052 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074495536 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12112747 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075791807 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087520319 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073150954 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072798581 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075100806 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072553463 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122077322 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070754346 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087804782 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071113883 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074562293 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071638708 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089853488 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071312634 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072425059 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071759921 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074702766 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071863421 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08983705 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071387355 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071806971 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072592087 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071400732 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082917039 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072064876 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071732395 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071993753 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073834452 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074586858 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072570062 seconds)
  done (took 4.212805948 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117930272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125970206 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076650649 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107113998 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113952255 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073437314 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143623464 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096489217 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129471088 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071156925 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088334966 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071845791 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104241216 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072123223 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091430809 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072063175 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072909758 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07198392 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071700508 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072016649 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090728345 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071560111 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071834542 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072357263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071926743 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084621156 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072122433 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072047806 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072190923 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073456174 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075326971 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072107759 seconds)
  done (took 4.459139883 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075942744 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078221249 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085786476 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086932987 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072268399 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074909953 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076218483 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072639335 seconds)
  done (took 2.3409419 seconds)
done (took 29.039963307 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082814583 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072613354 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075176756 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.091067724 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076714139 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080106758 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070244099 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078694705 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076387857 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07582329 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07741656 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070111388 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07439475 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069926933 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077122791 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071243981 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082370195 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075000776 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081660975 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082100224 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073358327 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076252467 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078319263 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082231753 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081543786 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081603651 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080139991 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076119616 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.0720547 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074136202 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080812832 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086555294 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071539725 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081859309 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071353227 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071316347 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074998966 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071505665 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08174498 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079987352 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073144373 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080037786 seconds)
  done (took 4.927736534 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090117666 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093812065 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086603229 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064800293 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06881864 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068149402 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.09088808 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063770874 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063656733 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089718432 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059785968 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062342819 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06591155 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057400687 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063124098 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060903907 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065229377 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058618573 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063068945 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062528641 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090856432 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057605967 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080116278 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066404326 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060102412 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065115362 seconds)
  done (took 3.543771534 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077746112 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08560101 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092494256 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143989835 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113549166 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080586315 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081278606 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095538503 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09673301 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070080331 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07452724 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095751656 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090194562 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076915999 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071530405 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087885404 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088683462 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072555002 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076140178 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094383007 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088472606 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088127812 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094045731 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086669705 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.0702046 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073142324 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074093938 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084181091 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073163308 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079783028 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073706457 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073949635 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072894541 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081705845 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073785291 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072764338 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096106499 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080656068 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081479434 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071417726 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078279874 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072055517 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094201698 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125989755 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070091163 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076136262 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074381887 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080068181 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070029335 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096310173 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081518644 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070607213 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074227696 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070271255 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070630431 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073692754 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072758162 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073128843 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.0791112 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075882047 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094799769 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075614354 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086597608 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070396107 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07848065 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069946354 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071710952 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069973038 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095713104 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072302944 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110319409 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071743266 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071626357 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079190294 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.0782514 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077439215 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070767133 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086399044 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082832972 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073650435 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078452202 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073966875 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073206788 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098731801 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073495222 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072209259 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071663147 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075950997 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073568583 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071774337 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08293874 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070502497 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073363684 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086931526 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070799058 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072016365 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076092089 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075030639 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070139856 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081227745 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07456865 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071276203 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079430656 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070328373 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073005816 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081427372 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07662483 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069692347 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074237189 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075207155 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070732509 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071503324 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07234933 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071821343 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078423234 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076141145 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074108967 seconds)
  done (took 11.03421547 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160780576 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151495927 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074487077 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144924483 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079193244 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081379386 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145778565 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09485739 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071073261 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072111626 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071301822 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110478038 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105939254 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11695524 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081055515 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070935423 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09314795 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114394059 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.14742373 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143592968 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093351663 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07943945 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073549542 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072763574 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073115547 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080645903 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087565537 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079543458 seconds)
  done (took 4.536816009 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082942001 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104081484 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077552544 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092366021 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092186542 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071126647 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073704131 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072799451 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087257705 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080612026 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070972945 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07553635 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078071919 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07459248 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071944904 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077609244 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077358546 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072456186 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074243426 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075565883 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080814154 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093873824 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074369556 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.073506816 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075862751 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070550606 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066928956 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086185251 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071559949 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095440803 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069106451 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075807543 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08421268 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072664584 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071099813 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071031234 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070973574 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070644703 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073119261 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.0697476 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069542609 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06107505 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070155927 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08134753 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084019517 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05989875 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075368966 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.076397887 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076256723 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068461745 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073788759 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074029594 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073885254 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077967621 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074937559 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076203995 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072443624 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.07671736 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079292047 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070853321 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.0686192 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069451129 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07555194 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067993368 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08562273 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07583304 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06980704 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07110085 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07247962 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084073086 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070936083 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075702118 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068822816 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07294582 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075687658 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072812727 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072390894 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069746839 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070811527 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071635101 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059217502 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070735382 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05718135 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.0738041 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069134326 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069624916 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070776304 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075402506 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081678947 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072443589 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076649366 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072075277 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070129372 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074033083 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063512477 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073653477 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081005076 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084469565 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071142561 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068859117 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082711793 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076021807 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070317791 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.060103111 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075168479 seconds)
  done (took 9.588190921 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093532545 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073234347 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084369951 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091286009 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089487459 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077219238 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079884117 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072864005 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086522177 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076858966 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07946353 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071015371 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081139686 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079909662 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072607281 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08052933 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074765748 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086608794 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085045198 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071750022 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079277799 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083242747 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091903972 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083120507 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081586325 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083291444 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091937603 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080096109 seconds)
  done (took 4.049731343 seconds)
done (took 39.394100202 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.82260867 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.981004686 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.802831021 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.134456995 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.882136602 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.98821492 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.869180797 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.797310214 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.030469659 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.830579554 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.055764433 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.866594385 seconds)
done (took 65.924260129 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.8330833 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.941199403 seconds)
    (2/2) benchmarking "String"...
    done (took 2.028049929 seconds)
  done (took 5.696648792 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.032567419 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.373104768 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.04446361 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.798376498 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.802112397 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.115239448 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.604410338 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.31999837 seconds)
  done (took 30.787417813 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.967539504 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.019757037 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.500345306 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.531687398 seconds)
  done (took 15.79700099 seconds)
done (took 63.965430965 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.836216563 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.844340816 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.830257675 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.782310113 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.856558013 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.821974686 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.308187872 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.874728538 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.797198184 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.792838217 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.800770136 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.226325125 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.800839677 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.095374141 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.798190379 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.807352917 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.805749622 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.476271823 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.95385733 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.8194002 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.81663566 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 7.000604747 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.798816759 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.808972989 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.805265099 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.800100335 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.194572995 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.799349116 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.42621255 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.7977035 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.830707817 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.835901187 seconds)
  done (took 204.970658492 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.799539976 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.829107977 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.889826434 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.816654498 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.310896135 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.980226081 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.904747082 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.453148014 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.802987409 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.819677171 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.970136006 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.805013106 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.986696954 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.746106135 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.829314793 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.811918183 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.050428461 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.005041049 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.836565657 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.953517662 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.801429819 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.863398149 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.814930436 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.957428558 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.846469439 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.825746517 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.8097271 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.830980952 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.991630608 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.027826529 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.805864836 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.827444211 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.0041939 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.67110781 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.810829894 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.83159909 seconds)
  done (took 171.052819827 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.994451682 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.801726547 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.802256925 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.799679808 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.806959902 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.801642306 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.926326602 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.926181509 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.422802434 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.800393932 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.41202391 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.855801163 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.802237636 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.593177421 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.79987562 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.869650505 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.811594551 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.802442969 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.818425496 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.827848567 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.805393917 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.80274632 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.929273377 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.812403663 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.804653374 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.808969725 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.803925098 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.809869819 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.178346853 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.801978614 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.798915224 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.801177677 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.808612166 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.042344226 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.802419113 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.802697322 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.650926426 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.868190186 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.891787331 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.804167395 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.808497607 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.801839382 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.022289638 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.801325038 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.803864954 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.803693221 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.808011896 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.946561258 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.801305498 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.93016168 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.802126852 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.283042799 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.801671957 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.803752587 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.647899005 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.632103049 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.80014928 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.808453269 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.806548533 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.801443276 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.816131236 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.656700342 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.881881874 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.80374641 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.804700997 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.809586184 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.809480519 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.803837072 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.044164931 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.802164971 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.383161087 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.862459268 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.038708739 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.924184545 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.80729575 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.870512697 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.895962999 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.802768213 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.805553261 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.805261891 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.804362727 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.885213716 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.802702246 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.965034538 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.803705366 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.813657389 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.805495299 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.859212498 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.873948178 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.805336945 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.661324525 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.807361465 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.806297886 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.076425011 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.869691457 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.80507308 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.80841511 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.947031499 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.926232425 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.521919969 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.804320608 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.598112036 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.954050906 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.803356856 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.951794338 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.804821776 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.888857128 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.809374614 seconds)
    (108/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.809265108 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.809337118 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.838521357 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.809053628 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.859808421 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.807229538 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.183055805 seconds)
  done (took 406.780803643 seconds)
done (took 786.583338351 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.395245643 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.368298097 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.473524045 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.381539083 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.365099765 seconds)
  done (took 13.716494208 seconds)
done (took 15.45109029 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.898395368 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.901067598 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.829375172 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.898477402 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.826886989 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.897542542 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.881183305 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.830921802 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.865711768 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.830997748 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.866195341 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.830907524 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.81639559 seconds)
  done (took 25.907033033 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.05922562 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.049855272 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.876460471 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.04256281 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.851757758 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.051559645 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.969058092 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.95777398 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.95766408 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.822100534 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.82097626 seconds)
  done (took 23.195706273 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.04879435 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.050612155 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.88464421 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.049411861 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.85762295 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.045060198 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.983623681 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.959932717 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.962239879 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.819117646 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.82163672 seconds)
  done (took 23.220756837 seconds)
done (took 74.057297625 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.819700646 seconds)
  done (took 3.556231193 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.844556295 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.013716207 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.820040683 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.822617187 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.815986155 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.816504966 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.822916682 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.816459099 seconds)
  done (took 16.510106696 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.815842479 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.816043687 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.814655687 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.813162385 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.81666409 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.817544468 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.806847904 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.812487624 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.818348418 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.816385219 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.811797649 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.813211764 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.816799907 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.818116495 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.814197451 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.819572048 seconds)
  done (took 30.780814216 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.817013556 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.815155097 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.81413728 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.814774247 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.815353784 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.816013258 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.815068609 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.812278963 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.813983637 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.815528584 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.810374505 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.814932602 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.811620718 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.815565754 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.814698307 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.8169432 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.816791672 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.814021244 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.819426944 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.815153745 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.814976444 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.814411874 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.811711332 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.814284525 seconds)
  done (took 45.294292027 seconds)
done (took 97.878469203 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.545510443 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.421437898 seconds)
  done (took 9.698637162 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.820974266 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.81505012 seconds)
  done (took 5.440894274 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.816106567 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.816950484 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.816332635 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.817211672 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.818657486 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.815753045 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.81652156 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.80799192 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.814701196 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.814585405 seconds)
  done (took 19.893062415 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.813104484 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.816047842 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.813705582 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.817390275 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.816359348 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.814485075 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.818651602 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.81519465 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.817897508 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.817262028 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.812300725 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.816839162 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.812336833 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.812330807 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.817690455 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.813589254 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.818208829 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.817215082 seconds)
  done (took 34.404399086 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.816297055 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.820187366 seconds)
  done (took 5.376934903 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.814247547 seconds)
    (2/7) benchmarking "second"...
    done (took 1.814916405 seconds)
    (3/7) benchmarking "month"...
    done (took 1.818509564 seconds)
    (4/7) benchmarking "year"...
    done (took 1.81929972 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.815185661 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.817113543 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.809949329 seconds)
  done (took 14.451644854 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.817021898 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.962202789 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.025505023 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.47702154 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.82145317 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.823389082 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.779013998 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.82127855 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.825319925 seconds)
  done (took 20.095497924 seconds)
done (took 111.096019969 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.676588861 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.813418084 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.030953806 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.870481125 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.867989858 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.160106106 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.833432368 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.091719602 seconds)
done (took 43.083234895 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.817833954 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.560746299 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.591589624 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.835409947 seconds)
  done (took 15.728019867 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.804820042 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.117634637 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.817291977 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.626064409 seconds)
  done (took 22.164974578 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.17789449 seconds)
    (2/2) benchmarking "read"...
    done (took 2.162011123 seconds)
  done (took 6.083017339 seconds)
done (took 52.537194019 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.819839229 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.8147787 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.822297305 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.819214717 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.819667764 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.823261802 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.816086315 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.815058595 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.820862319 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.82025994 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.81625523 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.820914365 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.823788115 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822777642 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.816622596 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82154788 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.817333829 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.821373108 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.818837228 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819004899 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.821762312 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.819626761 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.81433407 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.822051758 seconds)
  done (took 45.404414985 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.822187155 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.820299557 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.822175319 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.822050207 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.819582646 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.822994283 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.823659073 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.817832995 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.824968411 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.82138866 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.820278597 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.822806505 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.822724362 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.822988038 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822721473 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.819534966 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.821167825 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821209295 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.824712586 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.819420824 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.825263518 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.821911885 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.82113031 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.825641519 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.822661593 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.819423356 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.823952259 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.81969564 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.823411957 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.822790386 seconds)
  done (took 56.407280711 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.823867926 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.830236287 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.825045424 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.825481041 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.822676399 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.822985478 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.823434728 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.822492316 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.822101343 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.821865753 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.824825911 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.822039478 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.824631496 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.825131713 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.822819903 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.824850536 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.823219898 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.826579574 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.824965952 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.825986581 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.821409348 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.823611762 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.82557393 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.825297968 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.823756602 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.829056722 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.825872247 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.822371765 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.826592146 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.826022003 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.824948578 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.825711712 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.826266903 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.82601631 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.826580184 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.825480833 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.83184258 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.83497714 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.826889118 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.823275019 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.823032236 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.82575572 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.824181754 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.828017533 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.823800356 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.824319717 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.828250809 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.825811308 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.826546812 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.822228276 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.826207985 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.826026899 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.823784849 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.828619142 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.826783303 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.829279627 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.827677065 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.828474564 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.826713758 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.827020433 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.82624599 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.82796998 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.824938863 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.824374223 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.82588852 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.823641353 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.825764533 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.827112081 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.826342253 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.825097343 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.828438763 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.828859688 seconds)
  done (took 133.194043074 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.827186405 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.828289793 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.827246781 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.825856758 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.825585243 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.828227743 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.824079131 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825794801 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823701045 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.830974796 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825910184 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.826797416 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826804026 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.828535969 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.830322374 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.824320631 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.829049497 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.823933327 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.831185626 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.828964244 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.830393495 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.82404405 seconds)
  done (took 41.942391234 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.831002171 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.831401486 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.828534322 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.828548645 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.8284243 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.828817509 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.829426831 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.831821776 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832177855 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.826442646 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.825811948 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830015318 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.829695064 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830063336 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.827624905 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.826456289 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833194347 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.82709393 seconds)
  done (took 34.677073309 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.827834966 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.828544501 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.831720222 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.824646644 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.8298762 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.829094454 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.828164838 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.83024281 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.831386198 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.827376872 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.827151635 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829453788 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.834389094 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826462782 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828042529 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.825091989 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.828123124 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828733293 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.830619779 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.825566001 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.830093327 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.833073887 seconds)
  done (took 41.983849352 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.83172526 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.829455952 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.828968264 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.828105441 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.824863626 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.832664275 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.832983461 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.827594936 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.832221338 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.832234262 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.827623666 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.83138213 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.82899089 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.830170294 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.828736025 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.829128358 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.831801534 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.828914222 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.832617941 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.827903298 seconds)
  done (took 38.350348313 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.834165228 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.832766421 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.834644509 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.83117561 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.834179604 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.834433736 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.832337814 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.832353874 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.829156011 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.832318625 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.831678141 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.82926388 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.832288702 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.832559756 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.830940084 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.831580625 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.834218629 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.829381734 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.830566158 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.83056965 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.834047603 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.830744297 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.833784832 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.835657043 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.833820924 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.832041367 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.833400285 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.834720796 seconds)
  done (took 53.059183025 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.828119789 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.830744988 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.832498333 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.828960399 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.831752646 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.831789763 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.831808928 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.829163746 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.827361964 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.831642394 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.826365635 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.831000239 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.831793954 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.834180127 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.835817253 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.835535739 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831687021 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.834728395 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.833214762 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82759191 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.834052767 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832526933 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.833498783 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.82964833 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826964561 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.83167188 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.827398609 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.830964485 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.832851583 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.828630548 seconds)
  done (took 56.685710357 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.852146186 seconds)
    (2/2) benchmarking "in"...
    done (took 1.847875603 seconds)
  done (took 5.453217524 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.828150122 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.834635134 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.830140874 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.829425547 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.831473885 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.830465542 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.830360359 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.832344704 seconds)
  done (took 16.401079481 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.831367569 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.834642133 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.830809336 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.831049661 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.834384698 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.834578074 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.841456825 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.834448559 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.835151467 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.834841361 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.841441553 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.842932783 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.83877342 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.832060434 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.837312243 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.835020419 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.833326065 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.833798589 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.836389335 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.832936831 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.836572172 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.835273163 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.833443836 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.828782662 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.839062181 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.849674478 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.838421188 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.835723306 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.836185695 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.836554004 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.837820399 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.834519556 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.838826897 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.837330227 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.834192009 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.837887962 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.846645626 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.838619163 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.846497172 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.841539586 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.83942944 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.833555309 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.841943374 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.839164292 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.841430346 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.837606715 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.831946442 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.831323801 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.83634526 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.839086751 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.844178305 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.833099083 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.834762302 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.840928063 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.838704561 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.850222753 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.838880647 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.841632043 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.849038458 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.848172851 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.852147663 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.845192122 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.84053219 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.840395088 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.848303755 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.862994248 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.845019242 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.841734111 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.831691073 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.837073673 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.845031267 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.854317304 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.853879791 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.840841929 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.842927415 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.838359015 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.837532647 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.836413133 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.843305857 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.844970454 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.839775782 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.839073246 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.849501253 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.866026986 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.840568074 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.840162942 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.843475934 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.843531926 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.841388669 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.851145986 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.837633825 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.842184155 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.836780261 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.838806495 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.841399766 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.845280165 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.842328265 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.840242809 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.83547355 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.845795098 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.841997051 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.848218495 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.852411056 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.840923074 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.843570236 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.848080225 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.837110808 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.840687838 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.849449133 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.840768195 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.84162946 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.845797284 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.848986205 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.84252643 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.845567441 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.846635312 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.840028429 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.844495578 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.845946764 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.837595138 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.853398271 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.874246275 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.842980571 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.844044907 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.847941065 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.85874924 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.843170399 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.85064522 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.844863073 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.838014158 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.843316499 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.843117574 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.845098655 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.842116036 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.842241471 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.843229558 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.843142185 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.844619691 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.841057489 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.843808942 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.845452507 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.843066678 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.846236557 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.842856147 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.845297298 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.848519586 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.848315826 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.843651876 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.84644874 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.841821236 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.843474004 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.841702761 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.838343496 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.847311662 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.842586961 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.841353985 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.839673133 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.843156642 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.84107888 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.838852794 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.844900268 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.847316982 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.85053744 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.849714821 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.850764608 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.838929249 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.844106625 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.844221912 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.844735412 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.842740239 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.843694307 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.844375203 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.84616418 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.855525319 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.846424218 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.846677348 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.852065498 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.846097651 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.850047841 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.846847532 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.849009444 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.855632549 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.842858552 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.853807166 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.848781004 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.848632697 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.846628968 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.846275652 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.846663491 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.850250778 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.851948031 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.856876052 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.861195908 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.857760139 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.849303866 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.852151224 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.848903604 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.852823392 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.850589244 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.848699617 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.848414035 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.848558304 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.846179995 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.844785873 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.844439623 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.848416302 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.845511746 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.848308137 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.847854755 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.850257373 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.842609505 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.846956056 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.846799767 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.846691218 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.845327007 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.847620523 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.848423035 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.846767202 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.849245188 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.847284343 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.843521139 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.847646727 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.855246209 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.842811084 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.850724252 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.84955005 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.85021086 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.848764275 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.844294155 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.85171912 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.850871183 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.85561257 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.850745515 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.848165643 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.849155238 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.846125077 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.8474112 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.849886543 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.846411096 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.846166316 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.84844335 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.859941494 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.850842246 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.848932941 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.851487953 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.846294475 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.846415756 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.860289786 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.848685192 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.844823771 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.848824005 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.85333333 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.843822031 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.850524253 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.848854 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.851223543 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.851030515 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.848427588 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.849795804 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.853222303 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.845943088 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.849571449 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.851410556 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.851149576 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.860620828 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.854254252 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.850815364 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.85409989 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.852190939 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.852700473 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.844546338 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.850280412 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.846219465 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.860452698 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.861228001 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.853394169 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.849947844 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.845940636 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.854363992 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.849821016 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.851665818 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.849186511 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.848421656 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.846960289 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.844185501 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.847218428 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.847423786 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.8532674 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.85201093 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.851622881 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.851615658 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.853380559 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.852169879 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.84785251 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.851493061 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.852510136 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.853537843 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.850465493 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.853609549 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.852212778 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.850472551 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.850550151 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.863690144 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.855253174 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.852503052 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.853601485 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.852343939 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.851990143 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.854273753 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.85188192 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.856540449 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.864412894 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.856670186 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.859437552 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.850711342 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.863739417 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.854472723 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.856640791 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.862235235 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.851228866 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.85504328 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.850635111 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.853515546 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.859642982 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.854029655 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.856517114 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.858676299 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.854590433 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.853507817 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.854129299 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.855642992 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.854849774 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.855159797 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.859997085 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.858390048 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.860124159 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.856322257 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.851152528 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.855487684 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.853512893 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.857250554 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.86132794 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.857788927 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.855121679 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.85209377 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.857778137 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.8486202 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.850956431 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.855627913 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.849640761 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.852888991 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.86168584 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.857177475 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.86336563 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.853170574 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.863471194 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.856577462 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.861125859 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.858344076 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.855085171 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.854599923 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.854423534 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.855916678 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.851979157 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.852036275 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.850278304 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.858168099 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.860341539 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.858090828 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.858142513 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.859314572 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.856456293 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.858081611 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.868588595 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.88715799 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.855661804 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.863371973 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.854148314 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.854996656 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.864980187 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.85869536 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.85640144 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.860714716 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.873858199 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.864950387 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.856733035 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.85704117 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.854580029 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.856860802 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.856910071 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.857946759 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.857740101 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.857995427 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.859817587 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.857072775 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.864346575 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.859032592 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.854469228 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.857042821 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.853957211 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.868911331 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.85478724 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.857243287 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.856206463 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.85572852 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.860679977 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.857362153 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.85840788 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.853623862 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.861132381 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.861907028 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.863857403 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.868843702 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.860820891 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.85302607 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.854256223 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.859450123 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.860475118 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.856337769 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.858898649 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.860495246 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.859366238 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.864420613 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.860399612 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.854276246 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.851632406 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.859940894 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.855540851 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.862877819 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.866487074 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.860263894 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.858195386 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.857835303 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.855481867 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.854312271 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.861987772 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.866596051 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.864691195 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.872361654 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.863780211 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.861658207 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.856490912 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.860807497 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.868363849 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.857957355 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.85858533 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.858795452 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.863206639 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.85779839 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.861527359 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.862747502 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.863180567 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.858691675 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.857347871 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.863904544 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.855993967 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.857660495 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.85892459 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.864188452 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.860658973 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.859358666 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.858066793 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.860231989 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.864823625 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.862313272 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.860037184 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.862225927 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.863116436 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.863330119 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.86853574 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.85761335 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.855560014 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.857049262 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.862653974 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.863514744 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.85855145 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.858231573 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.863396148 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.858160861 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.86832519 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.865972387 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.850846373 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.863605368 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.863305182 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.857912313 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.860353874 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.862957204 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.862016881 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.860603991 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.859703588 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.857442507 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.864057181 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.861081324 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.858712155 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.864904915 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.863799037 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.861891179 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.863439148 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.870991481 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.865693826 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.857885029 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.863482508 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.857890674 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.861126046 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.860904832 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.860026066 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.862214147 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.861611739 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.863241731 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.86283558 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.860629699 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.863732997 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.880696887 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.866463102 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.859989406 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.857420773 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.864058795 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.855489976 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.857212235 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.862547995 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.86427615 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.861294846 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.869271425 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.865752458 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.867312298 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.858156965 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.865606859 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.862612496 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.865171522 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.869966076 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.858448213 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.868005574 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.858859379 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.867356985 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.883606245 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.860570934 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.871567317 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.888873478 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.859125985 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.864233299 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.85811234 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.862592465 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.859821804 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.865181015 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.864211458 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.864604629 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.86115685 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.859282184 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.859533165 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.868181567 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.861602626 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.856486565 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.864634876 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.857521802 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.866570115 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.854410948 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.865473753 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.86029364 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.862436166 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.858976287 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.859931996 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.859577499 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.874223793 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.870099091 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.86339244 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.859479586 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.857532386 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.865177366 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.864190012 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.870218883 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.872315958 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.86101776 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.861754971 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.86305648 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.863587367 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.856799276 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.861976026 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.859664798 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.863987137 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.859921995 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.873022675 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.874133229 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.865657738 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.861856944 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.865559613 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.858992086 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.864625867 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.862725748 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.864820095 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.867344021 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.861415628 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.862926463 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.861523473 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.863210628 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.864391276 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.870699992 seconds)
  done (took 1106.067706679 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.857317939 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.860457524 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.861512445 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.85929004 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.859269189 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.858016686 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.862329049 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.860914994 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.857996623 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.85752535 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.862574654 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.858575434 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.857393282 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.862072739 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.863493246 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.860112158 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.863353313 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.859183511 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.859054303 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.860302533 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.861851721 seconds)
  done (took 40.84135084 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.860989198 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.859070087 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.86044522 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.864045072 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.857655742 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.862312429 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.859363758 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.862195286 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.862825877 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.86359472 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.860166258 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860694057 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.858017266 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.860158507 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860209643 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.862033429 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.860015026 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.857325689 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.861326771 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.857412979 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.862435531 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.862085759 seconds)
  done (took 42.715700816 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.862312408 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.861742376 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.857896674 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.852672072 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.856637878 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.851145972 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.857354373 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.854692817 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.855655897 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.854073589 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.85566635 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.858235075 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.868307155 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.863312082 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.858566029 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.855718202 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.998234843 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.858414622 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.863959495 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.855374247 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.852571615 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.860061528 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.856984242 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.854127453 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.855949042 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.859571425 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.855204791 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.857673449 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.854146916 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.861175655 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.851693536 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.847406907 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.847783053 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.851399066 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.849458976 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.85039998 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.856071794 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.850171899 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.843989204 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.846984921 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.862285535 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.869183791 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.849458893 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.852862268 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.849559175 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.849141888 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.850992591 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.858845114 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.845232157 seconds)
  done (took 92.831267203 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.848702831 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.845052142 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.845089907 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.847295654 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.844752013 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.846462086 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.851318688 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.850197206 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.846507465 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.846732222 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.849048883 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.848484414 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.851619633 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.845444094 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.847297079 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.846555201 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.846146846 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.846822217 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.844460784 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.84756932 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.846467937 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.846871236 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.849226313 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.844065268 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.846880419 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.848890522 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.844101166 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.84685053 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.846386413 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.840171603 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.844093325 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.846204643 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.846123158 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.844631688 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.845020466 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.848253143 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.844195943 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.848751388 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.853358389 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.843058233 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.847254902 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.847245537 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.847888046 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.845041834 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.848317069 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.844850313 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.840017389 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.843127148 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.842622572 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.847682244 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.84708268 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.847756966 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.844316661 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.844436999 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.849666282 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.849590529 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.844489902 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.844396869 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.848445533 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.843441577 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.851146034 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.843444007 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.842749685 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.844423038 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.845416062 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.842915213 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.84091166 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.847613166 seconds)
  done (took 127.313939542 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.846826699 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.845344631 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.849377226 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.846543009 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.848808116 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.846447229 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.847283322 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.853891338 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.848766214 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.851136402 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.851186049 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.850328823 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.850895264 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.852611577 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.849978785 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.849525504 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.850249019 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.848694534 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.848961235 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.85020919 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.850247136 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.847961856 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.849032685 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.849643143 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.850388881 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.849026475 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.849203565 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.848603504 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.849003652 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.850937971 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.849008007 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.848975319 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.848621171 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.846855194 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.850412028 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.84851898 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.84468806 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846543797 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.849985432 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.848757688 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.847277656 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.849734279 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.849565133 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.848553255 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.845971238 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.851374188 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.851770362 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.850357881 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.845305504 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.846677588 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.849534104 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.847699828 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845794434 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.849018249 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.845086594 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.846781223 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846212234 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.848917804 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.847523499 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.849549341 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.84910837 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.845938152 seconds)
  done (took 116.386775997 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.845202347 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.846576679 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.845239699 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.84212463 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.848715795 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.846267158 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.849142975 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.846274132 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.847632779 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.849122259 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845586031 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.847744471 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84359178 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847959425 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.848899474 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848864141 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.843631254 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.839829268 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.84585737 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.844304492 seconds)
  done (took 38.688058773 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.847680912 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.844988558 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.845190439 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.840535514 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.842818676 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.843225968 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.842230231 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843619662 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84265986 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842106635 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.845503989 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.839560613 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836586798 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.840516894 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.840993004 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.839533777 seconds)
  done (took 31.245834276 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.839251734 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.842080129 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.847730798 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.841166685 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.842032309 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.838075965 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.842518014 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.83902638 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.839924466 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.847288804 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.838799926 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.839996621 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.841151385 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.841115059 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.839306979 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.842405234 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.836678236 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.836745401 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.83859252 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.838445363 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.835635223 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.833469793 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.83938923 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.837213393 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.835159109 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.837734461 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.837025046 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.836000259 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.837437365 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.838609773 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.835796302 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.840658956 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.836204913 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.83753238 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.837536001 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.835869288 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.838205758 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.840042985 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.839604359 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.836458513 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.838267121 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.834485966 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.840556445 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.8356235 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.835858727 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.840576584 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.836922643 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.836751592 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.835621348 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.831443893 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.839020529 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.838984649 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.837817995 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.84025913 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.835929675 seconds)
  done (took 102.876004033 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.836616254 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.834915765 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.837195625 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.833251022 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.838125799 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.832289313 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.835902484 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.834196137 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.836273302 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.835185996 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.835324947 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.836218606 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.832808736 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.837150323 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.834174738 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.836280285 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.833214075 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.834996806 seconds)
  done (took 34.788175417 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.835105484 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.83685188 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.837835724 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.836299018 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.836419279 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.838133876 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.835745549 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.837474158 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838224119 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.836341254 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83458969 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.839726743 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838657534 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.838953565 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.836646379 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.8366126 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.841258954 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.833819638 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.834328309 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.835088222 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.838442105 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.839077424 seconds)
  done (took 42.171053011 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.837814401 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.835718587 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.851236317 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.857192375 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.860870703 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.870664001 seconds)
  done (took 12.870089747 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832469307 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838748189 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.835128224 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837593633 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837921405 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83458874 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835498943 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833766164 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836161362 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834368729 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834072444 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835960215 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834701679 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836072112 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836986297 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838203542 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833760465 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832199123 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834283695 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839023352 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833487149 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839094992 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83552603 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833580441 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835895593 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83495246 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838745096 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835304183 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832611485 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836310141 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837279048 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83274799 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834527303 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831308802 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835683905 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839265708 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830694821 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837316732 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832975743 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834503457 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.83236023 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835175587 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833942407 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834141433 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834122599 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833659001 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834886962 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832947731 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830299479 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83445785 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834151392 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832882205 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834269366 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834276324 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831946771 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833312668 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834210878 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834412235 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835639795 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831893709 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834262618 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836963137 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83547401 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834451853 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832978989 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829285647 seconds)
  done (took 122.844810963 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830715486 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.83317834 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830614651 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830861494 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831302393 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832835664 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832656851 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830125666 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832534293 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830630129 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834689155 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832269932 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833526563 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833119064 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835114671 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835694377 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832385934 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836963173 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82912664 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830811754 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831329792 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833770151 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834741892 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834798239 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831215333 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833788439 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836582573 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833475256 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831115898 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829022332 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831012083 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832496492 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83477177 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.83366203 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835659896 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831302415 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831480218 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831448734 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83148874 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839452179 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836007152 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837729936 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832208687 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830520933 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832772397 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835331692 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830999246 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831746611 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831256145 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833979585 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833190924 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83067354 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831120417 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834987489 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834000339 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833493188 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832826933 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832632129 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832845837 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833654331 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828509694 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830743879 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83337734 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832095 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833269412 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833041847 seconds)
  done (took 122.716983055 seconds)
done (took 2559.664299839 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.82704 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.82468722 seconds)
  done (took 15.407387519 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.995337691 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.954424502 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.83351667 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.841787832 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.836757626 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.85744226 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.833530351 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.830831376 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.833578904 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.834105024 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.833099758 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.017450366 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.827570837 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.831976009 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.833308471 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.927039324 seconds)
  done (took 51.679151352 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.838899813 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.837926236 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.850423146 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.840025111 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.835962271 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.849283324 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.868955171 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.839675598 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.867858507 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.850656485 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.903665477 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.844641306 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.836718416 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.883634599 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.851227177 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.848699532 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.929224255 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.909062761 seconds)
  done (took 35.239273983 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.914591649 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.84091113 seconds)
  done (took 10.518255418 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.847127403 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.845283005 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.835491225 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.845018714 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.838579056 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.869204154 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.875064065 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.875388127 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.860796453 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.849205946 seconds)
  done (took 70.299775139 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.841546626 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.838496406 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.840037731 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.839243607 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.834196964 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.8359104 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.833930485 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.836383641 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.491476249 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.870778886 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.844031787 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.843890988 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.835698653 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.84082642 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.841152104 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.863463691 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.954479187 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.835236009 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.835013233 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.841232463 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.839504603 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.901780942 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.852961189 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.841886935 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.867853542 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.496124591 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.843063539 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.844569581 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.933652183 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.833927815 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.837750416 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.840653629 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.842533031 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.230466771 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.103996405 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.836644696 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.848905954 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.846903596 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.832136765 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.953871823 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.839693987 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.847090136 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.581037857 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.086107427 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.933912068 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.880476854 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.149675191 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.852837327 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.84029229 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.868622304 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.841061281 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.841930717 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.85207677 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.332178545 seconds)
  done (took 130.533928155 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.838905548 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.182206839 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.002328292 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.83489562 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.121156533 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044029832 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.839283366 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.884238771 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.836792161 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.067958491 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.08851999 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.943787431 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.834785155 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.834172715 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.834849555 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.830494811 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.991251947 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.912016897 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.836964332 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.83264685 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865981804 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.081260792 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.961807048 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.834638528 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.860769862 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.0527023 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.956052977 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.940916034 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.628742484 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.832950879 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.898784203 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.837835982 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.83682026 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.831351379 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.992492372 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.931873559 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.918515286 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.832249448 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.835542986 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.833871732 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.5059809 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042790438 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.931613187 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.975239622 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.036981115 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.041365004 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.622658075 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.832300227 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.588524748 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.002707077 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.067225372 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.073447271 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.959517414 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.841104731 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.101622373 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.835579074 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.833258843 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.086205326 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.983774264 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.932309571 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.838884905 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.838290465 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.833104776 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.086883512 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.836339604 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.931810094 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.837125717 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.837797068 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.936754904 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.937314195 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.975766457 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.048302499 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.866754301 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.731416271 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.377099985 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.087290524 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.904381815 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087375072 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.837981972 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.835214807 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.91887979 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.675228599 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.097602684 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.086149909 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.090085117 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.869636009 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.557443793 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.83818915 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.064982568 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.059864468 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.096379512 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.044386187 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.076825455 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.160961483 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.835801701 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.841058772 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.06400435 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.969788138 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.835453642 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.186120665 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.069573123 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.378240533 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.862487525 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.146150556 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.973332249 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.837504924 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.479964598 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.833948298 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.073544258 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.880037846 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.8407303 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.837612397 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.058962825 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.848114957 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.839814203 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.49293302 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.901332126 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.84470274 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.071873744 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.84169311 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114119879 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.837496939 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080600027 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.291754074 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.873987435 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.018946777 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.048371141 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.835859306 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.086292228 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.084972572 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.956662936 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.059421979 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.548231364 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.841751016 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.128411075 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.839096857 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.837861492 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.012193481 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.839199248 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.985325784 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.836708085 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.138281659 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86675226 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080724029 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.83914172 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.099894965 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.877212833 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.889032294 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.842443292 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.969759435 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.842221759 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.664378362 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.999647375 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.841012325 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.836196743 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.391429326 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.84042824 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.991946569 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.074997712 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.863240823 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.914765149 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.514930737 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.839922984 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.921512853 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.866305734 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.241832454 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.840863697 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.094802144 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.838945663 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.843519277 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.839545964 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.082674522 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.025117467 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.843810146 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.842422874 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.74939814 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.839416876 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.842776092 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.026005419 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.179662135 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.840034042 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04807112 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.846866271 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.969334814 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.842620379 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.910006697 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.17851759 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.841641391 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.836974358 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.842362614 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.840260674 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.838552359 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.049987765 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.868914179 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.362900664 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.98316504 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.116289906 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.153472518 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.09503767 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.885582635 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.845010309 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.09564644 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.842004177 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.90439747 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.845271553 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.866689544 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075963305 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.843638009 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.052519085 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.122291359 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.697834555 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.891986572 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.846854545 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.84184547 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.841178567 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.985305319 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.924084039 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.841548057 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.842310575 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.955990965 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.962955712 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.049025997 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.845120234 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.9171663 seconds)
  done (took 895.148172144 seconds)
done (took 1210.580761612 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.841641631 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.840140133 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.828120792 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.844462515 seconds)
  done (took 29.120326071 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.8511546 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.849498803 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.848354238 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.848792861 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 2.260412373 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.847546833 seconds)
  done (took 13.272021691 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.883709718 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.8395244 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.846360334 seconds)
  done (took 21.334008272 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.917923218 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.229619233 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.947146758 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.260997718 seconds)
  done (took 10.121713906 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.852801816 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.852709196 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.850581686 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.853449029 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.854671272 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.85105651 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.852907012 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.852537055 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.851492819 seconds)
  done (took 18.439827346 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.064592592 seconds)
done (took 98.118705756 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.872929201 seconds)
    (2/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.558912821 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.934824739 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.99984333 seconds)
    (5/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.535836251 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.236193967 seconds)
    (7/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.132982664 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.885382162 seconds)
    (9/309) benchmarking ("sort", Float64, false)...
    done (took 5.643306343 seconds)
    (10/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.0486797 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.000239406 seconds)
    (12/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.868966582 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.247245469 seconds)
    (14/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.005423855 seconds)
    (15/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.026117556 seconds)
    (16/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.379025065 seconds)
    (17/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.047804434 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.87061492 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.267667142 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.891954208 seconds)
    (21/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.337135666 seconds)
    (22/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.938594042 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.851700828 seconds)
    (24/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.95462083 seconds)
    (25/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 3.457324103 seconds)
    (26/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.93783609 seconds)
    (27/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.955063792 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.879946688 seconds)
    (29/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.297914523 seconds)
    (30/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.894691587 seconds)
    (31/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.001446207 seconds)
    (32/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.865746013 seconds)
    (33/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.892284984 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.039385532 seconds)
    (35/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.850246762 seconds)
    (36/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.647985292 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.973200171 seconds)
    (38/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.960011817 seconds)
    (39/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.931930514 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.851764096 seconds)
    (41/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 3.450542548 seconds)
    (42/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.98834313 seconds)
    (43/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.929751117 seconds)
    (44/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.292788034 seconds)
    (45/309) benchmarking ("sort", Bool, false)...
    done (took 2.092869952 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.566390792 seconds)
    (47/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.106126989 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.773883182 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.190955358 seconds)
    (50/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.492437562 seconds)
    (51/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.8845569 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 5.609106429 seconds)
    (53/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.851645694 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 3.391052364 seconds)
    (55/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.87084558 seconds)
    (56/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 3.276253812 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.041096829 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.888158829 seconds)
    (59/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.180597882 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.045837579 seconds)
    (61/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.001872257 seconds)
    (62/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.222210862 seconds)
    (63/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.964103509 seconds)
    (64/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.046057199 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.956711317 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.208226657 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.913707307 seconds)
    (68/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.100445694 seconds)
    (69/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.429280325 seconds)
    (70/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.801894541 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.132284272 seconds)
    (72/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.887320634 seconds)
    (73/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.103652994 seconds)
    (74/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.07204096 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.854869866 seconds)
    (76/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.175536683 seconds)
    (77/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.282966375 seconds)
    (78/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.031299763 seconds)
    (79/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.351865952 seconds)
    (80/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.856648881 seconds)
    (81/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.233923253 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.31874785 seconds)
    (83/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.05140397 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.795814937 seconds)
    (85/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.160328687 seconds)
    (86/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.012995025 seconds)
    (87/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.854888738 seconds)
    (88/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.823682403 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.868976821 seconds)
    (90/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.853073866 seconds)
    (91/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.163601394 seconds)
    (92/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.292634978 seconds)
    (93/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.435517745 seconds)
    (94/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.890816915 seconds)
    (95/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.211473063 seconds)
    (96/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.005813321 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.044637281 seconds)
    (98/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.328176689 seconds)
    (99/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.000638251 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.007048609 seconds)
    (101/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 3.099331398 seconds)
    (102/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.974339889 seconds)
    (103/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.252274405 seconds)
    (104/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.911014582 seconds)
    (105/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.996944542 seconds)
    (106/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.958624055 seconds)
    (107/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.307887766 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.994289902 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.867722554 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.76319663 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.065506675 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.893838715 seconds)
    (113/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.892999035 seconds)
    (114/309) benchmarking ("sort", BigInt, false)...
    done (took 6.868936696 seconds)
    (115/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.705543485 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.872295209 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.901101883 seconds)
    (118/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.057783431 seconds)
    (119/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.935088081 seconds)
    (120/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.242114929 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.873340131 seconds)
    (122/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.721511611 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.215540162 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.829239992 seconds)
    (125/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.955028167 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.111368721 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.901003674 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.99519686 seconds)
    (129/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.960707051 seconds)
    (130/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.145275776 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.870817025 seconds)
    (132/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.904852928 seconds)
    (133/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.10203075 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.266498645 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.177446963 seconds)
    (136/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.187476787 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.222647663 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.699120175 seconds)
    (139/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.874693019 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.221988112 seconds)
    (141/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.872123525 seconds)
    (142/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.962293842 seconds)
    (143/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.009051167 seconds)
    (144/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.968149618 seconds)
    (145/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.874215877 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.227368456 seconds)
    (147/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.917641807 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.898500301 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.201616715 seconds)
    (150/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.959172159 seconds)
    (151/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.0868237 seconds)
    (152/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.872015334 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.971554678 seconds)
    (154/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.383609803 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.135484525 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.033872587 seconds)
    (157/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.977365484 seconds)
    (158/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.887969024 seconds)
    (159/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.221944793 seconds)
    (160/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.867710564 seconds)
    (161/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.958328542 seconds)
    (162/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.898814353 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.96516938 seconds)
    (164/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.892428941 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.798411382 seconds)
    (166/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.87514412 seconds)
    (167/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.994619778 seconds)
    (168/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.89353674 seconds)
    (169/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.938490972 seconds)
    (170/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.294479027 seconds)
    (171/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.430340548 seconds)
    (172/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.043161474 seconds)
    (173/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.98565611 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.143310558 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.859871852 seconds)
    (176/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.986162728 seconds)
    (177/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.859596263 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.962124468 seconds)
    (179/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.021927862 seconds)
    (180/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.971422623 seconds)
    (181/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.726248314 seconds)
    (182/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.075755309 seconds)
    (183/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.263630476 seconds)
    (184/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.031636812 seconds)
    (185/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.118517086 seconds)
    (186/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.027835196 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.129861245 seconds)
    (188/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.052835878 seconds)
    (189/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.937372311 seconds)
    (190/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.032965432 seconds)
    (191/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.838883913 seconds)
    (192/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.902265035 seconds)
    (193/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.076120254 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.170521995 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.187664992 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.862486649 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.989569036 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.229956713 seconds)
    (199/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.964494362 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.859610109 seconds)
    (201/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.154775917 seconds)
    (202/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.216922835 seconds)
    (203/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.92277182 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.19577687 seconds)
    (205/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.961307935 seconds)
    (206/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.898685147 seconds)
    (207/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.890970537 seconds)
    (208/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.287369455 seconds)
    (209/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.266195053 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.164072529 seconds)
    (211/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.113891323 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.003781165 seconds)
    (213/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.060890277 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.954480086 seconds)
    (215/309) benchmarking ("sort", Float32, false)...
    done (took 5.581977231 seconds)
    (216/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.191967431 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.019864488 seconds)
    (218/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.011246098 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.874847605 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.1166637 seconds)
    (221/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.957027096 seconds)
    (222/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.304249833 seconds)
    (223/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.995724287 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.947188011 seconds)
    (225/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.884246444 seconds)
    (226/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.013755705 seconds)
    (227/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.874811736 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.007656078 seconds)
    (229/309) benchmarking ("sort", Int8, false)...
    done (took 4.77218636 seconds)
    (230/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.085634342 seconds)
    (231/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.165460657 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.737286782 seconds)
    (233/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.401053292 seconds)
    (234/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.888666794 seconds)
    (235/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.90115572 seconds)
    (236/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.97995761 seconds)
    (237/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.034981822 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.878617086 seconds)
    (239/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.876105156 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.262260144 seconds)
    (241/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.920776399 seconds)
    (242/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.901047896 seconds)
    (243/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.030471971 seconds)
    (244/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.179250312 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.115599989 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.881265703 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.161936679 seconds)
    (248/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.069501416 seconds)
    (249/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.161909997 seconds)
    (250/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.881064112 seconds)
    (251/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 3.34681725 seconds)
    (252/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.070420285 seconds)
    (253/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.903982654 seconds)
    (254/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.012942779 seconds)
    (255/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.126795126 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.590580996 seconds)
    (257/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.872326146 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.868251332 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.235687513 seconds)
    (260/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.982742161 seconds)
    (261/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.072329235 seconds)
    (262/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.02342245 seconds)
    (263/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.877789704 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 3.460743816 seconds)
    (265/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.972037337 seconds)
    (266/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.179608404 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.574428755 seconds)
    (268/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.249250608 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.006511879 seconds)
    (270/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.864491435 seconds)
    (271/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.802941753 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.216941327 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.94885459 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.87797025 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.90099908 seconds)
    (276/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.983295631 seconds)
    (277/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.172823578 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.900208146 seconds)
    (279/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.011400913 seconds)
    (280/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.112501198 seconds)
    (281/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 3.800982562 seconds)
    (282/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.866493288 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.09204316 seconds)
    (284/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.28953743 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.037175468 seconds)
    (286/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.073485201 seconds)
    (287/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.96455451 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.536130374 seconds)
    (289/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.900453749 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.173645778 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.911372989 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.657636535 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.988556675 seconds)
    (294/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.017299325 seconds)
    (295/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.336940061 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.513891347 seconds)
    (297/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.598865712 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.538603272 seconds)
    (299/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.853550276 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.910568934 seconds)
    (301/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.881522998 seconds)
    (302/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.085910709 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.287320347 seconds)
    (304/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.583474516 seconds)
    (305/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.867672281 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.676065323 seconds)
    (307/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.882318625 seconds)
    (308/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.322492492 seconds)
    (309/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.021703792 seconds)
  done (took 1009.877803505 seconds)
done (took 1011.955140933 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.916899283 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.907442845 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.891422306 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.915481956 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.004695996 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.918256384 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.89990572 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.893877602 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.938779751 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.940790865 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.890212032 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.917186075 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.892520674 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.892210434 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.891678277 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.908769071 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.206848973 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.923293529 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.90905569 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.900785494 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.910030043 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.889103245 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.940252495 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.917121511 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.896500868 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.896007131 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.895153628 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.91028057 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.001870899 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.895454256 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.894913371 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.901718272 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.207052767 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.918523596 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.888457791 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.911379251 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.90402668 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.902625254 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.89569568 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.924924775 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.292869477 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.928668423 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.895919837 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.891504389 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.894769084 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.896583319 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.89471446 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.89800205 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.905897819 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.906335544 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.286658544 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.946569885 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.895405192 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.894973384 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.905173168 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.89389976 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.896459078 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.909740568 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.912358825 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.909527045 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.193087041 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.933836551 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.896886876 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.910500653 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.901902689 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.320051428 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.930613286 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.899494624 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.294244799 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.935827996 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.322547412 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.943987347 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.895829407 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.907658676 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.927581294 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.207565295 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.923624442 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.893297749 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.903946186 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.891776137 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.904500799 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.911709475 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.897944949 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.895499651 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.907462861 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.922248309 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.905431901 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.898740436 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.905050847 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.914045502 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.902896024 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.905543942 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.898605363 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.890674539 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.905410605 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.898814459 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.89773971 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.89878931 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.901409177 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.906187571 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.292874496 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.950029115 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.895699717 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.894601219 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.89686553 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.909844914 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.292640975 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.936003543 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.919948259 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.945157845 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.899434376 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.193505815 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.928892511 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.913186816 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.906409238 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.901016896 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.893459364 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.194235488 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.32305278 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.951248275 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.900506443 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.89446787 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.915033856 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.898380963 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.894063537 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.212177509 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.927775704 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.912312189 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.019048343 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.908033153 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.930547392 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.894643831 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.902301968 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.929395888 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.91505587 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.928449786 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.901726803 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.913400142 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.913862498 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.895216509 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.910299881 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.908410333 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.901948595 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.903447967 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.89337595 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.929670494 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.910454582 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.91222586 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.921209229 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.02079682 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.897579453 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.196151252 seconds)
done (took 297.787508953 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.970647616 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.891069306 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.996399683 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.895473291 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.977401503 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.991213993 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.894065975 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.895753518 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.894603081 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.267988126 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.893172278 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.894728668 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.900155273 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.892944117 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.978917598 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.897911074 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.893529171 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.231484421 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.898101421 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.970400343 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.896476513 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.895310066 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.896735028 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.302668433 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.89725568 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.899230591 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.969578643 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.896803254 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.232786683 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.899896345 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.896892921 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.233515605 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.990912869 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.914446557 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.908578559 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.90477765 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.984585872 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.902876471 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.979853052 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.980933048 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.000821377 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.940146465 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.897231209 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.899188953 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.903459136 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.901154258 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.897227884 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.926278655 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.896216205 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.89622786 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.232557262 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.909211475 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.897146651 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.895818725 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.896447716 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.931570182 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.898387856 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.901686424 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.99298989 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.900199349 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.960481803 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.271278506 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.270325755 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.900536537 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.896370903 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.896302101 seconds)
  done (took 186.2310062 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.966736932 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.980193569 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.965203578 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.904187883 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.950780269 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.967480272 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.902983866 seconds)
  done (took 15.450955274 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.90636308 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.900895537 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.951827711 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.952014148 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.901148914 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.05616874 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.901188279 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.912140766 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.89788424 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.954131551 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.902263888 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.902640256 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.90855197 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.901713791 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.951442949 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.913452098 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.018707396 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.900991232 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.902284893 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.053344442 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.898316809 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.908564694 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.935320637 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.912723751 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.903496284 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.907384098 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.494026881 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.901426675 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.89966158 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.901325584 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.897819104 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.943530472 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.901676197 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.897730235 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.900089845 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.017271977 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.903295717 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.899989948 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.901057678 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.902529154 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.902473732 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.902829827 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.902697733 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.898147788 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.903202745 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.925968909 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.902771997 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.902976256 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.904843154 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.90353091 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.936517119 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.903480709 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.901270666 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.900587984 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.958235194 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.910879234 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.906032097 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.900841976 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.903749525 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.90203248 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.055020882 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.954422001 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.904920258 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.955377201 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.904487449 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.904936685 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.902527472 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.903394711 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.000951207 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.90355224 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.953955218 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.901797517 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.062069713 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.926786231 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.904754249 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.907248931 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.907597352 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.905029685 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.903706575 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.910713574 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.901452573 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.904861383 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.910675205 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.902655423 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.902279843 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.016423121 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.012094376 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.902544684 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.918379636 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.913314957 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.903929168 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.941153466 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.906134872 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.902311662 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.962167583 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.023704371 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.961903317 seconds)
  done (took 209.066098511 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.911013889 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.914717407 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.908898448 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.924482974 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.906277132 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.905937292 seconds)
  done (took 13.291164833 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.908255928 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.908237282 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.906225609 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.907117329 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.9079121 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.907715571 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.906977588 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.908588763 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.913330882 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.907587925 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.906778837 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.906800004 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.908546584 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.909097523 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.907885622 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.90726206 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.908503181 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.905434947 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.906355701 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.907483988 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.054308242 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.906781642 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.908434271 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.90988659 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.912067801 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.905792451 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.916008898 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.907206039 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.906695698 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.917142205 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.910657186 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.908783572 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.909542633 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.913798117 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.913338423 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.910264033 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.912725852 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.908177718 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.904492665 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.906843479 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.907219281 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.908217991 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.910092643 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.90879416 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.910324635 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.91276007 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.915024167 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.915635217 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.909756655 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.912109003 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.909017982 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.908798974 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.911808983 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.909145073 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.911029739 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.91652256 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.914836207 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.910348221 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.911092953 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.912902657 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.910236035 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.911471514 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.912557679 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.918577993 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.917165679 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.911814124 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.912013099 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.913098715 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.910412249 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.910064499 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.909769099 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.906524397 seconds)
  done (took 140.490798972 seconds)
done (took 566.359868142 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.0852233 seconds)
  done (took 8.908770439 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.913530935 seconds)
  done (took 8.779115391 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.408188377 seconds)
  done (took 10.236186989 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.92429241 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.944042254 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.914554878 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.905156305 seconds)
  done (took 29.537880827 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.974594024 seconds)
  done (took 8.801195883 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.928576325 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.904583606 seconds)
  done (took 15.694851809 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.997294477 seconds)
  done (took 8.824258213 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.002949349 seconds)
  done (took 8.85404736 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.919701339 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.938686354 seconds)
  done (took 15.699519476 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.890499046 seconds)
  done (took 8.716937901 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.640805332 seconds)
  done (took 11.555109147 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.932145485 seconds)
  done (took 8.862374362 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.969575832 seconds)
  done (took 8.797825746 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.992345643 seconds)
  done (took 8.819363613 seconds)
done (took 163.913901017 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.909959181 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.907678239 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.906551775 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.907341524 seconds)
  done (took 29.457371026 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.946315428 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.944191379 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.945077286 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.9554908 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.946919369 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.945826425 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.936665974 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.938350646 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.955063146 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.947363317 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.946541518 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.947414299 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.944004931 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.937432076 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.946477172 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.94982376 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.95664958 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.948876962 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.936926078 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.947398417 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.91425836 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.954681398 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.947473305 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.912676078 seconds)
  done (took 48.478870104 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.109648467 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.986215044 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.066813653 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.964243677 seconds)
  done (took 9.954059926 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.966525456 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.964244162 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.977776096 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.017610042 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.040873272 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.977318942 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.934265461 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.933285328 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.920032761 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.966969655 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.041898003 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.962184471 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.057753528 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.913422057 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.101685422 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.915643172 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.91141482 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.965926107 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.017328772 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.043041029 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.913047601 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.966981603 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.968272973 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.960638343 seconds)
  done (took 49.265446704 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.911639999 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.92351948 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.91852891 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.91156573 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.912063795 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.914191856 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.922188992 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.914320015 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.934084078 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.914919695 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.912982733 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.914912121 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.913378218 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.913827834 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.913766209 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.927283963 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.929729429 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.912366271 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.920101169 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.919157694 seconds)
  done (took 40.183162101 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.910222171 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.762236616 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.26044225 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.16519427 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.910671399 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.90771215 seconds)
  done (took 31.747480611 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.933062638 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.920054993 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.91387381 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.974473532 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.056876304 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.923026282 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.916518508 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.927367254 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.962878748 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.978178065 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.936536792 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.945271533 seconds)
  done (took 25.218783432 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.913262943 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.913191093 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.912130831 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.928029697 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.92476455 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.920712212 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.922938988 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.909335524 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.924544822 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.933469427 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.92155873 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.926018845 seconds)
  done (took 44.88475448 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000801948 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.796745275 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.574154236 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.639639379 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.445351619 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119485874 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.436235807 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.08156859 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.910087279 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187073456 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.547070581 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159680815 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.163899467 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913222453 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.980310295 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.386680055 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208955213 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149566476 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941104697 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.696174762 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03805908 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.455980902 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.664107031 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.043810585 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12162857 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.044299368 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.169006527 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.869708814 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048454482 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947926387 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921262236 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.913669453 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18581697 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134154557 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04363213 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924882192 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.566575546 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.628592646 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.903967525 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.627976799 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.642179427 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.050985472 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920681723 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911290662 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.844859407 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440112609 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088994456 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.915647192 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.615052152 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.913464716 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922431237 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003044812 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.916849039 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.72672561 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869349179 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.190860156 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.91802181 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919025077 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.487165365 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.026428792 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.553721251 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.84965392 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.007640632 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.641958144 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39591782 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.072770014 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.917361844 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.919447054 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848563798 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.680142564 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045454054 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.055336937 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.931637198 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.559063607 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211546816 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.625101857 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.001126935 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213696184 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.717879798 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.845905478 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139347644 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.867446322 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845292295 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.772211845 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.846805385 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192919099 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95641507 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.581118526 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959201868 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.086279407 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.921406404 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935655077 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920772897 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.138614546 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.793212301 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916470673 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.508514445 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206605079 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937447143 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.086778849 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846059771 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.915045964 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170470953 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.125876144 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.158783574 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.395284804 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079256294 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912098226 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.002928939 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.847370066 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.923053404 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.196726404 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983835385 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.030960652 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051936422 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.87396257 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229042082 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949292912 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.091673337 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.579492468 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184549465 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.258923644 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.172668726 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000961644 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.917618169 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.916058557 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.717953346 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.547967534 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.141038143 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.916406817 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421956928 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.92795781 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.919638227 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855401882 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.57038409 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.58998424 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.031504577 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.138825974 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.772191157 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.310936848 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852230141 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.061981871 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.027213633 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.1389456 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.574865502 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.005885802 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.179407526 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286580587 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.14962781 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033433229 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935367066 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038571837 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941033075 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.237958302 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.277224104 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.923075923 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.922902521 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.693064816 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.996095335 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.92561571 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.927630204 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.719646175 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211140049 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.951821838 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.920255249 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.857055776 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.935744452 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005120631 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926008935 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.929394247 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.444715483 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.674431061 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.939594135 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.578552134 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14955603 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935252287 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.692935083 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124864082 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.007620402 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.207891364 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996789508 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.859340396 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.630228527 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.628823075 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926504804 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.857909242 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.92382754 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931359485 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937266414 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.149334989 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.213915529 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.979664103 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.649018425 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.052555231 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938015629 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.932442822 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927346477 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.427323345 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.052255791 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.446492337 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.044777476 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065013993 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.942637113 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.864107427 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.930657419 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.933873832 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.929294665 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.892668974 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982385247 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.657047899 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270804837 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.184351116 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.576466031 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944683521 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.719897746 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.06408677 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.948118383 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.544384255 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925184735 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.029249595 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995210628 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.940128752 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.695501541 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.702994871 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.499572274 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237423524 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.261178848 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384063389 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.315180921 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.254493534 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.101303994 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161437123 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.452791939 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.985260319 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.104665122 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871419835 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012753982 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.582335823 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.293065297 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94347158 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155587869 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320300099 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.64430881 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09778509 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138045879 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961221666 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.74104468 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.958396383 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.451498529 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081715579 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.561453665 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167104751 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098766028 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.543003756 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.042120691 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.927234388 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.418502673 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01342575 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.636418938 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.285010891 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.468809458 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.600702521 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309366198 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.927442069 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.37428439 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293902582 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.267325612 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.012243496 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859854207 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.937715778 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.939306345 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.922631048 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.906590612 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.790662228 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.186717414 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936519142 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160254464 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.197823321 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.20154676 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.843894655 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.929992237 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926554035 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238254131 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.688988222 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172110322 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.269012775 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.505701361 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940240081 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.861656452 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859753972 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.631500576 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.931018857 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.905993934 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164522129 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.045520424 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.880811224 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31917759 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238859164 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.179050432 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.938993826 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.21670171 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.215115435 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.663957488 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95721685 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.030623261 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.537225137 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.6839085 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.148069809 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.161062221 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728157892 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.158326916 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.597921814 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.907951323 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.928003288 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144516688 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.152330664 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.605550696 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189657338 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.65757812 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.944352349 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296533475 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997490545 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.602291799 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.152936212 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.024716544 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945135627 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010341422 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939408028 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.943328611 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.938605275 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978354394 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.622298068 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.073081393 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.948812387 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020517645 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.064671787 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.528240186 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.943049707 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221470581 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300509781 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.279637314 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004165231 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.930221757 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934863614 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865955205 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068177824 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.373878077 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203478981 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.064066235 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.072275464 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956819353 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.546774413 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.228181325 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244023109 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205644272 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.824504784 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932049535 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.020828307 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.158717542 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94278341 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.144249748 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.174962393 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266870012 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.409665028 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.072897053 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.210220165 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207593791 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.298509848 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.931829607 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.522893968 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.945616431 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.490963101 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.988210587 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.635636492 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234641535 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944104277 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162954949 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.962672027 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.137133529 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.388758538 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.665717926 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.309234439 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.935616902 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.005711389 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.226043156 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35371423 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260300733 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019293714 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950289338 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.636628204 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074829357 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.84133564 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.187121062 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.936151051 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148261274 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.653907022 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.950556675 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225711307 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257745383 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.935131981 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.881931766 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986640655 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.943927452 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.162794227 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.224326498 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.19441086 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9475137 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.940214259 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.758090638 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.223645153 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006457574 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871136656 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.942999721 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036764819 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183204023 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961050518 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.452065906 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.642782088 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247735224 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.865253905 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964209412 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355734619 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393206373 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290556847 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.47630398 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180078164 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.501428227 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.800314661 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.314928121 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.941016826 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339825484 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.316361791 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.946778875 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.447478869 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045100619 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.226278573 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.273103349 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.951749812 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762709233 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.988925369 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162864998 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.530235545 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.883217889 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.945619437 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.997560288 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.938739521 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.070092385 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948947506 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.914163576 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818101197 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.779305731 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.434929055 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.940036494 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.021850472 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.558770922 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.514349841 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044058682 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098229986 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944479535 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.643468275 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.231780841 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.195119431 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.451071901 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.014519475 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.946806244 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945202901 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.871053913 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.137098981 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.140347995 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253240307 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.295717321 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.051285054 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.94602346 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.156865469 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152830031 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.650418673 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113662527 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316474943 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055404105 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.87318122 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.658504064 seconds)
  done (took 1707.574831946 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.961770027 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.966956153 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.949190487 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.966882712 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.969733256 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.962835626 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.018834254 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.038665112 seconds)
  done (took 57.69871939 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.947696053 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.145755164 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.95534177 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.947443348 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.972749164 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.947724916 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.135337075 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.959164397 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.962359511 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.955975231 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.947351637 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.946662152 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.260207814 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.969950946 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.947706971 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.978588877 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.954494514 seconds)
  done (took 75.80866407 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.947596165 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.113667584 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.971774075 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.970571497 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.810707675 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.951399291 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.884235227 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.952457805 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.950163529 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.112156054 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.279335549 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.997620803 seconds)
  done (took 90.807285329 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.96187508 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.952651829 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.95295082 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.953545101 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.953912021 seconds)
  done (took 11.648703635 seconds)
done (took 2224.573425551 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.192492424 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.134413915 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.178448294 seconds)
  done (took 6.176055515 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.096146409 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.143563805 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.26277536 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.268889765 seconds)
  done (took 10.642088425 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.244259227 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.318430021 seconds)
  done (took 6.427643795 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.270551223 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.966500561 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.328044619 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.949384459 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.948301477 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.949812984 seconds)
  done (took 22.720117783 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.952662494 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.953048594 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.951647092 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.956050531 seconds)
  done (took 9.679486351 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.934250618 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.632053855 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.939297449 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.952262073 seconds)
  done (took 21.324021467 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.701005094 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.076439639 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.69532095 seconds)
  done (took 9.34003571 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.590849704 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.56685223 seconds)
  done (took 10.024090351 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.112372413 seconds)
  done (took 3.978586863 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.982405947 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.223543173 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.500957579 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.527064797 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.624496211 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.205327145 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.295028127 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.182519085 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.418377278 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.436899573 seconds)
  done (took 26.265379309 seconds)
done (took 142.201892532 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.497080793 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.977749665 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.150850768 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.317665729 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.190637261 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.151534186 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.177184756 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.324324763 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.004190094 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.982342464 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.315784125 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.188013706 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.117204374 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.971561311 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.12693619 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.97349068 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.187009494 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.325587483 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.000880562 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.238496776 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.187838227 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.963287915 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.161667279 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.981540767 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.225760246 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.106619036 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.510212386 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.976454325 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.149316296 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.522935924 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.109362568 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.387715812 seconds)
  done (took 171.368926613 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.957076633 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.951861578 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.950624117 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.951040536 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.444833663 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.953964646 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.954124835 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.949678976 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.380355149 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.366731827 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.953619255 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.433018918 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.953659489 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.950635469 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.952546684 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.951808764 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.533568981 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.952491221 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.953381686 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.956899205 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.958526282 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.275616284 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.958282976 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.306407893 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.575256436 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.964203898 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.952932999 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.967753481 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.971089819 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.968758133 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.971076903 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.951830138 seconds)
  done (took 212.147394422 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.952124988 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.952791408 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.953670701 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.953798553 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.957145119 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.961640004 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.952818664 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.953285085 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.768476935 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.768509433 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.969668295 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.962667498 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.963521025 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.952511468 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.963626179 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.952925206 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.96801807 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.964534777 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.966212768 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.965565263 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.96866545 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.734100287 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.970342969 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.72789945 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.966523461 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.966028142 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.956844833 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.968025174 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.969540443 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.974211767 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.975883404 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.956750183 seconds)
  done (took 223.82858177 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.217919033 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.963290989 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.962169036 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.869373803 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.966933165 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.960330927 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.967712509 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.211854543 seconds)
  done (took 20.013891249 seconds)
done (took 629.238966157 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.419800669 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.275051723 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.148806303 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.986097273 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.241289715 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.021399822 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.981940935 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.049440748 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.608891943 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.056083699 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.636924468 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.003585453 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.717196938 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.01103156 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.105342643 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.038564278 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.527260871 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.619093716 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.156370084 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.07057075 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.158540245 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.918120949 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.068236141 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.633240169 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.746906805 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.965043058 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.052521833 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.534946333 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.992286654 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.143427166 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.713749417 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.298258275 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.999926723 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.982360893 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.038255886 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.017227811 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.257540554 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.994137016 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.105854775 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.717883061 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.064121186 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.5157842 seconds)
  done (took 106.467649597 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.952701269 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.949114187 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.951069712 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.951517151 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.952432294 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.951055528 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.949302245 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.949318381 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.950660835 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.948725955 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.948500213 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.95023483 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.950338194 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.952150355 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.949363371 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.953161542 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.951410713 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.951928185 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.951500655 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.952896853 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.951674311 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.951323926 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.967075986 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.952906595 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.952171357 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.953165763 seconds)
  done (took 52.633071906 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.964456417 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.122728172 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.207331805 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.989101022 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.966441373 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.969953081 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.985900998 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.970784377 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.969814281 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.968482295 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.061696861 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.972407345 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.985106694 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.208300998 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.988448415 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.966305068 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.967104639 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.967420598 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.129653318 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.984249669 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.988626349 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.972200869 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.985568072 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.981841128 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.970813595 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.967133194 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.970091571 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.456725364 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.978363825 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.061946378 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.026886172 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.991580167 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.37365153 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.216730548 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.028894344 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.978125048 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.969839477 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.065544274 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.978560853 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.968748333 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.988748929 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.976624868 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.206600216 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.464781369 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.988086297 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.968276412 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.468937044 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.079748023 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.011993857 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.97936964 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.212546641 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.99114512 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.971990973 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.971385789 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.007752658 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.973447601 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.968350336 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.329745326 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.983582429 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.989184227 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.977310507 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.972908388 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.129947815 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.982555665 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.123014695 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.983579265 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.978256888 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.97309188 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.210269546 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.992248757 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.467659559 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.9922495 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.972282172 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.06308086 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.13207182 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.502503487 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.987051031 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.134068921 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.396232464 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.999861324 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.98058103 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.450687961 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.002540231 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.982200373 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.974427688 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.97364847 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.972137624 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.017896303 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.990159263 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.401108596 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.47821097 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.349871068 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.001870098 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.985732176 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.975346816 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.326290206 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.982839506 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.971625102 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.207436048 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.487023726 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.992268825 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.982755452 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.460230264 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.994315422 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.993965886 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.982440103 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.213545003 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.993903663 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.017291308 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.972060437 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.977974787 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.973616179 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.991114051 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.980240198 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.971177097 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.448159256 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.08356793 seconds)
  done (took 244.202045483 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.967971934 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.983835634 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.958061773 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.960297141 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.957619105 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.965784545 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.95664685 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.954744023 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.959158318 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.954550402 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.955178998 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.953853797 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.953682457 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.957421366 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.978152026 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.966054323 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.556948051 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.952792713 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.955363467 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.95687754 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.61031269 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.959545262 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.946085048 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.959595391 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.944334364 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.942138468 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.983790936 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.957339804 seconds)
  done (took 169.99146447 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.943625689 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.060207187 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.966948774 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.972118912 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.95153452 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.940787115 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.965143551 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.96032882 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.948099654 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.94258057 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.942204286 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.004534416 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.956461521 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.042826033 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.975937918 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.975696701 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.044687169 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.951307831 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.943292811 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.941982478 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.974730322 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.939999457 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.004316341 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.070421699 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.968275067 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.060344375 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.950077339 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.944491759 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.942724984 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.059539192 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.959879504 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.000958844 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.967757072 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.958690414 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.061407868 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.059244619 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.043175266 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.968658097 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.946464827 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.935868038 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.937535307 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.928864169 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.054108595 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.963997806 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.941484169 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.048310135 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.961034566 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.943486359 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.949450135 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.939335028 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.95544378 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.957797413 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.007456747 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.073683997 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.97699038 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.967066525 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.966862206 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.213068751 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.949977739 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.037398893 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.935407882 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.055376663 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.961206623 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.929991228 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.939656082 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.945495617 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.9699779 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.973504258 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.045678201 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.950244708 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.041134595 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.97556103 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.952449361 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.940541184 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.945149753 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.055980819 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.062694101 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.975985319 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.983252909 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.973824895 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.937484187 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.943769078 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.929047615 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.958609721 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.944644982 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.053294001 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.059405824 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.94787088 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.945521395 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.943459957 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.94109008 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.967687612 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.065540786 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.9810681 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.034556926 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.008444682 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.017409347 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.957360439 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.952189312 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.94659783 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.006126221 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.958286479 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.953518824 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.260356593 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.013656598 seconds)
  done (took 210.222786019 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.430614233 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.997189526 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.999339236 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.259173617 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.306389009 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.834073269 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.993723585 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.99423205 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.016305479 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.179497667 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.063383211 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.012824195 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.978735021 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.963729568 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.988923955 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.013531498 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.001681871 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.329417586 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.09301545 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.092343997 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.972776116 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.281427537 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.270426942 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.397710884 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.031531897 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.347951729 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.658699885 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.139239986 seconds)
  done (took 63.5097346 seconds)
done (took 848.904147133 seconds)
SAVING RESULT...
DONE!
