cset: moving following pidspec: 19612
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.666828302 seconds)
loading group "shootout"... done (took 1.125276585 seconds)
loading group "string"... done (took 0.425936909 seconds)
loading group "linalg"... done (took 8.041009119 seconds)
loading group "parallel"... done (took 0.162080734 seconds)
loading group "find"... done (took 1.307691561 seconds)
loading group "tuple"... done (took 2.019332687 seconds)
loading group "union"... done (took 12.729883898 seconds)
loading group "dates"... done (took 1.35661806 seconds)
loading group "micro"... done (took 0.201273706 seconds)
loading group "simd"... done (took 4.416880101 seconds)
loading group "io"... done (took 1.036614777 seconds)
loading group "random"... done (took 8.815286956 seconds)
loading group "problem"... done (took 1.596633351 seconds)
loading group "array"... done (took 19.64113741 seconds)
loading group "misc"... done (took 1.579471651 seconds)
loading group "scalar"... done (took 40.191109125 seconds)
loading group "sort"... done (took 3.088377996 seconds)
loading group "sparse"... done (took 12.016466511 seconds)
loading group "collection"... done (took 17.560434397 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.507583011 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125129449 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.128578196 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11842094 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146996984 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.122157152 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127036149 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08519997 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.901192179 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143893223 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113753053 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.436655283 seconds)
done (took 5.301514419 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.166760788 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087444178 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078540926 seconds)
  done (took 1.296576575 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063740061 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.136218354 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065813455 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066347066 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066147376 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065489856 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065337089 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065411585 seconds)
  done (took 1.662064035 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071452361 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06678149 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064368816 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066974954 seconds)
  done (took 1.403427059 seconds)
done (took 5.740295291 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.238562872 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.101615625 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.287071863 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.398220095 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.459916552 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.09099634 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073403148 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.068758094 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.127537232 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318899992 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104100641 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.183391442 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089327566 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.175433739 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.996655811 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.120176305 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084611822 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.122997616 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091999664 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12994823 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.415316439 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076803626 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.073017741 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.069014353 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.06685025 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.649274412 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.664790879 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.12918643 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082412872 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.100525453 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115136123 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.647595617 seconds)
  done (took 10.519158655 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.093611749 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.091438232 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067544971 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123495686 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.093049384 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068875565 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073790114 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066404042 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089871748 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.123309602 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089453176 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.09929275 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064957871 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067686421 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.073955116 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.196587939 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078813605 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080179801 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066649219 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079679776 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105348595 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077445758 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077967122 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077497289 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128628072 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.167389847 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095244699 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096569202 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.064796725 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079472867 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114129126 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129547798 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06491191 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063884702 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.119908566 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094032005 seconds)
  done (took 4.530811398 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.966637922 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.092105253 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.101845298 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.61980521 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064598782 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.152446822 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241518605 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071993249 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.334324681 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.147275234 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.143576877 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.146453225 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.116326611 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068147415 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.226135381 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.114064833 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.40890886 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066260536 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065310366 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064286099 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.066961323 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066103815 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062074018 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068271782 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093443096 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.085651295 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.163677241 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084825858 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.942485503 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.246054726 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.065600059 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.158660231 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.085767964 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.366554981 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068256235 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.082301922 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.408121472 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.122410455 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064019804 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168273001 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.115727929 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063420408 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.117434043 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077940161 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.067853318 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063025548 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.067617221 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071002702 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071894921 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079314919 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.102019758 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068607035 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064587792 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.163351954 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063346749 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065142671 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.066136256 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149094136 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065017304 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.142083457 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063417521 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067458216 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.099948988 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067291313 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087891958 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.099462855 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.331404992 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.030161946 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066367141 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.951688406 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076788072 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064762305 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069504871 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065434994 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.066564073 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065995895 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.071827003 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068670095 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067058666 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.10730673 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065009346 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068121098 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063434337 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064748738 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070098985 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.098770983 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063247024 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063520774 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.473457463 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096116643 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064825689 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.075351972 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103961278 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065781296 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.071424481 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066182376 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066120914 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064534887 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065679612 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.178958728 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.094882633 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068995814 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111280092 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.032758153 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067654746 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065405345 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070335811 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068847747 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068377515 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06576447 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06836049 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067893226 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063947714 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.109709425 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065772849 seconds)
  done (took 21.416404942 seconds)
done (took 38.564961462 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.256392139 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079940719 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079914891 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080489616 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08047246 seconds)
  done (took 1.80743062 seconds)
done (took 3.025729891 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.108623853 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.062690252 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.099016473 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.098006963 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.065708307 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.062933049 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.096497144 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.062622719 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.096801545 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.098465799 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.100395872 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.099449687 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.062699868 seconds)
  done (took 2.3418125 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068936053 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079925648 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081783799 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061085868 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.07056895 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.08036003 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060840593 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080051548 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.086084632 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.08041505 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.083094473 seconds)
  done (took 2.045716159 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068488464 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080514885 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081979744 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060761629 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071788431 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.080685441 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060823086 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079842553 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.083023208 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080643181 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080094488 seconds)
  done (took 2.033649212 seconds)
done (took 7.628512463 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.06609885 seconds)
  done (took 1.257038716 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.530817963 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.718713252 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.067666649 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.086354743 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.187709892 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.096621491 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.224688842 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.071728422 seconds)
  done (took 8.35433065 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.099135121 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068648948 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068070593 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.068320119 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.067635274 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.067771279 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.066753283 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06655223 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067528295 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066622373 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067332177 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.067822538 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.066492844 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06650222 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.066667286 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066857793 seconds)
  done (took 2.397965694 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096660096 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095261521 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071328187 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072378696 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069840254 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069331706 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071876698 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071493716 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.068485043 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070217524 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071691308 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070548329 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070491441 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.061681825 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07163693 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073141526 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.06858237 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.071783592 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.072151045 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072902569 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072056882 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061720483 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070252078 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.071649416 seconds)
  done (took 3.051821393 seconds)
done (took 16.267450227 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114116321 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074219808 seconds)
  done (took 1.383273832 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.068501699 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069532323 seconds)
  done (took 1.3452774 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.075548948 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059841851 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.081442 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071029443 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.060370787 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.060579268 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.079717142 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.060554409 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059955552 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.060309427 seconds)
  done (took 1.877265891 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06224183 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.070230478 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.067296622 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.069301322 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.068521657 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061762908 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.064780025 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.061940579 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069331631 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.060603674 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06579777 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081191473 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064993876 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082929623 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06495378 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06571498 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067764804 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064703801 seconds)
  done (took 2.428263396 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060084271 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.060984355 seconds)
  done (took 1.338405836 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064318021 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06120625 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063818761 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063842008 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.061302429 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060480279 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06077649 seconds)
  done (took 1.645045988 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.416996553 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120385408 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.343157669 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.06759217 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076833292 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250378463 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.062019144 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.066673751 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.066954398 seconds)
  done (took 2.724662987 seconds)
done (took 13.963789666 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079468845 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.082767744 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.087934109 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.421804982 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089980523 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065108366 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.111790571 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.176142444 seconds)
done (took 2.345243596 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213218035 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.384096116 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.943480411 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.066467935 seconds)
  done (took 3.612580047 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335594962 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.084319093 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07605257 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065280935 seconds)
  done (took 1.794017927 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.063552634 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069964366 seconds)
  done (took 1.361211436 seconds)
done (took 8.213656835 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062761642 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062101228 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063070108 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062187794 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.062883987 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063374374 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.089992522 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.062978463 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.062883666 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062406884 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.061775253 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.061777304 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.062551008 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061875084 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0625536 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06245929 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062039123 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062527003 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062305907 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062317777 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062526429 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061907641 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063637839 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062185343 seconds)
  done (took 2.783430243 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079201648 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064399515 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065980818 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066143631 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066482356 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065959099 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.065822752 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064197923 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.065971471 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063959592 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06604519 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.066206839 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06401676 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.066278017 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064402269 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.066199587 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.065695076 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06431659 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064527724 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.066652628 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.065503579 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064476132 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066532443 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066136704 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.065906689 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066156193 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064057411 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.064484745 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06597024 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066319623 seconds)
  done (took 3.218002973 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.062762041 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059117314 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059626317 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068251011 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059698028 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.05994651 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.059762437 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.058896481 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058979427 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.060510328 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.05945633 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.058519312 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.059718064 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.05867272 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059179636 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060055591 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063003306 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077145748 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.059129785 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.058985744 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063764221 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058882589 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058870101 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.058668389 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.059283126 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058560725 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.058639829 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059610456 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.05866368 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.0597773 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058848351 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071158613 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.063842358 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.058796313 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06826755 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063416263 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.05880163 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.062411792 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.060229194 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058640743 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.058498234 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.05865634 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.058637299 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.05856645 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068750771 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.060302706 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060711231 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060098188 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.058859824 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059630922 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059094181 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060860456 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064711584 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060312655 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.058395979 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060104151 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059345142 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060909579 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059920023 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059879586 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.059631968 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063090189 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061702861 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060971742 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07858499 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061421757 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068878559 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.05921075 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062963166 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.061858975 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060480193 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075209683 seconds)
  done (took 5.660215536 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085178359 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086955014 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0645702 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063472434 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059661618 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059244953 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067158046 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059089031 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06374376 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078591049 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.05933587 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06365815 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063324468 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063225364 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059732346 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063945268 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067710943 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059780807 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.059493882 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06303069 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059505861 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067359604 seconds)
  done (took 2.692468033 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.139886718 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065017385 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.102177962 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075657012 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068055233 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075795502 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065100264 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065232895 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065233141 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065711922 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06550547 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065364454 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067754393 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065732163 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065579494 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065350351 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065316982 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065550605 seconds)
  done (took 2.558011595 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076396676 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065063043 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087344486 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064926297 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064687469 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06463314 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069139023 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069452606 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.064507482 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064777364 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.069519216 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064562688 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.0642066 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064542654 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06429081 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064882953 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06446776 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064496755 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069394128 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06904797 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068630373 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069402687 seconds)
  done (took 2.733749908 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074003487 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063830408 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077756956 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065623368 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.05952849 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059557312 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064528217 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.063523501 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064702376 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063301494 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066409225 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059728393 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.065660956 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063915764 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065563308 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063999895 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063685557 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064091022 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063452254 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059475773 seconds)
  done (took 2.538854304 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085742733 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062332039 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062484652 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080772458 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062070675 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.062444553 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08074899 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.062242261 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.062658633 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083307378 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06263101 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06204031 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081111936 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080591364 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06222625 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080476124 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08091429 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081037687 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062195716 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062338855 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083378974 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.062307118 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080963385 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062297896 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062213883 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061976021 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061945372 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080315404 seconds)
  done (took 3.222991471 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062721726 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062186264 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062378825 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062336049 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062829977 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062883619 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062469273 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062692947 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061954237 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062262371 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.061902707 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062441624 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06217664 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062468769 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062320949 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062049654 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061908757 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062245138 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062222421 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062221742 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06224562 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061951491 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062268928 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062418338 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062719791 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062211354 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062557528 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062180937 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062035852 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062131929 seconds)
  done (took 3.121305473 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072506466 seconds)
    (2/2) benchmarking "in"...
    done (took 0.070858056 seconds)
  done (took 1.395470038 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061785273 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075485741 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059225054 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069191809 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068375685 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062793561 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070221327 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068001949 seconds)
  done (took 1.783250481 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.067287179 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.089399 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.06127139 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.061856588 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.065177567 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11941011 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.075809539 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.071215881 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.076082119 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063465911 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061543177 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.073009992 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.060270742 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073243575 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062568027 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068991133 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067042284 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071828099 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072905708 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.059313633 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072098784 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061708098 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059695968 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061943567 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060962415 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067147457 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075775808 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072116208 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068376112 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058356061 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.079157697 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.05965519 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060959241 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069040016 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.064482975 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.059930768 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095909608 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.060483932 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065898704 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059469241 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071571762 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079578006 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073380795 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.077011817 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061355906 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061951633 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059525712 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.061667277 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063208746 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068595614 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059408395 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066452963 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058811516 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.061310887 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06987398 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059785912 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.066119208 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069050084 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07220735 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069565994 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067789472 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074085568 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068093009 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068942255 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060532876 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0787665 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.06136881 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071711722 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073701337 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060624001 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0728592 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058968501 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058541777 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.059386584 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09157361 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.061530665 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.061106858 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.05964149 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.059689529 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.061284383 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069146945 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065663807 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066204039 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063422842 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074827423 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068398824 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.059438981 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067202073 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.076885287 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06241706 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.059524035 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.075161494 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062398972 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058803404 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076454192 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068652978 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060977835 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.060103521 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06226385 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072510123 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.061068438 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058039804 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066814301 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.061024931 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.062233098 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.06438419 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066613553 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.059079374 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068838725 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064911463 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060853767 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058018391 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.062947586 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.060213939 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057688112 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067668695 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058827994 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072854529 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064546193 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.072315586 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072381215 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.068666061 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073845409 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058373198 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057114692 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.075130957 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.200848951 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.062620777 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078335978 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060324107 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070489362 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060275222 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.06165748 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.069671991 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.05958258 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062349241 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060409021 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065783224 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061561026 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062354838 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06424631 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06791039 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072085448 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.061241001 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068049997 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.060964369 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075220895 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069113793 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064521186 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064919965 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.060715336 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07185009 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065745416 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068998276 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059624451 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.06027692 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.060353182 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069808651 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069087974 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.062213311 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068467958 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063818336 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.06116688 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.060416042 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.062092268 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063871137 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064682357 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.061174078 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066884142 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068681183 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.074575922 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071108468 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068559374 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059008189 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059491733 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.06179052 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059641455 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.063986529 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06877499 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074163079 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071308716 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079879638 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059970335 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068647864 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.061764551 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076040604 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071980644 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060912803 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06533434 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058962772 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061592884 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06838974 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070895092 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.07339835 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073898018 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064221384 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063987847 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.059576854 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073747039 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.059882015 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067658075 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.068541412 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.064831387 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.059759161 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.061680236 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068424476 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063679555 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.060216792 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.074427474 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.066513991 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059359095 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073923842 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.05994371 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.070116057 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059557501 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063305004 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064514341 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.062110784 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068432876 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074623434 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058753858 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.060018173 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074950323 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.062013984 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061392157 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.0670893 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.073898647 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064052009 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067296938 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070135593 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068593995 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064004693 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069049336 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.060860958 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.068952103 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.063209714 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070470947 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.059179357 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076515867 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058192 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.073235395 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.059525404 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.070159052 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.059746392 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068575935 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.060446009 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.075503822 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.060853761 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.060149378 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070784606 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.058070464 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067746107 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058543 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063491799 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065035894 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.067050969 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.060283908 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.204688302 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064635999 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069638642 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065395295 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069092274 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.069843885 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06444013 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060060451 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068314385 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071506462 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068357748 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061956267 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062147996 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061656108 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069420014 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062190656 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061534183 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067769112 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064343797 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065383763 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063114372 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.062614143 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.062265555 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068430018 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069704041 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07774086 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068174122 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066908591 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06897337 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059497211 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075222518 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059734427 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067102977 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.058815047 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.067303181 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069004762 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.060871044 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079307456 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.061649388 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068441874 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073346538 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06814901 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063738928 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077618587 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.064300872 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068551881 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067880882 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.063946282 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066208628 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.062185807 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067216455 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068817201 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07014151 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06088971 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066774668 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068380308 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061878482 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.069341827 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.061927658 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06745087 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.061869683 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058987919 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065103059 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071468732 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064493075 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064546834 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.060525115 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.05863463 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060107389 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067980862 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064294602 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068094867 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074493277 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058975115 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.061837542 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059686422 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065381575 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077405329 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069123567 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067413399 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064243603 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.059062988 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.061874031 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062245349 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.06031136 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063967749 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059204433 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.059378061 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069865537 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.062003813 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063882091 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060582048 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.061319355 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068632781 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.065245951 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060329095 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065868786 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.059317431 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064589398 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059080861 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.061732602 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064104507 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059093218 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063156177 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.069484264 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.075047267 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066072349 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067591381 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06040176 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066951386 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074195626 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067755524 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060349839 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067769852 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.058715752 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077026841 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067815846 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066996163 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068630831 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06050649 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075651577 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06352363 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068852254 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074009536 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060633225 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066270624 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.058646339 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073896079 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.062980314 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.058920803 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065957965 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065475504 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.204581821 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072814619 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.062131261 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069202273 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067171409 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06398862 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.062815133 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.062343535 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069319893 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075847845 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.061586779 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065500734 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067825164 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068046972 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064458796 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072534514 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067946249 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061810506 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062588626 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063509077 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061206342 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071990008 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060508803 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064656736 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064398384 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059676554 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06656986 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075948114 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068930948 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069660764 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059901015 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.059303874 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.07710335 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06383696 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.064316045 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068241445 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069050399 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073116972 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069108966 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076239167 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060817121 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066154298 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072430739 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.061154326 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.059874961 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063376008 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.061854193 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068689943 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.06962626 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066771423 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062750915 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066102615 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07227711 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.061342752 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064388997 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.06544341 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.060825348 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069768326 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067542769 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067860586 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.061480145 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059697585 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062904604 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068170339 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066694577 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068397388 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060963176 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067724728 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.073444307 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06665947 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063839266 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059981018 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063804904 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068345828 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.065460013 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059659906 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064301909 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063626719 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.068251528 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069093408 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06418551 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059960318 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076488118 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067852455 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.068831474 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.061966504 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062196147 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060203658 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060038315 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070919138 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059398547 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061506906 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064486913 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061964079 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.076933539 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068273922 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075045963 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060847523 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063837182 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059744073 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069196478 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064039941 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.059761766 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069571608 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.059104956 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074452267 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.071250714 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.068197672 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059399574 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064132834 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06752633 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073730907 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068763055 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067784232 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.063510307 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.06891689 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.061632551 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.070017543 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.059140266 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.058110922 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068651964 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067315833 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071222131 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.058780626 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.068236047 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.060921442 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066434659 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.066627395 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.060726308 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060772515 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.060148299 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.205785922 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066614846 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069893654 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065850072 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076788131 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061983009 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072612301 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068859659 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.070874212 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073324223 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072839888 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068044372 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061431079 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067047511 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068243504 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.061466862 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06446987 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.064104086 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.081739069 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.062234552 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.062438659 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074923041 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067704954 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.060273068 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068147601 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064688945 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.069889936 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.061485777 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.07019839 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.064859351 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.060709734 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064275402 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06433688 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058871385 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060110839 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060398668 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069598553 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064296956 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060639111 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079054612 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061898448 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068157661 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071930627 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067547755 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.063486414 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060784362 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063269163 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07387375 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075902382 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063369978 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068433887 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061523567 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068754349 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.058953617 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068522317 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084876562 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071191106 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059462848 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060082989 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073443757 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074741059 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064083924 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069059633 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068675029 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061841266 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.081475286 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067941696 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063218534 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.070483204 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062968459 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059708796 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059414375 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.06189308 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072047423 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059757493 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063070656 seconds)
  done (took 41.188423114 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098701797 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0613729 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059776877 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060209422 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07217204 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061350217 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059710257 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061441477 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06086564 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062817735 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059861267 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059649139 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071645263 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07451507 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070974384 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064425383 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060105939 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060865843 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060152275 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060805989 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071076946 seconds)
  done (took 2.726778461 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.06784699 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075517827 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072394248 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077153493 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068587875 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064865069 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072165248 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064802516 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072679075 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070215911 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.0726594 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064975713 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070144702 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069950013 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069818414 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064716919 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072521933 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068298799 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.065061274 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072018255 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065251501 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072397569 seconds)
  done (took 2.86485096 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.061526593 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.060939958 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067928183 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.059531258 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.05919718 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.063601296 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059024551 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.06303668 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.063259671 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.063610397 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067507118 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.060093606 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058949272 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.064621804 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059135556 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060195962 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102517994 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.060505255 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060560549 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059253688 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.065147272 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068242283 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.05909605 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059444941 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063318837 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06338087 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.059213303 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062693096 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060257583 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063411171 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.060347734 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058971672 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067850465 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067257233 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063312871 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063263696 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.061058055 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060386006 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059228083 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059337841 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067287694 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.061079741 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.059782644 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061243956 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068028407 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059642985 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059003715 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067617125 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058992297 seconds)
  done (took 4.417489156 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07225889 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110267862 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065926147 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090545865 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073876457 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066972969 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064934937 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09143167 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060852257 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06148918 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074530513 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.075004432 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063158414 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064732412 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.065138299 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063111334 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063901662 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061727644 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066006124 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06222523 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066301085 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066485771 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.073290845 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073947832 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064055725 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062171988 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06255372 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064580496 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073789978 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066723573 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.066021595 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065202524 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.074047603 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067694027 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062320182 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062527292 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07511158 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063633915 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062780603 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061358741 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.063448913 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.065723001 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.068210615 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.075682844 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0631687 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067503072 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06307204 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060350828 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074431174 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062790726 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067548301 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075412016 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064191021 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063483491 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064638525 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074389512 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063296938 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061498148 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06347073 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.074366646 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061037574 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064337039 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074875744 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.062577161 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066996479 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075052998 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.067676713 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064584658 seconds)
  done (took 6.102459824 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070620599 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092152197 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071816647 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071601401 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070803137 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071300671 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071130714 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071126476 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070684672 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071706374 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071152476 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110369361 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06657881 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076301184 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070630338 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072658292 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071148708 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071552697 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070712664 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070771835 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070825778 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071640974 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070848981 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071299637 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07394764 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06630688 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070826438 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070689465 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071322711 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070909595 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07371868 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070720805 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070694433 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071374553 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073995437 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071145194 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060623229 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070600558 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070830194 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070637168 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066595887 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071420527 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070632509 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066299868 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071669729 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070716535 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071607268 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073805696 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079525263 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071465619 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070705358 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071274439 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070929836 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070868515 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071527661 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.079290524 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071430769 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071544433 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071277828 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071861686 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07189121 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.079443817 seconds)
  done (took 5.848743715 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076222833 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068014059 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080069777 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061873551 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059718124 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069642488 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059684302 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.059476433 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068124346 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.068043216 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070350613 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06974693 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07216014 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070309479 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069845105 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072057443 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069761657 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069155676 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068422423 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069616407 seconds)
  done (took 2.732531312 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.072427965 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07795393 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066035574 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070192168 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065340643 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069722761 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.064252086 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065288955 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066041361 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065464208 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071249638 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071142878 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065930783 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069768853 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070903867 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069463745 seconds)
  done (took 2.449740303 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.067192643 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068152097 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.069301278 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.061342634 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065780298 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061213992 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.061721344 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060688951 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061287266 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075302688 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061073812 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072584013 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060774442 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.059873437 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060494255 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06624888 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059805848 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061070632 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060906372 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.06616065 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067411594 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.062817119 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06479095 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060799295 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065948647 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067879046 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062807633 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064390493 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060873902 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.061101774 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066272823 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067446561 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06040492 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061757176 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.05958735 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06070711 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06078285 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06121994 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066629301 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06116144 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059461797 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065622767 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060825774 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.062391177 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059945336 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.061627398 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060107211 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066641184 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061420488 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066431441 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.061292196 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.063054514 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06182705 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.068898087 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063888836 seconds)
  done (took 4.83931261 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074994802 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064923611 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059558958 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059100815 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.064962802 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066099728 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065371496 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065844936 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06676158 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060713567 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066694892 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.065544558 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065431898 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065165738 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065601478 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064954344 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059180996 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064985352 seconds)
  done (took 2.528863238 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07074932 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065045089 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.069288547 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064932801 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064778743 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065083691 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061836627 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.059895478 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059810052 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064608707 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064380015 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063887816 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060055431 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063895056 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064517341 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064335739 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064381667 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059904279 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064445928 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059840056 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064058123 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060041949 seconds)
  done (took 2.756809404 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.088549753 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083438367 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.123708588 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078153373 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086140072 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070448055 seconds)
  done (took 1.886840889 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089634279 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103154613 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064494109 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065085894 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075040981 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068247225 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068166336 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068744564 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0751443 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07281274 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06812852 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074916847 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075044304 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070807641 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074742278 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07791631 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068363507 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068272774 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064459737 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077681133 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068373612 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075055699 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068241776 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068014456 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068195489 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07057629 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078020526 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072890261 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070662422 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074748695 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078076129 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068225336 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075116931 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073173425 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064904042 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075406676 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06833457 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07844911 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075337464 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070440091 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06438562 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075076824 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075034974 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070230363 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078316862 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068673446 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071002012 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068871139 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068788075 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081009441 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075603631 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070795184 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075250381 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078418625 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078383617 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080814129 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073350031 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070877994 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075454833 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073140103 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070697262 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075078721 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070515342 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072990752 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07824199 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07044949 seconds)
  done (took 6.188537973 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097022336 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065660277 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06940709 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073669498 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071404749 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070250916 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070643209 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070469205 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070182226 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067089869 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104631315 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070786517 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07256427 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072739577 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070924721 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070032215 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069555241 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07077175 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065356287 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080537473 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068461736 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070439174 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070534739 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070742766 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073195073 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078025128 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069691619 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068526852 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068599728 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068427449 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070583112 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068626289 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070503913 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065148978 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070407929 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068544988 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068167417 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070621285 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068663744 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075337044 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070613629 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078177468 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068650792 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06863778 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07376948 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068492639 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068480025 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065527861 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068632158 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065443207 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073658481 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073284166 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073132391 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071379756 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068684606 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069432876 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068694228 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068498976 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068708602 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078132301 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070510966 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068349456 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080890598 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068808876 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06829504 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070257308 seconds)
  done (took 6.099522247 seconds)
done (took 125.570098952 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208356694 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182892833 seconds)
  done (took 1.739826231 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072786766 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096082443 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.074308072 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132334392 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070187575 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104165594 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103237458 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074858316 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069509553 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069225315 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069854944 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072654226 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135131831 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069989372 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069442567 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072727788 seconds)
  done (took 2.721796574 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106795758 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.18394456 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110800846 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067851734 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104928208 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075564812 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067617479 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078569904 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07159803 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071540779 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075322164 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073239283 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07110102 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073153609 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071356922 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074880556 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070554871 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07484248 seconds)
  done (took 2.893004207 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.093209669 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.084552081 seconds)
  done (took 1.550772924 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157365088 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104084502 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144213804 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.325843841 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.133854423 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.280594155 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129080877 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126953662 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.109391999 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124010663 seconds)
  done (took 3.00251378 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101549796 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.165614941 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.306386082 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11874856 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.0745368 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.084837697 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121388604 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.08038194 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078929701 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078519636 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078725031 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078124277 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096960021 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074933967 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074754761 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075506348 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.100180171 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073865952 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074438377 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074385998 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099704339 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068176021 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075220795 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073985743 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076353704 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076798154 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070577793 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068296049 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074428278 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073931904 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077157288 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.082323095 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076575043 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.101468774 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072710801 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.102152682 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.073881727 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072823708 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073845759 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072425177 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075666261 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076132594 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077346128 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07583931 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06943476 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.073255091 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069480652 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068081687 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07789524 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069116108 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077423179 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076717651 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.101138069 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069202459 seconds)
  done (took 6.026638241 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107860271 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106393207 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068655596 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113323765 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104612562 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069023866 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104500083 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09889306 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.1073732 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068177903 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06761679 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067642815 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076169218 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078662186 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115749305 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108120005 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070074675 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068432691 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106782656 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106839668 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067497417 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10092921 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097069529 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106733712 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066496428 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068224814 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066847826 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067401497 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073846066 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075544977 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067438797 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07578747 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08062136 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075254925 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066382333 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067157879 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067077309 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.075967049 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075920214 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075545506 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074189746 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066209833 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06658373 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067454071 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06794504 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06633515 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074809561 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.075692639 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.074886199 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067090877 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067416937 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066875838 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06721412 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075000843 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073787537 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.075819516 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076054807 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066931572 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066931338 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069235279 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076634609 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075988786 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075577781 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068236032 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076386674 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067269879 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076771252 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080094832 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066648505 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067262039 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066742184 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066845973 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067477724 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073821834 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074061162 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068118882 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066791233 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066586663 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076708539 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074125408 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066617538 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073608618 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06621886 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066809292 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06843377 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067506501 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.073446665 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.075605211 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067536133 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066673715 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06664666 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066681199 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065808579 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073237199 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074728483 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.075002318 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.074174056 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067012324 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073973916 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073926071 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067279197 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.073989047 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066448026 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066470922 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06680359 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073563927 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072618911 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.074670163 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065621831 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065510597 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.072530023 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.210502815 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067932017 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075000097 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077085828 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075929796 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067095163 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079964764 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067275828 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076339664 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067296561 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076915134 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06783562 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075322154 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067520292 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066605837 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067952851 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075372473 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068397596 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067517967 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067733978 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067795726 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075232927 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078270289 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067987757 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074749056 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075152712 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067826212 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074964312 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067382091 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07547599 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067594383 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067646755 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066948997 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077625269 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067419023 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067502255 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067459401 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076547901 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067283985 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076559469 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073878602 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066562864 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078372558 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076673949 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073926484 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076678251 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067993688 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067093749 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067348085 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067047496 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074008379 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075460086 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06793346 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06729025 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073632173 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07639613 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066466604 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074158268 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074320814 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074578109 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06717252 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067386489 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077131703 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076628338 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.074516886 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074720626 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075361275 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067171797 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073967077 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074878018 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067034831 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080724206 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067622456 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.078565985 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074714748 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07383359 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075266315 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.076388561 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07710971 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076942534 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078931807 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067497832 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067225185 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.074755195 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066957465 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06725947 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.074736569 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067741969 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067764677 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079259376 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067447571 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076987773 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06670429 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075246182 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066388064 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067466415 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079321009 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067093471 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067311066 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074600371 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067167621 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.074322619 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076593673 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.073769686 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066611388 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066974375 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074412773 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.074638282 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066307345 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066386647 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066833136 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.072875373 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.071669205 seconds)
  done (took 17.989957385 seconds)
done (took 37.309535065 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208174182 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.160340935 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.193492583 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114610633 seconds)
  done (took 2.154055112 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.095769022 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097199638 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.076942853 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063997757 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.082836483 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.063960654 seconds)
  done (took 1.894048086 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280525821 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.198205817 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177471768 seconds)
  done (took 2.064008875 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.218630523 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.197620265 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.475957248 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.294237425 seconds)
  done (took 2.696815058 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.134260652 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.07942426 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.062544568 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.073442714 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.111214195 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.143353391 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.08881762 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.113638047 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073725158 seconds)
  done (took 2.35151355 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.132782468 seconds)
done (took 12.733676883 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.158896179 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.097880431 seconds)
    (3/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.077630457 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.066644425 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.114518879 seconds)
    (6/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078088059 seconds)
    (7/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.199219844 seconds)
    (8/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.072917535 seconds)
    (9/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.087811871 seconds)
    (10/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073433403 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074774191 seconds)
    (12/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.249951543 seconds)
    (13/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.064305973 seconds)
    (14/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07014147 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.198340197 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086823437 seconds)
    (17/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.064549742 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.072857525 seconds)
    (19/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071908264 seconds)
    (20/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068730001 seconds)
    (21/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073179821 seconds)
    (22/309) benchmarking ("sort", Int8, false)...
    done (took 0.175529282 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072717163 seconds)
    (24/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.196196893 seconds)
    (25/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.285549911 seconds)
    (26/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.222592529 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.150340404 seconds)
    (28/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076674783 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.12251973 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075173946 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.080353049 seconds)
    (32/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.075336478 seconds)
    (33/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079813753 seconds)
    (34/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.103602703 seconds)
    (35/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.096015722 seconds)
    (36/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.220161776 seconds)
    (37/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.201406482 seconds)
    (38/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072867636 seconds)
    (39/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.199375407 seconds)
    (40/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074874353 seconds)
    (41/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.179273059 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.120824796 seconds)
    (43/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073671311 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.12219926 seconds)
    (45/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076940192 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072337225 seconds)
    (47/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.075416483 seconds)
    (48/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070779867 seconds)
    (49/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064666147 seconds)
    (50/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.067889013 seconds)
    (51/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07045433 seconds)
    (52/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.062578227 seconds)
    (53/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090235097 seconds)
    (54/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.183932302 seconds)
    (55/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.23861474 seconds)
    (56/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.158174533 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087622683 seconds)
    (58/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.076276548 seconds)
    (59/309) benchmarking ("sort", Bool, false)...
    done (took 0.150142655 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089636804 seconds)
    (61/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.094070597 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.084173767 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090662264 seconds)
    (64/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.227351045 seconds)
    (65/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.142838432 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 0.065655865 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077143208 seconds)
    (68/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075935222 seconds)
    (69/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072712055 seconds)
    (70/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.187359341 seconds)
    (71/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063155153 seconds)
    (72/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072511049 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063607494 seconds)
    (74/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06833718 seconds)
    (75/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090697135 seconds)
    (76/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.147520489 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.164826049 seconds)
    (78/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061825215 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091198404 seconds)
    (80/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.180142072 seconds)
    (81/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.158704072 seconds)
    (82/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.063722049 seconds)
    (83/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.074289344 seconds)
    (84/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.062455534 seconds)
    (85/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.237827774 seconds)
    (86/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.302114713 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.079173244 seconds)
    (88/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.065758442 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.101720525 seconds)
    (90/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074159635 seconds)
    (91/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144974455 seconds)
    (92/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.210528637 seconds)
    (93/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.229064943 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087643033 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.11641119 seconds)
    (96/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.06423405 seconds)
    (97/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.064903202 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.064885127 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06511414 seconds)
    (100/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.065390164 seconds)
    (101/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063041117 seconds)
    (102/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.213893422 seconds)
    (103/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.064217792 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.085921912 seconds)
    (105/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.172395855 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.135986607 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065579946 seconds)
    (108/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067030443 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177019814 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065526616 seconds)
    (111/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.064111062 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07101903 seconds)
    (113/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.063935605 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08861133 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064378184 seconds)
    (116/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.064080695 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081725846 seconds)
    (118/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067496729 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168364308 seconds)
    (120/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.143815447 seconds)
    (121/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18011652 seconds)
    (122/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.226016988 seconds)
    (123/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.062774161 seconds)
    (124/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066685356 seconds)
    (125/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.251140438 seconds)
    (126/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.06378885 seconds)
    (127/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.07857954 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075542817 seconds)
    (129/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.148969231 seconds)
    (130/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076277477 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073173464 seconds)
    (132/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.077584807 seconds)
    (133/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.063806755 seconds)
    (134/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075898114 seconds)
    (135/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.1509453 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089669566 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.065033536 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124763661 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091274422 seconds)
    (140/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.063545875 seconds)
    (141/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073980807 seconds)
    (142/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.065203719 seconds)
    (143/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.162882235 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076666064 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.078417702 seconds)
    (146/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.160439189 seconds)
    (147/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.142187657 seconds)
    (148/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074984598 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.063823981 seconds)
    (150/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.064369436 seconds)
    (151/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.070794583 seconds)
    (152/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.065389625 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08696587 seconds)
    (154/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074320143 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117967444 seconds)
    (156/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070647643 seconds)
    (157/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071832293 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.089498785 seconds)
    (159/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063293006 seconds)
    (160/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067349759 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070908572 seconds)
    (162/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.207366221 seconds)
    (163/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.072089802 seconds)
    (164/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.063307332 seconds)
    (165/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.065860477 seconds)
    (166/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.066286109 seconds)
    (167/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.062816586 seconds)
    (168/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177732706 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.063103181 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086490569 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092396844 seconds)
    (172/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.158730199 seconds)
    (173/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.144767269 seconds)
    (174/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.148037463 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.078365112 seconds)
    (176/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.064538868 seconds)
    (177/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071407683 seconds)
    (178/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.168337524 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.236721052 seconds)
    (180/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.145878385 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.124641204 seconds)
    (182/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.15455603 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145795545 seconds)
    (184/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07191461 seconds)
    (185/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.062496701 seconds)
    (186/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.211536879 seconds)
    (187/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066111082 seconds)
    (188/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.063899427 seconds)
    (189/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.062275746 seconds)
    (190/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.063684284 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.062969569 seconds)
    (192/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.069790456 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.300005749 seconds)
    (194/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.067187206 seconds)
    (195/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.067622835 seconds)
    (196/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066787298 seconds)
    (197/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.065219438 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174060572 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148958312 seconds)
    (200/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.073891047 seconds)
    (201/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065930771 seconds)
    (202/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066627361 seconds)
    (203/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.065854682 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.064837318 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065503168 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115329642 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07236152 seconds)
    (208/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.149084825 seconds)
    (209/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072990756 seconds)
    (210/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078789297 seconds)
    (211/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093364413 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071932025 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065711977 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179405581 seconds)
    (215/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074425061 seconds)
    (216/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.161735545 seconds)
    (217/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.071822259 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06381966 seconds)
    (219/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065532995 seconds)
    (220/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073098056 seconds)
    (221/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071513454 seconds)
    (222/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06503745 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075879209 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075905359 seconds)
    (225/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.064978058 seconds)
    (226/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.064968106 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.14492488 seconds)
    (228/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065065962 seconds)
    (229/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074250097 seconds)
    (230/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073448728 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066079259 seconds)
    (232/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.064882799 seconds)
    (233/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.063133148 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122944983 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07287188 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.142460979 seconds)
    (237/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.075267157 seconds)
    (238/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072843989 seconds)
    (239/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067630408 seconds)
    (240/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071190853 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.063722889 seconds)
    (242/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.146492307 seconds)
    (243/309) benchmarking ("sort", Float32, false)...
    done (took 0.13465583 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089340572 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.065218517 seconds)
    (246/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.064198986 seconds)
    (247/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.063166273 seconds)
    (248/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087090167 seconds)
    (249/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.144097153 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149703151 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064122288 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086620132 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148962307 seconds)
    (254/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064843566 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.062969393 seconds)
    (256/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.063618888 seconds)
    (257/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.152814214 seconds)
    (258/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063931739 seconds)
    (259/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.063881117 seconds)
    (260/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091743546 seconds)
    (261/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.06513985 seconds)
    (262/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064953827 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165339108 seconds)
    (264/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.063737019 seconds)
    (265/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.167919538 seconds)
    (266/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064188055 seconds)
    (267/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.063952982 seconds)
    (268/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064656343 seconds)
    (269/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124417966 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129288224 seconds)
    (271/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.064600318 seconds)
    (272/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.065097688 seconds)
    (273/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.063837832 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06430319 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071158576 seconds)
    (276/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.066143082 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064149993 seconds)
    (278/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064748626 seconds)
    (279/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.064937014 seconds)
    (280/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064943631 seconds)
    (281/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079884332 seconds)
    (282/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065337542 seconds)
    (283/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.064890278 seconds)
    (284/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.211430221 seconds)
    (285/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066444029 seconds)
    (286/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064060634 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07534041 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064142428 seconds)
    (289/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.063337398 seconds)
    (290/309) benchmarking ("sort", BigInt, false)...
    done (took 0.247983431 seconds)
    (291/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.064645287 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112602563 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064227361 seconds)
    (294/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.063172511 seconds)
    (295/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.063540484 seconds)
    (296/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.063469227 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071676949 seconds)
    (298/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.071983116 seconds)
    (299/309) benchmarking ("sort", Float64, false)...
    done (took 0.132208117 seconds)
    (300/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.063792333 seconds)
    (301/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.063266471 seconds)
    (302/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.063311058 seconds)
    (303/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.067803035 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118306075 seconds)
    (305/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.063936719 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.063495487 seconds)
    (307/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064597399 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063227268 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.063026854 seconds)
  done (took 32.718211345 seconds)
done (took 34.147924452 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084622198 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089177464 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071179778 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.084104339 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079951477 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094272664 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071923377 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07714953 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079350757 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078205989 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077974863 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070969001 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073776905 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073816559 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.071491067 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087420007 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07868892 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072820779 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073251785 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063401045 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072806322 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064181055 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063540864 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070529816 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.075746666 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071147265 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073865962 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073832727 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064194971 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064664847 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.0688707 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073437338 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066408675 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076226926 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072386415 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073037302 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074372914 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077013437 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.063500172 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064848498 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075898242 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064885485 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073238359 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.070736817 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.069511638 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071240238 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072949903 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076669238 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087842693 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068423762 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075142835 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075474582 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075889975 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070215252 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069449293 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072443806 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070445314 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087092722 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073082807 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068533908 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074961704 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073737651 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071306513 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072856764 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072866187 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07574241 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076115972 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071277544 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075323628 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071819015 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064053222 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072708863 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068950015 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064418255 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075969562 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078161604 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063439116 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068482975 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072608152 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072628553 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063738337 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068144357 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063134267 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.068867949 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067998278 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070586477 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069042169 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071734313 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063207461 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073214487 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071784233 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072092752 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063206954 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076552733 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063782996 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070593275 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064318079 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064496149 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063031745 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06956888 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06391456 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068312816 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071841921 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.062837456 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069068186 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077993287 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064248409 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072076035 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063128173 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063536396 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.075277729 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075320219 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064433778 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068514331 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063198835 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069423568 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063620154 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064226092 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064050776 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064828468 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.0683537 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064743291 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068265215 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.069623702 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076585737 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064156243 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068683531 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068119005 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064076175 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071034352 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064233324 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064035723 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062714504 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077530526 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067794168 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063822541 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.068855584 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067663665 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071438547 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.061909104 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072050223 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069706146 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.209052681 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071872741 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063614322 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077016635 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069241915 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069357458 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.063441104 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064997629 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06361383 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064733636 seconds)
done (took 12.450994138 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064926442 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.093935207 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.073014597 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080943324 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.077249997 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065245803 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068853479 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.082732368 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067660681 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.084624089 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08594463 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085388978 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.092752717 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063227723 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064488352 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065380156 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.063258025 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.072147404 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.080382096 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087292156 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.09464929 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063980654 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.073664017 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.080630649 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.075408587 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.083823997 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065894419 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065564128 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067596973 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.080639688 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089580885 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.064395789 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065518707 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.079310433 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.07892233 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.072315664 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065575605 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.069196008 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066040575 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064557528 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066576273 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.080001827 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068874526 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.073486276 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.065770124 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065896528 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065542112 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.068523865 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.075746903 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068403775 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.072600809 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.077145917 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067397684 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06476646 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06318877 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.068989501 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065002859 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06511245 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065000916 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06443245 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065270177 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.066937976 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.065515493 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.065360157 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068349486 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067739608 seconds)
  done (took 6.243113738 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083169793 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094365436 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081986574 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081926441 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064688091 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065200396 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065118289 seconds)
  done (took 2.066107497 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06566986 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077932845 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081834712 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082074319 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.073874785 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.083439812 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065153077 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095997127 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064406579 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.077653509 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.112227981 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082873126 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06832801 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076971722 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065225645 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.073551392 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065033757 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072835499 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073598155 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081698595 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069116611 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093010943 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079120934 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06550939 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.085750308 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069508113 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.064280599 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065584632 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066096646 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066107289 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066002951 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104794243 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.069451078 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079828832 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066360007 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.064762829 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.071157355 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068786327 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.068334062 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072179879 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.070716597 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066470534 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.063772341 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067362051 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067978331 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.069807015 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.063772983 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066652885 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.066347441 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.077472976 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064162676 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.069620158 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068442907 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070278372 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071529011 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069590658 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073405001 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066928907 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.077172479 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.073277933 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066197712 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.074978387 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.107022472 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.07082732 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073691375 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.069464743 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.069410432 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.070784885 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065905296 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.067424925 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066519002 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.073695974 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.064589049 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.067375556 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068753254 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066982191 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.069986562 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.082728117 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.082349382 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.0786 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06756233 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066423636 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069506037 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08196388 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070087821 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066288726 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068465406 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064481133 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070038077 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066487301 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07168214 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.066609176 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.073835824 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.067792181 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069223293 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07430716 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06522682 seconds)
  done (took 8.532897982 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068374343 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067090321 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067710008 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066158438 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06644984 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066924414 seconds)
  done (took 1.96981886 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.089647653 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066031633 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080426473 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066528808 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102336674 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.073333958 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.073591444 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07474838 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.079244478 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078714008 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.073449242 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.076216564 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.073447991 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.067557401 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.073125003 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.067158105 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.073070317 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069677004 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078220522 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068412337 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080009234 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067649735 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067717198 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.078036731 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.069198178 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066805574 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066383888 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078241884 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077815161 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077288735 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.067408671 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.068697832 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073789649 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074425645 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.073418793 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073584287 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065572498 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071568045 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068187159 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.06878772 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.075386251 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067468027 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.068306765 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07184332 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.074481771 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073665796 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071463398 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069696701 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.072764333 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071245569 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071419375 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066475862 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068648818 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071871213 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073848625 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074451168 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071586724 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.073396055 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067724038 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073944348 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065976725 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068959623 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074927248 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068628806 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.070082994 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07208964 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073808104 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067803456 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067847838 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065939137 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071496944 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06585364 seconds)
  done (took 6.736335641 seconds)
done (took 27.062982579 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.009454335 seconds)
  done (took 2.522634743 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.57059937 seconds)
  done (took 2.122870698 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.672769615 seconds)
  done (took 8.221470783 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.301113596 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.341054304 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.743340929 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134186151 seconds)
  done (took 3.099394261 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.732862986 seconds)
  done (took 2.289382415 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235377886 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224743239 seconds)
  done (took 2.028909565 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.349972615 seconds)
  done (took 1.896963534 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.149357188 seconds)
  done (took 2.691188932 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.232659308 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.158909473 seconds)
  done (took 1.946418169 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.475804618 seconds)
  done (took 2.027209958 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.48096919 seconds)
  done (took 6.036843032 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.24089792 seconds)
  done (took 1.835426188 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236914708 seconds)
  done (took 1.792340797 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.72514679 seconds)
  done (took 3.274800667 seconds)
done (took 43.343143481 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081664371 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084427674 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084146106 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079993617 seconds)
  done (took 1.858064761 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072765585 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.068983332 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.07300421 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.073311548 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070414726 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.071564957 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.071779712 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068410382 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.070197066 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.068864841 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.067298062 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.069043379 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.071639384 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.069048194 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.071398844 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072692641 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.06862327 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.069011943 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.071228364 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.068880348 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.071527697 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068457928 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.067030365 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.067653248 seconds)
  done (took 3.234777705 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.0773332 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07203731 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07410758 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070997472 seconds)
  done (took 1.852565125 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.075259758 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.086000927 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.086195276 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.092401117 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075012382 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.075831826 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.082956487 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.08421441 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.0639209 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.086792145 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.066467639 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.065227021 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.065491739 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.086307566 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.082944419 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061894423 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.063191466 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.075856849 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.074433637 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076973288 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.066252933 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063693982 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075157674 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.075258239 seconds)
  done (took 3.366708819 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078382093 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.064436031 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077857971 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090625699 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093750874 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064521313 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079056991 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092669672 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.140309396 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063973423 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070227475 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064026357 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105776656 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064197411 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080270048 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.111454667 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114452607 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06807348 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097395876 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064164366 seconds)
  done (took 3.251350677 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076347687 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.067748601 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069501104 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064524344 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076147927 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072077259 seconds)
  done (took 1.995775033 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067066977 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066668745 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067046923 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066191392 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071182871 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.065878279 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064787503 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066800375 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06692629 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066010516 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065919747 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064990794 seconds)
  done (took 2.36167379 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.1629407 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067880457 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069423733 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068010971 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070630163 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065275479 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081101338 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067242358 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08409585 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065661503 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065725077 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067365011 seconds)
  done (took 2.498191231 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099607801 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129690374 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095321363 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071804996 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171705794 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093287264 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.090250227 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.122795016 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092516032 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068481573 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092626759 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135679282 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095498922 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.097197767 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081206259 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124679964 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110109697 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087195476 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113051853 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080565446 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.069950227 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131769606 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069162517 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091539103 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100027378 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.097684938 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109516434 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132691004 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083385457 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.089957568 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082675758 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073834378 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105547511 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.084553552 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.097162493 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092953629 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097759542 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084221935 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.086357469 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12096916 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154471911 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100154885 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099765371 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135045532 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078264182 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.108354294 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080407827 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097500965 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103376542 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092119173 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074908978 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091606098 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.106410074 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101359369 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.081639291 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080663977 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116744297 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.097989376 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095395223 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079480546 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107095182 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.085428252 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107354511 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267616373 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143506446 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102068509 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136977211 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125638101 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095423618 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.089784421 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.091449473 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076382933 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110643423 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097003143 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136009046 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1094771 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099313763 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.096552272 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081976968 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107935328 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114523794 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093250529 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093108609 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149115743 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108296344 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089569409 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090413521 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.143710207 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071401675 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147534976 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088768964 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122396982 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095968875 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138818613 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091058027 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.083386561 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106696021 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102599733 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089045373 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102502469 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084380211 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113274042 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091946365 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100797221 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081186285 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090522809 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086452078 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.097025883 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075128891 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103760947 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115217204 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114018282 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074602114 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107896249 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086286562 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076655814 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092530705 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13928028 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083322985 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075250797 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152094276 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.092278587 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.115729645 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108843824 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.083265442 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.265970317 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137205478 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092013601 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0896502 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077128153 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15610881 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076044119 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120259587 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081004585 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102296102 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106491041 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131250082 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139763764 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095600764 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078790933 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092594829 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.106768587 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086952208 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085607112 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07753921 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.108498566 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125553573 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.100887767 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08145604 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.09348985 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.069530124 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114707642 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075989938 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084118019 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096080625 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.087432099 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.089782394 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143272163 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.084374213 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108716823 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097983303 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066939585 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09429363 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153856174 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083067896 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.111271317 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116936811 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084053059 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067983348 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.096092699 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072806979 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108435203 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092387939 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107978385 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078199999 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107077055 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.068176892 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07424582 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129331668 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102402807 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08954103 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.133500758 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106933285 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.088924077 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.102813197 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.096714568 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093773305 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101540802 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.105399932 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259459526 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.074540649 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131519665 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090535259 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078149585 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087873935 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079745409 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.078336061 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100929628 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114824654 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088853245 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102354361 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103850757 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090590668 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.111324441 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089072147 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079714099 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132937399 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077199055 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075275064 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08871637 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.106861929 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089031125 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.134268449 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080571295 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137310536 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092949374 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081657509 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114639064 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068959757 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069665644 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.081158294 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092171828 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116249521 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079065642 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078809858 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118802557 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1327355 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097888837 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10289876 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068415881 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090994308 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136165278 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.115377223 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081798251 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111010891 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085049089 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130272757 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096645823 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121918642 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106848184 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111483422 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.092060423 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.082191339 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073789074 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088118842 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11167625 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086657984 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081978447 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067619861 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07477081 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093469284 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090509871 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111217615 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087133752 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134498156 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072928995 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099458946 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105003046 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259425774 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091852984 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096894012 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.095212113 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092186595 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092149231 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092461225 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073766188 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127406053 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103573452 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07845881 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089718874 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095241095 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107640655 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109957304 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110001049 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094140139 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107460901 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124277169 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099701808 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082481711 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084120126 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.093046579 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.086284001 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081211575 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.103448545 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112252367 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099161388 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110236479 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.095688785 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.092267471 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107550727 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093170787 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088705114 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.11919167 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154954303 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.102366369 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104938908 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085631961 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107508112 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106010693 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114752482 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.111465399 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109243305 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070549042 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075158297 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.071032767 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111015554 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079431842 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118241146 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077012484 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108252063 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097547279 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080629778 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066788087 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102338583 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093296821 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.083145522 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123872007 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.114516453 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073040894 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091383759 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108171708 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084281814 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124442892 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.101500811 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100868643 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071818678 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090417117 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.072469415 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.262282386 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103066739 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078739752 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.077529504 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070921363 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107876916 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085062545 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110496128 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089278696 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101675361 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121893501 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131603632 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087771477 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097380817 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118762064 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114347971 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.082450389 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113178314 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136312389 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.120981577 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.081151741 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.084621253 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107000502 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106682331 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102406146 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076039701 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079493763 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109278699 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11381675 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.068273161 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085317425 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070489728 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.084812536 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113398376 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097947778 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082406086 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118172141 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075050397 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108373707 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095465041 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122777568 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122405579 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146153854 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097322451 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085975825 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076828565 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125363639 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.070987126 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118013487 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112318338 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087802332 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.068484639 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084975479 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.096321786 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.624856092 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109497057 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076840647 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136837833 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087502657 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117106143 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085506252 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.119151313 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088921364 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101628675 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089613512 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280458416 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083632366 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111542875 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.178578724 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110973417 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.108240346 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075011033 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.087352412 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073587375 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.079061278 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.081047666 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087666296 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109732022 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084876717 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107021472 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.080393257 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.106824849 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091134873 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089524757 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.100380048 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081396102 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139131347 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08789066 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122510798 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107478534 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078923693 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075065755 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.086989961 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103177537 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083038801 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095439938 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079235734 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.076251126 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153626222 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101239547 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085679624 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103496875 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.092802028 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.086534638 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093038561 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117814004 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111201252 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073693594 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.088820516 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104414979 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079576925 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075646924 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097494425 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.069632626 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088547159 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099093168 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096718983 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089901473 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.102581192 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077695282 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087894658 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110749497 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086167579 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077552701 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077232886 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076683985 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.077003018 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104578813 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109659232 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114772557 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110577381 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091563806 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093211648 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.079195649 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.225072929 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079721232 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.250821987 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.107581158 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076637788 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.133536679 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088779129 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08909627 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096963758 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102565788 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153719769 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074898054 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110704854 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094213026 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11030086 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087889211 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106936982 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095386075 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092650945 seconds)
  done (took 50.679102275 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.092384034 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.147301148 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.157469001 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081048024 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.094371453 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.118889937 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209350806 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1918676 seconds)
  done (took 2.767658971 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.066643716 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.081330106 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104375387 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082695153 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065104053 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066363952 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.207456439 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080936043 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065198146 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.102801348 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.075101268 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.066973383 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.396613518 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064707325 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065467252 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073677474 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.065900561 seconds)
  done (took 3.394680001 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.372585681 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602430561 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.34289351 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073683253 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.957664815 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08740385 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.287317956 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.135235068 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080398114 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.555597172 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.373150934 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130381162 seconds)
  done (took 18.669512924 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07438283 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073851396 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.077635547 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.077043048 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072737431 seconds)
  done (took 2.037515256 seconds)
done (took 99.540597342 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080974977 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.170277868 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066686311 seconds)
  done (took 1.93452587 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.082437493 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08065142 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.080707455 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.078301541 seconds)
  done (took 1.993681665 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073195076 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075490869 seconds)
  done (took 1.811786478 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.245066453 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163986746 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091200255 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082198952 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079082306 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079852837 seconds)
  done (took 1.914378152 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070623208 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.070315968 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070848987 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.071196289 seconds)
  done (took 1.943191882 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.066813055 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.064923519 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.066963493 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069796304 seconds)
  done (took 1.932990914 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.081911348 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082906818 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077149651 seconds)
  done (took 1.906915599 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.095081486 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.097034069 seconds)
  done (took 1.855663288 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078787696 seconds)
  done (took 1.744215586 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.087959517 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.097249666 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.152280418 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111221979 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.151427902 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.134216459 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.077068661 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.078038407 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.073145416 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.07140592 seconds)
  done (took 2.698447344 seconds)
done (took 21.978297459 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077520375 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.362317146 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.358150531 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085198734 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67117315 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356190979 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.968665712 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090217543 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.098027982 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06694022 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083237676 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647453512 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.959343053 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324294669 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.946158234 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32312691 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648424928 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066702684 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066068353 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066717824 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.948600841 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065928613 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066706169 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067406609 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647562407 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372099229 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068213046 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324223012 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066934007 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069364405 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354593353 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068075177 seconds)
  done (took 16.02943499 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.06859092 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120804593 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07152268 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082750155 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068633409 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068304361 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069738118 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067465507 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108564961 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067240564 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084214913 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066093091 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070551904 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067805649 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087272824 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067844831 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068866045 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068728568 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067473372 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0703555 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085930638 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067094902 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068229192 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068046268 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068145453 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080624095 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0685802 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067238244 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067585096 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070059772 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071338902 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068841722 seconds)
  done (took 4.048450642 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120650718 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127230194 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07210023 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107242104 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119137169 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069005267 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150151097 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090742549 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113587472 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067771813 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085060084 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066955655 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102941379 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069208265 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088192565 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067725646 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069357103 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068155102 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067376061 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068415223 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08630925 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067571792 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067853691 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068251849 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06823006 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082383345 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068475234 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067511112 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067550881 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069852295 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071603803 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068864799 seconds)
  done (took 4.329488438 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068807834 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.071204309 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079463146 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079702757 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.065668441 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068126033 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069143271 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065881814 seconds)
  done (took 2.253727616 seconds)
done (took 28.342816215 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077938367 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.066487954 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070247178 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086929845 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072535801 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.069579507 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06353701 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073779093 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070469988 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.070243086 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071650466 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.065203713 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068927045 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.063472618 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.071218805 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065265642 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07252216 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069734417 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.070679588 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.071259017 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06824407 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07150039 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073742092 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.070608519 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.070379614 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.070315209 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074935327 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07077511 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.065843968 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068386754 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067152959 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.075644814 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072626262 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.072850398 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065533207 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065446673 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069946591 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067693168 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071941145 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07489146 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06735083 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07490247 seconds)
  done (took 4.613262459 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.083035618 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088665056 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.080996374 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080685994 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098803396 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082063961 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085462039 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077395255 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.075984307 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084054799 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.071770593 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079634683 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07796561 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.070975905 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076804179 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073009683 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079191093 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073111155 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077472702 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077159777 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085438468 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07053287 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078221328 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078391648 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.072899445 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.078784222 seconds)
  done (took 3.75182466 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.071572638 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085796003 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092199106 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14978713 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111739278 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080529041 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080399061 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094280371 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098951773 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066804233 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070559402 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092434929 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093845635 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073266176 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106653702 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084164352 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081704891 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068531131 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073369141 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098236427 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087840762 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084566958 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096913083 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084683047 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065360064 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068459784 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072581598 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080657973 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073437631 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077810058 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070676248 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069554899 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066890853 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076961086 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070506455 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064633592 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089900738 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078493875 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079586253 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.108569417 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075859972 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067336471 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095030136 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130601894 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066035198 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.069027757 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.069739069 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07828476 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067249107 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09641933 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080953138 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06627123 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.066649988 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067360395 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067144934 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081850751 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068215262 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068046233 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077604465 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072645766 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.088349782 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071260235 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085503668 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065940941 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.0769799 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067292908 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067640238 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.064844491 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099889018 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072917611 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116702774 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066899305 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.064216551 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077962682 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076598655 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072201617 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066114579 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084033941 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077153676 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069763546 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077884866 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069040571 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.068939678 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099759896 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065791168 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.065243123 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.064364682 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.068612016 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069260865 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.066526722 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079425409 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.065219451 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069414012 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080243801 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06607629 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.066535312 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.068662149 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067314484 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06523418 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07885364 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069952975 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067438544 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077696775 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067147021 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069186674 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079837866 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073364262 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065603954 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.067423318 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.069223633 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068595585 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069968537 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069416468 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068116652 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073029204 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.0733594 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071623101 seconds)
  done (took 10.725390793 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163459861 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154920707 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068180001 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14743464 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.074470977 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.071835539 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148500747 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.086070704 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06683619 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067680035 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066231745 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.095476176 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.092531973 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.102345266 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07173356 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067183473 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091166096 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.099798427 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150699219 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146402102 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090452426 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073537476 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069324234 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068488052 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.06796696 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074757882 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.082203903 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074719443 seconds)
  done (took 4.361081795 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.076009684 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.093132212 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070966285 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.078050293 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086012396 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067013028 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068569266 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068369633 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081220814 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075468573 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066422415 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.071648828 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.070282711 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.069233914 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067222886 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.072978953 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073815337 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.065495807 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070285344 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071572396 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076906507 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092724474 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070840845 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066639399 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068695152 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066595086 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.075092085 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.078083483 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.066497714 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.081852094 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064044206 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071019958 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081129702 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067492983 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066503132 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066832793 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06668177 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066799233 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06699402 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065029344 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064618799 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.071545145 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065260037 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.074173454 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.080924771 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073699068 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.068139401 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.069107034 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07136169 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063570357 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070113998 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.06980034 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.06918699 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074335964 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.070114696 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069260797 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070082606 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.092249626 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.0727529 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.065981622 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065846985 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065197915 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068498039 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076699258 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08360117 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068554121 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064999719 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066477302 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072360639 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080258851 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066161972 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071227007 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063576128 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066607169 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068581623 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069128323 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067536225 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065247446 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066437661 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067030749 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.066674389 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066194363 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.066571634 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069307698 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064153037 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065081577 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067290332 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.067859767 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.074887854 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065203144 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.069891178 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067428517 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065209054 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.06920497 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.072026795 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069445471 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08045233 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.077035294 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066838571 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064629158 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080222817 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069365495 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065780915 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.072963051 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.070860769 seconds)
  done (took 9.159354837 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090250348 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068731037 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085362294 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092163844 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.077357482 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072054122 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07852568 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067530049 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083539935 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065950392 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075379272 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065359122 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078678477 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077141964 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068394182 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077837481 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.069456463 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085868125 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081800867 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.065239838 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07623163 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079409552 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.079232673 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.0830757 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082465996 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083528688 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079366681 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069135857 seconds)
  done (took 3.895338996 seconds)
done (took 38.185277838 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.764638561 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.947524604 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.762184827 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.9381306 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.83359523 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.888482076 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.880524281 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.757409225 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.916471748 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.817209172 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.085384108 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.259966403 seconds)
done (took 65.60685023 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.773126306 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.922837074 seconds)
    (2/2) benchmarking "String"...
    done (took 2.022456536 seconds)
  done (took 5.639093352 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.067892061 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.592964814 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.027012872 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.755915505 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.761753148 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.202739306 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.569837662 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.215357909 seconds)
  done (took 30.820840049 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.890594572 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.993412052 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.442604386 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.463309605 seconds)
  done (took 15.530955298 seconds)
done (took 63.618702322 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.794073411 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.756456259 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.809757693 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.791844886 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.763925997 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.759475065 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.760674748 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.760698261 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.778504742 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.810078028 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.754960078 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.756864028 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.755182919 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.781833863 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.455815524 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.81937915 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.775139866 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.771492924 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.775309956 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.802774383 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.7608711 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.759596898 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.230015614 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.944742073 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.359217618 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.125119653 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.266263917 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.162051512 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.767108355 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.756168441 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.840781128 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.128327213 seconds)
  done (took 204.026738436 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.758147638 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.603725411 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.694488309 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.766824725 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.041159426 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.939084374 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.860147657 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.134730094 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.764762809 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.766321839 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.901353193 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.761422056 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.931412816 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.704902207 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.794206242 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.783926449 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.908186713 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.938885762 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.799236535 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.907542034 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.783328481 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.845034204 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.785150847 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.895277285 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.778386607 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.770304375 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.782929336 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.79038286 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.94804957 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.86802034 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.771363237 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.774848466 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.918753818 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.629439781 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.784160563 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.781590555 seconds)
  done (took 168.361487225 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.950455815 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.765103258 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.76029245 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.816019634 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.883879287 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.760554198 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.406402956 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.769236021 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.136453447 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.764831925 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.759193107 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.760212141 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.759811346 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.769907136 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.838747861 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.762659659 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.775576845 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.763771132 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.787595989 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.759749992 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.758459694 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.761204631 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.761316543 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.761697443 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.76156238 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.761341108 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.995405417 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.76235213 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.000909848 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.762782572 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.76061924 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.555911202 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.772104475 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.225915408 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.767748248 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.850635584 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.81792377 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.873872803 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.767038381 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.978484873 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.83537628 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.763605165 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.761963102 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.824681554 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.773712229 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.761257296 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.761384924 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.761782266 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.767453816 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.826970627 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.0254675 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.763826933 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.888210188 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.247583075 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.764544299 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.761690917 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.761753347 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.349749411 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.765251793 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.760409641 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.767376222 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.767590641 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.762489145 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.761342703 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.149581683 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.832040597 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.9331377 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.035823699 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.764612432 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.400879642 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.834840088 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.761961459 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.763866986 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.762406681 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.764639415 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.762508784 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.765514639 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.881764151 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.772022531 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.893186017 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.846180538 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.885203344 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.765534331 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.764352366 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.773990925 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.594553319 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.766621789 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.830434925 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.800647 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.588634243 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.766028473 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.137310692 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.544449377 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.76507972 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.7643704 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.774664969 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.763526467 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.763226143 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.766740972 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.844088946 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.764043894 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.884471817 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.487977985 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.941781427 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.767130278 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.764447072 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.770141371 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.846436555 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.883673491 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.768659491 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.830852014 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.771356459 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.767020564 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.869443977 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.766558384 seconds)
  done (took 399.42668977 seconds)
done (took 775.522448943 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.355318534 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.333859178 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.425690301 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.347036807 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.322075393 seconds)
  done (took 13.483778677 seconds)
done (took 15.185044155 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.7781434 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.770803088 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.823467181 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.849204385 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.779987692 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.782612693 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.843456707 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.784055587 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.814931888 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.8211199 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.848931162 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.849260964 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.788094297 seconds)
  done (took 25.235919653 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.775896228 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.928086941 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.024644785 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.808848353 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.774203127 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.005105122 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.837043464 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.917708291 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.916374856 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.005029286 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.020993651 seconds)
  done (took 22.7170002 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.773917824 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.923196891 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.014295614 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.813864146 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.777569429 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.009775194 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.841599789 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.929965632 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.928328632 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.012526831 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.021539346 seconds)
  done (took 22.758288235 seconds)
done (took 72.413760613 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.771333678 seconds)
  done (took 3.475672464 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.789804689 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.932085491 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.770155397 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.766912644 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.768663323 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.76974849 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.769052902 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.769195469 seconds)
  done (took 16.039006734 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.770078734 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.76962385 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.770324759 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.767616569 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.76889193 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.769859682 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.769553952 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.769561285 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.771850882 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.770342544 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.770826348 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.768655449 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.770167591 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.770241868 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.770865358 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.769163418 seconds)
  done (took 30.023253581 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.772813143 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.770061923 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.771435901 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.770831953 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.770658495 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.77060748 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.772517837 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.770105349 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.771726181 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.770833509 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.769317623 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.770644965 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.770909674 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.771035163 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.772070256 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.771115423 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.771085908 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.770897407 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.77669567 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.771570758 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.771594799 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.771079226 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.76734381 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.769669397 seconds)
  done (took 44.213239808 seconds)
done (took 95.465284894 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.549209383 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.784940708 seconds)
  done (took 10.037950452 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.77240329 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.772178009 seconds)
  done (took 5.25317146 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.771851687 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.771592879 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.772603488 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.772852896 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.772526194 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.771374892 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.773142594 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.771772723 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.771192603 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.772908939 seconds)
  done (took 19.426468592 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.775919974 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.772370135 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.772298936 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.77268741 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.772312225 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.772547697 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.77373177 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.77273067 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.771991655 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.771627956 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.77424388 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.773189877 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.773133958 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.771815834 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.772868905 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.773695842 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.773252046 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.771380595 seconds)
  done (took 33.619269675 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.771623735 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.773951965 seconds)
  done (took 5.252551049 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.774414477 seconds)
    (2/7) benchmarking "second"...
    done (took 1.773492953 seconds)
    (3/7) benchmarking "month"...
    done (took 1.772759249 seconds)
    (4/7) benchmarking "year"...
    done (took 1.773293877 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.774583127 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.773601543 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.774358755 seconds)
  done (took 14.122259665 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.774218753 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.936066331 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.982348232 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.631215813 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.7749573 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.778622403 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.070585843 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.776984611 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.780696162 seconds)
  done (took 20.214824607 seconds)
done (took 109.630510198 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.589033173 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.774726005 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.046160722 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.876428575 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.795164559 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.071361503 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.780121206 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.412813309 seconds)
done (took 42.053827677 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.846659466 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.773669317 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.802515436 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.810093227 seconds)
  done (took 22.093019003 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.773568267 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.148876973 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.798922156 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.599902708 seconds)
  done (took 22.049854861 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.159366242 seconds)
    (2/2) benchmarking "read"...
    done (took 2.126738241 seconds)
  done (took 5.999033022 seconds)
done (took 58.698800469 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77544372 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.776173665 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.777131309 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.774705946 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.779533979 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.774470621 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.773291533 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.77808994 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.774572898 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.775490311 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.774982275 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.775388421 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.775634042 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774992358 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.777550045 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77568086 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776736271 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.776677588 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.778097647 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77607641 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.774532525 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774399021 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.77441159 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.776699202 seconds)
  done (took 44.330428527 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.776816841 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.775011377 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.776391716 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.776950397 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.776431818 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.777605967 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.777171549 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.775987939 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.779368087 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.776936336 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776746808 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.776993536 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.776610218 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.775731786 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776168887 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.775436277 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.777369128 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776937471 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775700002 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.778555131 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.778095914 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776812429 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.775421387 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.775156214 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.775804663 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.778438167 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.776725577 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.778599399 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.778461808 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.776790671 seconds)
  done (took 55.016336595 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.778822478 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.778256965 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.776904066 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.777683921 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.776887467 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.778007815 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.777563709 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.776330406 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.779322375 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.777688174 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.779381957 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.776458687 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.779317778 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.778442465 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.778673869 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.780121995 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.777842944 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.779826083 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.77752644 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.779195805 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.777214222 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.778207259 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.779384394 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.779722354 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.777639411 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.777747679 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.77800221 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.780518803 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.780711368 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.778956283 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.779414278 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.781591119 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.779812871 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.779207204 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.780720364 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.78032871 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.779367315 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.778715283 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.782723959 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.781683203 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.780107775 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.780986958 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.782080951 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.781437235 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.781447714 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.780531923 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.782576159 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.782682619 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.782285067 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.780806051 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.781009814 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.781518466 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.781236629 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.781414319 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.783311302 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.781951783 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.78372669 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.780682033 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.780797931 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.782126441 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.782331903 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.781007917 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.782670543 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.783171365 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.783349117 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.783355561 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.78226487 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.783411734 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.78331473 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.78109999 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.782602088 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.782821768 seconds)
  done (took 129.89258266 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.782546955 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.783428795 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.781697054 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.783818608 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780774283 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.783727654 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.781811928 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784907846 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783601707 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.782272507 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782973461 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.784396932 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78310188 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.783801948 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.784959733 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.783715727 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.784551765 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.785513405 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.783980362 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.782365867 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.782692242 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.784295678 seconds)
  done (took 40.951296926 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783677472 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.785126503 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.783414445 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.783801153 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.783214538 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.785966553 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.784583036 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.784218818 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783971763 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785515055 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78479808 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783949262 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.786460712 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783649492 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.784019885 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.784882681 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.783911126 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.78318047 seconds)
  done (took 33.8375108 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.783189089 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.783238297 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.784407015 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.784987442 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.784893671 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.785458206 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.784424703 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.785102334 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.785974106 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.784682094 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.785590131 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785677712 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.785064105 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786504005 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784520519 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.784688314 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.785596969 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784799869 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786886609 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.787118423 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.785646138 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.785697427 seconds)
  done (took 40.992173619 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.786047477 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.786530576 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.787396599 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.787292244 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.787425758 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.786876254 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.787819335 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.787475413 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.786317897 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.787377804 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.786401633 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.787032201 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.788604055 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.78708946 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.784318059 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787686368 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.789430461 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.78767668 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.788393549 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.787827823 seconds)
  done (took 37.465051667 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.788293362 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787675414 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.787565639 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.78892234 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787678925 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.789865118 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788259578 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.786697899 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.788900411 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.788137767 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.791429662 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.787257622 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.789001384 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.790122562 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.786523904 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.78854816 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.789771037 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.788011521 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.78949133 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787767939 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.789186765 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.78804508 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.788178847 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.787609752 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.788351336 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.788476016 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.789251741 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.789618883 seconds)
  done (took 51.799086048 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787687247 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.79089512 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.787497694 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.789820946 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.790536679 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.787146863 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.78944167 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.788427239 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.791091577 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.788526852 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.790504667 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.788185899 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.788897067 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.790607615 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.788926598 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.788102337 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786740242 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.791563815 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.790911746 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790115833 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.791445483 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791112629 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.790460719 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.789055286 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788994059 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.790316875 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.790680973 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.790996282 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789113625 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.789908025 seconds)
  done (took 55.409381811 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.812375794 seconds)
    (2/2) benchmarking "in"...
    done (took 1.812252125 seconds)
  done (took 5.348669323 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.791358883 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.790460522 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.791314989 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.790978296 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.79069506 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.791398932 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.792375483 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.791095495 seconds)
  done (took 16.052152072 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.792277901 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.795444461 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.794009908 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.790668891 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.791119203 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.80005548 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.792796022 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.792672796 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.79493772 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.79293935 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.795629599 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.792797848 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.79789365 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.796253604 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.791679059 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.792391584 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.793029176 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.793977944 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.794225919 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.791537218 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.795163927 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.791268917 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.794218966 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.790844625 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.794497915 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.794414927 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.799761522 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.793542486 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.793979604 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.793418602 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.799980772 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.794777139 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.793030419 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.794611619 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.793092375 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.793640427 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.80192809 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.795170481 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.792313068 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.793666582 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.794940623 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.796379788 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.797695134 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.802602743 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.791953805 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.791521861 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.794205539 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.793081872 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.793493346 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.798112062 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.800470971 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.794702267 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.793884895 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.795936039 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.796371255 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.792802617 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.795401749 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.796881948 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.802173425 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.803858686 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.796731568 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.813258846 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.804774335 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.793605464 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.795363065 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.803182572 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.813988937 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.796503796 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.798283104 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.795071611 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.805393034 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.797047452 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.796075792 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.795886229 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.807114446 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.802398769 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.800225575 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.795458016 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.797750539 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.795397329 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.799310233 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.796479376 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.79423943 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.79568765 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.80290546 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.818258514 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.797106267 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.794221436 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.798811459 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.799020158 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.800312449 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.801110564 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.79880547 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.79722788 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.799580948 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.800161068 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.80055757 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.792795684 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.797041647 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.80671206 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.79802957 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.79535857 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.800259037 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.805005071 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.797719734 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.796974699 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799474786 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.797161297 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.805502234 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.798842871 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.799264874 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.797407365 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.796363261 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.80199645 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.795809679 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.801197611 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.802486504 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.804867043 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.799300821 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.803322974 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.801662366 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.802705776 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.807276865 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.820328266 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.798550445 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.803074725 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.804972533 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.809726578 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.803022356 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.798682195 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.801868537 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.79752596 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.798784543 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.800616337 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.798528757 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.797655794 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.799304863 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.801708553 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.799555345 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.798017068 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.802485806 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.803373284 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.802188015 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.798653742 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.805557656 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.799357472 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.802010517 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.808092803 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.802462112 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.801801085 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.799385085 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.801624185 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.805422428 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.802095955 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.79796036 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.797985644 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.800775581 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.800541396 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.800988995 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.800824454 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.801034298 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.80023485 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.802557375 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.800115618 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.801906949 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.801545523 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.798991916 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.798517291 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.802839411 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.80163903 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.805909732 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.80170282 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.807520631 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.800326986 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.800259884 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.799040966 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.80192561 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.800712864 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.803555963 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.81306703 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.805587426 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.810142815 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.8001202 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.809201373 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.80233884 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.801820746 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.800644493 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.801272335 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.802622218 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.801232868 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.80190142 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.807595747 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.821076746 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.814550248 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.805160242 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.804915669 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.807421905 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.805673473 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.808774346 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.802928771 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.802316718 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.80184782 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.800952782 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.801683609 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.802547161 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.806183826 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.801839558 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.801585994 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.808060255 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.805072287 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.801938469 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.805599443 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.802078057 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.805386538 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.801299638 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.803540313 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.801900512 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.803146576 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.811595483 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.803864168 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.804648516 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.805112408 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.80638964 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.804574154 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.805247602 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.805358139 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.812300323 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.804227526 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.804421025 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.810659784 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.805199722 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.808047824 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.801885469 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.802853001 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.805713226 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.804245614 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.809271257 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.813157194 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.809684227 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.803080781 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.809670437 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.806739774 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.806248459 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.804707964 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.806518134 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.805539312 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.807681062 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.806320849 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.808231934 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.811043766 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.806788109 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.807236775 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.80371449 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.809278871 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.80580402 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.808755198 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.805890963 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.810712748 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.811471035 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.81089808 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.81028254 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.811763629 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.806383 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.807476914 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.808904612 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.809599746 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.818299139 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.81685479 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.805163429 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.803917541 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.807421253 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.808722286 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.805998281 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.805885175 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.816032601 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.809485171 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.806965422 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.810409369 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.807538205 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.805159002 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.813831084 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.807960159 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.809749692 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.810222939 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.808544969 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.80935289 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.808204056 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.809676263 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.810007583 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.808644158 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.810121645 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.805403075 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.805446404 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.807553617 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.817427698 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.809887665 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.807685651 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.815892891 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.811117832 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.805680789 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.810493537 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.808222922 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.807768982 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.810320686 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.808250905 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.811929338 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.806842862 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.813394792 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.818859787 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.814645503 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.814780938 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.812218566 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.822081527 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.810466051 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.806111433 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.809843177 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.810586516 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.816223026 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.80733843 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.80970139 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.818339302 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.810696982 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.810124258 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.814051109 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.8091158 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.810486723 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.806901754 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.810346386 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.81200883 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.813883391 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.809064571 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.808465805 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.809750176 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.810537327 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.812475708 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.813217539 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.811211669 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.810954259 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.808720438 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.808671802 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.809499518 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.810028396 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.810622115 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.809050338 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.809984993 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.81682139 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.810215437 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.810408028 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.815100348 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.810380336 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.820311025 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.811556735 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.810636705 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.812464023 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.811080341 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.81362194 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.811006392 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.811408748 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.810989917 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.808356354 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.810769062 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.823886105 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.819673769 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.816155946 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.813511296 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.811948516 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.813201843 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.823350158 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.835671068 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.810106348 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.811935237 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.814157268 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.82041072 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.815176982 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.817256737 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.817517498 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.820712151 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.813526745 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.813167561 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.815482359 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.82195883 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.813500408 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.812848469 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.813772218 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.817930556 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.813026951 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.812466701 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.812877613 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.816588297 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.814265271 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.827076228 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.812606349 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.815514346 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.810460614 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.814134864 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.811259983 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.81121005 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.813997271 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.815151027 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.813944338 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.812659819 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.813186571 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.816191855 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.81094619 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.816218556 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.823845245 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.813629642 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.815540152 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.815981849 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.814197668 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.816796022 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.813558259 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.813952582 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.817636935 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.815009631 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.815665478 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.819696873 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.82195184 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.815759567 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.815155817 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.816195936 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.818586411 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.814071374 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.814399116 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.81736277 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.825874759 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.819418825 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.82723847 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.824176844 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.816260825 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.815111321 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.821197545 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.82278795 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.816713569 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.815196817 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.814292064 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.816960932 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.81702274 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.815481417 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.814132252 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.816698273 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.818476588 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.815524196 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.813631858 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.818005098 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.813232355 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.818188613 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.817032396 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.819253978 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.816908554 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.814408233 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.814514766 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.8161219 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.815935174 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.816912735 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.814051901 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.817527063 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.817461778 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.820306643 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.819132546 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.816922915 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.816417684 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.818692903 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.817798122 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.816351351 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.816508445 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.818014786 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.816839547 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.818913484 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.824437133 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.815127247 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.819557647 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.815938022 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.822295636 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.819369929 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.816179859 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.818500434 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.815948856 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.825226843 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.817375363 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.816687147 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.820655119 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.817776266 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.822787097 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.820124403 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.823464753 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.817748161 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.818379056 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.817075295 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.82167159 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.826935724 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.820618837 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.820987305 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.82687274 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.821084099 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.818137522 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.817936323 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.820185298 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.817075299 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.820004847 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.822724495 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.81888808 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.820814731 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.818436144 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.820103003 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.816213867 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.820930072 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.819134847 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.817842511 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.821432262 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.826010474 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.830490324 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.816076291 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.822531648 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.818408384 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.821940744 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.831183191 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.819750012 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.821347988 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.819410593 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.820272908 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.819950364 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.825613244 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.826557058 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.823080221 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.819893725 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.824837539 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.838767855 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.822013261 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.828710571 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.853408074 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.822149151 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.820616304 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.821052198 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.82309422 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.821312368 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.826657469 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.821537843 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.82829045 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.822034822 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.822806761 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.829703691 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.82111076 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.822655154 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.821793962 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.823311145 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.828696978 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.822572224 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.828477882 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.822522169 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.818832254 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.821764258 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.821527409 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.820063109 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.819656791 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.820160783 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.822877264 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.819534668 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.821191988 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.830754248 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.821908271 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.822786268 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.834523139 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.832614035 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.82075215 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.821758882 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.821393667 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.826213448 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.826148151 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.820262424 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.823780009 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.829166655 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.825222777 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.829194417 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.824059158 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.824498095 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.822700936 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.822202066 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.824205225 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.836241586 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.832763024 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.822052231 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.824482301 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.830792022 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.825142689 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.83030632 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.830579639 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.822910093 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.823631156 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.823436471 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.822718772 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.822106839 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.822934183 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.826100328 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.830245973 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.823163323 seconds)
  done (took 1080.610286287 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.822006852 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.82204271 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824501325 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.823749834 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.821322837 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82282817 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.822864084 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.822767359 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.823904305 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.825936812 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.824514537 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.823412782 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.823114666 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.82461575 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.824529271 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.825571658 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.823394609 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.823660108 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.82462731 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82450856 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.823275292 seconds)
  done (took 40.052468116 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.826136535 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.825817752 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.825084503 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.824089249 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824766048 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.824479535 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.824681144 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.824860799 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.824523957 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826043333 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.823338385 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.824663834 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.825390895 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.822629974 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824978054 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.824400395 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.824815697 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.821947944 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.825000563 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.82448834 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.824277204 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.826675814 seconds)
  done (took 41.898889218 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.825882274 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.826429442 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.826968938 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.824881384 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.825467203 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.824541632 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.824695832 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.828303798 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.827543046 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.82544813 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.833496259 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.83556234 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.82667583 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.830846369 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.826694998 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.825830222 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.975365934 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.825471078 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.827367322 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.827696422 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.826221177 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.833024302 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.827357079 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.826914566 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.826781271 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.825399521 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.826346447 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.827352892 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.827626523 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.828326837 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.830225912 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.8259016 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.826722355 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.829187077 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.826737632 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.828138083 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.831691356 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.82666696 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.827127048 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.826547787 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.83868779 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.848698588 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.827553118 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.826440035 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.836855509 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.827741208 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.827510357 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.830065427 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.836679415 seconds)
  done (took 91.507511942 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.828380166 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.827556191 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.827809831 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.828561376 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.828244845 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.827705213 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.829588594 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.827691642 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.828710656 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.828868166 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.829696385 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.829374657 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.829915862 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.826874785 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.82873611 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.829459546 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.828932248 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.828396053 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.827273149 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.827345428 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.829325981 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.82936747 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.828364889 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.827548717 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.829394999 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.829138506 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.828781645 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.828894542 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.828725016 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.829678446 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.829284395 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.830520535 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.829026466 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.830494377 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.829324002 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.82965729 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.829904989 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.830575172 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.82917179 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.830311932 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.829228161 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.829919061 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.830316238 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.830247398 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.830165546 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.83100207 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.830732032 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.829814396 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.830353831 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.830081161 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.829361572 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.830771928 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.830429142 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.830982421 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.831534645 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.831518263 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.832186281 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.830142125 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.829804618 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.831096048 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.830761218 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.831724779 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.830970975 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.830701402 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.832121831 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.830813207 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.831687439 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.831509612 seconds)
  done (took 126.177081849 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.831636513 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.831911013 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.831754077 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.830867148 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.831147566 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.831569838 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.832491066 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.831710485 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.832126028 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.831464916 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.832281272 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.833150401 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.832056161 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.832113755 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.832756339 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.832643995 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.831881376 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.832297437 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.832951387 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.831920687 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.83227874 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.832120806 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.831601562 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.832362916 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.831959485 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.83165016 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.830754215 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.831799887 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.833133718 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.831505832 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.833447996 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.830436978 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.831469011 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.833583372 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.834051196 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.833861145 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.833174511 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.832936725 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.833701573 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.832910792 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.834428078 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.833939655 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.831900068 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.835385174 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.83475976 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.834389143 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.835351816 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.833943581 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.834420767 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.835882138 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.835485776 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.834281804 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.833776838 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.834232537 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.834881184 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.834634437 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.836237468 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.835637772 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.833067161 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.835577682 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.833961552 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.832988425 seconds)
  done (took 115.413040763 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.832962565 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.834432677 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.834629069 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.834472764 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.834332167 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.83456232 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.834411614 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.833399517 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.834446713 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.83351052 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83573498 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.835233979 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.835327781 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836139665 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.834604495 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834481073 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.834281737 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.835354869 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.83616467 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.835459782 seconds)
  done (took 38.459609426 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.834755488 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.83576123 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.835551181 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.835130914 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.835424005 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.836511474 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.834147483 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83768691 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.837851879 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836286403 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.835191713 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.836925575 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836301076 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.83618766 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.83578567 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.835748855 seconds)
  done (took 31.141446001 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.836363817 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.837200602 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.835161456 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.836516495 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.836782208 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.837353967 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.83849188 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.837437554 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.838480121 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.837581322 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.838207806 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.837958106 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.837869519 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.836643068 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.836600762 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.837933213 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.836712468 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.83712277 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.836336779 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.837920628 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.837540232 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.838919357 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.836093168 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.838602892 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.838272172 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.837513068 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.838201593 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.838810296 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.838130049 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.839400825 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.837928884 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.838291812 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.837363173 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.836965583 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.837187874 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.839331061 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.838435705 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.838719169 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.839428455 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.837722205 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.83880622 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.83914866 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.839249928 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.838572403 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.840560678 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.839292577 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.839976877 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.839632515 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.838332029 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.840512816 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.841137612 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.838060682 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.840439531 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.839629187 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.841585445 seconds)
  done (took 102.872041549 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838044307 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.840119705 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.839832714 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.840939167 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.838008775 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.840967036 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.84002391 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.839270956 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.839578859 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.839751279 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.839358184 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.84015166 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.840210512 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.839966176 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.841171337 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.839289953 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.838908326 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.840746157 seconds)
  done (took 34.888417487 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.839791056 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.841026975 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.841390281 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.839714022 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.8402706 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.840255 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.842324322 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.840503389 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838956179 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.842983401 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840563512 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.839959073 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841676097 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.839791184 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.841831266 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84159016 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.841691451 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.841621773 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.841972487 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.841419481 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.841602318 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.841212662 seconds)
  done (took 42.272844847 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.840554691 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.842851285 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.856938481 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.863107522 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.861022184 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.875832328 seconds)
  done (took 12.912483815 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842948768 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844058605 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.842208194 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843894935 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842194057 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841095551 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842578942 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843175032 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842786754 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842661757 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843576606 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84233622 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843112094 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843836041 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844050137 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843680637 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844879013 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84304665 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842270841 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840955431 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842899769 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842084613 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842315241 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844107373 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844485549 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84277355 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84365019 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843266149 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845175484 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843328765 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844198172 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843554066 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843595114 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843852569 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843445337 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843766213 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844267343 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843972526 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843285137 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842806614 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.84378484 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844394166 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846514847 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843831281 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84583393 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843222375 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843764558 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843772847 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843485791 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844102673 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842968719 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843872728 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845374198 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844250888 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842127654 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84469571 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844343329 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845095908 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845800842 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843915977 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846426182 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846929938 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845609896 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844852441 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845145883 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845489573 seconds)
  done (took 123.462163208 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84483458 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.844495129 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84773441 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846265628 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844449362 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846032996 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846061348 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845008647 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845418598 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844399762 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845339315 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845411725 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.845589411 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846056491 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846442105 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845988459 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844797202 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846598786 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845984048 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845794426 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846617046 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846560571 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847333102 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846097868 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848927402 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846460865 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845881709 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847947505 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845640083 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845771816 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.845330738 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847907095 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846592631 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.847171364 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846266541 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847972269 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846714086 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847219289 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848231341 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847620526 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848509904 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847259962 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849212297 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849520475 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847412504 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847327951 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849130475 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846878848 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8477979 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848057003 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848735284 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849212218 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84780297 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848675518 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849040412 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849738379 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849005657 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84982767 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846374167 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848377564 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849332676 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849292189 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849217681 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847529761 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849415602 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84997273 seconds)
  done (took 123.692158552 seconds)
done (took 2518.17451984 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.943292086 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.850705792 seconds)
  done (took 15.572676542 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.006694444 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.960711233 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.845565068 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.866443496 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.847354021 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.869248217 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.87502492 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.846550788 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.846606054 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.847142429 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.847299574 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.032211582 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.9059059 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.84786994 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.848308757 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.938765387 seconds)
  done (took 52.014714083 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.851803547 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.852828227 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.862613525 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.854463433 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.852367112 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.864128686 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.884619756 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.856575691 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.889279358 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.866255382 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.921741523 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.86417659 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.852953137 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.903569619 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.870903659 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.867006098 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.9501539 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.930535328 seconds)
  done (took 35.572703432 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.93106294 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.860464526 seconds)
  done (took 10.575464121 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.856329268 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.878313588 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.871275245 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.860109043 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.874524976 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.885834304 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.864698406 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.868251972 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.876092316 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.869158405 seconds)
  done (took 70.48499944 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.855234092 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.854345146 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.853730449 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.849839047 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.847694565 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.853100951 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.851027848 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.851059896 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.540205888 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.890610668 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.861011013 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.859028206 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.850861144 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.851567811 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.849447064 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.876688276 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.990329335 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.848834079 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.84782765 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.856960191 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.850409973 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.901713998 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.866285154 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.853836944 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.88400094 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.541460602 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.863436714 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.857722093 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.959348711 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.849927712 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.851647514 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.036613272 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.856463548 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.311041846 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.136445842 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.857474763 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.864048055 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.858737641 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.850160375 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.962233201 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.853003305 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.857721147 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.788236632 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.108934607 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.945926515 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.900543785 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.204303166 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.855733521 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.853673701 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.885824653 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.856052629 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.853135065 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.868970433 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.367844961 seconds)
  done (took 131.933918151 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.8513096 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.203530014 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.017425967 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.852262533 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.134989251 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056808472 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.853990137 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.89712731 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.854820899 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.077536954 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.103212717 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.956595042 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.852087322 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.852959775 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.851825111 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.85089329 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.005635918 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.921683171 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.854218099 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.850693628 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878435112 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.091546104 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.973770155 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.854166689 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.87868721 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.061476232 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.973942945 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.956327404 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.621363729 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.85146071 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.91257208 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.854076577 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.850019185 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.850946197 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.006889358 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.963476187 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.937502911 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.854867579 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.852640536 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.853462345 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.602989379 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.050361817 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.94735885 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.982261696 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.104975135 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.056361293 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.631674461 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.852362447 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.587850948 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.01252934 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.081854634 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.080829882 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.972698961 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.855752225 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.1903766 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.852976629 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.853331816 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.100887779 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.102560448 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.952293242 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.856540708 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.853787457 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.852507782 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.142506756 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.856216763 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.946587717 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.857038956 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.856211277 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.947633375 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.954583488 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.10056925 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0632039 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.884027884 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.191477172 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.355695162 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.098985781 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.918913242 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103293438 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.856958566 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.854944436 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930557125 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.691507333 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.105861398 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.133870125 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.096379005 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.888349176 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.569560804 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.853687754 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.078302355 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.07307492 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.112773733 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.100660204 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.096056568 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.170218386 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.853411945 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.854429672 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.188540788 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.978001254 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.856176014 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.200424902 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.085268978 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.418196354 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.881681338 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.159168241 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984265881 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.857343201 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.485932179 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.855392071 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.083026189 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.893670083 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.855999082 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.856494099 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.07087679 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.841574699 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.855184635 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.730947834 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.914418846 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.859606096 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085340317 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.858777079 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.122665392 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.857945507 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.089398956 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.039705075 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.885032647 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.02844517 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.102535131 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.858010352 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.099684303 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.097588344 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.969384266 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.124495615 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.742435392 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.856471139 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.141488726 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.85893787 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.854638093 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.023543108 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.856959083 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.024890912 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.858100987 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.14621636 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878105666 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.094570344 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.859656735 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.10671208 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.888655926 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.906354574 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.860565931 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.979497859 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.858112702 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.797156845 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.011723801 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.857801406 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.857145639 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.408362026 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.855608372 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.010495297 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.082178738 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.877924981 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.926898716 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.518048642 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.856652616 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.936202824 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.881345098 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.244495537 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.857120791 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.108379521 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.860587761 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.856627335 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.856871628 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.142297966 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.089323714 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.858648484 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.857328054 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.762846011 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.857874797 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.857786529 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.037779313 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.211869263 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.857122056 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062392332 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.861791403 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.985251227 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.86226041 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.929400064 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.189902353 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.858527245 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.858080682 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.858756349 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.858490603 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.859439015 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.065095878 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.878387457 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.387265411 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.989534192 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.128853339 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.159325134 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.089655987 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.892438729 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.852558429 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.104454692 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.849260891 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.906620338 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.848306342 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.862020367 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073402707 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.84600951 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.130237946 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.110553419 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.731571522 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.88980737 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.842769968 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.84081709 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.839398619 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.985356912 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.926377189 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.840974688 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.837860116 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.955320255 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.956622886 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.044933846 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.836509374 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.920135492 seconds)
  done (took 901.73165713 seconds)
done (took 1219.66857314 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.836558794 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.832632274 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.834770196 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.835820481 seconds)
  done (took 29.10703134 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.833642597 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.827397763 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.828651527 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.827996888 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.828930866 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.829156711 seconds)
  done (took 12.739181137 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.947311767 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.825355393 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.825461187 seconds)
  done (took 21.363840811 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.895817345 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.229515943 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.965519022 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.26125706 seconds)
  done (took 10.105603326 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.820621665 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.819036969 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.819184037 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.821251757 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.822799905 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.820934812 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.819447435 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.817882356 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.819648277 seconds)
  done (took 18.134380041 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.460720775 seconds)
done (took 97.679157937 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.994714451 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.926356719 seconds)
    (3/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 1.988069788 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.992966774 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.858279241 seconds)
    (6/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.269424504 seconds)
    (7/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.324465168 seconds)
    (8/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.954377041 seconds)
    (9/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.558810553 seconds)
    (10/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.888009905 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.882424857 seconds)
    (12/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.27089252 seconds)
    (13/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.560365556 seconds)
    (14/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.943406914 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.250214787 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.259300827 seconds)
    (17/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.494249549 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.023378779 seconds)
    (19/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.94025297 seconds)
    (20/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.924513805 seconds)
    (21/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.940186445 seconds)
    (22/309) benchmarking ("sort", Int8, false)...
    done (took 4.805235189 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.887419968 seconds)
    (24/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.044545169 seconds)
    (25/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.943664584 seconds)
    (26/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.151621916 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.900966617 seconds)
    (28/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.915716825 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.535989348 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.070113207 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.133414248 seconds)
    (32/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.026046488 seconds)
    (33/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.878453748 seconds)
    (34/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.512182899 seconds)
    (35/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.895557767 seconds)
    (36/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.869620217 seconds)
    (37/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 4.2980204 seconds)
    (38/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.386911157 seconds)
    (39/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.273017262 seconds)
    (40/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.889451573 seconds)
    (41/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.041097099 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.767554938 seconds)
    (43/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.885652157 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.482133124 seconds)
    (45/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.637384544 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.056281793 seconds)
    (47/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.187345963 seconds)
    (48/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.891432708 seconds)
    (49/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.426269072 seconds)
    (50/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.106379711 seconds)
    (51/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.952859214 seconds)
    (52/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.975632462 seconds)
    (53/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.885732391 seconds)
    (54/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.966271419 seconds)
    (55/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.257422982 seconds)
    (56/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.973374606 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.841693625 seconds)
    (58/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.751303078 seconds)
    (59/309) benchmarking ("sort", Bool, false)...
    done (took 2.091734002 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.648213193 seconds)
    (61/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.91738296 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.217683361 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.487011336 seconds)
    (64/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.87932437 seconds)
    (65/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.39503832 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 5.513960862 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.124653039 seconds)
    (68/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.267449924 seconds)
    (69/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.485532542 seconds)
    (70/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.287717606 seconds)
    (71/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.037917207 seconds)
    (72/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.895812697 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.22571813 seconds)
    (74/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.95840323 seconds)
    (75/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.444812861 seconds)
    (76/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.076240899 seconds)
    (77/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.876619701 seconds)
    (78/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.966088054 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.541074283 seconds)
    (80/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.063277628 seconds)
    (81/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.344092445 seconds)
    (82/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.115093892 seconds)
    (83/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.880747319 seconds)
    (84/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.697723723 seconds)
    (85/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.201371081 seconds)
    (86/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.957536913 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.892687304 seconds)
    (88/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.044216524 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.85183735 seconds)
    (90/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.904912539 seconds)
    (91/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.872746826 seconds)
    (92/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.16679297 seconds)
    (93/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.878597105 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.527241816 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.012236427 seconds)
    (96/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.130397553 seconds)
    (97/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.964450785 seconds)
    (98/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.052520911 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.290882513 seconds)
    (100/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.094259047 seconds)
    (101/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.002680275 seconds)
    (102/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.337869344 seconds)
    (103/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.18102453 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.881433707 seconds)
    (105/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.021706689 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.00583103 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.876182369 seconds)
    (108/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.980206316 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.875134402 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.876982415 seconds)
    (111/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 4.417144544 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.893547359 seconds)
    (113/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.055865769 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.021024081 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.158992944 seconds)
    (116/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.203474647 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.708528735 seconds)
    (118/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.952001275 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.218900617 seconds)
    (120/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.037345905 seconds)
    (121/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.880437055 seconds)
    (122/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.689420737 seconds)
    (123/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.101055531 seconds)
    (124/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.876794222 seconds)
    (125/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 4.337745472 seconds)
    (126/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.135549094 seconds)
    (127/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.433885832 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.19093084 seconds)
    (129/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.998691264 seconds)
    (130/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.363837599 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.91171637 seconds)
    (132/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.766874258 seconds)
    (133/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.051163308 seconds)
    (134/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.888169694 seconds)
    (135/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.984344361 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.027380619 seconds)
    (137/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.71189643 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.077635589 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.643305163 seconds)
    (140/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.98891528 seconds)
    (141/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.915631535 seconds)
    (142/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.286333153 seconds)
    (143/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.99010652 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.133352809 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.137483553 seconds)
    (146/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.071055424 seconds)
    (147/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.05738029 seconds)
    (148/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.883606939 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.290633061 seconds)
    (150/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.792302295 seconds)
    (151/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.975182327 seconds)
    (152/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.970587125 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.775636827 seconds)
    (154/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.142382161 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.881397303 seconds)
    (156/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.199431831 seconds)
    (157/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.904811798 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.246162754 seconds)
    (159/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.057235756 seconds)
    (160/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.943799731 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.015017236 seconds)
    (162/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.203398373 seconds)
    (163/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.043595388 seconds)
    (164/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.132084647 seconds)
    (165/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.880585737 seconds)
    (166/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.3169635 seconds)
    (167/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.156808679 seconds)
    (168/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.88304139 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.89744407 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.79339844 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.50900458 seconds)
    (172/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.997633433 seconds)
    (173/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.374405024 seconds)
    (174/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.986582248 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.290306196 seconds)
    (176/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.110092592 seconds)
    (177/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.091732206 seconds)
    (178/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.026172835 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.88243493 seconds)
    (180/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.896799165 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.087366656 seconds)
    (182/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.024955198 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.886609167 seconds)
    (184/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.910013685 seconds)
    (185/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.968881268 seconds)
    (186/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.345268005 seconds)
    (187/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.805182251 seconds)
    (188/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.289738364 seconds)
    (189/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.956748353 seconds)
    (190/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.353883139 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.215399531 seconds)
    (192/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.887434673 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.882186656 seconds)
    (194/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.077720761 seconds)
    (195/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.668715151 seconds)
    (196/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.189927877 seconds)
    (197/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.096857497 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.882469175 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.908313933 seconds)
    (200/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.00195226 seconds)
    (201/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.879876744 seconds)
    (202/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.281692987 seconds)
    (203/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.138100437 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.085118414 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.185725814 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.003835443 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.940399721 seconds)
    (208/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.98096394 seconds)
    (209/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.900189719 seconds)
    (210/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.364363913 seconds)
    (211/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.88410449 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.193322047 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.929436178 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.880583085 seconds)
    (215/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.899754332 seconds)
    (216/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.136187697 seconds)
    (217/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.269705077 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.173372182 seconds)
    (219/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.281123251 seconds)
    (220/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.900039419 seconds)
    (221/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.894826104 seconds)
    (222/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.485303865 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.671801831 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.20207212 seconds)
    (225/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.974643417 seconds)
    (226/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.21626333 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.880168819 seconds)
    (228/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.174025766 seconds)
    (229/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.506095269 seconds)
    (230/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.995034543 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.878703682 seconds)
    (232/309) benchmarking ("map", identity, Bool, false)...
    done (took 3.633657108 seconds)
    (233/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.88256698 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.97877528 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.898266207 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.005315789 seconds)
    (237/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.005953166 seconds)
    (238/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.897783925 seconds)
    (239/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.935618055 seconds)
    (240/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.88533357 seconds)
    (241/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.180596377 seconds)
    (242/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.211543289 seconds)
    (243/309) benchmarking ("sort", Float32, false)...
    done (took 5.511757745 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.786005578 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.913950707 seconds)
    (246/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.269672863 seconds)
    (247/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.952715764 seconds)
    (248/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.881238673 seconds)
    (249/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.188767992 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.970953617 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.144985166 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.934305989 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.872157973 seconds)
    (254/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.352355481 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.000617251 seconds)
    (256/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.964050953 seconds)
    (257/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.38106127 seconds)
    (258/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.044322206 seconds)
    (259/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 1.995601606 seconds)
    (260/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.884254341 seconds)
    (261/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.06262669 seconds)
    (262/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.555303603 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.955470472 seconds)
    (264/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.309981942 seconds)
    (265/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.362254353 seconds)
    (266/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.846501238 seconds)
    (267/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.316085482 seconds)
    (268/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.847018762 seconds)
    (269/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.925699913 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.941040481 seconds)
    (271/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.092897752 seconds)
    (272/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.095552086 seconds)
    (273/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.109459806 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.151281107 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.859117392 seconds)
    (276/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.841341168 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 4.203835422 seconds)
    (278/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.110018256 seconds)
    (279/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.129679979 seconds)
    (280/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.98593768 seconds)
    (281/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.648170251 seconds)
    (282/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.833939786 seconds)
    (283/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.878801548 seconds)
    (284/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.843650469 seconds)
    (285/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.918598987 seconds)
    (286/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.925042367 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.739449083 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.147441363 seconds)
    (289/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.162457118 seconds)
    (290/309) benchmarking ("sort", BigInt, false)...
    done (took 6.82558625 seconds)
    (291/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.902074733 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.956019512 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.206823639 seconds)
    (294/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.0213539 seconds)
    (295/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.003010893 seconds)
    (296/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.052691953 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.846068738 seconds)
    (298/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.837133238 seconds)
    (299/309) benchmarking ("sort", Float64, false)...
    done (took 5.514543792 seconds)
    (300/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.813239679 seconds)
    (301/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.947820568 seconds)
    (302/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.969382236 seconds)
    (303/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 1.9711467 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.813481197 seconds)
    (305/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.88809698 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.178637831 seconds)
    (307/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.0554749 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.029820947 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.207820495 seconds)
  done (took 1010.917511126 seconds)
done (took 1012.787598804 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.84290623 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.835515448 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.817409833 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.8424495 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.928953944 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.861840731 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.833452239 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.823611721 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.871923921 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.869707539 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.818870066 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.860230002 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.821844934 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.824057227 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.821374338 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.835266107 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.125588345 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.84793876 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.838004307 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.832654218 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.838505039 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.820670031 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.871019673 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.862028494 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.824448074 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.825262173 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.823555323 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.83816537 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.934684189 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.826565087 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.827788204 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.834590744 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.125456681 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.851078804 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.819516739 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.841365494 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.835542344 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.83536737 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.82671647 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.85607321 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.265624466 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.824105697 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.824630627 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.823204588 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.819240213 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.830870366 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.819807874 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.831094405 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.833753999 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.837263594 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.265024114 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.843875817 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.826431097 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.82334084 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.839663548 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.826013925 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.827076485 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.837290293 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.842963584 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.836235003 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.116922185 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.861749319 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.824107241 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.843041193 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.83017617 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.302983231 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.828336814 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.829379127 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.273346399 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.838731706 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.300872779 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.838067207 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.823002207 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.842496458 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.857794306 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.12666136 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.848923098 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.822862027 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.833780715 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.82499603 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.838571078 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.837326839 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.826356706 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.820327455 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.840610627 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.866814379 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.837366888 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.824582944 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.835536476 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.842924232 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.833605747 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.839090582 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.828140563 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.821501555 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.84068989 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.828277475 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.827871709 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.828209692 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.830651505 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.838571838 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.272216732 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.846616867 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.819569072 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.823163494 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.824799704 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.842491567 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.27116511 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.831285003 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.847141821 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.87754662 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.830745384 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.115674741 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.857011081 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.842237172 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.83629431 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.830667249 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.824323675 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.116890543 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.297071122 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.848103761 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.824939239 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.824726325 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.842531715 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.827132315 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.822815151 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.131499579 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.856679183 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.840953396 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.948107756 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.841261984 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.863856604 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.826585317 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.833087466 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.871154806 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.841117857 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.862259298 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.828583911 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.842351541 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.845197177 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.82273602 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.839352878 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.842716132 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.82395133 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.836918613 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.823883227 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.870463732 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.842508569 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.840425113 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.850342332 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.949252557 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.823866068 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.117792886 seconds)
done (took 287.16826069 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.900907042 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.823657798 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.945013246 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.825091248 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.914566329 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.896353197 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.821407006 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.82361748 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.82631854 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.320719787 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.824650912 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.828852487 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.822231313 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.823771395 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.89386265 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.82176287 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.825897904 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.273023315 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.824756489 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.903176248 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.824172424 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.825160302 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.823771882 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.342967023 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.824369647 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.824288563 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.903766845 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.824645579 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.279589313 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.823493354 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.822925326 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.294499241 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.905751938 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.854589076 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.835516445 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.831229533 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.915746249 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.835738315 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.891575947 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.891245613 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.948805128 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.858732764 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.82518525 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.82559199 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.82721983 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.830946895 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.825145607 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.858735359 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.826851174 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.832781475 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.271145586 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.831723686 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.831328462 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.824716 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.82970626 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.847543454 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.821531979 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.821389742 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.899884283 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.826055633 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.88293118 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.323880749 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.316751157 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.818321167 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.82202039 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.817896579 seconds)
  done (took 182.31202164 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.879989664 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.886401587 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.879427379 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.815738014 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.860710406 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.884528503 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.814332733 seconds)
  done (took 14.762479217 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.82003538 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.812273626 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.860501952 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.867237383 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.808725845 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.987137865 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.821164146 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.813732259 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.83836304 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.810604635 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.472327827 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.857676624 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.816133189 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.813808931 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.816730439 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.860650435 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.808962498 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.807742322 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.916970364 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.955327365 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.811524987 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.813129346 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.833124811 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.819222637 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.806365342 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.807131456 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.805630732 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.815107669 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.807367858 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.806864966 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.807041109 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.8598615 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.808749415 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.80779015 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.806830657 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.810203603 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.806643827 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.808957345 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.80884478 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.808835246 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.810848609 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.807993945 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.811301732 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.808372526 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.807496153 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.830910279 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.809347871 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.808090213 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.807372181 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.808016948 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.834648951 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.808290934 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.808338702 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.813147267 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.852521667 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.814797161 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.806566345 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.809315973 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.80911864 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.80959332 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.810286263 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.957507021 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.856426969 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.809614195 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.857662766 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.961316657 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.807794182 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.808540805 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.806597675 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.897238704 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.808983321 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.860094541 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.809671043 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.923271224 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.808789459 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.990291231 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.833387827 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.813088742 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.814382981 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.810106659 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.814635116 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.810196629 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.810465145 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.817641954 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.81765926 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.809011747 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.810619837 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.811057803 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.816919209 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.808802175 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.860870876 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.809838142 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.810283353 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.946414444 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.810514971 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.921797142 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.836172207 seconds)
  done (took 200.008847696 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.817966753 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.817573901 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.809377724 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.827719948 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.807517491 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.808875259 seconds)
  done (took 12.622918013 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.809108167 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.813844219 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.803291255 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.804628751 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.803627146 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.803855171 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.805009873 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.806483398 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.803523529 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.801384626 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.801391978 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.800627755 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.801824054 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.799729049 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.798298634 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.799603067 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.798915864 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.798543831 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.799151744 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.799262786 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.006620929 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.798803101 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.800040988 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.801776055 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.802357074 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.799835201 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.812637579 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.798882369 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.79860975 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.807510161 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.802617912 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.799087175 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.802429694 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.806486486 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.805242678 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.803955142 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.804661347 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.799349122 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.799562516 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.800499249 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.799764678 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.799496609 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.800703743 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.801307777 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.801878039 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.806914239 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.803404431 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.813715691 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.800716424 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.799469713 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.800221856 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.799926112 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.800904995 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.800146821 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.803214187 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.805714483 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.80395139 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.800651789 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.800086406 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.803581821 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.803219445 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.800297546 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.808296805 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.80338743 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.804578751 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.796882956 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.800801901 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.805512127 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.793263038 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.796615347 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.793714829 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.793844104 seconds)
  done (took 132.683494691 seconds)
done (took 544.15776307 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.701552222 seconds)
  done (took 9.421836622 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.955293662 seconds)
  done (took 8.681809267 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.483351551 seconds)
  done (took 10.201698875 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.808445617 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.806548781 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.799037999 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.792568743 seconds)
  done (took 28.938326818 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.115076799 seconds)
  done (took 8.832620679 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.803804957 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.795166023 seconds)
  done (took 15.394072653 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.803564014 seconds)
  done (took 8.521471356 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.2553558 seconds)
  done (took 8.987859013 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.808843278 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.805470085 seconds)
  done (took 15.359621365 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.792968086 seconds)
  done (took 8.512068616 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.074826243 seconds)
  done (took 9.883201586 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.80168587 seconds)
  done (took 8.568985668 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.820862506 seconds)
  done (took 8.539710659 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.82209963 seconds)
  done (took 8.540941515 seconds)
done (took 160.105351577 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.798568159 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.788667182 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.788020295 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.787477271 seconds)
  done (took 28.879366526 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.826155648 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.826513211 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.834897781 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.826674977 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.816125933 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.815959429 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.82656388 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.827283974 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.817527409 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.823320243 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.828122588 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.826872753 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.826334245 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.836570983 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.835498485 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.825888829 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.827528839 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.828393235 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.81866559 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.835538695 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.824704348 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.828017511 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.792720498 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.792000634 seconds)
  done (took 45.487722599 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.983646297 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.863459916 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.946581686 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.844742908 seconds)
  done (took 9.357639579 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.792260168 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.858660584 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.84425451 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.837207243 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.843075978 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.894747441 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.847294119 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.930809451 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.92109376 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.919610771 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.801848069 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.8150141 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.816883427 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.846102559 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.896510851 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.794056211 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.793698411 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.910161356 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.857050816 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 1.980177846 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.793932096 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.849557049 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.844521031 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.846374414 seconds)
  done (took 46.25464204 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.795161421 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.802556309 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.802830608 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.796093632 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.796488308 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.796391516 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.801284575 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.796421735 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.816989458 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.796713262 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.796076127 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.796253762 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.805035783 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.79569746 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.796699936 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.810140888 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.809630317 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.797254733 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.801562679 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.804598737 seconds)
  done (took 37.73373245 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.794071341 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.64110293 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.139100175 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.045891885 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.796067955 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.792750838 seconds)
  done (took 30.929181237 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.807764762 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.800056582 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.796866192 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.852467218 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.937420452 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.802151095 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.796178479 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.807647046 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.840804765 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.860528918 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.814501469 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.822408447 seconds)
  done (took 23.661592957 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.796965307 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.795505603 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.795271961 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.807831738 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.8065414 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.8029457 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.805835597 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.797083865 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.810666566 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.812790507 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.804611566 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.809162634 seconds)
  done (took 43.373347183 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.505689913 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869378414 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.797233333 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.676234675 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256054609 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.349902455 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.687269168 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.572216383 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.270506659 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.727759887 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.004905659 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.80056961 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.887737304 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.801568901 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.071326714 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.216366026 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997674963 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.042950912 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.559959765 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.835739409 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.003142684 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027876365 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.092153458 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.800772196 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803388445 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.947639147 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337836573 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.627894065 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.837448342 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.241160686 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048397987 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.750790763 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86339872 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.803688164 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.816478173 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805668414 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809679383 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.077499823 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.942744817 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93610029 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879881257 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045161689 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80780419 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.224575961 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.507263003 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.146487414 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.920558947 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.805140772 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807455131 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804452476 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.731046398 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886781446 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.806844374 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.81278877 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.508615652 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.805872535 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880573259 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.805073622 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008038819 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.611625801 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.49780181 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.803633946 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80665009 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.363344804 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.914862376 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.926004785 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.592882057 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199990797 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.226394551 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.906353811 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.811697372 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.809077617 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.060746808 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778099916 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.589462253 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.84765802 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.942597867 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.823480204 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.452794046 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108685645 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.280197721 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.372928577 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.731540366 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092620428 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.689166128 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.80016385 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02182782 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.668526608 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.732236087 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036364125 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843461082 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81033948 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.073271022 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.590310984 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.929007538 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.822019269 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250980013 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82577308 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.816314986 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814970291 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.030237566 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319654063 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849396618 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.92966966 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830982771 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.897291678 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.742462421 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.826912716 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.814931425 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.89281524 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.819086799 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.813900907 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.859093299 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.578729931 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.859701463 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.752533441 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819342264 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.928538684 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858430253 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.765251498 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073626259 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.125079846 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.489388348 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847613605 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.947840036 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.234089451 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.043431842 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.819707427 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.029991479 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351749025 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.255237494 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865525344 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10507436 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.880206635 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108204241 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250659826 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891438796 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.611605379 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.444623955 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.035174256 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.832919961 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.820335373 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.821122206 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.82585456 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.755290944 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.461340715 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.242085042 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.985050606 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.03179122 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.258775461 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.802259059 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.818217781 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124630743 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.952895356 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.819341104 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.474494833 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.34496943 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.643780555 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.84654442 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.074730988 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.286113944 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.783719064 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835220358 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897304718 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837962935 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.825967201 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.246755813 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.182800424 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.821383268 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.820587895 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.766390794 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82240195 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.824180672 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.358974593 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.786620151 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.829555113 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.83238777 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.693729564 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891541924 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.821786016 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.823938789 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.359533479 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.326720059 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.82519539 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.495534619 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.953943088 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902004256 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095180877 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.24046012 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952448536 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.521328167 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.271278563 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936816503 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.521718869 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.747488576 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.818957536 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.758092227 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825716206 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.824713271 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827659337 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.014519239 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.101162687 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123968038 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.272895224 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890990083 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023883829 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.560991736 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779173566 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.82407289 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.829489573 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.825159694 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825016548 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.335994251 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.06533894 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.930555557 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85649143 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.830167236 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952169412 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.835621049 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.750846547 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.823972602 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.825766712 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350401043 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.858973162 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.777770572 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.182922867 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.679752122 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948760949 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873940724 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.836226414 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82692817 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.565235 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.872540171 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.754190945 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368488318 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868690373 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.606614627 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313541325 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.386992487 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135199988 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145650257 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.158225795 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.898109141 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.037825571 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.90897086 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.882229461 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.914065863 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761958418 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.751321325 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.484294337 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156055128 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.095124622 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.834945677 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040471715 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.617010306 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054454527 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85612057 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.623485203 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14311288 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.804612115 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842391422 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.271294617 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940476999 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913211271 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.830064445 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.776563709 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172075413 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87365407 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.531609688 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84201105 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.17993207 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.530273736 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.903488594 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.240334577 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.040827147 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.828230982 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185479096 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.13755708 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.869983772 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.832615536 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.818135646 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.043595545 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.40735849 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.682084261 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831110539 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.254991014 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130302211 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.734524907 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.831731247 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.081493667 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090841549 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.828447198 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.230017576 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201361493 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.951461828 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890741099 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055631744 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.613845773 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137104676 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.388086602 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.318301422 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827595727 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.755716113 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.527917909 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.031503404 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.829751611 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.794288732 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052904093 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065681987 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.514984803 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043446714 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.071618 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.83860266 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.104114573 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905528087 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.927991429 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.186014963 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.268711375 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.077196708 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.053385183 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.371740941 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.046903127 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29365434 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.001589528 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.830521837 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.030798705 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045119261 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.046637365 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.251146279 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006136266 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.54263102 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.836312538 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.039251562 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122707231 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894744313 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.250192029 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.004190411 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.91481561 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838464207 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89625001 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.837739528 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84141633 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.254075891 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.36228643 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.842347322 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909344728 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.951451565 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.347579117 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.835645065 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.838097134 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.107919328 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19817947 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.170471057 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820019659 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.832422081 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834545514 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960253664 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.760080076 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838703876 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.102340226 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.836474884 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.342352365 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.98348973 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849574306 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.191992449 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223818054 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.675446593 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.818852881 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839691473 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059913653 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151240004 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.132365759 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.950896208 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.105017603 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17577291 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.87162563 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.266406882 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080218731 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.836210409 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.710312852 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.837114685 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960100687 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.030060401 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112026707 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.411343063 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.577195207 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.103008448 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.684600712 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.838416437 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.56947584 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102827181 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.116784328 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.886243825 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890824569 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842809426 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369146384 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.557235614 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967903363 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.685488243 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76353427 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.842948916 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.172545342 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.075104904 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.542153145 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.840064287 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116994506 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136867687 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112729159 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.890238469 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.680777129 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051666019 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838266735 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.847172399 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.101831182 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062096635 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.08352814 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.834424588 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.837946042 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.643777168 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762561916 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.835861243 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891212434 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.059442384 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.859138677 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.35114437 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.532936087 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122736991 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88992196 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837306223 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.113121825 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.352027134 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.396089927 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842223297 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05771787 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.866205682 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132616559 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.83911963 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.532125552 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14472452 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.838828666 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.469883527 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.083419798 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104836923 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767726535 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846380131 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050671186 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.679931108 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.836823167 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.838300201 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.53384117 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071254836 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.573813199 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394023143 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.838025359 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.838806773 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38176179 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873548791 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383318976 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871834261 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854842699 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.360363799 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.53456587 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.125239423 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.081505201 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.478024273 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.439964716 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.839917626 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.840120152 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839533021 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.756613639 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.02103598 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.028045443 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130835322 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.875584829 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38083592 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877451505 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.270349962 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957965922 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276350848 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.881637759 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.357616951 seconds)
  done (took 1643.175782332 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.842900545 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.85791874 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.866374129 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.851305211 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.843406045 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.856028926 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.892528154 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.857715178 seconds)
  done (took 56.63417194 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.837344962 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.852749704 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.846272311 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.841765659 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.854488343 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.840773777 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.012540363 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.847799242 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.852557024 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.841749323 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.840620151 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.851962489 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.110340243 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.855274384 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.846625771 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.839434937 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.844157177 seconds)
  done (took 73.582135086 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.843639239 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.049400115 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.906095182 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.835124827 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.748976988 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.842346301 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.77197675 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.84454025 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.845915304 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.039441917 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.147173384 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.840816089 seconds)
  done (took 89.479301316 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.847155186 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.842458732 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.83955316 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.842015774 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.841450574 seconds)
  done (took 10.98323799 seconds)
done (took 2141.321163212 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.199975143 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.899318012 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.939070893 seconds)
  done (took 5.602382408 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 1.986736072 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.038332729 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.147109817 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.908618013 seconds)
  done (took 9.854362878 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.145925276 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.20805295 seconds)
  done (took 6.118641336 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.201595135 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.851949645 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.223333922 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.845272777 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.84576693 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.845804798 seconds)
  done (took 22.309907707 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.837341942 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.84440829 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.841243318 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.845426357 seconds)
  done (took 9.136920969 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.839071212 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.542889752 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.841441135 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.851505066 seconds)
  done (took 20.837943433 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.990524448 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.95342344 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.983673547 seconds)
  done (took 7.693474745 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.986677891 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.692705937 seconds)
  done (took 6.445178944 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.983932982 seconds)
  done (took 3.749987685 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.870750161 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.112746909 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.342467989 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.778668933 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.534107693 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.918547082 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.212434977 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.099544014 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.259941879 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.30841624 seconds)
  done (took 25.205057152 seconds)
done (took 132.195703553 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.383672623 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.872018972 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.043533645 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.245300094 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.075671625 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.046227852 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.049479838 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.232381007 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.911124408 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.897095433 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.21969409 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.073382726 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.000004878 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.869688059 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.003936272 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.867057156 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.079676803 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.235528262 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.901901787 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.1229911 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.058166204 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.866133963 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.08724382 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.879640414 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.077272765 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.001282254 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.416637395 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.871163106 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.047510689 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.423637716 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.001608137 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.265376922 seconds)
  done (took 167.895619631 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.845714191 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.843043453 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.845596639 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.847516096 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.134472504 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.846726623 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.84666106 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.846898678 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.066969821 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.048117893 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.845790095 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.133090681 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.844059849 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.850715558 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.848304671 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.847921119 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.210699433 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.847153441 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.846968411 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.846864884 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.845686038 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.973318322 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.845413153 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.979395586 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.198277102 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.849730883 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.846999528 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.851345128 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.846406464 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.84450487 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.844664293 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.847476503 seconds)
  done (took 206.839316069 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.84742804 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.844538324 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.849102545 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.84550718 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.847106927 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.846813909 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.849219868 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.847714055 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.563190514 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.542329825 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.845614013 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.843066666 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.84691692 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.847905377 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.849576406 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.84664552 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.844976562 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.847370617 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.850900562 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.847064834 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.850585989 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.590384236 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.846249021 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.61802965 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.851155433 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.850981741 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.844386846 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.853751054 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.857041051 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.857091804 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.848276704 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.848735386 seconds)
  done (took 219.842178523 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.086924813 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.846479935 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.853968124 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.871372741 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.849829835 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.851325892 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.839681313 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.096850456 seconds)
  done (took 19.072986713 seconds)
done (took 615.43867961 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.225148496 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.058352374 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.031398763 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.875490083 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.119720107 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.922491398 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.869348733 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.932918933 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.722668079 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.947932034 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.530109557 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.893954445 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.625370692 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.897559997 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.992998965 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.92723665 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.414855283 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.523054369 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.012414832 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.937054063 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.050612449 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.820766973 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.952823556 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.756752157 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.552537528 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.86151501 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.962018162 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.433432599 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.883728296 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.025587521 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.590876045 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.268926052 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.887015201 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.871508674 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.923458626 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.900633027 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.147079361 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.883766742 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.000318634 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.612782796 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.950109755 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.627993416 seconds)
  done (took 102.197031792 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.858911129 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.85532772 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.855912759 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.854460037 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.866510898 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.855841853 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.853644887 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.855814698 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.855557858 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.853332468 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.855814463 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.864210318 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.860618479 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.867312194 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.856707059 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.856653585 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.85841829 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.865901179 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.857302915 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.858475299 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.855511433 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.856251374 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.852128514 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.859765128 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.855726061 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.856949291 seconds)
  done (took 50.09878762 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.853639223 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.02293795 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.101917706 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.87507451 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.851293191 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.85437933 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.871368757 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.8569684 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.855236306 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.854448992 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.963281358 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.859470374 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.873870416 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.099734933 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.870639589 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.851696251 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.855773206 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.857038095 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.030783755 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.872952569 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.875525785 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.856724192 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.877467748 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.868461795 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.857537855 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.854086851 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.857566583 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.358431188 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.864057322 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.966965239 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.928237831 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.876127207 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.271023579 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.105828859 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.913004638 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.862015238 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.852879651 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.971689608 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.861082217 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.85602009 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.873963001 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.858104419 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.098538521 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.390159912 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.870123898 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.854726671 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.365782911 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.979581707 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.89457666 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.868085511 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.103362775 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.877528977 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.859870091 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.86112888 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.892990712 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.870905305 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.858804222 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.22058849 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.871296617 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.875467753 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.862901136 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.861391503 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.041809084 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.868987907 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.0283255 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.868333919 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.865095905 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.858870069 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.107734074 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.876758883 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.410641217 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.874849164 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.860413679 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.970338292 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.034768629 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.392614744 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.872720104 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.044291261 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.294855624 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.885767252 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.868192304 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.348113405 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.888701438 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.867618329 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.863318895 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.861036085 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.863115997 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.905835994 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.876664244 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.311538825 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.403911036 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.238620707 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.887647595 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.871487384 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.860150813 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.220075428 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.869854991 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.8625778 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.097380977 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.416168482 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.875831089 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.869458308 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.384191041 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.878970551 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.882620705 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.872180563 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.11407657 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.880139898 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.906342993 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.863105654 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.869167963 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.865332608 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.880964144 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.869676237 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.861057929 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.37394152 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.992006433 seconds)
  done (took 231.495907035 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.861573149 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.863960449 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.861595371 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.862622969 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.861085662 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.861712268 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.860518295 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.861599516 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.863990212 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.864968776 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.861438141 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.862033612 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.864313842 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.867062244 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.905844908 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.862728766 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.464128974 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.860657847 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.860855083 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.862389341 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.503969957 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.867719986 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.862538486 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.864616275 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.860380721 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.865091296 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.867349403 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.90112111 seconds)
  done (took 167.277187066 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.86290389 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.977468973 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.884929408 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.89253989 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.871294375 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.86244335 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.961468705 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.881140682 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.869572411 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.864545485 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.86406068 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.923102053 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.875007909 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.962820395 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.894712498 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.972971628 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.966996305 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.870918609 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.865199062 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.86475706 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.894053149 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.871715193 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.922782 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.986580014 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.882749683 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.978458367 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.88263687 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.864466672 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.864730405 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.976695749 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.884895573 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.923990449 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.89641126 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.882487034 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.981021571 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.97860969 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.966393642 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.968153853 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.870619181 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.86416851 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.865825329 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.86604973 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.977877937 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.884299582 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.866577504 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.977907834 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.885355254 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.866244423 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.867248109 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.864755294 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.878022149 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.881574729 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.927527212 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.996278672 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.9024872 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.888694373 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.965330271 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.989755423 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.865663933 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.963452938 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.871170559 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.978521779 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.885913291 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.86676858 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.869560364 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.870597807 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.895439291 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.969675711 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.970953522 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.873302329 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.963307738 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.901833121 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.874305249 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.868064642 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.86798249 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.980850727 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.985782712 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.903145194 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.904117975 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.897696077 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.877807026 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.868260733 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.868940635 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.884359621 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.872084534 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.980299438 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.98756868 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.872112511 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.868582993 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.867584632 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.869117513 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.892956419 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.989982317 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.90825604 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.971393624 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.931756055 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.944049605 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.883382955 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.879791441 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.873728455 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.93017546 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.885777452 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.880843543 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.16052783 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.9269446 seconds)
  done (took 202.377030301 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.247963764 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.912458178 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.926381119 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.195020201 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.261074572 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.782606362 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.915854215 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.920128432 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.950897091 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.141740358 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.992052415 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.931557031 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.903130959 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.890255726 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.914669705 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.950601622 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.922952764 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.253075394 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.130606292 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.382628022 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.90892901 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.186294567 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.241589388 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.496867807 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.968163206 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.302757211 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.551065852 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.077847786 seconds)
  done (took 63.059895597 seconds)
done (took 818.279257374 seconds)
SAVING RESULT...
DONE!
