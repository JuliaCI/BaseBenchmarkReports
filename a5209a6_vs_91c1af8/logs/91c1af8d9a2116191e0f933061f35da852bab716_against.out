cset: moving following pidspec: 18859
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.172677524 seconds)
loading group "string"... done (took 0.568795857 seconds)
loading group "linalg"... done (took 8.946327169 seconds)
loading group "parallel"... done (took 0.16887794 seconds)
loading group "find"... done (took 2.529310547 seconds)
loading group "tuple"... done (took 2.034706653 seconds)
loading group "dates"... done (took 1.376461921 seconds)
loading group "micro"... done (took 0.634738594 seconds)
loading group "io"... done (took 0.655657214 seconds)
loading group "scalar"... done (took 47.22475319 seconds)
loading group "sparse"... done (took 12.827146604 seconds)
loading group "broadcast"... done (took 1.229365052 seconds)
loading group "union"... done (took 2.508183832 seconds)
loading group "simd"... done (took 3.203294919 seconds)
loading group "random"... done (took 11.420005307 seconds)
loading group "problem"... done (took 2.126026231 seconds)
loading group "array"... done (took 22.904934785 seconds)
loading group "misc"... done (took 1.482818934 seconds)
loading group "sort"... done (took 3.651049439 seconds)
loading group "collection"... done (took 17.527259717 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.883008013 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.17693629 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.240312668 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.560326161 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.305100186 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.203328872 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.18802581 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.203627805 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.575621523 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.224210013 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.193073433 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.402059599 seconds)
done (took 6.897867253 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.291548367 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.090969598 seconds)
    (2/2) benchmarking "String"...
    done (took 0.245940755 seconds)
  done (took 0.938543708 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.093487106 seconds)
    (2/2) benchmarking "String"...
    done (took 0.153898631 seconds)
  done (took 0.850824458 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.134330397 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.206873327 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.14658266 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.14760568 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.133742366 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.148119366 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.132724064 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.148002036 seconds)
  done (took 1.668317374 seconds)
done (took 4.488607408 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.515963289 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.917028573 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.547449812 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.212036168 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.345723641 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.359460741 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.313165035 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.269068311 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.132489632 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.110115069 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.236571174 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.482721809 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.439570439 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.968182879 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.096726134 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.152413646 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.200579078 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.830140653 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.187573126 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.152342889 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.529775689 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.250608998 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.157713256 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.148408453 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.229256934 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.16682866 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.167120017 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.143915463 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.722939041 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.177064297 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.235413213 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.124769129 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.166706749 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.200887792 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.275921806 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15158631 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.726690329 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.241049456 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.122465405 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.141176327 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.732797553 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.163333659 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.248330606 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.145595443 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.110071685 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.178910432 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.136862955 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.121085765 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.153383049 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.145170896 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201931755 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.468473252 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.14602863 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.23756958 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.149803384 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.756927663 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.141859536 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.321467118 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.176575904 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.147816933 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.119386426 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.145269684 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.193758968 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.136770764 seconds)
  done (took 22.657471349 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.245120134 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.250660709 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.120824317 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.201216672 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.18339206 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.123664018 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.144384233 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.120610102 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.170285604 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.223281939 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.181312093 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.252844534 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.13482246 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.134259378 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.227769904 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.292644748 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.166545509 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.149531186 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.148586633 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.137837186 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.189925602 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.13899896 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.154088356 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.152997965 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.211509944 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.247528447 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.155297706 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.169027634 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.146815826 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.141087204 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.184711635 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.20388971 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.119614305 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.146324726 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.235347212 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.149893448 seconds)
  done (took 6.988277424 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.275896452 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.14640826 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.300919815 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.229333771 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.169683231 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.23336794 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.219043965 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.325988748 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.323387522 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.27544673 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.20537078 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.168810002 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.154282262 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122942797 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.138719158 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.123151108 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.867310174 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.215679203 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.183187125 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.246021041 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.152411856 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.125221262 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.408984041 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.129748791 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.144646836 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.140804863 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.111405024 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.270204624 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.15389082 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.501583354 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.143069538 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.154710074 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.156638556 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.248510232 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.165161498 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.176997522 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.154614585 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.127756596 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.250093117 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.158258517 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.127492292 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.139216131 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.1235402 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.178892775 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.172031019 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.152667834 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16840517 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.177355037 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.130411323 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16831111 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.1801079 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.237575587 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.221622199 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.131803697 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.317258288 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.167029986 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.143422912 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.153853341 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.865219116 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.167747619 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.14407892 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.126015037 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.157508404 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.143502878 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.50727613 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.162460173 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.127746941 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.146166052 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.206043447 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.127470282 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.158032175 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.164447435 seconds)
    (73/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.173279203 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133686923 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.149454357 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.154393328 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.146926427 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126720442 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.147511523 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.127930134 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.152955943 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.148244449 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148018297 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.125447199 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.206567086 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.143785718 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.167302218 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.172324254 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.136039164 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.147184369 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.173959815 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.125384399 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.149187642 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.251306461 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.141340067 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.162296192 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.156246155 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.183906541 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.133667299 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.346641513 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.128325678 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.188053104 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.142765081 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.158521719 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.157313257 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.124678093 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.148375705 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.143095117 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.128774061 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.206219165 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.134017748 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.146519147 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.133119683 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.155492279 seconds)
  done (took 32.448566969 seconds)
done (took 62.697643782 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.486387399 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107113707 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.126011353 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107506193 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.126428143 seconds)
  done (took 1.640802453 seconds)
done (took 2.315428442 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.229677279 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.329370719 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.242074637 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.148724019 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.211525409 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.212222312 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.196403322 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.20610673 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.218294556 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.232164842 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.125017524 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.233569685 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.223284692 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.212987174 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.124860992 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.247293594 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.209357292 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.196777157 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.243682139 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.146900674 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.159397386 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.150802415 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166167445 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.1323997 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.162867084 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.14677966 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.167500022 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.149027667 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.158350472 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.129690125 seconds)
  done (took 2.351401916 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.189054579 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.143661213 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.157588095 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.139943508 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.162203653 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.13081808 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.144262265 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160066354 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.16715864 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.147188344 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.161153221 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.133690708 seconds)
  done (took 2.325094975 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.124538618 seconds)
done (took 9.731432457 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.23524908 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.817770687 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.199135817 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.308723435 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.375857551 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.318602155 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.658673327 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.251671631 seconds)
  done (took 15.957142827 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.159591184 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.23915624 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.154729719 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.140145141 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.157157315 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.141952958 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.156078637 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.135139347 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.151832781 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.140898792 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.153206098 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.140373493 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.156497241 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.136245717 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.152227928 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.140103853 seconds)
  done (took 3.200721653 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.178450558 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.17698941 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.142245343 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.160518991 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.13994251 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.161446722 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.146076064 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.158006838 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.139521539 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.153788584 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.148408153 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.158413198 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.15867471 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.140367769 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.159088726 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.165286568 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.155552818 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.143061918 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.176187516 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.143075442 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.158484112 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.140925267 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.15748981 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.144286014 seconds)
  done (took 4.460526039 seconds)
done (took 24.300443639 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.194981509 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.145283802 seconds)
  done (took 1.033936318 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.209007991 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.225173705 seconds)
  done (took 1.136043152 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.155383277 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.151848628 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.166072134 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.162320332 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.137064132 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.152749157 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.177128901 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.136964725 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.152678535 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.136555342 seconds)
  done (took 2.232952861 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.1398491 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.155351765 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.153401614 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.223141048 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.162704573 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.138763677 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.15651794 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.139450351 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.158197768 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.136632477 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.157217871 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.153326848 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.15626914 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.155890197 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.155415407 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.157323911 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.14517686 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.15469068 seconds)
  done (took 3.502675256 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.135495632 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.137567786 seconds)
  done (took 0.976940999 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.138175655 seconds)
    (2/7) benchmarking "second"...
    done (took 0.151855916 seconds)
    (3/7) benchmarking "month"...
    done (took 0.138989758 seconds)
    (4/7) benchmarking "year"...
    done (took 0.154650596 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.136898412 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.152083129 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.135452177 seconds)
  done (took 1.714662864 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.573074541 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.265025762 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.393762843 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10462571 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.151145556 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.363787411 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.153443125 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103896773 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103819449 seconds)
  done (took 2.946799947 seconds)
done (took 14.244478976 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.136204069 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.325251923 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.637969791 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.172297951 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.136968014 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.210158331 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.38579479 seconds)
done (took 2.719175638 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348622474 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.206078639 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.117391054 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.138258404 seconds)
  done (took 1.520330696 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.128327247 seconds)
    (2/2) benchmarking "read"...
    done (took 0.159853616 seconds)
  done (took 1.008332563 seconds)
done (took 3.249722373 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.155935545 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.15311018 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.139433627 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.156888896 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.140339314 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.156353033 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.139566267 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.153689672 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.139786301 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.153253491 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.140374451 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.156337281 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.137464324 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.157117057 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138504613 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.155518446 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.139000299 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153241389 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.137281526 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.156655958 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.140201121 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153665207 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.139885246 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.155612796 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.139988815 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.155769029 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.137739986 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.153059769 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.156231334 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.140995725 seconds)
  done (took 5.145434146 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.260074802 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.133361148 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.151384419 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.143395499 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.149095008 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.136336557 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.148659768 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.136259151 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.153706012 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.135995922 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.155581904 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.136118182 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.153043687 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.137055548 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.153854247 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.138246644 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.161974018 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.136078452 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.152486613 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.138032067 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.155371022 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.135934093 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.154462903 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.136687259 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.155140043 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.134899782 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.152906849 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.137158078 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.154109946 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.137014914 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.13887395 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.154760873 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.13584544 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.162423913 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.13873945 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.152276534 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.142840115 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.149473736 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.139342746 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.150185551 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.134456916 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.153348579 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.136021052 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.158447675 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.137436447 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.153819048 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.137471795 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.155312844 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.136731305 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.154878137 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.134270554 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.153013863 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.139757403 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.155008305 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.139999773 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.151181322 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.137165522 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.150026617 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.138540906 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.153713705 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.134563718 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.134032382 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.157835759 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.137377202 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.168342122 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.15926723 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.136621168 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.139332324 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.154874086 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.142616056 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.155690951 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.147672298 seconds)
  done (took 11.333619626 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.13726846 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.136674843 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.154445126 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.13675134 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.153342035 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.140119408 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.153950012 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.136974332 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.15411295 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.136428271 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154621097 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.13688505 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.152630833 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.138397314 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.15359264 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.137146248 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.153889191 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.136688043 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.153991826 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.138008757 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.137608127 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.154059375 seconds)
  done (took 3.921070495 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.278649693 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.144027447 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.204258817 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.168768299 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.156444227 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.166936007 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.142518154 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.160585734 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.14146512 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.164654773 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.147241285 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.158433066 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.173097753 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.146489108 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.16468387 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.149106925 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.15926569 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.148519332 seconds)
  done (took 3.710330037 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.138037044 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.137681868 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155739773 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.137541212 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.153929099 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.138805882 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.155850411 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.137766941 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.155724908 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.137660999 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.154850102 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138292033 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.154648347 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.137770802 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156381475 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.139090752 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.156230745 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.138074695 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.154334463 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.138585392 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.137672971 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.155846602 seconds)
  done (took 3.949596473 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152311111 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.158283263 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.158092966 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.160352595 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.139009421 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.157050721 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.146360181 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.158763406 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.145594526 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.157548902 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.14074034 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.156660032 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.153427511 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.158817283 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.145342176 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.157743054 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.142263624 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.157891635 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.14095781 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.156563339 seconds)
  done (took 3.783573729 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.249561193 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.154963308 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.17399886 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.163297379 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.173894274 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.156040857 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.18017022 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.155752036 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.173858737 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.183621222 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.156173966 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.174848358 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.164951428 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.177738107 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.157489767 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.179642824 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.180092174 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.163541433 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.174248631 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.155105698 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.183789253 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.172730267 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.163675241 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.174492283 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.156412771 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.173014231 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.156670206 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.17818366 seconds)
  done (took 5.553341038 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.151448109 seconds)
    (2/2) benchmarking "in"...
    done (took 0.167219568 seconds)
  done (took 1.066854044 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.140689588 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.141235154 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.159191613 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.14199062 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.158383098 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.141254183 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.158636265 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.142014792 seconds)
  done (took 1.928747601 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.248833146 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.254196088 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.14438659 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.168984955 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.252305663 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.233238371 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.176427019 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.162901877 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.141338817 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.151496182 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.247272337 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.13263487 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.157603011 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.156213497 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.139604962 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.162333318 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.141255631 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.166677832 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.146330312 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.159728292 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.144301053 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.162441931 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.142081847 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.167900427 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.134534926 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.160234486 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.142399923 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.169612721 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.136618054 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.159409329 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.138096839 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.16845006 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.145142923 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.162429352 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.141510619 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.252811346 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.165217747 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.137007797 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.159444887 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.145376486 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.184941661 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.141226063 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.159832559 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.157019302 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.143914298 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.163594378 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.146970312 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.159296259 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.133071866 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.154047523 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.14117813 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.154886919 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.140985487 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.160072028 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.140273125 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.165356789 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.142693958 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.15503729 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.136147146 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.154883857 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.138798859 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.154837468 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.142977688 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.161694617 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.140508555 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.159836834 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.140899086 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.159263509 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.141381928 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.159950404 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.139837179 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.173876934 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.141894307 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.16548329 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.146471313 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.160710361 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138245629 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.164786656 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.139316123 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.158966592 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.144625156 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.181339737 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.14226368 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.153240335 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.136553847 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.165460023 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.143953519 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.163308305 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.134259844 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.166983489 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.14587225 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.160321286 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.133608526 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.156525247 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.137391107 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.163444811 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.134132761 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.159767459 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.140757038 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.1631218 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.147570704 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.158874672 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.16060395 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.147829672 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.166369301 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.140538555 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.211626178 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.139761858 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.15647675 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.142299436 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.166295346 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.13575267 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.160427288 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.141328783 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.15720298 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.136847844 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.165113379 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.141053057 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.161727606 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.145679686 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.16163402 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.14250603 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.161727217 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.142238514 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.156572601 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.145540326 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.168726575 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.143283628 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.163476033 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.142461763 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.159767271 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.141318611 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.174257644 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.138525189 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.165189919 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.13934207 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.160264932 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.143376657 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.165475662 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.141722421 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.155303089 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.140617907 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.160852105 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.141242834 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.163237689 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.14397896 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.15693663 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.135549833 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.160977002 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.138265839 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.161508725 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.169248064 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.138306883 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.146733662 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.156888503 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.168977692 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.139694935 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.166061369 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.144991928 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.167607725 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.147124035 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.152878296 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.139645921 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.163688497 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.144590465 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.156601786 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.143583881 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.143173644 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.167395981 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.135184251 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.165736054 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.135803242 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.159501922 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.148383133 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.162430486 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.146874679 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.156417853 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.192286001 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.15465097 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.167299787 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.14127437 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.159348497 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.146822867 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.159835176 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.147417782 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.166044921 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.147573332 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.159483363 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.141029452 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.168050093 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.138594784 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.163113489 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.141790599 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.162121084 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.134778168 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.162787307 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.134555176 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.165567047 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.144302186 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.165334392 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.148141027 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.162420682 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.141481621 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.169394801 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.138899925 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.16447508 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.136462448 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.166188456 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.153105482 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.16704636 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.148656256 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.163131739 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.140407394 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.163031701 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1514603 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.163345169 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.142908487 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.161910626 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.136550819 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.155636507 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.149037353 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.163902458 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.139827391 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.16170167 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.144624609 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163788575 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.140696807 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.153748739 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.146766478 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.164098987 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.138327795 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.162134743 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.139679197 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.159417059 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.150173871 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.154858374 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.139530287 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.163700035 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.14744924 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.162607926 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.143068124 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.163769027 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.148904429 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.165107202 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.145258007 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.158581749 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.151605628 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.159863331 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.142569766 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.157576165 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.145805232 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.156520668 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.145005319 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.161634125 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.141575109 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.159924148 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1468351 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.16781828 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.147578888 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.159827406 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.147816123 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.166587453 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.149548259 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.161830016 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.148365898 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.157778461 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.137379529 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.159855122 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.136528469 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.163995679 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.139803556 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.16824493 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.14202326 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.161414099 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.147888031 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.164427786 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.142288236 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.167733594 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.172820659 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.138828542 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.137978442 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160541476 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.161118355 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.141333982 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.158647467 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.145007963 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.164878265 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.148082737 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.165036624 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.140035387 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.161775259 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.152251709 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.159627095 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.149848498 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.168738809 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.149261289 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.159293546 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.147467771 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.159044607 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.147056438 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.156184514 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.142372845 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.162697031 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.142890783 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.160279194 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.141375657 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.160519102 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.138040005 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.160392869 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.149214598 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.161872347 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.14965489 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.162012851 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.142697608 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.160942102 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.140575272 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.170743687 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.142745155 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.168633025 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.145207615 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.157003227 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.138930125 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.168343843 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.143563361 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.168801259 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.139269825 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.166943613 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.15162618 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.168142841 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.144722255 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.171745776 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.152688362 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.168806809 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.150185151 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.157361371 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.140975539 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.167714917 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.143900349 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.165873 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.145730037 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.157363052 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.147045482 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.170155438 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.146353677 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.162411138 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.138929175 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.165045639 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.14997838 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.167954808 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.146780064 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.165648427 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.145682568 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.159272762 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.147935989 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.169007598 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.144143284 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.17076071 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.143835394 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.166773842 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.14145649 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.170537293 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.145958722 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.159027335 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.13980932 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.162017323 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.151159794 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.158890533 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.149839252 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.168889602 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.142961447 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.163560337 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.149786762 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.162035092 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.147082758 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.169770636 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.143482577 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.174392694 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.148168936 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.16382789 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.150210939 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.169670283 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.140829015 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.163143244 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.144699016 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.17210638 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.145360726 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.170734354 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.144492931 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.171337139 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.149035864 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.169887449 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.150569229 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.170653164 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.139122165 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.17121978 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.148360929 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.167280163 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.145047598 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.164251334 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.13984617 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.164877502 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.153248671 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.163068514 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.15396029 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.170327994 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.144568874 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.162960363 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.151966439 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.164075607 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.152991611 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.162287245 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.147409792 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.161427207 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.148268984 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.164065562 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.152750601 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.162238249 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.141321786 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.171086692 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.152318319 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.171135017 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.149297071 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.171757417 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.14047955 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.159760665 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.149726978 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.164140738 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.15618677 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.169462365 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.144632208 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.164810315 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.149470266 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.167649853 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.154361522 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.161231726 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.143757167 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.167063218 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.148659656 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.165818527 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.141898733 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.170315083 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.14542645 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.168238746 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.146360005 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.161963597 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.147031255 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.174050706 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.14598033 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.163689125 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.145816524 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.173688305 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.147105208 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.162700503 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.142603139 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.172255256 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.150146523 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.174929816 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.144885046 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.167576105 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.145970704 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.170074487 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.154459461 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.165743041 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.147315492 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.165427742 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152535149 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.172622616 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.140511668 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.164749605 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.17653402 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.152244867 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.168252469 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.152250611 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.165874018 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.154099024 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.174239151 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.150711429 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.160965951 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.143188018 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.165415588 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.142074525 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.149836103 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.172266851 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.166117572 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.145592194 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.172240084 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.152017808 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.169798893 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.149963179 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.141899731 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.174746231 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.145590904 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.169829788 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.161736382 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.141945119 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.150180866 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.172903716 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.146976858 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.168114447 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.149443501 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.170721087 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.143882531 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.166547273 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.150757649 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.172063152 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.153437238 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.167117978 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.146414216 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.170733815 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.159078409 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.170813326 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.146287226 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.173601334 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.174534407 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.14941342 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.168086795 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.151243976 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.173555325 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.151034848 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.173374517 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.146175499 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.167341267 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.15654783 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.17515513 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.157622964 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.16747977 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.14262799 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.172013979 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.146320242 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.162199421 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.151433837 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.175502404 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.155360424 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.167682094 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.146564664 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.176882551 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.15294807 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.168198702 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.146875617 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.166870522 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.153822527 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.166741644 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.152936677 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.165865419 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.156535326 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.176325689 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.154349426 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.177359954 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.143969843 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.173568384 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.151474825 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.176758675 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.150656685 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.163127641 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.144416809 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.171417112 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.155825959 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.175127004 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.153748238 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.17376192 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.153530061 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.169160837 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.148900294 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.168113156 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.155999882 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.173498307 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.15108485 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.169878184 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.148464884 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.169856994 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.151889987 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.174490779 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.156781539 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.170513163 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.159506386 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.176294164 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.14901451 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.166885545 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.149624886 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.172995784 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.149989059 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.175017842 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.14686302 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.163543645 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1558889 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.176557983 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.149698319 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.177826394 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.156217757 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.168154751 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.152921685 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.177668409 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.154246761 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.171531931 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.151021508 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.174029724 seconds)
  done (took 94.041511027 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.198487925 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.179325741 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.151884511 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.17200773 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.168473771 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.174896365 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.152308682 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.172868829 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.153959269 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.181665392 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.152871621 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.172705334 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.166378189 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.191987392 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.18976817 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.161922566 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.17159353 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.153932453 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.171753524 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.15427788 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.186793003 seconds)
  done (took 4.422510409 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.153600566 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.152740715 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.171710716 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.151901021 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.171906162 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.152794067 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.17163593 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.152650813 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.172890233 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153256852 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.171405117 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.152129251 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.172021761 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.152075847 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.171609416 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.152752841 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.17323435 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.152728287 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.151998785 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.172145084 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.152546203 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.172461736 seconds)
  done (took 4.396526278 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.176027823 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.155161395 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.169974275 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.152828744 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.175562417 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.15273404 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.1774942 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.153933239 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.180866264 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.149123144 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.164201163 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.148456431 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.173573055 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.153235061 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.167651924 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.153282405 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.183121122 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.156266793 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.18044476 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.153730637 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.164509586 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.152775124 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.173512593 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.145586682 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.178696983 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.15865443 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.177677314 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.156404557 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.165271611 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.156658473 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.174373584 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.148438182 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.165391724 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.145144561 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.143843071 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.177719038 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.156011961 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.175240192 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.154021618 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.166726098 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.155016053 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.178090891 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.146930278 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.173967996 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.154713766 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.168770462 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.156844445 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.173715844 seconds)
  done (took 8.671701863 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.184213779 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.210506092 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.156939334 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.203837763 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.189977557 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.163769231 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.17843331 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.182632047 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.178253024 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.157489746 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.18987329 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.190897968 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.159796472 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.182404983 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.160204084 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.177616863 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.160993859 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.178310126 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.162322049 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.176708473 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.162089804 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.180070202 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.168509918 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.18798538 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.181081361 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.15871616 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.177729728 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.16223342 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.186740198 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.163376745 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.182818285 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.163174196 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.188703779 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.158161825 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.17908445 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.159036577 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.189276847 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.179336094 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.16010695 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.178040873 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.15969823 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.181248962 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.160741546 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.190327611 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.159739726 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.180454874 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.158643155 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.17538125 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.167414071 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.17967142 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.184115042 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.168915658 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.180472653 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.160720786 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.181739809 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.169307583 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.18061035 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.158538778 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.18001977 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.167569158 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.176599363 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.160702676 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.188664641 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.180174965 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.16406591 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.19090142 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.16119695 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.180056693 seconds)
  done (took 12.795833389 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.18783945 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.18372596 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.170146255 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.190682781 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.162815361 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.182945968 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.162897698 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.18306026 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.183391756 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.166291074 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.183129442 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.292611778 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.165014175 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.189152516 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.163557592 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.1848124 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.162944833 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.183783776 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.163019487 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.185488124 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.183681677 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.170394943 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.182653951 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.171994455 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.434624789 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.160247587 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.182765201 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.185083017 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.172381317 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.183255627 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.173590655 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.183477208 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.163413662 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.190313392 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.192616349 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.164270814 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.178543106 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.163049904 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.182327575 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.163370208 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.17975706 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.171114479 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.184079709 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.160663673 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.183597527 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.162104296 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.191569496 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.193866378 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.167312842 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.18707039 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.162230205 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.190184084 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.18394325 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.161905252 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.191707317 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.176607364 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.190840731 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.190037017 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.162108233 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.190309874 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.170891261 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.1972034 seconds)
  done (took 12.245143501 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.157075655 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.158056213 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.177525684 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.15640357 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.177506599 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.157770755 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.178202531 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.156953837 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.17709993 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.157603977 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.17689148 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.157391822 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.177556229 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.156990615 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.178254218 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.15793008 seconds)
  done (took 3.534725167 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.174524358 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.193804549 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.258159298 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.159994367 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.181614143 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.164970032 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.179875704 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.16015402 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.177435906 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.163464784 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.183270615 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.160503536 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.195468358 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.159475514 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.178801314 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.161140972 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.179060229 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.162739944 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.178878605 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.260225705 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.16189618 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.18276813 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.160586891 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.183837017 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.16026869 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.184995083 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.167240044 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.179662881 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.162067384 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.18019494 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.160083653 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.185787313 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.157586477 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.184291666 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.161062515 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.181397427 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.158258742 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.180604688 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.16166484 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.180127174 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.160777276 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.181571755 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.159171825 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.182671172 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.157848153 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.181438483 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.157900076 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.184715498 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.16088279 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.183705803 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.15971635 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.185840429 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.163326832 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.18758481 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.1670222 seconds)
  done (took 10.521559507 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.169911126 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.183124882 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.171014461 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.179455055 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.160036246 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.181741631 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.160651072 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.183193298 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.161106838 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.179417668 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.160427608 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.182311412 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.160814452 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.182213095 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.160788625 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.183699379 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.158449387 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.1835216 seconds)
  done (took 3.988579689 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.158721969 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.159500865 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.179397556 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.158036314 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.181023166 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.15857345 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.179465704 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.159027787 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.180998253 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.157308082 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.179448942 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.159586823 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.180317556 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.158057396 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.179155656 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.157998017 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.180672312 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.159443708 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.157979403 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.180136576 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.159104832 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.179874269 seconds)
  done (took 4.589524071 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.170996538 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.283259942 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.189157801 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.294717625 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.15638585 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.179790039 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.187898414 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.157214366 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.194871708 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.156021092 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.177381832 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.156728887 seconds)
  done (took 3.197535081 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.18734582 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.218773951 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.160923125 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.183151829 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169105586 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188575336 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.165128551 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.18772311 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17339107 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.196664479 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187866957 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.173889355 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195021584 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172639618 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.189578973 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191736447 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166478843 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188027067 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.161210789 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201903236 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165237611 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195672233 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165991785 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.186561644 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.188088197 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.173780562 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194190009 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.176652659 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187538478 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174140414 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19160522 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187753821 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.173942356 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.199092354 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.162620157 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19478621 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.165709127 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201855155 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193187972 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.173353102 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.185122126 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170313098 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195621639 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.17143955 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195717809 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189366985 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171220716 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.187790802 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166592158 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.208190384 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192680465 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.173838183 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192060223 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17376772 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195461965 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.20689748 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17664721 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195434665 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169671043 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.198300893 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197415047 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169975906 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196585816 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176765252 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191090762 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195999812 seconds)
  done (took 13.058470055 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.200581784 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.184006222 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166956772 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.199261769 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.175132796 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.188273433 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.188183746 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.167109829 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.187924762 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.162945742 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.22982866 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167624102 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196246723 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196106826 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166998288 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188919734 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.166307261 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195472294 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16353404 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.209267199 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.188437961 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.175025505 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19640336 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.174182016 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.199317422 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192267461 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.168118698 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18888986 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167349411 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.189186176 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.171838843 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.189089673 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.174735245 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.186110041 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.174761154 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188108407 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.189472877 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.172840407 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190238772 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.172580281 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197295917 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.181662107 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189880065 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167897245 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201403804 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.189825542 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.167439934 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.184751065 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167147098 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.186298018 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.177462994 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.200924023 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199964428 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175787866 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.189362225 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167769142 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189420519 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.167814086 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190784295 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171198279 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196928934 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19128621 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.187545439 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.189888734 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167023907 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.197814836 seconds)
  done (took 13.050490138 seconds)
done (took 229.622385706 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.323075953 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.350899797 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.153184028 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.390237243 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.152922743 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.857676725 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.756125883 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.257129432 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.153785873 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.176294528 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.153304515 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.195106409 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.51465758 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.174970121 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.1549842 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.192429662 seconds)
  done (took 31.863194051 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.353650043 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.399673952 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.192839066 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.157087804 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.182774249 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.158963523 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.179363129 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.161086153 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.180305704 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.166754615 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.180851528 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.156654994 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.186074652 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.154549868 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.18005447 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.159140948 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.186342923 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.158495081 seconds)
  done (took 4.414883777 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.179058132 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.323779426 seconds)
  done (took 1.425825832 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.192693938 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.276846427 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.379219154 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.230970332 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.179642972 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.198661432 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.229522366 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.171386783 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.269308521 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.193291206 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.170961149 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.179755805 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.184549599 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.187746364 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.174704076 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.179830447 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.187417547 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.195879224 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.194202657 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.160743235 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.206843013 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.161615343 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.18817438 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.174778923 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.263753883 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.193982511 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.162211607 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.182140413 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.161158002 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.196104499 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.16927356 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.197564311 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.170075954 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.238059098 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.185714941 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.234679616 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.163561706 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.18166712 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.173463587 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.18204301 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.162545093 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.18593337 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.192106358 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.158404685 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.17938916 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.163514589 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.180528668 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.16093862 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.189390673 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.16292404 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.191052649 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.166617317 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.232492476 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.186871906 seconds)
  done (took 11.360438663 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.993717828 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.20604341 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.182412258 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.142148558 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.203633009 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.172640574 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.011229482 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.184906298 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.311854141 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.083155521 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.201015568 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.168830879 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.328170044 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.343704243 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.345595807 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.421071159 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.840570863 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.195449258 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.21376304 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.204037922 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188827963 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.200285294 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1757133 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.50779003 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.160844466 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.183435575 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.189552927 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.170289636 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.239392855 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.183827681 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.164491772 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.262439697 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.359459902 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.275810648 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.186314598 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.158949924 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.182144266 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.250307564 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.332936998 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.280817547 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.253524755 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.180891616 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.159676653 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.187648144 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.174402548 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.180797805 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.247822802 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.256670044 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.25689663 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.165118145 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.192118244 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.169931392 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.186528781 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.24497137 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.158658105 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.447257426 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.42566535 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.183832573 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167989495 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.196245768 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.331431675 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.185781657 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.301107102 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.205965265 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.279519989 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.160305519 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.883349427 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.250404285 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.160149176 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.188538518 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.16597206 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.190019863 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.164457731 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.243818275 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.483758462 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190509707 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.166143817 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.183795556 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.288930821 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.160935624 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.183467603 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.242093279 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.162226194 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.190243064 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.170031275 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.190752336 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.255769103 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.338659824 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.168207676 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.190420116 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.166953092 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.194062357 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.185798821 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.270079867 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.317877039 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.241798159 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.293791032 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.165880985 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.245160853 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.249140278 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.190679071 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.253977865 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.167425324 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.195403785 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1646707 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.312210699 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.221071593 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163688069 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.188895842 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.167476223 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.22448612 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.165125127 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.190806989 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.253139458 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.547327535 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.25058185 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.182886862 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.166553187 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.190938813 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.218821843 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1922102 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.325852339 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.211403283 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.250630898 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.167916691 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.182237651 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.167446385 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.24478627 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.193968803 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.191812093 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.165994928 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.194859138 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.345259978 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.285654501 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.170737523 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.336015522 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.235819648 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.190712797 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.258166988 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.191300384 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.251114701 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1718095 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188793323 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.162671838 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.865527414 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.213495782 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.192148941 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.168546104 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.268272123 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.161444048 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.188811075 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162225159 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.183871101 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.859056533 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.188668831 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.160539758 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.164806135 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.190405022 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.192602435 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.16732081 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.19040817 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.245400027 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.311555708 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.19537083 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.167896892 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.186688075 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.243445829 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.163955684 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.185678751 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.162283571 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.186222556 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.16987854 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.191026799 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.165766557 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.253695722 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.243606985 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.320223974 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.644606957 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.163002024 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186081431 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.306993358 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.187448039 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.39370013 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.193513947 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.301561624 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.249904178 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.184429493 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.432823255 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.250256809 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.268526357 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.16705122 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.256801228 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.185317905 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.168626785 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.245730631 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.187002077 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.169946157 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.244744085 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.19652905 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.170251675 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.351635464 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.162632043 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.311666892 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.18550697 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.256278367 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.163967266 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.19249946 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.395468857 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.187588061 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.174099148 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.246639685 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.19209833 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.164106236 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.949026654 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.188434572 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.17687075 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.194359058 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.300221096 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.247978557 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.19501403 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.170859841 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.195057446 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.247977747 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.295391873 seconds)
  done (took 61.901608698 seconds)
done (took 111.883470204 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.324625987 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.255058349 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.392601816 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.234458799 seconds)
  done (took 2.231172048 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.341714478 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.201608383 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.295957066 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.193364333 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.304260581 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.159182784 seconds)
  done (took 2.473482014 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.234890627 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226947094 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229042963 seconds)
  done (took 1.674019075 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.273123172 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.268054465 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.411274899 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324015751 seconds)
  done (took 2.324647851 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.341018803 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.178581433 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.215327106 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.28648141 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.306218375 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.268379798 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.210600684 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.236966731 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.191968349 seconds)
  done (took 3.249433443 seconds)
done (took 12.935858317 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.205100235 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.217218426 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.182036642 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.199487129 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.192923825 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.218347314 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.19048254 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.213169117 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.18988304 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.200567227 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.189503393 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.196248212 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.303624127 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.215454261 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.172548242 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.215247455 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.173203612 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.223411289 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.191811261 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.197034846 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.192797913 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.197200876 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.17309606 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.204215396 seconds)
  done (took 5.82732551 seconds)
done (took 6.81540425 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.309477784 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.150702066 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.172698583 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.197143751 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.287556974 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.179328603 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.213584469 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.173553487 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.207607138 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.173369721 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.18551426 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.186377996 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.196359969 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.301152395 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.202061109 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.165540347 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.189179703 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.183566 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.230738555 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.188862173 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.288783802 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.190592128 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.183104187 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.188423903 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.289818429 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.166536889 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.196953157 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.173960973 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.20984388 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.172579229 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.196542145 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.163929615 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.211707744 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.187490752 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.186889136 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.17322128 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.189426674 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.133246985 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.198078622 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.175227127 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.209565239 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.17462802 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.197873253 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.164373719 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.197891335 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.173502746 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.188473719 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.176557325 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.186246497 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.173377624 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.19066116 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.189415234 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.197118999 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.16279102 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.187009867 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.166027127 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.207868508 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.163409962 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.211023783 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.164809449 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.188791565 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.163975917 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.198843709 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.164505196 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.197879507 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.164480308 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.199403242 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.174327888 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.1978219 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.166981621 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.188172675 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.173298351 seconds)
done (took 14.825469325 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.172552464 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.233306491 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.307262328 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.308814421 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.191438363 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.207232832 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.205013658 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.187205732 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.201777779 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.182054811 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.226520007 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.197231456 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.306423783 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.206377073 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.207054137 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.17555416 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.201041364 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.170823549 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.304332133 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.214905593 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.187773751 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.205233516 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.190274337 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.206304002 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.194039213 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.20032408 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.198146406 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.176260352 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.191728584 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.176554725 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.215575767 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.168718622 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.196761189 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.187228371 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.210208956 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.179781424 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.204526021 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.202608243 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.17019329 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.194032905 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.175143844 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.209709291 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.169000871 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.207155677 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.177999241 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.208358844 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.177730858 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.205130168 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.170918299 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.200210252 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.170360114 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.218895796 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.18171927 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.211079572 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.181990205 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.204667485 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.206380449 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.182328258 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.19869569 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.181298521 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.193774784 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.176931487 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.195232463 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.18912186 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.197257938 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.181825319 seconds)
  done (took 14.22768416 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.191101654 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.225332178 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.179056321 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.204853581 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.175031222 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.186972264 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.162469434 seconds)
  done (took 2.342113971 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.169027083 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.321925141 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.31017124 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.312618713 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.32925314 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.322087024 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.18730699 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.190505869 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.200594209 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.201750287 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.324026311 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.404472865 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.17420043 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.207347035 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.316636208 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.164206375 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.315670579 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.29601272 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.20368503 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.315891768 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.20712493 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.197917307 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.203775072 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.16719181 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.313197734 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.192583601 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.363812041 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.209612519 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.174234756 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.204299263 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.179420425 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.267892941 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.316149744 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.205229073 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.173478838 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.310907048 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.334289759 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.179944258 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.387807349 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.171553048 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.304688595 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.206675553 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.180995546 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.207001112 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.181394245 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.304882324 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.212583642 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.181412333 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.206637565 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.328938735 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.202237778 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.321136228 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.179181517 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.207365075 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.177416644 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.209299437 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.188645987 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.20759406 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.328974973 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.20984032 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.313838202 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.314695953 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.311605426 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.318245189 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.217385114 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.321400684 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.299740645 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.180391012 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.314103973 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.208302467 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.318817726 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.207606664 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.178263822 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.307818891 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.209980268 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.319659458 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.319689241 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.178480205 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.206637496 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.17121187 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.204748932 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.167686541 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.332440785 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.180818464 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.208425641 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.184924679 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.207041925 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.181505906 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.309843445 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.216637242 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.181715327 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.206051789 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.212833968 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.181204449 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210903163 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.322080691 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.177745314 seconds)
  done (took 24.502867169 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.172904503 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.168653358 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.198795743 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.193326336 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.168172555 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.168387766 seconds)
  done (took 2.126299417 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.208807185 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.207456037 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.191580037 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.209061585 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.230831557 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.310212696 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.317071245 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.203071925 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.228377948 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.193274254 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.314966182 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.3152174 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.314020019 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.213603987 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.317030663 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.184540064 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.31863038 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.208674722 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.190227351 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.206771201 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.209013804 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.185726228 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.206265731 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.303220683 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.184008456 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.210084589 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.176398964 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.222026747 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.190834102 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.201993183 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.187159533 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.208523006 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.175122776 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.20152715 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.319346138 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.201641223 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.18035811 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.213147443 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.18520213 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.209455242 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.318465865 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.181116096 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.21691391 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.185509166 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.20408218 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.175206488 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.210804474 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.176512919 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.34506907 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.185741896 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.212599437 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.183520756 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.210757843 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.185852504 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.201716473 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.178107331 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.21287157 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.320165844 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.186676188 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.202258562 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.183259106 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.210743896 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.203542761 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.189048048 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.210414093 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.186330715 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.201742654 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.1858741 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.209443631 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.185695712 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.212726944 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.184051434 seconds)
  done (took 16.767414441 seconds)
done (took 60.972901855 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.682738176 seconds)
  done (took 2.736922322 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.239963544 seconds)
  done (took 2.294050765 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.797845643 seconds)
  done (took 18.891245792 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.488974523 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.40792096 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.078204909 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.239203821 seconds)
  done (took 3.273799332 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.147812644 seconds)
  done (took 2.221732201 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.462527475 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.340910959 seconds)
  done (took 1.868243332 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.806137773 seconds)
  done (took 1.883252012 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.844700269 seconds)
  done (took 2.909176357 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.360855627 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.282640551 seconds)
  done (took 1.722569436 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.710508155 seconds)
  done (took 1.794488755 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.361682799 seconds)
  done (took 14.445364563 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.318240626 seconds)
  done (took 1.403395993 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.356498649 seconds)
  done (took 1.444281242 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.5857556 seconds)
  done (took 4.674481156 seconds)
done (took 62.633905976 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.186192125 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.21335486 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.185827632 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.21038477 seconds)
  done (took 1.868833105 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.189570525 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.209365899 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.187805566 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.208346616 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.187982416 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.209717121 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.181912985 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.21141088 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.181006522 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.210298862 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.183038895 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.208974979 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.186636303 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.207451148 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.180640212 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.211416165 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.185660134 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.210135403 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.185162218 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.211122273 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.182514836 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.21018744 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.185981933 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.213314039 seconds)
  done (took 5.823731767 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.182736157 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.174032281 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.202533633 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.173768127 seconds)
  done (took 1.823930659 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.198544906 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.222787571 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.195855629 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.219554016 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.198223689 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.222989885 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.184635355 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.20720446 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.183036848 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.219399117 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.198245501 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.224914731 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.195999626 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.213762863 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.221453789 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.178174645 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.186452122 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.222251636 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.218080324 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.193834607 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.217858356 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.191598854 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.209242429 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.193267054 seconds)
  done (took 6.014446228 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.2618247 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.221279294 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.209155297 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.255079723 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.238081536 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.181906594 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.236116655 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.189219899 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.214387351 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.190585923 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.210412375 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.227883469 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.214255544 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.186054631 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.209477268 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.215753098 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.191423019 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.213346452 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.226151518 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.21298305 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.188711598 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.221636049 seconds)
  done (took 5.816090096 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.335110718 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.174521983 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.201870963 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.172493019 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.214619548 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.177772591 seconds)
  done (took 2.375974747 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.176936761 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.168970419 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.194909889 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.169451889 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.198769238 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.170367224 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.19495622 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.169599907 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.194961358 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.171068296 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.195209099 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.168201008 seconds)
  done (took 3.27921694 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272797209 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21430129 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.347194025 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.460653559 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252842161 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.252617781 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.370962045 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224330684 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.271523005 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231271952 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275736813 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227742111 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246998705 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283647169 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20763921 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.240256284 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266997864 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.303054782 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208792325 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310859387 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252531042 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.271294262 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.285256811 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213041518 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.233324898 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254810809 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.187512318 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.220912342 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233078854 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256346971 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268688653 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244803387 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207063962 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278905811 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318036767 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271111551 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.388804027 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197713959 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.254261983 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.286185071 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.328105075 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23679919 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284630662 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21846571 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224022752 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28736906 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215470741 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.279601451 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.22881956 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210491773 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274832851 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274509478 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.267404682 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204330751 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.392079844 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226307446 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.236727306 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242907432 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283452139 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298834526 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276247402 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.218424229 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.262880592 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259900676 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311027089 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.235554651 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.259445166 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192827897 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257986528 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.305361838 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279342672 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254607081 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.285689824 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196668744 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267933851 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.262846929 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220543461 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.3045398 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269734768 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.217479305 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219264727 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230652905 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194293125 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.284041023 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217209733 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.312715112 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19762776 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.267501882 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273064545 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217349244 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.257271896 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25658481 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227326177 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242963182 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.153886492 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237866157 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.253369726 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224414416 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223041951 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.245647637 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205889897 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.221971139 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21829395 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.217398152 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266562956 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.187709049 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254166835 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268892771 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.198288964 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275830302 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.243972814 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.230261811 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262663411 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294503566 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227384026 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198650608 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319861418 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268693772 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.232765828 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.238498858 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.296961627 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.233934351 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201225305 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26122671 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289739612 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240049379 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298560679 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206146177 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.230127164 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.192852916 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270679906 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.256074959 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.25732009 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193660647 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.262299253 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286768295 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.193431848 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23454633 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28112912 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20023371 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221073382 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205325347 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232492169 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.238981913 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.217891592 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.233450923 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252383045 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235093392 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.262655417 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252565961 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201516581 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267995442 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227774412 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.268433935 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214753232 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.214551928 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.269999799 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266837462 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.22522189 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27802791 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.226165271 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.301151007 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243317762 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226055989 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.278449467 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195836404 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.217553788 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229246697 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.268821921 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.260140562 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.287262678 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270111097 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.258911185 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.231372593 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245813796 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265632573 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.281506978 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22409389 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.23648747 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27020899 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265666801 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.188325326 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.220027859 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.194856237 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233561548 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197097966 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232091997 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277198359 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231608679 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.2982627 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235099366 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234324809 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.294731333 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.192369455 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257363194 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.275436691 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205735606 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.288201465 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290863994 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277377028 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206597682 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261879789 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.218048866 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200707088 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.231470083 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.257238203 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205543784 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.232620517 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209541736 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.290171692 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266136736 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246826884 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284013584 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259192473 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.269843627 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.219835058 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.25956484 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233826138 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267265321 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.282439136 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20009224 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.256241459 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.29288271 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210596184 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288542464 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267964984 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280097907 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291793162 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.233919692 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227871474 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241123646 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22816064 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235435806 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.258043547 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21018421 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227908562 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215037536 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.233717532 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23795566 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283284737 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211987992 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273036012 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.251967209 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268736114 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19442078 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238799064 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.273001828 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213912816 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.188195969 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234391627 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288775989 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248331986 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249553798 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239019327 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.227403601 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.409029661 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24841665 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.269958877 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235041922 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207792563 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272072664 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.254069843 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256511642 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.251645329 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238992836 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309121331 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.269788663 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.207020212 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227888576 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214745392 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247668672 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.224557332 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.220519246 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.261723041 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.242486399 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288011088 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205689938 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274062113 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2772366 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.214122453 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.245894871 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237230751 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32874736 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241780918 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270005464 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.26340987 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.262084811 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250935265 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222651562 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195513024 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.230858769 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.282916766 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198657172 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278530463 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.260676569 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275271563 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271865971 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26090672 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208389365 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.226051127 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236881008 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247284326 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278195155 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230972545 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.20591125 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285190714 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.181986833 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22953282 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.257805493 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.384013726 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216406256 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267061171 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.161345733 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.382140241 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224197751 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201559777 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.256769705 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268578356 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.202210327 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.280297271 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272762707 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209376589 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.259015188 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235022323 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.277915621 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247517972 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266127798 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273576097 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.244849637 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.229382434 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255444545 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272066044 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24525569 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.215971892 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258499773 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297689571 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.244485044 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.231263549 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269062908 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240187498 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.270368758 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271560391 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.238147128 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2512806 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22697202 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266030201 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206932085 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223768467 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261484499 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.231272615 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225919839 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273524916 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273040124 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200359635 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227691658 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21640139 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266921657 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239609585 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.199749467 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284196612 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.228335252 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253248987 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310913405 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229000861 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.272059991 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21205332 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229236433 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208770558 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243567572 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231937243 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.245327815 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272525015 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.200266998 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273504334 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265336789 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265098442 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224015434 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241740544 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.366617086 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.19753576 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297092488 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.250407651 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297050877 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218026137 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277783752 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271774129 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218966038 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264887288 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246294736 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.323328881 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235248135 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.26913983 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.231098171 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212915731 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238479878 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.203513925 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.251786703 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270336086 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213348272 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.236300914 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.267444303 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214921871 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.245555722 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242436846 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27283762 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.252117127 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287976205 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.28635225 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208730919 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27700543 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275057508 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22954757 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.2341935 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272822576 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.246101136 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2214145 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.233446234 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.207269737 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316542164 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.225364425 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259691053 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24607387 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.270409602 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275370366 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.2047434 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279364789 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24084858 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279307733 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19690703 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.249627065 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.270844859 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204041934 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.227309131 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.245625934 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260991083 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.268100429 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212151147 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.275798186 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295595141 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.195239356 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234134089 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.385761407 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230608767 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.292824027 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.220244429 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20804967 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246748321 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259559156 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.235629102 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272920721 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.230468521 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199983245 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.245615426 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.217556424 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.219630438 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.274189082 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253272297 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256975787 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287154717 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.204940526 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.356050117 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.243030404 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242874462 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.201762914 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.199230251 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241118598 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236958457 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21180571 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.277666762 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315996577 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.266801581 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.217779555 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235584347 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.228226504 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201134161 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.262149429 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221793106 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270896167 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249169275 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.160589966 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242425393 seconds)
  done (took 120.925405089 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26555583 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.230852078 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.244784784 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.29755634 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271143382 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.368846903 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.308400423 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.322775423 seconds)
  done (took 3.529812392 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.192556892 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.234813156 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.247147182 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.216236244 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.180134677 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.5600805 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.23815955 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.219870108 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.231235579 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.223547888 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.207641894 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.636096542 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.220032825 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.218725464 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.21722888 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.177801413 seconds)
  done (took 5.432258437 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.412045138 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.735068066 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.293279555 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.413568207 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.373145448 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.294409573 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.935513561 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.285596047 seconds)
  done (took 13.966531291 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.24472106 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.273217111 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.46691868 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.438569034 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.286985211 seconds)
  done (took 2.938550916 seconds)
done (took 174.870715172 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.195691333 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.225629619 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.195201531 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.22873493 seconds)
  done (took 2.059891333 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.249156384 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.148605817 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.18168246 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.147800916 seconds)
  done (took 1.950574569 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.464725628 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.148251926 seconds)
  done (took 1.863848315 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.215963488 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.23458521 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.205856071 seconds)
  done (took 1.89546985 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.207371778 seconds)
  done (took 1.441077572 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.192066505 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.190511386 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.374474597 seconds)
  done (took 1.992727549 seconds)
done (took 12.43232072 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.215536659 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.021914779 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.648450388 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.204081029 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.818475094 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.470748523 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.529858594 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.24849553 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.303611585 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.180946929 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.243105648 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.761223106 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.516791163 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.947380753 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.503608153 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.950404357 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.795221615 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.181417277 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.218960443 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.182813233 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.5122395 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.180967125 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.212008856 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.184165239 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.790977915 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.488331757 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.210506689 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.958770838 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.210417379 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.192178434 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.500354136 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.182375096 seconds)
  done (took 23.785542078 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.185648194 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.270606356 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.236456791 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.215112784 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.190579218 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.213644292 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.193944811 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.225202111 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.312752536 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.181789175 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.235456459 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.181432598 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.219924469 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.183592193 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.236576403 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.183214403 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.215673199 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184695954 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.219318848 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.185298291 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.232802093 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.182072722 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.213938895 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.184320663 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.212367365 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.23130953 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.182012589 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.224231926 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.182049843 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.222565546 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.186826567 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.213182442 seconds)
  done (took 7.985016663 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.22385365 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.280878341 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.238538824 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.251380577 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.269290272 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.18521352 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.299909042 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.252669466 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.287623962 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.214324719 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.205890724 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.212959456 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.254725701 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.183419762 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.238930451 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.182441105 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.216219416 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.183283244 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.221077721 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.184886295 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.235129652 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.18224388 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.216137943 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.183567231 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.214972175 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.203276785 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.213128928 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.195766868 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.213261638 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.193868641 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.219128892 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.215080789 seconds)
  done (took 8.315235928 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.199840709 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.229343526 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.205550837 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.237608246 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.192122158 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.22831768 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.196199828 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.224112416 seconds)
  done (took 2.957915049 seconds)
done (took 44.277574144 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.206981973 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.231668459 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.203847414 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.23053663 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.340985756 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.190029938 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.233009248 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.190421867 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.231168714 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.204518492 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.214286535 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.191527482 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.235144791 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.193954348 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.343521633 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.232526402 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.347539441 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.344665049 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.192664898 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.230086762 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.193590454 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.347612861 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.229892474 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.191664199 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.324509309 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.21999351 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.335233762 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.195674722 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.226163853 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.18301573 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.345844748 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.226909596 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.192791469 seconds)
  done (took 9.241020272 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.296510404 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.227062012 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.19325116 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.223727769 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.194317941 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.222646235 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.331124554 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.70333144 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.224186714 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.19182765 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.224742366 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.313059887 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.197189997 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.220146544 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.193059548 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.168379651 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.331389671 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.22698637 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.184849446 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.152760997 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.219609945 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.193063649 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.341347479 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.221102377 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.193381819 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.223723918 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.193128049 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.230576963 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.194870213 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.226031818 seconds)
  done (took 8.529668236 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.199944461 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.236953726 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.211591852 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.293105459 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.22151101 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.237307092 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.209539977 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.23669602 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.215154265 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.218146331 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.203784803 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.25473754 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.204826449 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.229590391 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.187186892 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.233519006 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.203577795 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.219136034 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.196814123 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.236149904 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.238505681 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.202937237 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.241651627 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.198444417 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.219346853 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.195023125 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.230555444 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.197465937 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.229571416 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.202112464 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.221481784 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.189631824 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.222414786 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.22150173 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.221771559 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.201159139 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.238719958 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.200940562 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.233081763 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.220847947 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.222564853 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.189820594 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.244875202 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.244927439 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.220927041 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.199508792 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.219978749 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.204337262 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.217715298 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.206311691 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.260882683 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.22220464 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.207862437 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.220414927 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.18534432 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.228555091 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.187606584 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.22395386 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.202340283 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.223740089 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.207916957 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.228225952 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.199097617 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.223389835 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.19921388 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.220185529 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.187366577 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.225219778 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.214337563 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.229550082 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.224389651 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.2213995 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.200186685 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.234766448 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.199608092 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.233793132 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.187149785 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.232979463 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.198841153 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.225643649 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.200920999 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.225144176 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.18933179 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.239004569 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.20826125 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.236003197 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.200209486 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.232246889 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.1910128 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.223297249 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.207541439 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.223049406 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.191906747 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.234335609 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.189034054 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.225425002 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.198202916 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.230251954 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.187452308 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.247272053 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.19180105 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.221988594 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.213187531 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.225757677 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.191872631 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.230842962 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.229774661 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.221583511 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.197628241 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.232369787 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.189093109 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.230884125 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.190653727 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.220778983 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.20497607 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.2381351 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.196378985 seconds)
  done (took 26.585229302 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.442965482 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.43475734 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.291852569 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.516183926 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.20287368 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.389421859 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.433564989 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.43741665 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.225845937 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.223556407 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.278877709 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.434807209 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.190346414 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.251503495 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.438332538 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.517148025 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.218919022 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.262459788 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.259159912 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.203055688 seconds)
  done (took 7.951830383 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.201769397 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.256596713 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.211941997 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.240204973 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.199465496 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.238438489 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.189570506 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.242914947 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.200764256 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.230164934 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.192883466 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.229575677 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.20208936 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.235475182 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.203480166 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.240779727 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.197022159 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.226684553 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.211580758 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.226119914 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.163518853 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.247212516 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.198729383 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.243197932 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.207937567 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.23201146 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.188290161 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.22581518 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.197019104 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.229889137 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.193964333 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.229293081 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.196858027 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.166724757 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.233768594 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.206003564 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.227216423 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.193427508 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.226294559 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.193490019 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.234854823 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.202612202 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.229720132 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.160628023 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.24157091 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.171094655 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.204613044 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.235036393 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.167554583 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.243470757 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.202458079 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.237133968 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.198543467 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.243508214 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.198237884 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.238853893 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.2016068 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.236551519 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.195489425 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.221485517 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.190100505 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.223809798 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.198647126 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.236510839 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.20154187 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.230922437 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.200982975 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.222749002 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.195969064 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.227014033 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.192508022 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.237083145 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.211060435 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.233827812 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.197500091 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.233657939 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.199896538 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.156870169 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.230161705 seconds)
  done (took 18.175995852 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.218163998 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.234890351 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.209383947 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.256590847 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.202561723 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.229398992 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.200433701 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.243504928 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.20421534 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.242495799 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.204747786 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.237837717 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.212253899 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.235222342 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.201146139 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.239043527 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.202627245 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.262392154 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.202939325 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.250907655 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.206467727 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.229116549 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.204617381 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.235836896 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.219883739 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.236080615 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.25123449 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.203317912 seconds)
  done (took 7.593317072 seconds)
done (took 79.32526164 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.492237967 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.632821396 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.406680221 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.411242787 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.402949212 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.403376744 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.40165693 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.411068501 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.912929335 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.37991201 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.407645789 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.404090171 seconds)
done (took 31.01820498 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.457711485 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.114254414 seconds)
    (2/2) benchmarking "String"...
    done (took 2.136152458 seconds)
  done (took 5.560509127 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.092205853 seconds)
    (2/2) benchmarking "String"...
    done (took 2.10920463 seconds)
  done (took 5.497822855 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.399065907 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.393250532 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.508635064 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.395497921 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.392923544 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.39743378 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.399001576 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.396705272 seconds)
  done (took 17.179680603 seconds)
done (took 34.392415877 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.446751018 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.697918805 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.681102017 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.386467449 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.397372981 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.393892274 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.399034736 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.461197022 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.404357459 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.391021174 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.820489153 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.707839278 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.397759501 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.83614594 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.387588255 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.403885864 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.409399074 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.760651112 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.398303672 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.39734537 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.378834565 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.380217654 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.398262925 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.413952939 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.407904924 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.40824581 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.436246265 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.402759132 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.709428303 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.419940946 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.381807574 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.415234501 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.438786477 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.414724558 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.404464808 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.401885554 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.75912657 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.409545758 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.381751919 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.396951686 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.735304768 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.412002643 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.396674169 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.397046361 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.391844919 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.477058662 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.383972146 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.511677738 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.424318165 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.405702784 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.456567248 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.830411402 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.39884529 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.401864037 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.410609172 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.737712921 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.426832273 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.517324463 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.436715373 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.402804083 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.397098633 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.396627051 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.442272749 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.404832278 seconds)
  done (took 157.431893659 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.400551053 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.400424271 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.40074681 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.402858573 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.401126321 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.404177142 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.400618625 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.400844875 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.401518293 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.427538115 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.400001428 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.398371168 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.401621429 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.4128136 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.408626601 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.421628201 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.398066907 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.398438418 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.427257114 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.400751231 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.41549085 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.402984183 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.400645603 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.399833189 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.416799074 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.491293483 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.413127137 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.424238045 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.411712411 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.402111178 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.410891573 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.406185823 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.075039723 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.269721809 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.410551435 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.445803118 seconds)
  done (took 87.606380328 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.400902094 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.402449747 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.404456006 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.439672767 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.403111344 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.035140299 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.035716015 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.471429089 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.591892548 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.403733521 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.97267709 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.676453866 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.400846312 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.497970004 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.414106335 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.406458415 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.49991076 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.42826929 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.404683127 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.402884885 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.022039516 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.41305809 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.613643536 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.587921963 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.402787874 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.441863183 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.804982901 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.400769375 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.438670043 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.746221146 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.438759838 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.401435143 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.828002077 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.763057324 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.51722376 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.404897547 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.440756847 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.404868984 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.696065106 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.402718368 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.403675843 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.409817636 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.409585723 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.083379282 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.404220424 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.038597769 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.408568236 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.416680861 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.404864442 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.406339184 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.9327275 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.141632093 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.403466749 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.407291443 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.407938109 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.40571237 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.404078389 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.442902748 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.867586138 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.321045322 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.403286682 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.409456137 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.441862905 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.408848188 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.674758094 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.404043779 seconds)
    (67/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.406485496 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.40724152 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.547474056 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.466496385 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.022332392 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.403075255 seconds)
    (73/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.081076846 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.508833643 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.527926682 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.407175271 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.404960881 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.409060415 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.406555903 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.52313261 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.40671304 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.225581551 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.592195416 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.406497304 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.968772804 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.509136983 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.406907447 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.814719183 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.408920313 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.407545654 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.170284876 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.504306369 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.405921466 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.408766018 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.410927214 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.227554811 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.040570075 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.743656157 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.409183733 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.478123266 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.41038258 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.381619468 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.016458522 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.133231687 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.410872757 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.523334444 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.592596553 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.408131837 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.408384327 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.9902754 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.412294138 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.465768571 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.412906717 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.814907917 seconds)
  done (took 403.882618909 seconds)
done (took 650.219611538 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.397493884 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.398665038 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.397767019 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.398164545 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.396930781 seconds)
  done (took 13.29787799 seconds)
done (took 14.605043144 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.413119268 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.414535027 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.415154601 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.171442232 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.415042442 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.416406881 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.414238116 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.416055248 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.416999252 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.419636507 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.14286323 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.417350266 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.414054029 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.308285915 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.161993577 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.415214825 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.254989417 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.417850785 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.41478535 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.729293822 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.421793221 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.478841227 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.69312897 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.455779157 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.720240584 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.748213187 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.422085911 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.603091433 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.466760817 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.435187543 seconds)
  done (took 20.486255748 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.278212092 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.707624115 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.422190558 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.497336184 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.715714932 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.458974838 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.7070628 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.740407381 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.424843477 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.598149879 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.43810491 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.437310653 seconds)
  done (took 20.462254506 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.145327369 seconds)
done (took 91.544721227 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.455253384 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.524213513 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.451116132 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.433089838 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.430746434 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.431874537 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.434549385 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.43079669 seconds)
  done (took 12.902009891 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.430380612 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.429812168 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.433126467 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.430235838 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.431489756 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.431185175 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.431357138 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.431174875 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.43134901 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.432583127 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.430498931 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.431836001 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.432020318 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.432421833 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.432789776 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.431376284 seconds)
  done (took 24.216642408 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.433068335 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.431215721 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.432320954 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.430232066 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.431123666 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.432103931 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.432261855 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.431877627 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.432400949 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.431368553 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.433312891 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.432615222 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.43222464 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.431816184 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.432703671 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.435063216 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.432327126 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.432967094 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.437200881 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.433165648 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.433462185 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.433203045 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.433218687 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.432999642 seconds)
  done (took 35.69764812 seconds)
done (took 74.130528326 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.425552289 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.41282734 seconds)
  done (took 6.151093264 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.492845074 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.489402596 seconds)
  done (took 4.298776505 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.434506073 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.433515296 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.433159631 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.433709696 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.433137937 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.433214117 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.43365583 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.43363 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.43486692 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.434778504 seconds)
  done (took 15.652145536 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.435070046 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.434306305 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.43398342 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.435448824 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.435006033 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.434520546 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.43359724 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.434512312 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.434411149 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.433569725 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.432410683 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.435662269 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.43722487 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.434827432 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.433813682 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.43389424 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.436641794 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.436677084 seconds)
  done (took 27.142005545 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.449412692 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.453036313 seconds)
  done (took 4.220013621 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.565390222 seconds)
    (2/7) benchmarking "second"...
    done (took 1.476849518 seconds)
    (3/7) benchmarking "month"...
    done (took 1.538985739 seconds)
    (4/7) benchmarking "year"...
    done (took 1.533377831 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.478759352 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.45703868 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.476764355 seconds)
  done (took 11.844215436 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.428773338 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.717645051 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.894748857 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.591481812 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.416826115 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.440411413 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.41327481 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.440907872 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.443374479 seconds)
  done (took 16.105783845 seconds)
done (took 86.730162997 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.42489125 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.492790852 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.446728375 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.440945748 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.789900661 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.478256524 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.428323973 seconds)
done (took 17.821675673 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.4069236 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.406145221 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.410131556 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.43074937 seconds)
  done (took 10.971327489 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.423196942 seconds)
    (2/2) benchmarking "read"...
    done (took 1.747676833 seconds)
  done (took 5.487692984 seconds)
done (took 17.779492836 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.440978405 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.438073118 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.438515163 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.439711812 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.439377738 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.439221819 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.440935679 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.439062176 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.439463297 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.439115157 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.439432877 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.439437298 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.443584249 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.439882192 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.43860214 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.439998092 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.440753032 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.438944866 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.438826866 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.438843546 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.441071616 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.441447488 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.442505058 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.439555947 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.442908637 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.441690827 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.440255385 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.442048057 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.440423394 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.443064441 seconds)
  done (took 44.527014561 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.44289728 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.440551769 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.44235991 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.44220778 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.441345683 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.441858127 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.443313388 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.442014125 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.441067817 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.442533387 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.444074523 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.442466438 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.442612754 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.443523534 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.443509461 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.442899768 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.443672556 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.442466797 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.442174675 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.443072003 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.441744194 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.440733266 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.440202018 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.443118389 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.441960314 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.441905018 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.442567209 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.444352139 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.4422103 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.442984797 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.444085072 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.443201438 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.442634129 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.442149792 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.441619267 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.444153664 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.446526868 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.443895995 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.445287521 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.442193103 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.442943157 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.443421143 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.444108728 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.445811588 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.444121074 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.443756592 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.444710342 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.443268851 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.443278609 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.443316335 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.444462701 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.443852217 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.442883801 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.445376516 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.445656666 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.442761713 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.445177143 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.444022495 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.445934408 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.444790607 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.446902576 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.442919755 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.443549884 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.444636965 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.444561546 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.444851142 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.445176533 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.445346648 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.444198923 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.4445861 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.444545669 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.445585587 seconds)
  done (took 105.25322683 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.444401193 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.445875133 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.444449183 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.446106963 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.44378379 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.450887545 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.446537452 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.449383818 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.445145521 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.446079477 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.446022358 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.443541851 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.444227028 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.44733013 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.443997738 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.447153382 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.445887235 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.444370644 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.447231238 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.447653572 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.447934097 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.446377069 seconds)
  done (took 33.140125068 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.448508743 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.447402127 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.447978503 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.450057877 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.449799077 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.446623833 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.448987605 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.449018784 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.448454555 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.449679687 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.449101032 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.448553378 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.448240804 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.448735943 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.44829998 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.451163685 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.447415223 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.449371162 seconds)
  done (took 27.404522219 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.448364484 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.447430388 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.450613887 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.448202807 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.44686782 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.446649732 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.447857396 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.449915176 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.448727043 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.448555627 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.449144984 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.447956031 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.450585403 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.451245442 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.446585935 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.450146459 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.448709754 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.449790015 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.448175807 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.447608674 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.448563519 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.452470803 seconds)
  done (took 33.202960878 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.4504545 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.449031981 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.451578898 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.449692018 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.449669037 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.450678052 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.451923907 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.450936225 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.451827358 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.448908543 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.451404254 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.450057222 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.452812482 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.451645085 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.449946667 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.451174505 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.451682479 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.44794571 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.450340476 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.452045856 seconds)
  done (took 30.344059562 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.452190251 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.451750032 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.452232936 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.455886653 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.452380909 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.454376935 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.452968848 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.453766062 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.454391855 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.45406235 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.453253385 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.453386552 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.453742051 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.454435951 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.454344168 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.456711514 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.45372365 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.454116732 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.452972977 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.454898276 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.453432 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.454833817 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.454208633 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.45335502 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.454208797 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.453496456 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.454240048 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.453522652 seconds)
  done (took 42.038454174 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.470746433 seconds)
    (2/2) benchmarking "in"...
    done (took 1.471835639 seconds)
  done (took 4.275310835 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.451749524 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.455132305 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.453929206 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.452580218 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.453896017 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.454619491 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.453699298 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.455145409 seconds)
  done (took 12.964071169 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.44499522 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.454584656 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.453719413 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.454537883 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.454639741 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.445647581 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.454886244 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.460489565 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.449369253 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.448318029 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.449657053 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.447331905 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.451147704 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.450024281 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.447173941 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.451252939 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.457077115 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.455355655 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.456439919 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.456740736 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.456626187 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.451324303 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.452916945 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.459642344 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.448958798 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.457659026 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.456942416 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.461975626 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.447859503 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.456917457 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.452071158 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.462639323 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.457804393 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.458674906 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.460257266 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.454607649 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.45773571 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.457726663 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.459542004 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.46208786 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.459398054 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.456363852 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.450259767 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.457377936 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.457027143 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.460537992 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.457356351 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.458215748 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.44930197 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.453979568 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.461857103 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.451584398 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.461158486 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.455265436 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.45884631 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.463365511 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.465161786 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.453500878 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.45440269 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.463463472 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.46859081 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.46508082 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.458310812 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.463921157 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.457161627 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.461830538 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.464095845 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.467960818 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.459748803 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.45954157 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.463782055 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.473018503 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.466112407 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.465334133 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.461398473 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.458362541 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.454322634 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.464805975 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.464458976 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.466792838 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.465218794 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.46378048 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.458625268 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.459750881 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.458174396 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.466759787 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.461309248 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.461189567 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.453741147 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.465641481 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.470886879 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.462446925 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.454892502 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.460115457 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.459961962 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.463998059 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.454053591 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.45674667 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.469364121 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.464418831 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.462430888 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.456923054 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.461703123 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.46656046 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.46278705 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.462980782 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.469602283 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.456984522 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.468407664 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.470680744 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.465915633 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.457391734 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.461536804 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.467527274 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.45791368 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.461439342 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.473742659 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.457401845 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.46900501 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.466154738 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.461373963 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.46916618 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.471746453 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.464622352 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.460029823 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.46846539 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.46500012 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.461618354 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.47083123 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.463085334 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.464119957 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.461719304 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.470433329 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.460593898 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.46911088 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.459193446 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.468013593 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.46828335 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.465155239 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.460528239 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.463746266 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.461954546 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.463432969 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.468687895 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.471995935 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.464136564 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.474856694 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.466474945 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.46523302 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.468368122 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.471258939 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.464170986 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.461180772 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.471118552 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.455974533 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.470339743 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.45923086 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.469786913 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.464998939 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.467142504 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.469225956 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.4588446 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.463647038 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.470354689 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.466970276 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.468234091 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.472844991 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.470660352 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.468203397 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.459248387 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.469591116 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.461024656 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.466932645 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.473533469 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.467126668 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.472020792 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.465216024 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.473981431 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.472345813 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.468003753 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.459891636 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.467920478 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.477079558 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.472765029 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.478386889 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.468939371 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.469600749 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.463693936 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.464729546 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.470210916 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.463750843 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.475315336 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.476259618 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.479652704 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.465043842 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.470978218 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.465816825 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.473765412 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.469317707 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.478013214 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.468693947 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.47142396 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.463138817 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.473787029 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.465747029 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.475013131 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.463918051 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.472463813 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.47413202 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.47165859 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.471596694 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.463006596 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.46903807 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.475237271 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.472553899 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.473877338 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.463527291 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.474872334 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.464780647 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.467475793 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.47494287 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.471784749 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.47368435 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.478443579 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.471658766 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.476520469 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.471236074 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.469562268 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.47459203 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.47093468 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.472385987 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.479897095 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.474835491 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.469467866 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.480846348 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.475240569 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.469690976 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.47407814 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.481909486 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.474099729 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.46721294 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.477360126 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.477622556 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.473902842 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.474116425 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.46619302 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.480790565 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.477033144 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.480031203 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.467449085 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.478407549 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.467514453 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.47616745 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.470087041 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.475917784 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.474271388 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.478908643 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.481352825 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.474185107 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.468370677 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.477375468 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.475361082 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.475716209 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.468220577 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.477843233 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.47584482 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.475516021 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.472261066 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.470671463 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.476330134 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.464336785 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.477354421 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.467276412 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.484956617 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.490973095 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.478775627 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.47942862 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.480770757 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.478806497 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.478837896 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.470832966 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.470421407 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.473341544 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.471069123 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.471134192 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.478733912 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.470945533 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.479714495 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.47281108 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.477316091 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.477540766 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.476777269 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.47038299 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.480830696 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.477804102 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.475223595 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.468211663 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.481602709 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.471910945 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.481127413 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.476223887 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.474128363 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.485198122 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.479476991 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.474951038 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.474589102 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.47271006 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.47135165 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.475450935 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.482307541 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.472204292 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.481092517 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.470635713 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.475188226 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.475375164 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.482303111 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.487625893 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.472162631 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.482711913 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.477873948 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.472367059 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.472545779 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.480521131 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.482705671 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.49009541 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.473596779 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.482980966 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.478369376 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.479844727 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.477236488 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.479770154 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.478873607 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.479908284 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.485460867 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.483932161 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.476943553 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.48280744 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.488399129 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.480744246 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.479630738 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.473010775 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.48168216 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.489189454 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.47622429 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.478673001 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.47758297 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.483845102 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.483259185 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.479715401 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.480488466 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.480830223 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.484943936 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.48660363 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.485354926 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.482965845 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.485939614 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.49081805 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.485384572 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.492635168 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.476691146 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.489828862 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.481610003 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.477433091 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.477912115 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.478514716 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.487227864 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.474723523 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.487196833 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.484389995 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.477751844 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.482828079 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.490496934 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.475310441 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.482852171 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.491910719 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.475679276 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.486449323 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.482750127 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.477575283 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.487184866 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.483655503 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.475308865 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.479548312 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.480578486 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.486341808 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.479435532 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.488253519 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.476071622 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.489444838 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.483849391 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.484041009 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.484310757 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.484111488 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.477777659 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.485076887 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.485594328 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.49211894 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.480428783 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.484321792 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.479411954 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.490979396 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.495660602 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.479409605 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.489902737 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.486524567 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.481536015 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.482790036 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.492926201 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.48002564 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.488565871 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.478306272 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.482470897 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.481852012 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.487573229 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.487861402 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.488228978 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.478035887 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.481907587 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.487188665 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.484964464 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.48434825 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.481717736 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.498317829 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.481537126 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.481455039 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.48706311 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.480526042 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.490683962 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.47967261 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.484872534 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.484829163 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.489938092 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.487843438 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.488591972 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.481083793 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.482141493 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.493792899 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.49156797 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.483761487 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.484791815 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.492171086 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.481091532 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.48660249 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.487618999 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.483788553 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.486075793 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.491860411 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.483234143 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.482636304 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.483931183 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.48889397 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.492081064 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.490090997 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.484587193 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.49576559 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.498344622 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.496717525 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.480914508 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.486069138 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.485745224 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.493433283 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.491562173 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.484820513 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.498311915 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.496225897 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.494460214 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.486337702 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.487689785 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.483150012 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.493459309 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.490841088 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.485875827 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.497837555 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.485465117 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.4973599 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.490007707 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.490897201 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.482627187 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.484055327 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.487377092 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.487159041 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.493977365 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.491763666 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.491522757 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.491771427 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.496318517 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.491691823 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.493266514 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.491022081 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.483330288 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.492175382 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.484113394 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.492305404 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.49048384 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.48600498 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.495553541 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.491768934 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.486776469 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.49290401 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.495383293 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.492942602 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.485043155 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.491360884 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.498412346 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.499588532 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.492629542 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.48727985 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.491074644 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.497648027 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.493658014 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.493548877 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.487878008 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.502291371 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.50249338 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.489454939 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.491497232 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.496094253 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.501741348 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.492671409 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.494319425 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.490330604 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.492487297 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.498288445 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.492480197 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.496809243 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.500531477 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.489484109 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.500141294 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.489601493 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.493384033 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.49669264 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.503604486 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.492847208 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.488773095 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.504927098 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.503790589 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.492585239 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.507253756 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.501850925 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.494315854 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.500788886 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.485406978 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.497457279 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.490553143 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.501834496 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.494975448 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.495198994 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.495856989 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.486939291 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.497759944 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.499427279 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.503219365 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.495727263 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.487658693 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.492652378 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.496306808 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.498123963 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.4982971 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.49879873 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.494545213 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.495633703 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.490258681 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.509831329 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.510720246 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.501090903 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.49838369 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.496527315 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.496015174 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.501427543 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.496210843 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.502477282 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.499206891 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.498017157 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.494694436 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.504777889 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.50013421 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.489190823 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.492425914 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.494010259 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.501173755 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.509494568 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.519381338 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.500222355 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.50127915 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.501389787 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.498964391 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.491880646 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.503492776 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.497036106 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.493435038 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.496858105 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.501409572 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.500454568 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.497767675 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.493657215 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.503841254 seconds)
  done (took 881.871889172 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.498942409 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.499048928 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.500571803 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.50029675 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.500692837 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.500125386 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.501048468 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.499438199 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.49907345 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.499551534 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.500615699 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.499461824 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.501086355 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.501919109 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.499623878 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.499636154 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.500273676 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.499809743 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.500182207 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.501516393 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.500933125 seconds)
  done (took 32.875098758 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.501607545 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.501202294 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.50175833 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.500962493 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.500449983 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.502173124 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.502079766 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.50225418 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.500957081 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.50090314 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.501711868 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.501841425 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.502108549 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.501638637 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.501419568 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.501238407 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.501304773 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.502739575 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.503706255 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.503349607 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.503832975 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.50294911 seconds)
  done (took 34.415504943 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.502952617 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.501276696 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.494420314 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.506742361 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.504031916 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.502500273 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.503187315 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.505535246 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.503120061 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.496723781 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.49772056 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.49734231 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.501392587 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.507669973 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.50170639 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.509520432 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.505316087 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.503934738 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.504316581 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.502827703 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.506402802 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.51348964 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.504273895 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.497307111 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.508070728 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.502821897 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.50390969 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.506205816 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.497184708 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.508519296 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.503013589 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.499322175 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.506450115 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.506467393 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.49972532 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.50720647 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.507801744 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.505783431 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.504547976 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.504192425 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.517033868 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.506348717 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.507746244 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.517532476 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.507449305 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.500339598 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.511357789 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.505823663 seconds)
  done (took 73.594822024 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.506019043 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.508312965 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.507187518 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.507670241 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.507852337 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.507949641 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.506064623 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.506625443 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.507648395 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.506305882 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.507554113 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.509938251 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.507446534 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.506151864 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.50842904 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.507345843 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.508266137 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.507606195 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.508040429 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.509998639 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.508801962 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.50812275 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.509846125 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.5085123 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.509703326 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.508654879 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.508923426 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.50908016 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.512241942 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.511478703 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.509186238 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.509568536 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.510438965 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.509461318 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.510739445 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.511267862 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.512284972 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.510639946 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.51193417 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.508606602 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.511009914 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.510547849 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.511043144 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.511269083 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.510502763 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.510953072 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.510738443 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.510579009 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.51155363 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.510650921 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.510914699 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.511223264 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.510057928 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.510272349 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.511295819 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.51044266 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.512249433 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.512857582 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.512540819 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.512778709 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.512262918 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.513149141 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.511682326 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.513147333 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.512067244 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.512446625 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.512084295 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.511611704 seconds)
  done (took 104.055385396 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.51041236 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.51237467 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.512276506 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.513063811 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.509890646 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.511081749 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.512290766 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.513915922 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.51183086 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.512694755 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.5123716 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.513013133 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.514638097 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.513494978 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.513872479 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.513318477 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.514910646 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.513018816 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.514646334 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.51396036 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.514952452 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.514423873 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.513498178 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.514380351 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.514692878 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.511969488 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.51549414 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.513031142 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.513695031 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.514795459 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.513907795 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.514746892 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.514256357 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.514945794 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.517043737 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.51384236 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.515839566 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.515928471 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.515335225 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.514753801 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.513367114 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.515603727 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.516665935 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.515252573 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.515485954 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.516548986 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.516210285 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.516752427 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.515198832 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.515857154 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.516777949 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.515565412 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.5164655 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.517850422 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.515079106 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.517318729 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.517226086 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.516797915 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.51832183 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.518478989 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.51738815 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.518591408 seconds)
  done (took 95.296204588 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.516987537 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.516716542 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.516681908 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.518865075 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.516205093 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.51937983 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.515695258 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.515771902 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.518639303 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.518772369 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.518482776 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.516919739 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.517561307 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.518459264 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.517747065 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.517776143 seconds)
  done (took 25.668334218 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.517931702 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.518820929 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.518477663 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.519257694 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.519174741 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.516318983 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.519064607 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.518588373 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.519200924 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.520211261 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.519425989 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.520756003 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.52060435 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.519854306 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.517057357 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.520948579 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.519653798 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.519325059 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.5215836 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.520515553 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.521439269 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.518446807 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.521825238 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.519594969 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.520133638 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.52006218 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.520262858 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.520492533 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.5190075 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.521793586 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.520313462 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.521106171 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.519224345 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.520949772 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.523377566 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.521011914 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.520393725 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.520644573 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.522546492 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.519802883 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.520884645 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.523530479 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.522356079 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.521580765 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.522838275 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.520838041 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.520578502 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.521693906 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.520973667 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.521478859 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.520625775 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.522183743 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.521737056 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.522214262 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.521636512 seconds)
  done (took 85.015789819 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.521986718 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.524414846 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.522578506 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.521420426 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.52321856 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.521883049 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.521741398 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.520898543 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.521905927 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.521294014 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.522280555 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.524058034 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.524064176 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.519744516 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.523007383 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.523255149 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.522644876 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.525012365 seconds)
  done (took 28.797960872 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.522828367 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.524200763 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.524973701 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.523646647 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.524073728 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.527010197 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.524606471 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.524133208 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.52338633 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.524184329 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.525700629 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.526126097 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.559761603 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.520924896 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.526775843 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.523520002 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.525726889 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.526366971 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.524365063 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.520471421 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.526463199 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.524038555 seconds)
  done (took 34.967252512 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.513112028 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.514037926 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.517810572 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.532014978 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.525979795 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.516229547 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.515920787 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.517201436 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.529627846 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.54048004 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.538080536 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.523929038 seconds)
  done (took 19.680393235 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.525718643 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.525234282 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.523183464 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.524487587 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.525936934 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.521831154 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.524690003 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.526778824 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.523526184 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.526227174 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.526493837 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.525930758 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.525066709 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.526314731 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.527347488 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.524219162 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.526987104 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.525299009 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.527223313 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.527634595 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.52308823 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.526254693 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.523807858 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.529378778 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.524956502 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.527488105 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.527863137 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.524850259 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.528198818 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.527625249 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.52638638 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.526928067 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.52436935 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.526703338 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.524484067 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.529966371 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.528466578 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.524455364 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.52946449 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.527432599 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.527137434 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.52739954 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.530852348 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.526296662 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.52811803 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.529436046 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.526925544 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.531148194 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.52820446 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.526398696 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.529562369 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.530169228 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.531266387 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.528485572 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.527268346 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.528550517 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.529354605 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.531136448 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.532030234 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.530952413 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.530102059 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.529137444 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.529463887 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.529742914 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.531972848 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.532428004 seconds)
  done (took 102.204954687 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.53242949 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.531559435 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.529757537 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.529481415 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.531258823 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.529873807 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.526824161 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.532247177 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.530786594 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.531677851 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.532856141 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.527559464 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.530387582 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.527921925 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.531617784 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.530658892 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.532405765 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.531042484 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.53239791 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.532879846 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.527523203 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.53160981 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.531128594 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.531112672 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.531926353 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.531220809 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.528515968 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.530508765 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.532813273 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.531732108 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.533359631 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.534405511 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.52998231 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.532328633 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.533637106 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.536407481 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.536136703 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.534980638 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.533490318 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.534066163 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.534705207 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.534956248 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.533248629 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.534359099 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.53504578 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.535446022 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.535261598 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.534590345 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.537381675 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.531836436 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.535204894 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.534699391 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.536263182 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.535048042 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.533709842 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.532938636 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.532343343 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.536387149 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.532151505 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.532000197 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.534045468 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.533474763 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.53475657 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.53617215 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.535694487 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.534492349 seconds)
  done (took 102.562780528 seconds)
done (took 1955.47584026 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.520686235 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.518929854 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.524418635 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 11.917180859 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.524200097 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.191104576 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.091786499 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.525748179 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.526586132 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.522042735 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.526949191 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.525687377 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.884047033 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.526728086 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.525462556 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.524070043 seconds)
  done (took 58.78038191 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.556634169 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.533487872 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.664640907 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.530869287 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.557260552 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.742082345 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.593091791 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.532325304 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.734591267 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.535743901 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.536072989 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.55809764 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.529942082 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.534353816 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.549354506 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.744764242 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.823526298 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.532395883 seconds)
  done (took 33.194055922 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.063408026 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.572164653 seconds)
  done (took 6.042143702 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.551563464 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.53337236 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.530941063 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.524339872 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.523058043 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.517649084 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.529431373 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.530097356 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.534327751 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.675227201 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.534430916 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.539902402 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.528989411 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.529370088 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.537898871 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.577601956 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.667415959 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.539456538 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.538860851 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.535668573 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.531999427 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.704446161 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.575572763 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.546231076 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.676431674 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.541037804 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.538643132 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.54338692 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.683814367 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.540878429 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.530873399 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.532128105 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.532131685 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.537809037 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.099090878 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.535262012 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.562754015 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.540941171 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.538600657 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.688249372 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.534954653 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.539712583 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.531829259 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.099478405 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.657549146 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.768350445 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.528463614 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.536066807 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.533981309 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.684620846 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.535025164 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.533174637 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.596386525 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.536602097 seconds)
  done (took 96.992158319 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.537707287 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.526093529 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.712695465 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.552695921 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.525664199 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.525420598 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.545734796 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.866888129 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.577132381 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.529091583 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.875951178 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.223609838 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.533541384 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.593731414 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.577531995 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.575478867 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.528545839 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.525704159 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.525397888 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.527975458 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.129267514 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.530459387 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.547921677 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.683358914 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.572391913 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.132130766 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.529667731 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.529047208 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.542213709 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.527310122 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.178124162 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.5420525 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.59280701 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.530090013 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.848805027 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.980733185 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94165132 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.525931393 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.545012433 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.531653657 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.560937562 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.128800451 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.958300855 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.529440619 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.535015975 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.130820288 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.528252204 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.535919399 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.531270645 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.806681758 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.530696609 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.529500986 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.526621312 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.534843987 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.529625084 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.596454692 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.572141701 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.133109788 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.527776606 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.527744988 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.558464343 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.529847138 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.536539347 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.532816009 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.530301901 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.958150833 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.697682945 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.530068764 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.958574739 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.1767698 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.528103913 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.258784631 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.532008942 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.537182396 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.604742054 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.545531596 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.529743745 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.120982246 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.542509643 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.534040903 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.945165711 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.531496471 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.871009861 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.551719843 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.532659132 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.158822367 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.541160368 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.602274131 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.529653565 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.531141821 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.552881368 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.535672196 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.850443417 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.603253049 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.532752129 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.530291771 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.563824683 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.532202703 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.534395756 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.538201874 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.264619008 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.542561406 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.532179116 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.534138934 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.53501497 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.532536815 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.532876325 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.536993606 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.822758263 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.534990456 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.551252169 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.534448569 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.536274456 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.542709468 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.689134075 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.537405176 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.902583754 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.537529101 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.539222732 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.535530573 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.535039421 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.557620563 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.536240646 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.557212977 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.525445006 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.854564463 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.568296114 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.536454635 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.534256706 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.549937305 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.542543578 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.539918552 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.578661302 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.5363076 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.39009882 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.548569365 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.55510511 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.538272568 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.548614206 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.537028008 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.537695884 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.536908502 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872952011 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.859688464 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.727981509 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.539224202 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.53612811 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.379295973 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.538153947 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.724056292 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.557602982 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.536705244 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.84240725 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.724739383 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.542471304 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.537946473 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.535794149 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.830091749 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.534971829 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.873194793 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.204662495 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.539112262 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.54931462 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.379435459 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.291360738 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.538951786 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.539721194 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.870203621 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.560447008 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.539840865 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.539426648 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.538408252 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.54901284 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.541509612 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.546816125 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.542730353 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.539239867 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.653619694 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.741696214 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.556249894 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.547599169 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.134356708 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.553117689 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.540885952 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.553032057 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.544875596 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.537102951 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.57985348 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.543002861 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.576622774 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.537565763 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.541959909 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.167901646 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.538584103 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.539023717 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.742143587 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.339371368 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.53636261 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.541526091 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.542102267 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.580598233 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.168401287 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.580350157 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.90718156 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.55032378 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.582929006 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.540364669 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.569136782 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.167743146 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.539273268 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.542952628 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.331079773 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.540372742 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.229724804 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.542505526 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.543574639 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.260407085 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.542759047 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.541264095 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.54703091 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.544945633 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.855782533 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.542794672 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.575257393 seconds)
  done (took 545.64940747 seconds)
done (took 742.06238371 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.543523409 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.547807038 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.546644199 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.545937964 seconds)
  done (took 11.604013518 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.557514135 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.554334111 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.560787936 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.55036702 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.561472304 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.548376712 seconds)
  done (took 10.759516699 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.54298706 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.549940396 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.545776791 seconds)
  done (took 9.064229914 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.786464691 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.564738935 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.959590649 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.550580562 seconds)
  done (took 10.287675598 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.558732377 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.560454296 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.555754561 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.558128672 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.559634839 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.561506573 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.55947513 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.560060541 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.563102888 seconds)
  done (took 15.461953196 seconds)
done (took 58.597609321 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.624957275 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.628810734 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.564268138 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.584531306 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.682115904 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.628893112 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.63194224 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.633918493 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.634379791 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.585801231 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.624237184 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.575026753 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.62999962 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.75687639 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.585084126 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.626537074 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.573181623 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.719967835 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.627846206 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.583603854 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.656541506 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.584294156 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.584917223 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.551345903 seconds)
  done (took 42.305559785 seconds)
done (took 43.733115173 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.575234002 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.649067222 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.56126867 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.55554043 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.560332908 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.54958262 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.578267878 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.555981423 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.56970525 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.571029726 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.549783029 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.564790264 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.572843556 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.568334704 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.590650784 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.557228123 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.558284422 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.566826213 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.567251504 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.572266415 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.561618185 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.561602541 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.580954835 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.559952691 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.568048939 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.567486535 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.562385263 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.561231251 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.566038297 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.571528275 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.548952447 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.566994776 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.574389373 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.567688516 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.560041287 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.569995638 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.561370455 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.648042248 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.576920183 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.569812206 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.562837227 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.574503011 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.562809244 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.568432398 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.567652369 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.586410181 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.569966911 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.573841977 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.566110977 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.567392401 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.579002065 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.570448829 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.56468452 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.566938384 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.565704463 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.573416855 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.566224689 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.579858263 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.567043737 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.562525544 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.593786035 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.581250411 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.570069472 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.569770389 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.564917465 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.576152259 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.56830791 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.574656017 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.565619369 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.563631473 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.560906869 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.565161331 seconds)
done (took 122.484870436 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.682020429 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.555417374 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.716967092 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.564859956 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.725048856 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.677594218 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.566183905 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.566132161 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.563464604 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.362146224 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.56493844 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.567815816 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.552041557 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.565539542 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.675602243 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.567311871 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.567901208 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.263937848 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.570324436 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.693370527 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.558285568 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.565301728 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.566144531 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.360348074 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.557830806 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.551469384 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.694983181 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.566425916 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.258108648 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.553808635 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.553315679 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.258577542 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.693963663 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.586225082 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.576543968 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.57380948 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.728058912 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.571993235 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.68575175 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.684102365 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.72193376 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.605931273 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.552145144 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.555873977 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.563640824 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.569966007 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.568403161 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.594248879 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.554423769 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.568666657 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.263624756 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.577810943 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.57654286 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.570865457 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.567474166 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.588983711 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.567715863 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.571592248 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.697819654 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.570344546 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.686759136 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.363195743 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.362022987 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.568414833 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.555886398 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.568566751 seconds)
  done (took 123.662637107 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.630311518 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.629958349 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.68020181 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.560332661 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.611617796 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.682432817 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.561198789 seconds)
  done (took 12.794624405 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.566625528 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.567241738 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.611209491 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.610473802 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.569650085 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.734622469 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.571412366 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.57104407 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.566092692 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.611593355 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.568730191 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.570241939 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.577611157 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.562199527 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.610698342 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.572794095 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.674461681 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.56244768 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.570412959 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.718670007 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.569537093 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.576429763 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.614093161 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.572065597 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.572348207 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.567715321 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.318980907 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.572068349 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.5686192 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.569650073 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.566143806 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.627355794 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.571575081 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.556364764 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.564978884 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.67938829 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.570133871 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.570494676 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.567257255 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.561077075 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.56779457 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.570365307 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.572578111 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.56989106 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.571377027 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.584921915 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.572926745 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.569537206 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.569662688 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.571973088 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.611539072 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.568463834 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.569883847 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.570589455 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.619421591 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.575583174 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.572478075 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.571281746 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.571157147 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.569601734 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.718935228 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.609457976 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.57096479 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.610486766 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.574591257 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.571685473 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.569463831 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.571400603 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.650311737 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.574048773 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.612683643 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.571696081 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.746037711 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.589807306 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.577560793 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.565935163 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.572227077 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.574952006 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.563256927 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.571802358 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.571318404 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.567953204 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.571313742 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.571467488 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.571343546 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.719506875 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.67508768 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.574200452 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.583293604 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.574436319 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.570754422 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.617050344 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.577883762 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.575567687 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.612438823 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.684173735 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.617643247 seconds)
  done (took 160.471372933 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.579036378 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.578154114 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.570258754 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.593444617 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.56955477 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.567724534 seconds)
  done (took 10.90236867 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.57052035 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.581745437 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.577532867 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.579775352 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.57467834 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.576331188 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.580137908 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.571851871 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.577912212 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.578205805 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.575892073 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.576753843 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.578607161 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.57692263 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.580454947 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.574224165 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.574796105 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.573020944 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.576441891 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.576939812 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.561392049 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.58062522 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.579361754 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.571616815 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.579549963 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.576337986 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.59312752 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.576726843 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.574052884 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.580927647 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.580734796 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.58325987 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.568401007 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.573685326 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.582528957 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.570261394 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.578739602 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.58033721 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.576978211 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.582137303 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.577081497 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.581254618 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.575319892 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.577384498 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.570669391 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.574925575 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.58696808 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.593787075 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.580917635 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.580980303 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.582793917 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.578302719 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.580546301 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.582365755 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.576039945 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.57590034 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.583639049 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.581054194 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.577604277 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.573356748 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.582407055 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.57666055 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.572031835 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.58642572 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.579480973 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.581858655 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.571874854 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.585966785 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.58426947 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.578923849 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.584684102 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.575934844 seconds)
  done (took 116.081860584 seconds)
done (took 425.344646493 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.019408754 seconds)
  done (took 4.47133481 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.686442822 seconds)
  done (took 4.132522173 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.547154104 seconds)
  done (took 24.993465842 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.578752481 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.568181788 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.587180838 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.575118398 seconds)
  done (took 11.752574451 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.205154893 seconds)
  done (took 4.65139203 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.57638309 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.585521335 seconds)
  done (took 6.616307992 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.924721723 seconds)
  done (took 4.372870104 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.183434567 seconds)
  done (took 4.631940569 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.590551516 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.580818568 seconds)
  done (took 6.618666352 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.554753771 seconds)
  done (took 4.005936204 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.997515787 seconds)
  done (took 16.439741625 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.578787422 seconds)
  done (took 4.027700824 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.599950095 seconds)
  done (took 4.044271471 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.591986364 seconds)
  done (took 7.038220246 seconds)
done (took 109.242959791 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.568749366 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.573393501 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.570913909 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.573064636 seconds)
  done (took 11.74064899 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.647122097 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.650221013 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.659586688 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.640855627 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.637099552 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.645711371 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.60365452 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.606240514 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.642441925 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.635640035 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.651575922 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.637808915 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.647216378 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.607529054 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.633905924 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.65008331 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.638341089 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.657373196 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.608111477 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.639516955 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.582253838 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.637888713 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.633438341 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.580998095 seconds)
  done (took 40.627720831 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.091209768 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.64632948 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.726262257 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.625795809 seconds)
  done (took 8.538698157 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.686492947 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.691842489 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.709341662 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.742370139 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.774333495 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.714552786 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.610543243 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.61064568 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.590364636 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.692165309 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.764973149 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.689208496 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.906948148 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.581488417 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.90010688 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.586325769 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.584775308 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.686353755 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.736971675 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.768219713 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.587549965 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.685989359 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.694417929 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.684566278 seconds)
  done (took 42.129036083 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.592136464 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.60392998 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.584642366 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.599953734 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.584873394 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.587260468 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.584601948 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.590592358 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.583845053 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.583559271 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.583889788 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.599054676 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.588823678 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.584734066 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.592975691 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.585012103 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.584659645 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.591246487 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.596602126 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.586217029 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.587949195 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.59115577 seconds)
  done (took 36.422581633 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.572427188 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.569750221 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.922453253 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.826288931 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.574162646 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.575231814 seconds)
  done (took 15.489926025 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.658629377 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.800692892 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.576038997 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.000047382 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.082803822 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.577817557 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.577766664 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.855315062 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.212904331 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.240378867 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.629662841 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.656947297 seconds)
  done (took 23.318479421 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663775056 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.584194282 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.597991237 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.602940519 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.581630705 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.581090212 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.601400842 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.114635411 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.588535661 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.858823372 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.599621857 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664696823 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.830571287 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.589964463 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.585017775 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.556837912 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.819732632 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.205026805 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.586274502 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.581359302 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.635600947 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.587455386 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.598522985 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.833792973 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.584653291 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.580731356 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.84691886 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.582161808 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924997362 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904657067 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90480252 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.587437692 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.858978806 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07200422 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689020455 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827932309 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.575606351 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.586817017 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.578889756 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.595596377 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.602245346 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.589721892 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896714783 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.587641796 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.584010912 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.582699779 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123377989 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.59106629 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.584665949 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.585606274 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900013277 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670235359 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.590331337 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.583384574 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668539269 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.58561368 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.591266572 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.705209777 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224601486 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.587579616 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.60901066 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.593084344 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.577691488 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612071263 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.309137456 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.593604151 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.590737617 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592872823 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.585405057 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.585603125 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61082758 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.590066363 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.60857926 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.584085836 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450616288 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.606349607 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.596314877 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239761945 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.590546729 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.592225023 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817606026 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.590501862 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.587888636 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.585999104 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.590601299 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.489914985 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.596793564 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.561971191 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61838294 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.127349727 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.835479479 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.607206912 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616941888 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.812630387 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.560544008 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.587817699 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.604534357 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.591950532 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.608043402 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.13112615 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.588146718 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.593854354 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.836069953 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.800209855 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.602051406 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.57260804 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13330188 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.593071013 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.617218817 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.602641573 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.841964347 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.301311856 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916468018 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.604231671 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.628613511 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.58983427 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.559844781 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.594717128 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.599016284 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.592497529 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907056706 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.568318134 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.615550556 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6655511 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.591965798 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.59142999 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.595622916 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.595336799 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.589828014 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.821372577 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.590663296 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.934087738 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.599228467 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.592551651 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.594839979 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.596912784 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.593859438 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.818800149 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.603589183 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.872444839 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.596417908 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.596214001 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.593716644 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.81728294 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.599389652 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.601594681 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935581634 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.609197906 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.618415295 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920387987 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.63546526 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.711190523 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.629375032 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.614612744 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.849700098 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.60653111 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.602900841 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.597218458 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.600211961 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.599725756 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.606836826 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612561275 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30959243 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.573587929 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.603100009 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.598199174 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.614181244 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672250835 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608824555 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.845691657 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.60142647 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.606886568 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.607057718 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.604056687 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822526431 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91644686 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.606151239 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.800017873 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.137013677 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301292398 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617882591 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.602720528 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.601929378 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.600556597 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.600657404 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.60003022 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.608113551 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84862099 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92616123 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.601707736 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.322867519 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.609699425 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.604426802 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.612650435 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923088866 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.615643238 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.606020308 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.60366516 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.61922929 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.624846256 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.925327329 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828423981 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.61891104 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.607849645 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.120126661 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613573078 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.60589634 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.603926586 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.630547179 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.604869289 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211564101 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948835549 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.595694734 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947080452 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.628695942 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.625784051 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.603082028 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.603665727 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.620556912 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.624042141 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.615075344 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.857761792 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.604711304 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.610821267 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243427381 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477571436 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.251161151 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.621646613 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.613812834 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.608422949 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.151164031 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607037861 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.605730254 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.881902075 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.148071087 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608171203 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145629324 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.61665333 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.501359495 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925419554 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.836963455 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.619275042 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.608207442 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93500244 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.823087319 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.632260922 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.607477974 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612344424 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.582601488 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214384472 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.610241865 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.790434715 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150282928 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608506277 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.610378391 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.673003799 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.61150385 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083112919 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.608516684 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.609274404 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.622950919 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.614097549 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221444344 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.613068311 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.611137385 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.331359861 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.617614026 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.157470694 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.610124606 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.860416571 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.93325222 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.917482105 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.612906607 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.614768771 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.856394049 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930980044 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611272836 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.618821503 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.269713215 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.469360882 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.617517163 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.610532195 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.573609014 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.625587329 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960381915 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.615312869 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.615370768 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.617145698 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.609431207 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.611278347 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.611843649 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.617556758 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.58122826 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.228758905 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.612019735 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.621708014 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.615608085 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615705041 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.860461231 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.626364225 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.325545978 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.845680113 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.632589149 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.652516092 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.618561699 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.618021644 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.589078511 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.61033559 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.611766392 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.693177539 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.834710491 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.626436425 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.588142306 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.69579684 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.825383524 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.613589491 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.614481375 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872375254 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.614524188 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.638450023 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49056487 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.64524692 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.608202503 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612958389 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.610809895 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667879343 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.687982827 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862820477 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.932994846 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.938804521 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.085550549 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.615532687 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.618040277 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.625124416 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695049909 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.618127984 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.627581127 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.613806337 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316882255 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484517851 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342355956 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940714695 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.612847362 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.623689647 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.613635443 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854601653 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.610205258 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.886886859 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.614801095 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.604668305 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.639067877 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.623099123 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.622445482 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.830682696 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.883477403 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.613430166 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.628516121 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.612056988 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.611593679 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942235598 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.830677665 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.247534702 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296982372 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.621418148 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.612627233 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.162122639 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.89010469 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.613447456 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.615873337 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615718078 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.615720401 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.617711428 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.629683959 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.626286504 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845013245 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933099625 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118720108 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.933134024 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.641824382 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.489072556 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.624509774 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.868384605 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442190879 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.864451693 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34507846 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.458397117 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87380818 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68987854 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8687466 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.616268906 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855123916 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.614016082 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.62049428 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.613806023 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61789759 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.61677694 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.94127113 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342171245 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869874669 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.624189052 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.62872528 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.645384861 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.866879725 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.841849825 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.531641909 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.836472971 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944178809 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.627032015 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.614924012 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33288013 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943139347 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.621451466 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.624246668 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878178664 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.615736483 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650930688 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.494004211 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.614851367 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277588811 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.830358056 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.639974059 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.619575154 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.46874301 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334070955 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.632055569 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.234373326 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.621928817 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634102176 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.894002988 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.623858834 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.625506594 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908491368 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.618116147 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.61661321 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877207122 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.326913129 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.513071142 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.623170626 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.620282633 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.6197155 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.614356796 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.682870757 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.619250498 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.615128544 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.084601589 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.615099678 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.616579939 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631360821 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.629052643 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.629851647 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.619474824 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.618236618 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.625121964 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.597457685 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.601011784 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.626321795 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.74484805 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232875629 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.622332864 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.235636533 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.954756747 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.865242799 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.619470041 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.594879059 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.626428217 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.618907195 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.614946456 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.617968088 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.613155107 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.285097433 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.630365268 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.944382076 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632083493 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.83454126 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831304585 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.633116647 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876351087 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635006348 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643484121 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.595946874 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.620907218 seconds)
  done (took 1097.908557204 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.655550833 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.64608885 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.62020672 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.634633832 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.673220298 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.671410456 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.650971698 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.644684863 seconds)
  done (took 22.677479534 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.619797575 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.622399342 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.609653988 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.620980218 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.624506275 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.153290064 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.623836831 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.6211398 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.636940648 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.62164475 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.615169525 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.309896524 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.619026329 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.622832932 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.619134836 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.620148522 seconds)
  done (took 36.656932578 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.120617254 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 3.059961758 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.307667699 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.633508477 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.683409681 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.618770248 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.122145087 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.616560011 seconds)
  done (took 30.646921468 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.626800671 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.626549481 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.627188815 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.632276474 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.627274541 seconds)
  done (took 9.621049687 seconds)
done (took 1377.227757569 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.627800348 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.627605507 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.627550729 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.631326725 seconds)
  done (took 8.004123588 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.597750734 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.596308445 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.59894047 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.612512906 seconds)
  done (took 10.890227521 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.046155678 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.251880487 seconds)
  done (took 5.782264079 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.621656075 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.390428525 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.374823241 seconds)
  done (took 8.87926245 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.913031377 seconds)
  done (took 3.397822249 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.032601978 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.10723341 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.614674748 seconds)
  done (took 8.23883716 seconds)
done (took 46.676413678 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.629453058 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.385836014 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.778520551 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.619943803 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.784011876 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.778946418 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.903243016 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.620921488 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.617340006 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.627037904 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.621794566 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.810635868 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.89548694 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.385923725 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.89434924 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.390377782 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.781905796 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.623593171 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.618283823 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.643507994 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.902538114 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.622687759 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.626537736 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.629278014 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.784037506 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.785308054 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.624102077 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.390097777 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.630867236 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.63917746 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.778096031 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.616670854 seconds)
  done (took 90.936272309 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.63502973 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.627321836 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.621853348 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.640675212 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.621614849 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.64526715 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.624377933 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.622329109 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.630724674 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.622204955 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.64124284 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.620220823 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.618686676 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.640668876 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.622681799 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.635783338 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.622550648 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.622989332 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.630324822 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.620165152 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.624558165 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.625346329 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.654787657 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.62423186 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.638334503 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.626283123 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.62422176 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.624492836 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.623798478 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.641840542 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.625026974 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.626499341 seconds)
  done (took 85.619420782 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.622976288 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.627008849 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.623245884 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.621927399 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.643501466 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.622952883 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.623362264 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.643879462 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.626208285 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.628133354 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.626098834 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.632348643 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.627471443 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.625517394 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.624935439 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.627023776 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.622887859 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.624909196 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.639901583 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.624011655 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.626230926 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.624723712 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.647312892 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.625804501 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.626974659 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.62905059 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.649870487 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.627542857 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.626393538 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.626710626 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.628753543 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.628529943 seconds)
  done (took 85.622936969 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.869811984 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.641569092 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.645735622 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.637015091 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.643892538 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.640658115 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.635176926 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.869558137 seconds)
  done (took 17.081352096 seconds)
done (took 280.751218539 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.643918057 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.638144937 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.66729241 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.635857732 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.658286278 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.664694034 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.865133374 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.669094265 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.857838631 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.637338065 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.652620808 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.651453127 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.582113086 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.784390213 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.635542722 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.642516249 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.667970544 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.640434618 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.641729273 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.896875081 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.672189399 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.63553649 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.639677113 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.658210112 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.614552663 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.7377919 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.715536801 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.810292555 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.772441522 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.718672138 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.653601768 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.649362041 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.642039278 seconds)
  done (took 75.152986531 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.639293115 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.649190369 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.649475096 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.648243964 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.648931644 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.64797627 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.638280276 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.647483505 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.649060609 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.646133023 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.649030815 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.651739058 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.653160655 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.648662695 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.64806919 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.627829688 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.642252054 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.646062194 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.63726459 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.629729144 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.647646359 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.650371622 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.65271205 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.647462969 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.648239606 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.648941725 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.647120413 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.647793248 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.649590512 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.64776033 seconds)
  done (took 50.887202548 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.649938525 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.638016482 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.63460234 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.647631513 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.643516303 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.646743243 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.989334145 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.65237938 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.646497067 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.650484026 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.641463124 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.654257324 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.697330455 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.635666872 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.646419285 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.65304701 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.652203437 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.643697587 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.652469261 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.660049188 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.000788037 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.655414373 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.991015699 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.659776753 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.642340067 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.644605863 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.64740747 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.655217907 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.647610508 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.642332103 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.641321829 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.98693837 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.63787232 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.640298201 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.60995158 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.657613591 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.648753621 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.649612269 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.646121665 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.646688808 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.991945655 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.646635417 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.636993408 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.64139123 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.64959223 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.654738217 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.641212779 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.648569067 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.939195756 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.648936119 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.661908422 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.65192359 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.656195199 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.648048453 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.940652349 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.644942838 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.650699483 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.638148542 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.655002864 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.989395956 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.658246723 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.644849049 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.641145497 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.654743734 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.64849727 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.648567818 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.666305992 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.65164198 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.640639094 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.65374127 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.644428601 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.653235593 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.65724091 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.644052703 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.642745947 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.64636421 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.652957983 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.643882121 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.645673093 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.991376476 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.652704024 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.645097734 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.002446816 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.653776371 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.659363119 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.659377717 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.657193781 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.720241628 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.989523061 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.606990053 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.669224542 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.64679733 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.997548427 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.660822948 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.654538213 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.642950496 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.660184421 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.658378592 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.644486995 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.645899013 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.653614484 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.662194774 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.646379719 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.657417822 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.001451948 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.657077248 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.647936784 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.675061393 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.723631567 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.659994658 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.661733554 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.656591571 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.00841262 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.656989704 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.661979491 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.645126903 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.650048309 seconds)
  done (took 237.412205922 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.661311708 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.646092562 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.645008442 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.662948049 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.646396692 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.65201654 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.645761385 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.645468802 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.650636372 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.647068999 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.645144924 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.655836134 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.654777312 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.645338748 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.65208468 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.647387533 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.646896216 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.650910892 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.649255204 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.641603749 seconds)
  done (took 50.504666035 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.66308061 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.320090933 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.297469998 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.663217211 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.660196775 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.654446011 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.71730097 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.661087104 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.660130709 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.011232603 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.866274518 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.665595214 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.659610136 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.660591352 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.346402338 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.639974202 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.009977089 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.322287565 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.661230793 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.32512564 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.638224085 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.664515004 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.656003576 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.324066757 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.023624552 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.998768158 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.721404781 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.327173421 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.662113862 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.664186688 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.323147219 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.664274327 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.656336307 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.314949792 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.66350029 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.67686367 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.664554629 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.723339714 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.728311888 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.019774762 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.331566828 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.009830175 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.674545577 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.845577184 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.668927224 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.639042974 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.338753459 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.664070172 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.639872762 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.663261739 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.669583556 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.310759416 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.657699099 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.310754677 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.664169244 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.664391936 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.325416919 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.312715334 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.300277612 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.868697462 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.65849059 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.004326651 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.66346921 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.338596397 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.665871198 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.665126111 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.665705765 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.871820509 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.33051607 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.003477984 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.013493568 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.019122174 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.666684962 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.733452724 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.670554914 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.019475899 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.735145256 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.097777239 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.020347227 seconds)
  done (took 150.498694134 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.971552053 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.771860893 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.096154513 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.285138024 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.218890368 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.812784809 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.793120459 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.928134425 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.679397009 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.768158839 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.418549562 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.762394933 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.470898271 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.737877883 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.783522003 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.798153126 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.125374073 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.65586631 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.375655842 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.393624778 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.663239097 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.775298631 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.475299449 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.080509787 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.656197646 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.434471435 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.656784151 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.241351115 seconds)
  done (took 62.348514824 seconds)
done (took 628.301403157 seconds)
SAVING RESULT...
DONE!
