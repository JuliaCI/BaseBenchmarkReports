cset: moving following pidspec: 16028
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.334361005 seconds)
loading group "string"... done (took 0.57883466 seconds)
loading group "linalg"... done (took 7.324653925 seconds)
loading group "parallel"... done (took 0.171277279 seconds)
loading group "find"... done (took 1.184807542 seconds)
loading group "tuple"... done (took 2.056878229 seconds)
loading group "dates"... done (took 1.304019857 seconds)
loading group "micro"... done (took 0.241340884 seconds)
loading group "io"... done (took 0.989837028 seconds)
loading group "scalar"... done (took 41.078871221 seconds)
loading group "sparse"... done (took 13.353381403 seconds)
loading group "broadcast"... done (took 1.068763526 seconds)
loading group "union"... done (took 14.611469993 seconds)
loading group "simd"... done (took 5.074278428 seconds)
loading group "random"... done (took 10.119722629 seconds)
loading group "problem"... done (took 2.039563535 seconds)
loading group "array"... done (took 23.984363833 seconds)
loading group "misc"... done (took 2.061041245 seconds)
loading group "sort"... done (took 3.409498429 seconds)
loading group "collection"... done (took 19.581487875 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.548780005 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143645769 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.121833895 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.139887466 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191766771 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131336432 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12749507 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.103554587 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.990777464 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145005338 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137657116 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.507820055 seconds)
done (took 5.040822868 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.19553521 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087380104 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096106756 seconds)
  done (took 0.862183888 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06692784 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127833801 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065349598 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.082790969 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066236352 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081760128 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068742927 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066909565 seconds)
  done (took 1.245523814 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074240494 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068547106 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085489532 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068585743 seconds)
  done (took 0.983560307 seconds)
done (took 4.041561232 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.931623322 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.243094145 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192439483 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.454961082 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.155760254 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.194003993 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667801275 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.323439545 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.209003384 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.07381488 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.122097537 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.376266939 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125462128 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665900517 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077834862 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.110943562 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.163188965 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.42539295 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082818103 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08392076 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105563532 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130406574 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104642719 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090274671 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.157842768 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069724149 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.150269572 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096435427 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068537177 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.260726265 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172694194 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.69047754 seconds)
  done (took 10.500558749 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098418761 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.119788945 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069207108 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14153272 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104123487 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087641432 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072181861 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.0835018 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093764962 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.162012935 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117209415 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107981699 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082249571 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071166418 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.100531169 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.215946671 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110920605 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08822942 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08859178 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077763223 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123851863 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084723487 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095474183 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080899976 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152454565 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19502305 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098186108 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112129498 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069259878 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098552637 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.13087284 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131847687 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065140306 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084441217 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.158562424 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096639739 seconds)
  done (took 4.572212321 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.080210954 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.176637718 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09106825 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.155376794 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085590687 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112314933 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083683136 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098704593 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.230730602 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.160963879 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.48009377 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132429468 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.086676851 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086696606 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069999094 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083869824 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.517615001 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146089765 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.122173691 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083668506 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092001684 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071558651 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.358326104 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070023321 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068134454 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08788516 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060481321 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150993247 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07023495 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.193910958 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087830521 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089330449 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102946057 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.202586782 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.115321836 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09709046 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124837525 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0676138 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06710669 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.165303477 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092116042 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06696331 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107656182 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104523348 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120601547 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084632588 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067797161 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182693365 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067119379 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102481257 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.943731216 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167963792 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096294221 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067911847 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.296236982 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084473259 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086742279 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064238751 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.296403361 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.178413266 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085620299 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072737162 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067235737 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.113141944 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070462517 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.37477913 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086818486 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.732418487 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072038653 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080140196 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089187545 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069561832 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09375043 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07606862 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.104408938 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06997505 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069563955 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087105681 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067927089 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070149747 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.103836863 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.210671203 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067239584 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.088430975 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065746612 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103428782 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099350415 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.089758282 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067960569 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118106784 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067483386 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069975428 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.087329635 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105335236 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088056775 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087517816 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087270858 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.131723082 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070945194 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065445871 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.196891966 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068823873 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.118348717 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070830811 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116313882 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096544888 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069265212 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156884335 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065752447 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066141979 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087598995 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067028749 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.087614307 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.072008041 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080857658 seconds)
  done (took 21.333163631 seconds)
done (took 38.168163586 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.318127753 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096437957 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096105276 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077116832 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.094498838 seconds)
  done (took 1.44373031 seconds)
done (took 2.176844025 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.137122525 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.12368956 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065353093 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118052134 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065341409 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.122332907 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118114895 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083563731 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119629478 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066044507 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115658997 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066217912 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065399903 seconds)
  done (took 2.029153438 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082576561 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087077941 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089060897 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083113762 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064344358 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101299896 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081400127 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107458817 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081700876 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07340993 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083095694 seconds)
  done (took 1.666984852 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081221315 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085574016 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088034041 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082782768 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065209476 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099511453 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081306321 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104616601 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082708079 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073942855 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083425526 seconds)
  done (took 1.660148024 seconds)
done (took 6.078777927 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07816242 seconds)
  done (took 0.803971242 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.742241475 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.621208612 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.100039733 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.135035555 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.217119234 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.156735977 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.449043748 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110524933 seconds)
  done (took 10.433878573 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.116725103 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089819096 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071823861 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.09141043 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07292823 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070416911 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091510142 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071769299 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088306944 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073833894 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085998072 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.075012167 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074349342 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090313072 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071259093 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087058306 seconds)
  done (took 2.116025856 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.10558233 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.10612815 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.095263072 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078060139 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093294917 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074583985 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.09504155 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076570037 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08974141 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075627301 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078707631 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.094035581 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090879171 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068171712 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077612278 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.095739022 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074134084 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.092612369 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076855579 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092119361 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076492322 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.082124088 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073262019 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.091537855 seconds)
  done (took 2.891163968 seconds)
done (took 16.973531482 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.117516139 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087850325 seconds)
  done (took 0.938338707 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08217928 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098104818 seconds)
  done (took 0.921583385 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083587615 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082245549 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090092011 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095368239 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067480845 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083195901 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104869741 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06779375 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066642946 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085119325 seconds)
  done (took 1.567466954 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069001082 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095038109 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070705082 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097709411 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074177621 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081793985 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076263685 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070022605 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.096816061 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06447712 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.088541918 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099748503 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07254859 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101817897 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076227363 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085668336 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072645213 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084334777 seconds)
  done (took 2.21698063 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066846334 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067899461 seconds)
  done (took 0.875584942 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068573149 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064729275 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08327312 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067183052 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079949593 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064110672 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080408574 seconds)
  done (took 1.251889378 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.417306139 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109231098 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.256185488 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.091158903 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105703491 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.281817564 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084744254 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071565884 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089374998 seconds)
  done (took 2.287091778 seconds)
done (took 10.792086049 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080365628 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085673206 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112171011 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.422458896 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09275123 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.081606946 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131429803 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.232170353 seconds)
done (took 1.978520888 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127369886 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.621875801 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404201604 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.2180747 seconds)
  done (took 1.990690583 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.382381201 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090654783 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075966221 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069842545 seconds)
  done (took 1.369175886 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067317027 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070682218 seconds)
  done (took 0.885994705 seconds)
done (took 5.118954185 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067276743 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066599866 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081392424 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067210395 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.114462854 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064505546 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064576975 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085359303 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066963777 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066842086 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.08405848 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067652493 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066761948 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082818269 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065129819 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064230018 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083404571 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064527375 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06479576 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080544567 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067151949 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064807958 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080796736 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065021551 seconds)
  done (took 2.528673935 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086280927 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084311902 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073007951 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072800511 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.088582191 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072409277 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.089277658 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067980369 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088503095 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070212515 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086635588 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071497932 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069529341 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087728515 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070330661 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.087091811 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073037424 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08403687 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069603989 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088570414 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072220615 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067984019 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.087896884 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072762834 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.089454459 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071604303 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085394995 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067541013 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089218301 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071736159 seconds)
  done (took 3.107693608 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072068487 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064231866 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082136973 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071690798 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064985829 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083072019 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065017038 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065609436 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082600428 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065015943 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066218572 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081649731 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064377121 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082530045 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065929177 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068288885 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098542599 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065159524 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065098908 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082375878 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068388521 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065547567 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.0823224 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064555909 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081920376 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064510663 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065496938 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080754513 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065831134 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064638807 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084153148 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068366761 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064652279 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087630199 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068880177 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064451199 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08546549 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065175377 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066202974 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081114732 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064782507 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06417831 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081327796 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071933377 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064923938 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083934784 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064816792 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082818502 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065119297 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06787841 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081009713 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064618927 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066796529 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082638289 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069338143 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080729552 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066340963 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064164936 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082162734 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065049477 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064309908 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080788962 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067758617 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065792343 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097992593 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072101253 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065008831 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.083399461 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066288675 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083886414 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067065445 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079385751 seconds)
  done (took 5.979128102 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119984757 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09326888 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084158379 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067158392 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063227062 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082084061 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06894709 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081540107 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067435042 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087304381 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065590224 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066325966 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08286592 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079823798 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065741239 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083046644 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070599024 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079682228 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065812905 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068025807 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082015228 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06871402 seconds)
  done (took 2.453668565 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.191165482 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088759111 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110330843 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091998386 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069734562 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09163983 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071655509 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087828219 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071162263 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086704825 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068852894 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08750731 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069118171 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069174402 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087063012 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070617801 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.198117362 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070056508 seconds)
  done (took 2.444271255 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079403838 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067037255 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107153367 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06765069 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084456275 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070412006 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090289783 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076177719 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086379537 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067586328 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092707038 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070412343 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069339285 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084152339 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070191201 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084146289 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069980766 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067553924 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092721853 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073015778 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089238557 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075817557 seconds)
  done (took 2.496705944 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082075676 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06924771 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103336359 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069855274 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080675087 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065642222 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090968475 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067362213 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090155415 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069295339 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068502066 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08235967 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073097677 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084767128 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072254748 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066997553 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086178495 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069067433 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086701206 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065328107 seconds)
  done (took 2.305859046 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087598662 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0856116 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069177164 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094566669 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06940421 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068628436 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094307613 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06908148 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086126511 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11004375 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069535697 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069542665 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094228597 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090839859 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06911578 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094726397 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077647791 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095079814 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069213183 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085976777 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093842973 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085626706 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077605286 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085594659 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069365312 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069311038 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085987381 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073965222 seconds)
  done (took 3.054855992 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067380112 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067831854 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082112616 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065756246 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064995111 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082297246 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065398551 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065504174 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084343738 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065116715 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067741779 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084220213 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068188994 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067808488 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08415533 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068540417 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067122769 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082175653 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066468727 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067324417 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.086641835 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070198899 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069150217 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084811951 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067445926 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068944587 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084434925 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067561832 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070101475 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08524201 seconds)
  done (took 2.954169491 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076951099 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07436844 seconds)
  done (took 0.916957958 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065280932 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082259797 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082474416 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071018357 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089514891 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0682452 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093259481 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072786794 seconds)
  done (took 1.394484322 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082578769 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078235374 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086745676 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081746927 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094683026 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085812505 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162357478 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086504206 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074207421 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065533282 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.099357368 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067892548 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092661041 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069347751 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07489384 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094959265 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067841829 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.093404274 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072302072 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068673636 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088555133 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081815969 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089799891 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.070389262 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071549097 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097162114 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081934571 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.088736385 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073203414 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093882236 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073836897 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062533385 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085310561 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.069120026 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066278865 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094308375 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084952039 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088450932 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078709906 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086584677 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080356437 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.082820216 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074583114 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077054244 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098594901 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070663977 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088963678 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065422541 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067366035 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.091007346 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065259117 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087253775 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065263677 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077195045 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092349104 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081161032 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086245492 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071656789 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072712734 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.092019716 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07800917 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088844497 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072513796 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069912862 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094422576 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074527703 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098335318 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065271534 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063927547 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.086227591 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081119245 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110947346 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076280535 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070859548 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089632242 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068686269 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091004762 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071473387 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094250914 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076930752 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070643064 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093924659 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077977366 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087750916 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073239644 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095601988 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069007726 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072828195 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085742578 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086998491 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086176367 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067992521 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06745153 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.099235121 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073246787 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.087315353 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068681397 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077607705 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.082352902 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.071197117 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089172078 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070781955 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.080945267 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093561786 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076401528 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.097839787 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077298335 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088083513 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.074185726 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066628359 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089673262 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069322396 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.095845169 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06395337 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072676893 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088633758 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071156108 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.097780672 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.068177035 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070119931 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095742578 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07567497 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.086588892 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067187816 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073239593 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088284234 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074019755 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097172617 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068835218 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065182317 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.083967796 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073555319 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.07017723 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092736678 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075654251 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091546049 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065328712 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067721686 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.093517436 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079413512 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088920651 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070478793 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094799257 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071412559 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069384964 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095651933 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072895693 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087058271 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076355668 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070739437 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.083403942 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074034498 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.091065653 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068941864 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073976957 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092533674 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073064423 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.088877291 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069181165 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076177153 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089190325 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069569799 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08764358 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069585482 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081042996 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090737899 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065766432 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.085513817 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077573588 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06786931 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.088084517 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06962802 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089620108 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.072218123 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068584856 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.087894654 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072113457 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100075214 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.075866937 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071106377 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093518344 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082099934 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.088559362 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07309262 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069742255 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090125196 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071504672 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097983738 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076357233 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09311854 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072867137 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067279141 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094926705 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078141227 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087854424 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068358445 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069589061 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.092260133 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076856866 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.092599374 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.072188512 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068158692 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089653288 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07405555 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091157234 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070424273 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069462619 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.093838544 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.069776306 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.095444545 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071427442 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.099314898 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074045945 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065777302 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092727497 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06866881 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.095006123 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065259493 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068500827 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087494773 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.072240072 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069081587 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091807665 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06507127 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09535374 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078406542 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070058402 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088416663 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.070777551 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095408043 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072017044 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074497982 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092380927 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.0771658 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0995299 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070461357 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073883036 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.100564776 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071214511 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.082525517 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075815425 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069130301 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.087667392 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06969931 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.086800971 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073794011 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.080067161 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.097430553 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064617772 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090913489 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069079417 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068735158 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.084041687 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075321312 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091043385 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071128846 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077690286 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089470727 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071918475 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0925543 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070346584 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.072044959 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.090294053 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074428306 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.089672112 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.074364755 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069635459 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092243113 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.07027504 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068708782 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090769406 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.071065437 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08921072 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076994622 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070377101 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090024007 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074183415 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090530433 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071679475 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071412444 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088205955 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074813569 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071142199 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.09019435 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072948459 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.084407948 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078385413 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070026603 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097060743 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071220685 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.085704216 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076775218 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072469448 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.094988589 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071049181 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.090125328 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072303435 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.07010663 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092108423 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078123487 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086493795 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081790156 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097300665 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071499743 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073573794 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.089469646 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072077159 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069316114 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091074227 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.072544971 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.089383341 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.071354695 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07539654 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091918697 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071250371 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091111994 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071402083 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07042419 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.090246569 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065587548 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069699473 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088952467 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.071036297 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099987147 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071256934 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08718644 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069938992 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072358283 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.088144251 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067859733 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096643602 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08120637 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.071613657 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09696265 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06975021 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.09095533 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081334805 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066992577 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.088169099 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068670754 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086482699 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078999014 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071980598 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.099032342 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071158437 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088700621 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.068489578 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071516038 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.088370264 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065546519 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068769522 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093891276 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069806076 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088488003 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.071246098 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074389978 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090446043 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080901362 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.088158094 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071455908 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071274633 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.086709925 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070812776 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069675025 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.093098107 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.07199186 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08680375 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068212609 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070182243 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090471918 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072238118 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.07016647 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091167655 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078351758 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089613636 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074481831 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092941318 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065998318 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07424912 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08927693 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.071195514 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070352965 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093116286 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074627228 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090782055 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.081099261 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.088987171 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071712082 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07094595 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087889 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070802401 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070668693 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.089330557 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070477557 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.090813135 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079998965 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069341473 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092821494 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071313056 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08965284 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07852791 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071396348 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092652789 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.078996994 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089595718 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072417051 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077893208 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09140587 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071935497 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08819789 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070402942 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093754549 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.07007247 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076410596 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.089613398 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071836005 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071909336 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088245318 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070792505 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.089186907 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07038614 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077104978 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.090511875 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070968837 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088745154 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068776976 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071825013 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093562607 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079699592 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091585048 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073750728 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066321578 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.087201545 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072755402 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068434783 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.09148896 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.075024015 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095656391 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07401791 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.07189012 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.088482189 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080589013 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095787735 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074665099 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068626715 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094189773 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071798808 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092024502 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.07248819 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070886813 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091504325 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07498362 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091084715 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070309408 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078756882 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093845374 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072820122 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091026155 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072653109 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071248525 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.084697878 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.072449345 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.0738008 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096095871 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073527838 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089839535 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082457219 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068106419 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.09108227 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075529969 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08954791 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076563771 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066223772 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.091735543 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072488927 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090489388 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066775667 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.07013948 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.087496114 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.07418043 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06935221 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.086098045 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081924545 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.099637383 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074314331 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088981161 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069942834 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066811549 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.085195721 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071946573 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072395436 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.092062017 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.082170758 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08925254 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070326246 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066475564 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090200248 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074362181 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.092869089 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068780295 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066491471 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089644126 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074640043 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076012594 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090079247 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.071425967 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093698761 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07363697 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068924693 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094580354 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068360005 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093613786 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086128199 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.091484489 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072051536 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077506526 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098998356 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.072649354 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.085297955 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.072424724 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074750034 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.091057099 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.072744403 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.091240638 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086915631 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09093264 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070826272 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069478273 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090991992 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06975313 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078846385 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089870447 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.07135733 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09396611 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072971306 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.098111245 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073989246 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079790183 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094250413 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074521797 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.089413196 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071935416 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069655553 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.089041512 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.073190215 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.091453013 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07722503 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.079714475 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090937079 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083092671 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.10109307 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073579134 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.086949328 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.070980108 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070834255 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.086220345 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.073126879 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.069023953 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.089127387 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.069968392 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069574119 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.091648016 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078567726 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091027541 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.072984831 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070709657 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.084877971 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074222095 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092620914 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072158496 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.068887303 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.090447605 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.072441176 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074135522 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093497992 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06734201 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08891854 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071161207 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069506814 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083596242 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075804454 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085903858 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071326868 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06956275 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087574561 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071518803 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072600966 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092970012 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070339043 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089760792 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077389534 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08955123 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066750485 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.0657952 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092610828 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067564722 seconds)
  done (took 48.497689713 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110331001 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084977846 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064690994 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082469054 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077467882 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083877546 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064534047 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065325982 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084102908 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068814557 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064171176 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082922511 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07415429 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10790404 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095157429 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070055605 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082685897 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065987093 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064399713 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083544587 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07372064 seconds)
  done (took 2.460801502 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088288903 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.103450273 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080052019 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102990035 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07378878 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099734445 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098626674 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080716652 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101891115 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076488702 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.101503084 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09871072 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.077247498 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094819945 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076073018 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096379445 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083619563 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092856564 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.080833204 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099765174 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076867807 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098971975 seconds)
  done (took 2.792975134 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068998147 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067949476 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088822293 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064310126 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068756693 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082806006 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072418656 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065523308 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.091606969 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.075287425 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085622898 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067698817 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069919716 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.085374683 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068382852 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065574056 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.135047185 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.091441577 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068425954 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088319891 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06429647 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069925676 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.083568131 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065154572 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066784482 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091026418 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070126247 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085878622 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068576926 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067034952 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086438257 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066859262 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069802965 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088128635 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067172418 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06729093 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086781006 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068989498 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082542523 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066411166 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069345972 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.083616497 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069655817 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069614744 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086224004 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067544078 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069740478 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088020415 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065241415 seconds)
  done (took 4.534697434 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088482263 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.147004747 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092685685 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108053777 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.107965988 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.097829383 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072890514 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126089017 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067267139 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087990247 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.086606881 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103891045 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069432573 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093787156 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07566567 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088025765 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070670448 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086894951 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073795324 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086849627 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073764892 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093840425 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084293664 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.101753544 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0727241 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086421088 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069077813 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.091634643 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.082151284 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092579791 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073885178 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093955156 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084372566 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.090306696 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06775919 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089957861 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085332412 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087965046 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071373938 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.085388585 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070799485 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092385509 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075765762 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104040924 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069842719 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.092483118 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068867603 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065265271 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.101776713 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090076282 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07808072 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.102972525 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073513885 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087963131 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074871329 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.103159566 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068926784 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085830989 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072533849 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.101195179 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067376678 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091579637 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083895337 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089124834 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07708069 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102256713 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074512636 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091407256 seconds)
  done (took 6.804437257 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077936879 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09408095 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085046628 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103451918 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074699956 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.095498486 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093863263 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075391461 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093443691 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080510138 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094733799 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116933115 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071028601 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077699846 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.095474849 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09372318 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075167275 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094456084 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075705495 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093329696 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075834505 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.103278647 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074637053 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103285858 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124240684 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070879732 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093885587 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075863886 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10380706 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.0748875 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106424758 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.094086927 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075967954 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103826064 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.106443626 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075301494 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086843809 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07496839 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09463065 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075580269 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089963601 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084844811 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093952737 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071160015 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095251417 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075293792 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102799274 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.106840041 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078909138 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099160569 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076083116 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104006049 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093462221 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07601113 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102483131 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.108552817 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10384757 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102873265 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075296274 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.103694659 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103320088 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.091584272 seconds)
  done (took 6.415018432 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0899842 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097413984 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07938957 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.084186357 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067121802 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092640973 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066991394 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066339875 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097127487 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07714025 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101184564 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091255329 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076849329 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099522209 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073166053 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095600619 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072595897 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092861345 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077823864 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093046407 seconds)
  done (took 2.515078541 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.0782114 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106195625 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070766841 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075246326 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092673506 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076200904 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091288549 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072900893 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089261609 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073455964 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098788892 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080849372 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069236232 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095585886 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098308385 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075664976 seconds)
  done (took 2.169082208 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081011636 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.099458899 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082826169 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088802005 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067724109 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064394768 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089927164 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065924586 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08498982 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084303862 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089021149 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071578331 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068666071 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.088687298 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066849388 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091285076 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066724118 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067695683 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.089509556 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082818904 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100558026 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068175152 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088950609 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.071416736 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068790741 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.0958681 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069060601 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.087131716 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.068257524 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.089594285 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070603461 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.096313292 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.0667744 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067438663 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.087177521 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067010516 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087748281 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070122464 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071544065 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088129179 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067975156 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087776435 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070207047 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069964678 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08464863 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070183961 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.083900829 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075373854 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067188339 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088565088 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069564269 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091418095 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070265435 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098675623 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073482747 seconds)
  done (took 5.169585415 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083714042 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072131226 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085885567 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067639814 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091481877 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071690173 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072627748 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090280222 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070568546 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086444251 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071496846 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071371811 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090488352 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072779111 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089951132 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073380531 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064676548 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090337326 seconds)
  done (took 2.24661883 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074754857 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069058794 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09623312 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069604035 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087783427 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071514768 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064939636 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087788214 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068376708 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068293258 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088471301 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071749034 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087032678 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07193013 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069492536 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088298291 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07192666 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067258096 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088845965 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065241306 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090678854 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068077292 seconds)
  done (took 2.51443677 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075400802 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095305089 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.166694161 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110492461 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.085871031 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.10173766 seconds)
  done (took 1.467093745 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093333153 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1028182 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070086583 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089553594 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097421199 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070035495 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092635874 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070059996 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100717724 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104553872 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071371899 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099251153 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080993605 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103360485 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096979825 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078236033 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091013521 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072870869 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069229608 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111149988 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090991293 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081286981 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092278115 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072174 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090562369 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081756249 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100653838 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104682033 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071921613 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099872923 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078173487 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090627533 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083047983 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105148152 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072775026 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100753328 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09069666 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090458671 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0971511 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080000237 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092519446 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078317099 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100969512 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095834467 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081409421 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091670301 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076923068 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091443889 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071921779 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116890605 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097184513 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080705128 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098147015 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081635255 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101272628 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116653235 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084621126 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09931014 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09734948 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08555056 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099397288 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097038181 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080448498 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105206826 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078198917 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100089036 seconds)
  done (took 6.776239477 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08620754 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108823081 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072138471 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105332323 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080206035 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092073369 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071391445 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092286342 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071177018 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091357269 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134338415 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072851201 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100950817 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08131273 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092408079 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071327017 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091357533 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099746308 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072030136 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117612395 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072419396 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100118675 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100172136 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080718163 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106270944 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078203679 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092228226 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070727582 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091189871 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071994429 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097541925 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071075942 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101135021 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07076981 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101068226 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091559141 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072687964 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097099557 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071902285 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097293028 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079972092 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110418043 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091638131 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071800376 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105875457 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072548033 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091273601 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071478517 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090912258 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071520181 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105120354 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085776939 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105613206 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10040057 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072520133 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091589137 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072173945 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09114453 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073192459 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097928202 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080688596 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092405643 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117643753 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071974815 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091431326 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081118156 seconds)
  done (took 6.666827156 seconds)
done (took 131.410874738 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202105525 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186787695 seconds)
  done (took 1.222316895 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071184555 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098706431 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102522316 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131287361 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.090058894 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103089823 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101426983 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.102100674 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070417607 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089290134 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070294008 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07150592 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153778227 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070776992 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070461159 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.091445425 seconds)
  done (took 2.329094053 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09815159 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.202008993 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.084509603 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.090626833 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.073887886 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.09296196 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068290713 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07483437 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094336266 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069241458 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072003228 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090536278 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069243127 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.06951062 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094028645 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071949008 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.088009056 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073247201 seconds)
  done (took 2.417775745 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097430238 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.112935846 seconds)
  done (took 1.056089687 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.205657014 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.12579316 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209685205 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.430262757 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.250613996 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.284904754 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.183998702 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.181074064 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158279696 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.174677501 seconds)
  done (took 3.047062611 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102302365 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.164874102 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.276046232 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139296087 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.111432968 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.088357218 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.140016701 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.09318199 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.105480655 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.104980536 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084548843 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.10155447 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099911433 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.099355438 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077580964 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100976794 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102913936 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.098182164 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07846469 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099835108 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100197768 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.089994674 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079402063 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096600957 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081270741 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.102430995 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07035081 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068766272 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.099773093 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077986199 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.096160776 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.08703359 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.102159961 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.13420053 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105487728 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.136370227 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081131997 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095183828 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078736222 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074398012 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102423181 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.1011475 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.088653676 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100219333 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069396959 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080461891 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.089547709 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06959297 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.096970107 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.081758607 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.097475035 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076426231 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.133957794 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10124297 seconds)
  done (took 6.256443768 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.765435145 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113930608 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098906626 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.836127988 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122472387 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088368821 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.735429874 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122231916 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.211893481 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.735974581 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119051907 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.081268729 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.211953438 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.219498439 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.9339259 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.27316743 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.622831019 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111729994 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112449636 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.137190334 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102676506 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098033194 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115757582 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.412922043 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.077633767 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096306678 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.080680959 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103355032 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.142262092 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087252348 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099029971 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.160994355 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.231905425 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185700786 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.078294108 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073127236 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095970744 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.153046795 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.222120191 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196396666 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.162679463 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070625292 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.094806608 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.084686119 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115370059 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071802588 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144758592 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.156319268 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.1505068 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097891797 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.08067488 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.104645734 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.082191473 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.169440942 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.084651994 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.302704599 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.268715266 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096232558 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083420698 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110595594 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.219455564 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106959096 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206621948 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.100897406 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193701789 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073941707 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.75209935 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.151096777 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073900229 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105612962 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.082226289 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099992004 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.083176468 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.150082473 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.374419563 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.08420106 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09898075 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073709675 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224608718 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087019058 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094653102 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1432559 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.078299195 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104036622 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.086789425 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108433817 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.151044443 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.215969835 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.084596572 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.104732694 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077135869 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110315858 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.076750526 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.193471458 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.200623609 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.144863007 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.189628767 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.105612284 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.147004594 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.151646796 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102788502 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.154880852 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.082325104 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107077026 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083559103 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.199616908 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.128540274 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085282021 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099800501 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.080812223 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.130969948 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110708295 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.081180688 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.151470445 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458867927 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.150695063 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071406157 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.11088492 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.08260271 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.145146175 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100914573 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.218361115 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105601964 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.152395447 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.081549447 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.092550242 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.083534488 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.146023013 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105569246 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.083697983 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106754595 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080579876 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.238506463 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.176559302 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104256152 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204496786 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166644804 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079796635 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.153328232 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105608667 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149193976 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102337964 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.08361526 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099454553 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.738581976 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.106406391 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.082638972 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098530598 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.148748858 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095964633 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08540261 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107993457 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070591815 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.7546959 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088630586 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104700669 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085295278 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101072038 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.081448636 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10152112 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077337435 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.143321503 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209372522 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101567236 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.082264362 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.107573852 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.142428322 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.078521818 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107882414 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086519765 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108158634 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.083838552 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098531398 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086240457 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.17115658 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.144402454 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.179554991 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.572381749 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074164803 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10791529 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.18631231 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095944238 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.247262777 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103843095 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.184309091 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.168757384 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083338043 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288779712 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.147715865 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.169756041 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.090618642 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.157492498 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093124831 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.080542641 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.146125356 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.095867199 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080207597 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.144389963 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10852785 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.084161675 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.940315086 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073276948 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.205970851 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.093110356 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.154744124 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076903833 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104182871 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.280149354 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074547637 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110304264 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.14534507 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077073949 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107779619 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.681804783 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107297176 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.083698095 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100702975 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.179517571 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.144956215 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103088511 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.080337202 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103621567 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.144116631 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.190183396 seconds)
  done (took 39.142897185 seconds)
done (took 56.309358558 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.239514658 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.201249269 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.229715479 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.15280297 seconds)
  done (took 1.783657004 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.131543711 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.131398348 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.126041543 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068542128 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.133013525 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068167159 seconds)
  done (took 1.529535448 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.321758736 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277845176 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.20606444 seconds)
  done (took 1.675864178 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.272755349 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.228801794 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.454456766 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.28032277 seconds)
  done (took 2.233225515 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.189443356 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114672604 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071840548 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.10892652 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.155532775 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.225377559 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125829104 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.158195303 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.103906931 seconds)
  done (took 2.166962406 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.154810873 seconds)
done (took 10.406799241 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.233202698 seconds)
    (2/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.260075428 seconds)
    (3/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.145158941 seconds)
    (4/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.235288901 seconds)
    (5/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.079368215 seconds)
    (6/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.07797586 seconds)
    (7/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.216908254 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.20592203 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.0991869 seconds)
    (10/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.181203225 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.088548618 seconds)
    (12/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.248585013 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.137464763 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.108497843 seconds)
    (15/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.219154592 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.139144472 seconds)
    (17/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.101019809 seconds)
    (18/309) benchmarking ("sort", Float64, false)...
    done (took 0.130292475 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.103990507 seconds)
    (20/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.078118851 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.12510489 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079141662 seconds)
    (23/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.113543816 seconds)
    (24/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.224177099 seconds)
    (25/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07887167 seconds)
    (26/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079063141 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.119097444 seconds)
    (28/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102223157 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.118189101 seconds)
    (30/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.206019719 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.23394886 seconds)
    (32/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.215379611 seconds)
    (33/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.129576319 seconds)
    (34/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.108250492 seconds)
    (35/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.204305874 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.159646446 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.197723928 seconds)
    (38/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.0812321 seconds)
    (39/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.178660651 seconds)
    (40/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079750777 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.118485569 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.103116847 seconds)
    (43/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.187934813 seconds)
    (44/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.175934036 seconds)
    (45/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.139871118 seconds)
    (46/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.128480828 seconds)
    (47/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076171603 seconds)
    (48/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.142461379 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.119354766 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.070436848 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.171029824 seconds)
    (52/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.147053666 seconds)
    (53/309) benchmarking ("sort", Float32, false)...
    done (took 0.156543156 seconds)
    (54/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.164602361 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.205197618 seconds)
    (56/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078278742 seconds)
    (57/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07967624 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.212149882 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.180820533 seconds)
    (60/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078746876 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.100352639 seconds)
    (62/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.079245302 seconds)
    (63/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.173810155 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094155437 seconds)
    (65/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.197031937 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.172265648 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124645342 seconds)
    (68/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.109456711 seconds)
    (69/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055886697 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068685536 seconds)
    (71/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077857927 seconds)
    (72/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176312795 seconds)
    (73/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.164609536 seconds)
    (74/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083237946 seconds)
    (75/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.123063751 seconds)
    (76/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070913255 seconds)
    (77/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.239656312 seconds)
    (78/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.080604163 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.101661708 seconds)
    (80/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.076449121 seconds)
    (81/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.100016228 seconds)
    (82/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.111822618 seconds)
    (83/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.111999848 seconds)
    (84/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.10780468 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.099209016 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069916675 seconds)
    (87/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.117234148 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.129586415 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.095390619 seconds)
    (90/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.056148309 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054864828 seconds)
    (92/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.204401435 seconds)
    (93/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055700069 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.097969974 seconds)
    (95/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.164095909 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.080151744 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.098543811 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.161752096 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070558886 seconds)
    (100/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.065221786 seconds)
    (101/309) benchmarking ("sort", Int64, false)...
    done (took 0.094550079 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094677597 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.11956505 seconds)
    (104/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070984075 seconds)
    (105/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.112810895 seconds)
    (106/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.10316776 seconds)
    (107/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070854835 seconds)
    (108/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09129277 seconds)
    (109/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.082039522 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.104964257 seconds)
    (111/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.105672385 seconds)
    (112/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.164692476 seconds)
    (113/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.144520376 seconds)
    (114/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.077481781 seconds)
    (115/309) benchmarking ("sort", Int8, false)...
    done (took 0.169728621 seconds)
    (116/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.055154018 seconds)
    (117/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077310577 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.118187345 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.055290515 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093752737 seconds)
    (121/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.141333093 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.177929878 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.101568811 seconds)
    (124/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.384841265 seconds)
    (125/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.083949568 seconds)
    (126/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.13104202 seconds)
    (127/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.077519535 seconds)
    (128/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.09086576 seconds)
    (129/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.056950994 seconds)
    (130/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078791415 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.115509729 seconds)
    (132/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096056678 seconds)
    (133/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.167213396 seconds)
    (134/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07525505 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.173654334 seconds)
    (136/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.078628213 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092767391 seconds)
    (138/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064301843 seconds)
    (139/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.084307348 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.115356416 seconds)
    (141/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.076627217 seconds)
    (142/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.092418652 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069461626 seconds)
    (144/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.110775406 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.092821128 seconds)
    (146/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082635821 seconds)
    (147/309) benchmarking ("sort", Bool, false)...
    done (took 0.162591379 seconds)
    (148/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077596579 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.099527268 seconds)
    (150/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.143485858 seconds)
    (151/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.101722849 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069640622 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.116392774 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074775936 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076523332 seconds)
    (156/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.077308293 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069047209 seconds)
    (158/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055212074 seconds)
    (159/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055342295 seconds)
    (160/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.096338785 seconds)
    (161/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072473602 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.124365129 seconds)
    (163/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077189876 seconds)
    (164/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.144306645 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.138310972 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.092295521 seconds)
    (167/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.073016474 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.06907173 seconds)
    (169/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.076554081 seconds)
    (170/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054549592 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069691968 seconds)
    (172/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069315685 seconds)
    (173/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.099506948 seconds)
    (174/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.056344681 seconds)
    (175/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064761677 seconds)
    (176/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.177375076 seconds)
    (177/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.09260721 seconds)
    (178/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07583608 seconds)
    (179/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07803334 seconds)
    (180/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.100223729 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.07067383 seconds)
    (182/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065283578 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.195768672 seconds)
    (184/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054449196 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.195164369 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.078537097 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.05474481 seconds)
    (188/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.072843144 seconds)
    (189/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.11612122 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.145579965 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.078578608 seconds)
    (192/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.084326259 seconds)
    (193/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068111117 seconds)
    (194/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099453706 seconds)
    (195/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.103424589 seconds)
    (196/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063383544 seconds)
    (197/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.163626914 seconds)
    (198/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08293939 seconds)
    (199/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.099490393 seconds)
    (200/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.072053672 seconds)
    (201/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115463724 seconds)
    (202/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071196291 seconds)
    (203/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054661082 seconds)
    (204/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.099102051 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070225165 seconds)
    (206/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078399369 seconds)
    (207/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.092594585 seconds)
    (208/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054710092 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.055282632 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.09346874 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.128807069 seconds)
    (212/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.104509317 seconds)
    (213/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055300186 seconds)
    (214/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054663198 seconds)
    (215/309) benchmarking ("sort", BigInt, false)...
    done (took 0.213474357 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.167967263 seconds)
    (217/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069937314 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.161132539 seconds)
    (219/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.164675287 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.204319484 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.100243518 seconds)
    (222/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067607537 seconds)
    (223/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.099435802 seconds)
    (224/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.057150299 seconds)
    (225/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.072930388 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.152237642 seconds)
    (227/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.056095949 seconds)
    (228/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.078617983 seconds)
    (229/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070015214 seconds)
    (230/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070990213 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.117210711 seconds)
    (232/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.055692881 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091919214 seconds)
    (234/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.079996643 seconds)
    (235/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094712078 seconds)
    (236/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.101646877 seconds)
    (237/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077708805 seconds)
    (238/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.199095015 seconds)
    (239/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.055544955 seconds)
    (240/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.055410859 seconds)
    (241/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.098269896 seconds)
    (242/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054352499 seconds)
    (243/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065425101 seconds)
    (244/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.076805191 seconds)
    (245/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.087740206 seconds)
    (246/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068362634 seconds)
    (247/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066391563 seconds)
    (248/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.136266068 seconds)
    (249/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073720224 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.168303832 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.100471806 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092958399 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139333457 seconds)
    (254/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079439186 seconds)
    (255/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055763332 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.14146776 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.119529266 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093394231 seconds)
    (259/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.108285661 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091604344 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.092948229 seconds)
    (262/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077914528 seconds)
    (263/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076737795 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.092001797 seconds)
    (265/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.055771425 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069033171 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116254394 seconds)
    (268/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06972225 seconds)
    (269/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065457888 seconds)
    (270/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.09391459 seconds)
    (271/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077295446 seconds)
    (272/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095218068 seconds)
    (273/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080532735 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076234866 seconds)
    (275/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.100273665 seconds)
    (276/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.055776231 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077903313 seconds)
    (278/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094245679 seconds)
    (279/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075594765 seconds)
    (280/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06462456 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.116489882 seconds)
    (282/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.105028172 seconds)
    (283/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.070603844 seconds)
    (284/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.100473589 seconds)
    (285/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077513879 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068679881 seconds)
    (287/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.077876906 seconds)
    (288/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.056254027 seconds)
    (289/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070911133 seconds)
    (290/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097886617 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077887507 seconds)
    (292/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.055167556 seconds)
    (293/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079067813 seconds)
    (294/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068645775 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068418476 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.100837907 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.106264473 seconds)
    (298/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.092206903 seconds)
    (299/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.072042187 seconds)
    (300/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.065178401 seconds)
    (301/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.057259301 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.079167369 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07513021 seconds)
    (304/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.055552983 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09915019 seconds)
    (306/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070275196 seconds)
    (307/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.056558794 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.097727883 seconds)
    (309/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072989063 seconds)
  done (took 34.150758879 seconds)
done (took 35.017892127 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082280415 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09344399 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.101819155 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094687397 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.105088234 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078846647 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.100193432 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081121218 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.10471197 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083305977 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080120191 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.0814603 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079443724 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.101765342 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079346777 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094082895 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.10565153 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076505915 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.100115509 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069147083 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077877825 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092737194 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071370926 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057915746 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.103598355 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076587939 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098408376 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079287857 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069655258 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.092768187 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073585763 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077119914 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093681639 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08331378 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076111522 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.101343466 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079516572 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.102353421 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072145756 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069276584 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.100473263 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069534059 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076412749 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.100611309 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075843669 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.097538423 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077613319 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.08128984 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117729499 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072160447 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.100899753 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080702942 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078256144 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.099508245 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074088712 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.100999879 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075300624 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094412513 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.103475275 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072726409 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.102720563 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077877436 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074996171 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.103073359 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078269198 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102935777 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080762814 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075573127 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.102737431 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075704115 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069532602 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101163615 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073548987 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.092344246 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079991036 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081203624 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.091300209 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076589024 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076807775 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097949015 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069407064 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071991414 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.094932927 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075738068 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072138566 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.080971159 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074073867 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075976978 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.091822351 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078411949 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.098903322 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076635953 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071633204 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103830472 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069629351 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075112205 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.093400029 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070609139 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072190154 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.097108627 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070234162 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072524528 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.101403878 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.07108182 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075718486 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.103806538 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070098839 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.098682363 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069679996 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06922 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.106364148 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07940801 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.092675728 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072447462 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069882599 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.100209506 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069041822 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069487699 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.092990377 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06974814 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075433001 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.09262888 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072150968 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07698966 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.10716841 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069634278 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073037917 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094631832 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070206064 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075140704 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.093288866 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069687231 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.094276818 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066070932 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072026335 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.093420719 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077187599 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075000575 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.100893753 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072255814 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078742532 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.098010814 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076044732 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075560064 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092708639 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063066411 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072185754 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095651071 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.07125841 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069913589 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.095032079 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070008319 seconds)
done (took 13.640880198 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070630681 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.16569884 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.108680042 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.123626877 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114747474 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070114638 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080506129 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125367867 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07214372 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125949646 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091937789 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.113893805 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.105363399 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.093049167 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069909978 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097611632 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071253492 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084784189 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.129003939 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090928454 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.144655375 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.092427223 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.104432138 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117519886 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.079752855 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.111781785 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071147407 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073413981 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.096928729 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.095560073 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.114422016 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073154544 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070697465 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.115794721 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.087950792 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.101595185 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.07008973 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.099964266 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070252033 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070594449 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.122194053 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.091664044 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.098902031 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075687931 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097487704 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.073701791 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072155845 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.102178356 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.081246022 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.074947213 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107382737 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.137066431 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073720762 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.103172015 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070094768 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.080634669 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.102805008 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072869772 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.093793849 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073336608 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069485268 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.096334617 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085700091 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.124275479 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074603011 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103701169 seconds)
  done (took 7.142203745 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086973608 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097266245 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.111270964 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088136159 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.093612327 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071306001 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.093938491 seconds)
  done (took 1.569969426 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071099672 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092163616 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117252873 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094184609 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.11348548 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091369788 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103774774 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070872641 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088562976 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.095982215 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091728271 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.13349681 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072792132 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.101715083 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095663115 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071477175 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118374558 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071270745 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.097407573 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094263498 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074037647 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.115805304 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07284403 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.09474025 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084727588 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071278367 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143148786 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07660188 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096439846 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074349149 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093364761 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.121424496 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.108654102 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.084465249 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094903043 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085507092 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085563058 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092834472 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087528115 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.10027435 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085194818 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072186935 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.095932777 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069847517 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076433466 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.105075984 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072041364 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.095863127 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074387951 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090393216 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.09541052 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084858838 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071606866 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.099473609 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072534276 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099979094 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081858816 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072376709 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.114388845 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073065524 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112243902 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088055071 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085317368 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11157351 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073561279 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108975428 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084819512 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074561538 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096632422 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074947336 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111222737 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06988404 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072614677 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.105184434 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072683941 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117669695 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094745775 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072871855 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.105226409 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.07163598 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071685729 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.094870244 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094340928 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098648169 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072006146 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075594766 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098718422 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070185447 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070307706 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.098877475 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069747758 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073132569 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.098906804 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072455588 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097343132 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08813623 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072168925 seconds)
  done (took 9.600544746 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072753656 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072167803 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.096965442 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072490383 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072254271 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.09676659 seconds)
  done (took 1.424404066 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095205086 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.097740413 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086805848 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.077721449 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.135736833 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08592705 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.110769509 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080631803 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.113699862 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.08415592 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.110509499 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08654563 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.117013417 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077715434 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.110017331 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.077163649 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.110589092 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082042975 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.084380835 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102367846 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092820838 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.101916464 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078950503 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111670058 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075131192 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.101519029 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082618964 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.109315857 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.084504382 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079695147 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.101810165 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075204897 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.100486058 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079782164 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.1102727 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076964104 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101435646 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076473119 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082423778 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.099862483 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087062994 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102403821 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.083845806 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.100373678 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079499301 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.100800787 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076410791 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10570834 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085984196 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07697408 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.100539409 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077707074 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.098906107 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076735972 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077720197 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104271496 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075781568 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110611822 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.078235859 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.101045799 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074901997 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.099912076 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07963807 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075912125 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.109746532 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076537556 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.100928426 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078180144 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102670025 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.078078497 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.099178304 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.075694509 seconds)
  done (took 7.539543085 seconds)
done (took 28.195380421 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.657657001 seconds)
  done (took 1.592381321 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.687938034 seconds)
  done (took 1.626000866 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.736873279 seconds)
  done (took 17.672718673 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.469274946 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.543472826 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.781394435 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.15739873 seconds)
  done (took 2.886810361 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.888913885 seconds)
  done (took 1.846288201 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.224277251 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.21157274 seconds)
  done (took 1.380062615 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.731312522 seconds)
  done (took 1.68042762 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.323943148 seconds)
  done (took 2.267339284 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.308905542 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.140457498 seconds)
  done (took 1.39927329 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.534978415 seconds)
  done (took 1.489812919 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.635207866 seconds)
  done (took 7.5926043 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214372324 seconds)
  done (took 1.17968573 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.266412731 seconds)
  done (took 1.226658503 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.428786367 seconds)
  done (took 4.383498585 seconds)
done (took 49.162852408 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081191403 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08348793 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108377607 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081245682 seconds)
  done (took 1.304017524 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08291249 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077469097 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10694358 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077141541 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107232718 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077995829 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079566594 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.107538197 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077209275 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.103907702 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077985197 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.0776555 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.104949576 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079539514 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.10031857 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080268831 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.10608938 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078603513 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080585354 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.102847081 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07512911 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.104171234 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.081386376 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076684126 seconds)
  done (took 3.085488283 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081627919 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076204903 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.10260562 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075263834 seconds)
  done (took 1.299005705 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081990692 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097507657 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.120114794 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081733628 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.122267993 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116751922 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07464325 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073757366 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.100758382 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081339982 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072360545 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.12903234 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.118718997 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082365659 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.083704023 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.095609244 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.07354935 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.117347073 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081922022 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082682142 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.099007437 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081551446 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07283341 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.120031248 seconds)
  done (took 3.225127653 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08157081 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106901195 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.108438986 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094449268 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.123054286 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069804733 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.105834661 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096522824 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.157732977 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070200771 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.099945052 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070681683 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077066369 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.094897803 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081778318 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.139176365 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11827599 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.098116148 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101413354 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070501042 seconds)
  done (took 2.932009596 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079659778 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074828384 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095040556 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.074010202 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081452701 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102310332 seconds)
  done (took 1.47698986 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073012197 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071712013 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096134167 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071316716 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076896043 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096696518 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070550437 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072079819 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.096718538 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072843714 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071331551 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.09481297 seconds)
  done (took 1.928668869 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.465217373 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073191508 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.097331371 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070964164 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075629883 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096097472 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085500615 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072655183 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.121457146 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071310923 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096336212 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073558015 seconds)
  done (took 2.3639916 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217186587 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105732523 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242209202 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1694706 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139123099 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151660931 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133158293 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119465008 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203800011 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137835318 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186858472 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17542441 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132787795 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171059113 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119272693 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.105109531 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177900273 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223384067 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135595561 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185984656 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180466792 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146015932 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160530488 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132425916 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09425977 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149429659 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.101921744 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085988702 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213985459 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15839134 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168662951 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144826526 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127160105 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192857069 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228932882 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176063373 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168204495 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116899816 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.130364179 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.146319442 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243928983 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094553492 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21232932 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114476774 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112386306 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172387903 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147321812 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.154471072 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129715163 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093613941 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199155051 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192576825 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.171611876 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118731224 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139840464 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114969184 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145742831 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132290392 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228258334 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17904346 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159024607 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075030101 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12581142 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169047469 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161595415 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.145511183 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.159886424 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126346885 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17146437 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166123227 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144709408 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169256317 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.163150052 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117572187 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148187972 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153235623 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14967956 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206198814 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158240801 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.101198509 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14601686 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103772143 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111293923 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.173472903 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07986939 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192434398 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130208951 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.118721744 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117311713 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14009782 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140347555 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176699922 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168864191 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127701272 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070161597 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13510923 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.135378855 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167056205 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09371739 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138087258 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140713902 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.110016526 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155811138 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079301439 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155068364 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077930108 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154437597 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188179756 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081646127 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13852969 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106456663 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128727991 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155690898 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17954052 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12171308 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087897006 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211571834 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155168742 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103602895 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159355782 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178415432 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.127724839 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130157783 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178821251 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222574565 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094052437 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181248463 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134867406 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115741749 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.094219028 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158402642 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135423697 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.142090648 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08842274 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159771024 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214150243 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.080377237 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118154914 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166501712 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087536691 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112887085 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140451939 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10259974 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.119237663 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.126786038 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105849315 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160391429 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157438252 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13177561 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145339822 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131604823 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229651477 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095286691 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130372382 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10200889 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.101186592 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172322491 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176794069 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111121083 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182789876 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.151962893 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136642217 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150622723 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089569993 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156423704 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083763132 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.101358792 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172780829 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146428953 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141821777 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.174501029 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108588321 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.186981505 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160741551 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151436646 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154083553 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.11777903 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138904737 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.118917841 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112417232 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144107212 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.103564289 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096896401 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.11388548 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136662796 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096855152 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115529046 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178209674 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147468613 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129227928 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112155583 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129382717 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160234583 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.108489008 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154410726 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.155847226 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100795808 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.17578854 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196104313 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164931774 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096413617 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211995378 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075442204 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105308431 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.096457819 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149327394 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114686097 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08990055 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147767168 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158984317 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161751144 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155288013 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143403407 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154313804 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168263925 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076205534 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.148200341 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163658784 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154565065 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.140528051 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11778732 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.13082682 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128011199 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13492375 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232269429 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145353926 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155128347 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187929784 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.128741847 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08586102 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130699716 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163756224 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133737605 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155408127 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126981628 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094691228 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140372129 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.086946371 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138223215 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187735243 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115158012 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193981802 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.103963089 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18826851 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082141517 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144345124 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137886562 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116982983 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.093976462 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153592683 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180820917 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127531498 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148192796 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171071921 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084805095 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.156362932 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215955451 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173851912 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092281896 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137751341 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140344425 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14362754 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152180843 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130591996 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138515899 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166709888 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137012073 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.116651394 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094157606 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129032292 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103915469 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.118646489 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128268631 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.154576596 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093146628 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193595663 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1141825 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136877147 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149666346 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.130102809 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09778337 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130773347 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193837216 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154067606 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216607666 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102724689 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.157288922 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182444657 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106610261 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085296002 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.113139758 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157083372 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089362712 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167278509 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.126831408 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135825488 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15925484 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171164666 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092945393 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.100474682 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108438691 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151709266 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143580435 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131949906 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13719208 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184371671 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126865118 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085557478 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150435381 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136425897 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100979843 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174965506 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.093312604 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102206458 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107947132 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086749327 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144068383 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184758536 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.116302896 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.137325798 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146459903 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146755788 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143952283 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128309289 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10202025 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144724389 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178600807 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190106333 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086157495 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136966574 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15499527 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174326633 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141294165 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09310093 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208105381 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171516943 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177235748 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.094483656 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14578803 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145393363 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135536258 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162312992 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115329617 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183801349 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087785187 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202937906 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132436768 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096180434 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15272142 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127531635 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137408219 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166150976 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152620062 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088931846 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11308323 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146466277 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157676696 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10788144 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.106855833 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15922939 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.078077781 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195589419 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209259656 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112236015 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106145623 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127443238 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11438609 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109010681 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137662233 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120443613 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.117424259 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180118078 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.11420536 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168568584 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206595211 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147596328 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152739757 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097399553 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.672022442 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.10934413 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172200739 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106865472 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210671837 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103418484 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149708715 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137740373 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146505218 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174338512 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138004491 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.208532869 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171229514 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155455649 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111716012 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111163137 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14069382 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.123016691 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131939404 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118773758 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137761349 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132304876 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155024778 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147848282 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087244157 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119989868 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175383552 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134112177 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164156038 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157496239 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091678765 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150614953 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187075555 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087156174 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157478809 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211247878 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094698184 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130321688 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086363056 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133967022 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236982359 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078519371 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177585705 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152732546 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137500119 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145823158 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.126193762 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167886694 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137283645 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156024181 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124310034 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111025593 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134462739 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116907493 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.08340316 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133180368 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144400156 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.10176143 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136883904 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139872995 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171578941 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.078130519 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123583001 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108903691 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165322555 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218715946 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.094857337 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115960206 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141913734 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103585416 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151757325 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155689635 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115603059 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088568959 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.115842267 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.116938425 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.121252513 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131333066 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10963613 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143476659 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183367223 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.117571776 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.259046383 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094033753 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133913627 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075727819 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.112066223 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10187726 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126157688 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13675799 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102716863 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236916479 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.125782126 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086206056 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128011874 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079226345 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116543269 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118095842 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142991049 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157232325 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125179321 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066859096 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137947114 seconds)
  done (took 68.60379275 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.139128004 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.109488456 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.12522986 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.180166155 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.154202801 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24794026 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.186971853 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232065154 seconds)
  done (took 2.409357774 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074171624 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.124394802 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106717756 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.114393641 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072343379 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.097832141 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.307293931 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111517159 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072675758 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09413488 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.151740878 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07494541 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.488220168 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.073341835 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.100554908 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.090817297 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073591665 seconds)
  done (took 3.258077779 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.433676087 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.651299408 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.475999006 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07828825 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.925410531 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113748826 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.462004898 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.169551615 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.096960184 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.440237458 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.736049359 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136692666 seconds)
  done (took 17.759956666 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080336852 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.074431369 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.114622262 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.088123517 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.076087689 seconds)
  done (took 1.479781798 seconds)
done (took 112.070655365 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085835379 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.37045757 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058557134 seconds)
  done (took 1.503209757 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088158959 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088663107 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.116870152 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087684801 seconds)
  done (took 1.430270809 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078910968 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07984889 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.115736669 seconds)
  done (took 1.320221595 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.301034398 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.14072012 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.120424011 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08657253 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082521524 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.109398437 seconds)
  done (took 1.323339969 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077447377 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079724605 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104311447 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081628078 seconds)
  done (took 1.384165667 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.08028825 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05703541 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059047654 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.086495441 seconds)
  done (took 1.330533542 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094028018 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083425279 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.11131432 seconds)
  done (took 1.331185521 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110797465 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116881827 seconds)
  done (took 1.273356168 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085675262 seconds)
  done (took 1.128823656 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098564917 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.148148783 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.168875871 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.142747915 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.17801551 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.142740887 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.093189924 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.121243482 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.108931733 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.094625049 seconds)
  done (took 2.346082254 seconds)
done (took 16.056752032 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083998238 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.395792836 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.366942337 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12261087 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673555776 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361250025 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.052718598 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096895287 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141831511 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07285056 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115667935 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653317755 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.004464928 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.331969559 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.990837635 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328977018 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.655511032 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099738964 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073112884 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072455914 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.035485484 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072885596 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099064952 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073922208 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.667973823 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.404077496 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072376414 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.353864858 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073431978 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0745663 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.387298355 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073630287 seconds)
  done (took 16.12092486 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076626098 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.149829272 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079732815 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088397145 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.102805751 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075258435 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.1029055 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.074463043 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153328188 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073354985 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089062887 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.099636907 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076920865 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.10012438 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092445101 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072815995 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.100576056 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074080636 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.099156125 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074214886 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091910281 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099312149 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074543458 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073372308 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099479111 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085309012 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100287514 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073994779 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072699068 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.10213234 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076028183 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073636353 seconds)
  done (took 3.929275858 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121582926 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.158833102 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080375563 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134499518 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11995905 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102356904 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.176753596 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099600608 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157913352 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073491042 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116664362 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073549961 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132873115 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075248488 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092720251 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100609695 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074455372 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100092834 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074023809 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073742429 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119536656 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073397523 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100349148 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074689846 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073407429 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.11337927 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074362469 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.098768911 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074454332 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075325494 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10346156 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074624235 seconds)
  done (took 4.247683777 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077398619 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080156313 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11480799 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089117925 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.075124351 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.104535549 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077503561 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.101325251 seconds)
  done (took 1.774682296 seconds)
done (took 27.115198278 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084406827 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074733576 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105191172 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087002098 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077654769 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.110678481 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071787883 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.106659371 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080970789 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077757798 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.108177884 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073397161 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075979056 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099632149 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080281982 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073458432 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.110466272 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076527376 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.110847177 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084911339 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074918384 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.108862845 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079510892 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.110413458 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084915024 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083912966 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.115176324 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078887515 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.101612058 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076617931 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080221543 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.115761482 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074458759 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.110991158 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.074046649 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073202587 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.099672084 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.074061606 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08327985 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.107962772 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.076187511 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.107620039 seconds)
  done (took 4.806246054 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093243851 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095731909 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.117442796 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067480958 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.072754929 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.094072329 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093066634 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.092306591 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067346656 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092518254 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.089792556 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063333871 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064705379 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058550981 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.089726386 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.062196146 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065305017 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061778266 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.090262494 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06419736 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.065348537 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.085560506 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.065684752 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064397489 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061054377 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.093800965 seconds)
  done (took 3.088232831 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080584145 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087722021 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.120495569 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131064551 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.139754814 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081161709 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.11176504 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091440241 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.117508782 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.074035736 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076140986 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.131558433 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091698574 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10690981 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.076710085 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087383587 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.11502785 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075750845 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07906365 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12163226 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089281856 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.110856811 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095016308 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084365911 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.100554988 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074714425 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.105539896 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087204825 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.079974855 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.109976305 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.078709752 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.10293914 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075966939 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084038308 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.106474958 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074278842 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.119786083 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083475296 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081793157 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.101458004 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076636566 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.075833923 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.12092981 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.117703654 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.100662278 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079488132 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.115949708 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083129024 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.074392333 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.118461053 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081680256 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.100209714 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076285054 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.074145213 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.101441403 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088896772 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075231379 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.103367969 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081484681 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076402083 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.113484335 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07733155 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.116115095 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.074572061 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07999275 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.102634098 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07441674 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072665062 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.123623216 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07907896 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.142468448 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.074188892 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.102187743 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082920586 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080921208 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107409699 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073760239 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.116290253 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083928739 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076218776 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.111238588 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.077197174 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076223509 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.118755729 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075920092 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.101885001 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.075027553 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.079156708 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.103373296 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.074937486 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086744993 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.101082148 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075646864 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.113385296 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073306307 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073660526 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.107226542 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.079004435 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072009905 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114028429 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.077653188 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.101111189 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08327675 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073992836 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.104185567 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083326194 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.105663964 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.073153046 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.077537657 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.107345747 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073626829 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.076937094 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.104487095 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.076188176 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.083089614 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.107509505 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077289474 seconds)
  done (took 11.859167483 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.203860255 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.19588876 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.076276387 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.188928956 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.085293989 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.112734384 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.190036663 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.105300794 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.102606911 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074094576 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07401492 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.141394564 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105768168 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.144931151 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.110990095 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07344661 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092032676 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.142962147 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.191744148 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.184461238 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092754118 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.111250923 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075503991 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.075502188 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.103713912 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083259087 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.117515812 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.085348706 seconds)
  done (took 4.416260581 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087978267 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.134101666 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079923675 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094281521 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.126135663 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073166186 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.106012872 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07584682 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085993905 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.113584959 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072940668 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.108493304 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079875802 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.110820411 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074955191 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.08197874 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.110899886 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075362101 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.104209188 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078431789 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079357268 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.114946785 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.077773997 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.100957682 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.080447776 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072345239 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.099734922 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.092271717 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.101452634 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095995926 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.100075463 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.080258481 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083351812 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.103537615 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073727638 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.075449355 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.104973664 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.076265421 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075203758 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.100319891 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072793761 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063054743 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.100930846 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.086269496 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.108268092 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.065354705 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.079002282 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.107430564 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078736206 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071412497 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.104162089 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076233226 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.104330388 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081628721 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.078137787 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.106990039 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.0767134 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.070803954 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.108076766 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.075626648 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069803775 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.10073252 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078258481 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073223281 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.109901003 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078007804 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.099804763 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.0759841 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.077327037 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.108316821 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.075945637 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076540612 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.099871941 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.076174381 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078906295 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.106755595 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.077282272 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072494466 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.101372835 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074174756 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061257387 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.101815648 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059578946 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076297881 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.099976339 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072619984 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07565668 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.108576133 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.086646021 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.102964345 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.080234985 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.1021113 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.073817088 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.077418199 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.096639832 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076492764 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088286537 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.119095195 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073192924 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.100570857 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.087181485 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.079065138 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.101093131 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062116574 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.079875182 seconds)
  done (took 10.312851252 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096574357 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098461584 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.103500934 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087700737 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.128736851 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096384334 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.109562675 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081074195 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.075320308 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.119643183 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07410811 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082105705 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.106724995 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08285609 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.12443853 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082048139 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075463629 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.111830031 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.082041864 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.137068852 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087752916 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.0902332 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.112907444 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.074407128 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.105983804 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.086442649 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099458123 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.112151544 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.082658529 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.116199077 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.08475409 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.100027472 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.11718119 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.077829531 seconds)
  done (took 4.387854603 seconds)
done (took 39.912994486 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.150028156 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.348709673 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.130062817 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.030240076 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.140569877 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.135431444 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.138534121 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.12715293 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.604616216 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.129846162 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.385768065 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.764945832 seconds)
done (took 59.159090564 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.163866871 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.282374562 seconds)
    (2/2) benchmarking "String"...
    done (took 1.398599197 seconds)
  done (took 3.751080218 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.47347588 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.095652596 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.406914827 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.12612853 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.125089714 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.565048691 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.687106005 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.443271599 seconds)
  done (took 27.518396248 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.124223739 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.493072341 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.505822154 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.522499621 seconds)
  done (took 17.714552985 seconds)
done (took 58.693544039 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.132934867 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.166378731 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.138231292 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.108423178 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.246172882 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.152016439 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.414318493 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.351479612 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.123149996 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.121977463 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.141200329 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.122698351 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.130649154 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.457912592 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.13460292 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.127969173 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.156588476 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.597994688 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.496699853 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.134587011 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.134756471 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.179726952 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.14103722 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.13274467 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.13339019 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.121223523 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.12199199 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.144046875 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.23897763 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.128834489 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.206300368 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.612007878 seconds)
  done (took 188.820621735 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.120968818 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.226513558 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.304485574 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.165195218 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.68818467 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.323604753 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.275579436 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.731380978 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.135202744 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.138370537 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.351183705 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.125229391 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.413886631 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.143778868 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.129571028 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.225719889 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.324473126 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.413772742 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.136601238 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.36789714 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.119944291 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.46731299 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.324907806 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.314667983 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.142441095 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.231097252 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.135201355 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.124782882 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.315370966 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.264598779 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.149787534 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.137836387 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.661392801 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.977241468 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.125309598 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.133819393 seconds)
  done (took 147.432725947 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.376324128 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.119298622 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.119689233 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.120113653 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.147143252 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.119370553 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.603863927 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.609053031 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.622932802 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.482613172 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.17755357 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.296333029 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.118898306 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.208690659 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.131458473 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.120664298 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.133606264 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.144735858 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.123144662 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.120213915 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.606578885 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.137161705 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.32909942 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.130162511 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.12035139 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.14834883 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.510202865 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.12011925 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.147463011 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.427333643 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.160081807 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.11977658 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.372910846 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.64694071 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.119918003 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225566569 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.121845134 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.148142277 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.119847861 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.381543312 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.120887536 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.121044396 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.123948315 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.662015153 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.126070127 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.60739224 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.124406452 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.97024888 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.120840815 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.120702259 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.498899676 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.515221235 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.125622406 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.121242216 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.123088748 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.121777663 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.120671195 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.14924183 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.371848548 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.219336115 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.121695687 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.124659377 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.149056676 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.121592524 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.121085043 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.325484201 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.121109029 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.401197634 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.185348335 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.335370693 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.609325388 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.126103048 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.211892348 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.236805211 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.122114191 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.121529109 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.121539754 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.121744353 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.225236203 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.121868402 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.491396205 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.128654634 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.123298664 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.179556968 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.212975466 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.122612448 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.373485675 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.126883125 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.123330125 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.792372301 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.12608502 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.214665999 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.125003409 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.123313114 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.123028255 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.491866409 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.61122662 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.247522676 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.126738962 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.122517368 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.388126334 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.125017891 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.503093373 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.600867289 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.680696995 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.128391658 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227372795 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.127478146 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.124062462 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.123523362 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.152510698 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.123830791 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.182522825 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.12341391 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.517507868 seconds)
  done (took 335.286989777 seconds)
done (took 673.984723926 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.816792228 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.768817858 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.899634471 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.781026798 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.763710134 seconds)
  done (took 10.097869614 seconds)
done (took 11.163869184 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.293399314 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.293066458 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.177641528 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.295553655 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.150348916 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.309599601 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.275980482 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.147380749 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.217668979 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.192337709 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.217118473 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.167569293 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.149229099 seconds)
  done (took 16.955364632 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.435505368 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.424096161 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.188103801 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.426860365 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.168209281 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.419385215 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.317123799 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.330077508 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.338375173 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.1402369 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.139057444 seconds)
  done (took 15.397312411 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.423662081 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.426702682 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.192337772 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.431163248 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.167734249 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.425188066 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.32636371 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.328782185 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.319101176 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.140795344 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.139281471 seconds)
  done (took 15.391208796 seconds)
done (took 48.811072835 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.134226591 seconds)
  done (took 2.204165051 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.166899592 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.326272971 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.147642136 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.140642259 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.135978538 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.137877811 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.140254812 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.1353073 seconds)
  done (took 10.401249041 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.133267237 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.131484117 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.131693418 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.133745131 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.133860813 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.131305646 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.134020154 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.131787548 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.132356264 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.134060975 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.130779442 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.13375525 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.135227468 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.134584397 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.132139688 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.132137187 seconds)
  done (took 19.196350999 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.133563838 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.132973767 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.13194449 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.13281372 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.132733129 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.133232236 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.132959974 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.13260093 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.132058161 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.131705318 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.133039055 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.132605799 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.133384981 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.132991485 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.132454822 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.134524998 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.132444631 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.13388204 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.136694507 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.133212647 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.133576073 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.132402568 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.134027837 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.134062924 seconds)
  done (took 28.269210994 seconds)
done (took 61.138778358 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.333711493 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.625644732 seconds)
  done (took 9.031128125 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.135334511 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.135450173 seconds)
  done (took 3.344008531 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.136740105 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.136684989 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.136079388 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.135767872 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.136143178 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.135862879 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.135685811 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.136069493 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.136856118 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.136575403 seconds)
  done (took 12.434632702 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.136456713 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.136437673 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.133726003 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.136546127 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.135747886 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.133379022 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.136476201 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.136444764 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.136916522 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.133218327 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.1362196 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.133287491 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.136853023 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.135097491 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.13624669 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.134806235 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.134057056 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.133935002 seconds)
  done (took 21.508588928 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.136683841 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.136440942 seconds)
  done (took 3.345846417 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.133500902 seconds)
    (2/7) benchmarking "second"...
    done (took 1.134796682 seconds)
    (3/7) benchmarking "month"...
    done (took 1.135257414 seconds)
    (4/7) benchmarking "year"...
    done (took 1.134729151 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.134646796 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.134242098 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.135547898 seconds)
  done (took 9.015924612 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.13803981 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.311709874 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.397168973 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.752991166 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.139455494 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.140697691 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.017750797 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.141137623 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.143969832 seconds)
  done (took 13.255425189 seconds)
done (took 73.005441273 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.102498949 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.132885289 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.933090123 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.137868261 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.161982092 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.431829562 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.133005657 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.250800536 seconds)
done (took 36.355503127 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.139128547 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.844133828 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.861677326 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.132095729 seconds)
  done (took 10.912159874 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.127368985 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.989028035 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.125421676 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.105668481 seconds)
  done (took 17.421852975 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.086304043 seconds)
    (2/2) benchmarking "read"...
    done (took 1.467443353 seconds)
  done (took 4.627979961 seconds)
done (took 40.173829179 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.139590401 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.139504346 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.13601261 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.140116236 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.137024211 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.135579216 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.1369382 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.137883223 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.138477884 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.13849039 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.139193243 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.137793112 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.13954048 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.139340142 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.136726483 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.136155526 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.139148766 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.137592126 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.137001497 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.13624301 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.139481641 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.137014732 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.136587476 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.137434662 seconds)
  done (took 28.384438715 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.140507953 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.137275396 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.140719342 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.140585736 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.136778127 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.139961222 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.139780153 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.136794234 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.139667523 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.140474747 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.138311532 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.138260799 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.139565536 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.13736144 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.140407049 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.137698046 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.14096718 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.137847524 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.140798563 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.138388062 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.140601312 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.139061201 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.138742492 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.142006936 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.139992548 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.138306066 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.140819696 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.139436793 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.141611501 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.139935848 seconds)
  done (took 35.258959184 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.145475453 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.146527884 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.142427076 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.141629911 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.141317961 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.142372697 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.141745839 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.141428406 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.142373911 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.142743111 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.142133445 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.141591508 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.142608857 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.142331495 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.142464721 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.141760124 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.142104011 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.141840278 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.142673297 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.14228707 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.142369052 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.142220456 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.142505413 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.141778844 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.141994404 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.141776755 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.142200979 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.14284545 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.142934239 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.142168831 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.142610601 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.141299335 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.143171213 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.142540055 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.144510744 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.142408488 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.147068955 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.148633476 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.142840275 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.142576124 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.143601699 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.143123896 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.143846749 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.143071522 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.143349754 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.142565608 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.143622732 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.142790393 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.144148056 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.143767579 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.143730638 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.14319818 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.144749914 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.143363679 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.144043405 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.143328634 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.14388873 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.144013309 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.143497963 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.144036057 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.143833568 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.143331625 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.144091597 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.143563185 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.144401699 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.143972447 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.143053305 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.14399206 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.144799266 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.144612761 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.144444327 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.144566448 seconds)
  done (took 83.390442311 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.144145474 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.141960128 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.141358934 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.141536277 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.141963407 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.143673081 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.141683194 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.144571855 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.141751989 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.143957651 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.144732135 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.142384681 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.142778179 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.145409688 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.145546047 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.142843462 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.14486677 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.14238137 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.145443108 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.146319622 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.143544769 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.142230762 seconds)
  done (took 26.235241588 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.14547042 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.146068942 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.142974852 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.145213459 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.14357652 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.146447105 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.14605213 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.145525963 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.148017064 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.143373361 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.1433241 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.146431784 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.145039499 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.143550089 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.144005419 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.14295361 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.145811003 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.144122587 seconds)
  done (took 21.689990415 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.144483294 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.14293501 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.14576798 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.143838379 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.145319879 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.147243607 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.144221559 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.146457907 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.145982848 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.144926893 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.14743071 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.146312208 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.147304473 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.144446424 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.147156476 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.144604101 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.146432392 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.14366251 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.147925784 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.144499764 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.145223068 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.146819738 seconds)
  done (took 26.285315209 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.14635115 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.147093285 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.144997528 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.145936974 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.145406687 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.14657101 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.147719348 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.145866104 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.147502234 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.146937969 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.145434616 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.147656524 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.145274368 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.146452212 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.145472072 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.145383306 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.14832211 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.147079581 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.14894027 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.145750012 seconds)
  done (took 24.013443963 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.148655489 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.14891372 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.149161584 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.148665544 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.150924332 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.149102742 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.14960492 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.149872134 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.149852776 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.1497645 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.150604572 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.149560744 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.149771376 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.149369323 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.150143197 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.149944316 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.150480847 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.150000127 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.150672549 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.150269455 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.151148292 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.150711551 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.149776094 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.150816781 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.151168631 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.152452996 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.153030973 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.152634411 seconds)
  done (took 33.291999601 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.15015702 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.149905494 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.147326636 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.147552327 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.147151613 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.147008155 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.147005374 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.147693401 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.150928396 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.14712251 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.150773331 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.150632693 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.151417448 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.151368779 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.150155167 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.15079182 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.150248919 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.147987571 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.148863734 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.149013906 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.150871729 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.150115535 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.150983588 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.148289906 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.149040928 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.151034863 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.14855378 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.148878958 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.151767262 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.148858552 seconds)
  done (took 35.568347587 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.168968684 seconds)
    (2/2) benchmarking "in"...
    done (took 1.169789675 seconds)
  done (took 3.424164273 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.147951288 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.151523351 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.151338111 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.148740301 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.148825008 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.151230028 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.151975192 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.149904789 seconds)
  done (took 10.288410622 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.150530962 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.15266304 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.15141173 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.151583999 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.152318595 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.151613816 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.159406565 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.167451862 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.152877809 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.152835257 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.156556431 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.157905896 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.154688944 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.152021522 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.151607041 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.15541122 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.153140828 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.15260325 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.15320094 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.152851645 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.153252461 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.154869165 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.155249756 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.151092958 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.153465374 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.164466815 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.156189158 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.153003525 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.153345198 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.156623334 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.152304074 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.150766769 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.154459329 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.154292436 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.154598249 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.153162475 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.161619505 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.16840087 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.160945891 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.1548164 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.154470346 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.151709259 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.154186611 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.154266922 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.155860523 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.154371804 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.154361127 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.151358539 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.152366052 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.156297686 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.158384005 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.153372598 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.152135542 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.158733862 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.156429024 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.161492374 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.170637982 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.157154901 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.162051369 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.165566464 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.167755336 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.161871418 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.156290153 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.154584388 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.163444703 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.17489181 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.161839883 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.168570237 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.15163627 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.155878294 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.161271166 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.167198853 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.162526456 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.15516885 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.155651397 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.155655346 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.155267208 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.155835896 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.163366541 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.17482272 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.158604708 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.158324066 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.167183448 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.176383179 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.158271019 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.15748307 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.156653248 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.156760389 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.157119353 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.166885485 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.171394179 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.156356758 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.157763763 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.147127007 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.148429814 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.148825134 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.147217643 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.14812851 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.145949742 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.149247072 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.149131315 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.15169421 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.147346996 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.138795125 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.13848491 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.144438248 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.138098024 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.136890603 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.146293 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.139350349 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.138546058 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.132343663 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.136018784 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.128650901 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.134212547 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.138290132 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.132719996 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.133670497 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.132983048 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.133136904 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.139382569 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.151516864 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.131662389 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.131780001 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.133825457 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.140431451 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.131716801 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.135199736 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.132493786 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.127375867 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.126510719 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.130679704 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.129955982 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.130139659 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.130559526 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.130429712 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.129270027 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.128115901 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.12769501 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.128332438 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.12927284 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.12838549 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.129196868 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.13076257 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.128385302 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.131042073 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.132868905 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.127238644 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.128623651 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.128155783 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.12523704 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.12735121 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.128785291 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.128533299 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.127525105 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.127153881 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.127104425 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.127636395 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.126691932 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.12806455 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.12798654 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.127057881 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.130329765 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.130252028 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.132718094 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.129846866 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.127182887 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.129004269 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.129774885 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.128187813 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.128788293 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.128696149 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.132466305 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.135945525 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.12918453 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.129578857 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.131494714 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.129480267 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.128692925 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.12907738 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.131469781 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.135121353 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.127380992 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.13333986 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.126965486 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.126350963 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.125559574 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.125065727 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.124709311 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.125771459 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.126282249 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.129392515 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.136144852 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.130775901 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.12434496 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.127296873 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.125397739 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.127727484 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.128719049 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.123835083 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.123875659 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.123985011 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.122587095 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.124673208 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.123759904 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.124397447 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.122848203 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.123919583 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.122892068 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.122368737 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.12412407 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.123447877 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.124780186 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.121991063 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.123345347 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.123400559 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.123463159 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.121600512 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.122175181 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.123745412 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.124512871 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.124634611 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.130249993 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.121966751 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.125031155 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.12633199 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.123803512 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.123244421 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.124165863 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.125957973 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.124195697 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.129914739 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.139502867 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.125266964 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.130158398 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.138942687 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.123241014 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.126927994 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.124710574 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.122822881 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.126832817 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.130994313 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.125488032 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.125025022 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.125726087 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.124851951 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.125872446 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.131051257 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.123390303 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.124781487 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.125710238 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.126268247 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.123668575 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.126384032 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.126069286 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.12694424 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.126967066 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.126202425 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.125865354 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.126643762 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.126290971 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.125718357 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.125708792 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.128156492 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.132555781 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.13144104 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.125809435 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.128608238 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.125828589 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.129625172 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.126207457 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.126425386 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.126477863 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.138302059 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.133479885 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.1327662 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.128528049 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.127478056 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.133254792 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.125780878 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.128554262 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.125268722 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.12529832 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.125220617 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.125689438 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.123467552 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.126179852 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.126824448 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.127113321 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.125895324 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.129517372 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.126011976 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.124388811 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.126133978 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.126318573 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.12599751 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.125419838 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.126638988 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.128023541 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.128223604 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.12503894 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.124716168 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.13237937 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.141741477 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.128093073 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.126690819 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.126375116 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.125066782 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.127035119 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.127397007 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.129585321 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.133195721 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.129466231 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.133975902 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.127278378 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.134025159 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.127853886 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.128916682 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.133322091 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.124588423 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.127193182 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.127627655 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.126889557 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.13485103 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.143490605 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.127302936 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.130765758 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.127715162 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.128307363 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.12787252 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.128048538 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.128060398 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.127589507 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.135886995 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.141854278 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.130536697 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.129692866 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.124656038 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.128031263 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.126839016 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.127893805 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.130490215 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.128173242 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.128919639 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.127940411 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.128236653 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.128482741 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.128943533 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.128100407 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.127276248 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.126722753 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.133544252 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.143130911 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.12956827 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.126430379 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.134389243 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.12749981 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.133302225 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.142452482 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.129098167 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.126956484 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.126804512 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.128209037 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.126602419 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.128177255 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.12796472 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.127858747 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.130109349 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.127478934 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.128972517 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.128882019 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.129371033 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.127041062 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.136210308 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.147304221 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.128502502 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.13193914 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.125382105 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.12867504 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.130965135 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.127856027 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.127198624 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.130308615 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.136202948 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.134276829 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.128761305 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.128669484 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.129125901 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.129739409 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.127784136 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.129833592 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.129201913 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.129462281 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.129473276 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.129199617 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.131843554 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.130298586 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.130121931 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.130255792 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.130086158 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.137982179 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.129795242 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.130645578 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.129939349 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.12865211 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.130896038 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.129727116 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.129589848 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.130077136 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.130356817 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.130051866 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.134176214 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.134065415 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.131940577 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.130112542 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.130273445 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.130642179 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.129843856 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.131142607 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.130326602 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.130701753 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.130933821 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.130169274 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.13082313 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.128912141 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.130283223 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.130133722 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.130221394 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.132556857 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.136808117 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.13087606 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.127330609 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.131712685 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.130730674 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.129937995 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.131038868 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.138419795 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.132648602 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.139364371 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.137740313 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.133374309 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.131514744 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.133648552 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.137659079 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.130813554 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.131137638 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.131437155 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.133426421 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.132138532 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.132800381 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.132566649 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.137468926 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.132123283 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.132140685 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.140267408 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.149099689 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.131409529 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.131961406 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.135019838 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.131943588 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.130001486 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.133433304 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.132180421 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.13970938 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.149204074 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.1328104 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.133422962 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.13072429 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.132736044 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.136498552 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.133550052 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.13438399 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.130846906 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.135809309 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.133578666 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.133766326 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.130443245 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.133289402 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.132808599 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.13459628 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.137988392 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.130793209 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.134718826 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.133456892 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.134328524 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.133600814 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.133517751 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.130888861 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.131712558 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.132670648 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.134671883 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.133446665 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.136176094 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.133005273 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.134402873 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.134919965 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.134567489 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.136650605 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.141406035 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.140378028 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.132506775 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.133741053 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.135417319 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.13625197 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.134810052 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.134402521 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.134091601 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.136558444 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.135175653 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.134480982 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.135026788 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.136901922 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.148626747 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.150223061 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.134314129 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.135656065 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.138623136 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.135047474 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.133772873 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.135013201 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.136769978 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.137039869 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.140933138 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.135651208 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.141759518 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.150237694 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.136280996 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.138860226 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.137670925 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.141202948 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.13815266 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.136037546 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.135668514 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.140138288 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.14965732 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.136672381 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.144932629 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.161611027 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.151561617 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.136779429 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.136852338 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.135258725 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.135657453 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.13779719 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.136531528 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.136129349 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.137630009 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.136762403 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.137782064 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.140937532 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.13758538 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.136868966 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.136806616 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.136472891 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.138026958 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.134046882 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.136244896 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.137172151 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.137956312 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.136849031 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.137795216 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.136670426 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.14936103 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.145472005 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.137050314 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.13726922 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.135313868 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.141202032 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.138734083 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.145715669 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.143205731 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.13766891 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.137875088 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.139930396 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.138028715 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.135443747 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.138481554 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.137481768 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.137554811 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.135729278 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.150084815 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.146376105 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.143164971 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.137994167 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.138393348 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.138701224 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.139536982 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.138763715 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.138824567 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.139873599 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.139456733 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.141559679 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.138432667 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.138908853 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.139848406 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.143468078 seconds)
  done (took 678.229004167 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.136566535 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.13576449 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.135843055 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.136545309 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.136463111 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.13709743 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.136504671 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.137492955 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.136354617 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.136519095 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.136330207 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.136846846 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.136671442 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.136951089 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.136547176 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.136511593 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.137221387 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.137376964 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.137822392 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.137003818 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.137961123 seconds)
  done (took 24.945859085 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.140158097 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.137306523 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.137708823 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.139807082 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.138076834 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.140388416 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.137079093 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.140154126 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.140228841 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.137819435 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.140398459 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.141098013 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.137838297 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.138485345 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.13879963 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.141057287 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.140719135 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.13885273 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.140713333 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.140492044 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.141274276 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.139112554 seconds)
  done (took 26.142254201 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.140014099 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.140415971 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.139249208 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.138338285 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.141282678 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.139038772 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.141999442 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.141958323 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.142054996 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.14177175 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.139198387 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.142168633 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.14619384 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.145545379 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.141954326 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.142298746 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.28616015 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.142099011 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.142418382 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.142180539 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.139761542 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.146725671 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.140323624 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.139262193 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.140807408 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.141120235 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.141780228 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.143339158 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.142112667 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.143294008 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.145785875 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.142456723 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.141452285 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.143686871 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.14238635 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.141648279 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.146136808 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.142498231 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.140476745 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.142620227 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.151141526 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.159496658 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.142770807 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.148681882 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.143509808 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.143063526 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.144834095 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.148809657 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.140737037 seconds)
  done (took 57.22434966 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.142744425 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.143094717 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.1409176 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.142951315 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.143917262 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.143758653 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.143097513 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.143030408 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.140488954 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.141032933 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.14402431 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.141980544 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.14183534 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.14376765 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.145403377 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.142405784 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.141955597 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.141789351 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.142414472 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.142471368 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.141728064 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.14575463 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.144149353 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.142201614 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.144647897 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.14145712 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.142898613 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.145548349 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.143922773 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.142193045 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.145151397 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.14551227 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.145177884 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.14379805 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.14270559 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.146525908 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.146526299 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.143113323 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.146323824 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.144199113 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.14616715 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.145457206 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.146293034 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.145405788 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.143394639 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.143408002 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.143254997 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.143670447 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.143219944 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.145755834 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.145733414 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.143827742 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.146621923 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.142596309 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.146887811 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.145639406 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.144592208 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.143629213 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.146081857 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.144586104 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.144400279 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.146322902 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.144289336 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.147412436 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.146704215 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.144849532 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.145075958 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.147063572 seconds)
  done (took 78.878902538 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.146831087 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.147431175 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.147432888 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.146066682 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.147635507 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.146924456 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.1477344 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.146248281 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.147354947 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.146406348 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.147533738 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.146687488 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.147039258 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.147588066 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.146976997 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.14672603 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.147421365 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.147019715 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.147063405 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.147004695 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.147061884 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.147026708 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.147052242 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.147721811 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.147787377 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.147116395 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.146622158 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.148107805 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.147542054 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.148198164 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.147731112 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.147808757 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.147774023 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.147132188 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.148564213 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.147399939 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.148588584 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.147695084 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.147281008 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.147857853 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.147360116 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.148402645 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.148174399 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.147799621 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.148389766 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.147860163 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.147776977 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.148881716 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.148851733 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.147867178 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.147539618 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.148978608 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.148201823 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.148337911 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.148359279 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.148587875 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.148646269 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.148945276 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.149444389 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.149334119 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.149388118 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.149753457 seconds)
  done (took 72.242507892 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.149775585 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.149405797 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.147037861 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.147403209 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.149853129 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.147037697 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.150810988 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.149731197 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.149839178 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.149774706 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.149816634 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.147483527 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.14762316 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.150473464 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.147243885 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.146727505 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.147596556 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.148279674 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.150039927 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.148099897 seconds)
  done (took 24.057502325 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.147320351 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.150081999 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.148016268 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.148326967 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.150371872 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.147849188 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.150744665 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.151036765 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.148880721 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.150605506 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.151162669 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.151082796 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.148153655 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.148938252 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.150781338 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.148216495 seconds)
  done (took 19.475764383 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.147560413 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.151262355 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.151584435 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.151500081 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.149130805 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.149717456 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.152972901 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.14844352 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.148893505 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.152271188 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.151257262 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.15073564 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.151185522 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.151459475 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.149060975 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.152351367 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.149213108 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.149376492 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.151538304 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.151662088 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.150958799 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.14876308 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.151399684 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.151927935 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.149495085 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.150036952 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.150367774 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.149642467 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.149286569 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.152777737 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.148807182 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.149418126 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.150286958 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.149823223 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.151997226 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.15000921 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.152609317 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.153166735 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.152425491 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.152657892 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.153337753 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.14988433 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.152725217 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.152538896 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.149886294 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.153928426 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.150006282 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.151281008 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.151020742 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.150259528 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.153933551 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.152571173 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.153967499 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.154828956 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.154322147 seconds)
  done (took 64.398060268 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.154092652 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.154283089 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.151204272 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.153865982 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.153366994 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.150968485 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.153375585 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.151678447 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.151283645 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.154544316 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.152577533 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.153844245 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.150693215 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.154356471 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.152421889 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.153311123 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.152565733 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.152013535 seconds)
  done (took 21.836867731 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.152913186 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.152375208 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.154555717 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.152807131 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.152401162 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.155250377 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.152667256 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.154058844 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.155254767 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.152820679 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.153140213 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.155254917 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.154730611 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.154847642 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.153374178 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.152682079 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.156001596 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.155352496 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.152738642 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.152970118 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.155503583 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.154901464 seconds)
  done (took 26.474268162 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.154438351 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.154043798 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.169718995 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.191979101 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.180660883 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.154409219 seconds)
  done (took 8.094086069 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.154283367 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.155653811 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.153879117 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.156219856 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.155930217 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.153494892 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.154126596 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.153409646 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.155496285 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.153969355 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.153965668 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.156556507 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.156883132 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.15420715 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.155840897 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.156286505 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.154940262 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.154130347 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.154162931 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.156914876 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.154517797 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.157323215 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.154646551 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.15440479 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.154182453 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.154773918 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.157529092 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.154077249 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.154908169 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.157513084 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.157570656 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.154916874 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.156600718 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.156856095 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.158500337 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.158587774 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.155619595 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.158002889 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.1584997 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.155462725 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.158387024 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.158282127 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.15803819 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.155705844 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.15842386 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.155856494 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.155981802 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.155820414 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.155398295 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.159797074 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.159733717 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.157496229 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.159001706 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.158926998 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.158766628 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.159733127 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.15746989 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.156695821 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.159090965 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.157322313 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.157329699 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.160276064 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.155996471 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.158174746 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.160003385 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.156307092 seconds)
  done (took 77.420205083 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.156178803 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.157117236 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.156689339 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.157447485 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.157788874 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.156511152 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.156751336 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.156865371 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.15748244 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.156835572 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.159498134 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.157538032 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.157310428 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.158387162 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.157207332 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.15836436 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.157147193 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.157137737 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.157548138 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.161082343 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.157158003 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.158304329 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.15795552 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.158381379 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.158137425 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.159724524 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.158481685 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.158716698 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.157862065 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.158130456 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.159162602 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.1582808 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.157410194 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.15791683 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.158609332 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.158704152 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.158088619 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.158565766 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.158265139 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.161309161 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.15767903 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.161406026 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.158996057 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.158774205 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.158933072 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.159113648 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.159010243 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.159548682 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.159487045 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.159064405 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.15870899 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.159966001 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.159180081 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.160130875 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.159408977 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.159115781 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.160590235 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.160925751 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.159605536 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.161441451 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.159828011 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.159906848 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.162433138 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.160205182 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.159851274 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.160149811 seconds)
  done (took 77.567214375 seconds)
done (took 1585.891359846 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.236720769 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.228085901 seconds)
  done (took 13.559994076 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.322616179 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.276977826 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.159611686 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.163925381 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.161061893 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.184757606 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.181327076 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.161013117 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.160391821 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.160359619 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.160448202 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.348349162 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.216682963 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.16122594 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.160628216 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.253973218 seconds)
  done (took 40.330303817 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.186648828 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.170272825 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.273474059 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.188875633 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.191287501 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.339226102 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.223077198 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.168427051 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.325938485 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.213023079 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.618930478 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.19262601 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.169756202 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.200183644 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.185838189 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.342122205 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.402527662 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.62400228 seconds)
  done (took 27.111968977 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.584378588 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.1749113 seconds)
  done (took 8.859294978 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.175209273 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.170847093 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.187601318 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.18482197 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.176125443 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.1687367 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.165588028 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.17964418 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.21215752 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.225157872 seconds)
  done (took 62.946249508 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.187377689 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.169560078 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.169082342 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.167474347 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.160829181 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.160921638 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.167804374 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.161360103 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.510410827 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.289770932 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.185902454 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.176422311 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.168479119 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.16919477 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.166813728 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.20368437 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.313359646 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.167181886 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.165873781 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.174581271 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.169755572 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.25105478 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.20638038 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.170278778 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.284952463 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.529053518 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.177012608 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.176852175 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.29927352 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.167953813 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.168930149 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.170280156 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.171606725 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.728423917 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.647743104 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.178893431 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.18820967 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.174416856 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.162279418 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.283835918 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.165884444 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.171602265 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.166567552 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.614054434 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.311980628 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.261993951 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.307694714 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.163472058 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.158790724 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.215830749 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.157112607 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.158976438 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.18361741 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.894911416 seconds)
  done (took 101.376822647 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.155827584 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.643644692 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.317159427 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.171517226 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.992405881 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.925019229 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.1516304 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.415340783 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.178674322 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.149813256 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.479887212 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.635265813 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.159859364 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.202029094 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.689861518 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.212753473 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.150864477 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.865559104 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.155166689 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.148429241 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.561070432 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.164366331 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.153380679 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.33650794 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.187796926 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.591761451 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.485127086 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.635962994 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.157988626 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.150765152 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.599820821 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.159706924 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.184543711 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.153755709 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.413404992 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.492849177 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.466147682 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.154911618 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.156028031 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.151572856 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.184321283 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.589471032 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.477522424 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.155695376 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.157390292 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.59876671 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.156300579 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.157113659 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.152316302 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.356064073 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.069533916 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.15289696 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.496031826 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.156988605 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.412147465 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.248785766 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.183582361 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.625298422 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.15706274 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.300953611 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.189791407 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.152537479 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.151576696 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.154917356 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.153970203 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.480765912 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.485388958 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.153596157 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.482972696 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.601002362 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.156828042 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.672442742 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.042475909 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.158852369 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.194625566 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.151831921 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.855044176 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.62814607 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.17071977 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.152237229 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.467489184 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.161713927 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.463356247 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.169919012 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.152897373 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.572125645 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.171949128 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.17827251 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.152996961 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.15300132 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.917171842 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.154092773 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.409678378 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.220827065 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.152221548 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.153474064 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.195812373 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.153971947 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.155468253 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.159489669 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.658185261 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.162379857 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.441734282 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.174964473 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.168195201 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.15841938 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.155516255 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.15372354 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.375475924 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.639350207 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.162947829 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.156623842 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.153720848 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.161651068 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.294497748 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.158589721 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.441616805 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.159830028 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.154146284 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.154839746 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.972587392 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.188218292 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.15448379 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.158386768 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.974438778 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.359545795 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.17113027 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.153749969 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.155997787 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.169107563 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.455978664 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.161594941 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.218771772 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.15984379 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.838063442 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.181574068 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.179421231 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.735072759 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.16408858 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.095368175 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.180492826 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.156730874 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.45962797 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.421156675 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.297120205 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.155835482 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.155140286 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.824779277 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.183071861 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.294296416 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.172464572 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.149606105 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.351565924 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.299729706 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.155192823 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.722053615 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.157575717 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.371912615 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.155741513 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.469799365 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.627178964 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.160824717 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.162229399 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.842901941 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.831247458 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.818147253 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.156326748 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.480701442 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.135069424 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.607311123 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.155455585 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.157534105 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.728577305 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.158163562 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.159581288 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.156488118 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.157713005 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.219834455 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.330084819 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.701272372 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.157965941 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.601258271 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.171834307 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.157728381 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.166957974 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.156215433 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.50951721 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.199094611 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.158151305 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.171340078 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.159700199 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.163716766 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.612841084 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.069968811 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.162152498 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.31008736 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.766232371 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.163184164 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.159691395 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.787453672 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.367029971 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.647917366 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.188963222 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.447435654 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.16062763 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.196688668 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.933884494 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.241238619 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.653903561 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.16030361 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.15870393 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.740343515 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.162696441 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.197162705 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.158778747 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.160753918 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.674236674 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.16309189 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.161419094 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.45905301 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.162923622 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.409439955 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.159281062 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.185924407 seconds)
  done (took 1070.919931188 seconds)
done (took 1326.198363341 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.160703271 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.15983652 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.151309154 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.162873427 seconds)
  done (took 25.733342854 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.169743903 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.164394281 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.165380219 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.164802646 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.167768821 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.165368354 seconds)
  done (took 8.094456571 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.237604323 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.159017164 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.162533698 seconds)
  done (took 18.657647644 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.367885641 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.402224204 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.511257858 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.275016999 seconds)
  done (took 9.65373093 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.166483169 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.165700124 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.165897791 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.168220365 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.169765066 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.17106177 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.168910584 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.1689113 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.170691065 seconds)
  done (took 11.613875812 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.866249523 seconds)
done (took 79.717109194 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.43676049 seconds)
    (2/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.833354231 seconds)
    (3/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.178596537 seconds)
    (4/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.189962177 seconds)
    (5/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.494414383 seconds)
    (6/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.246580541 seconds)
    (7/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.358471702 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.000485022 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.750710518 seconds)
    (10/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.34201818 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.399671911 seconds)
    (12/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.205592964 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.534811064 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.186614189 seconds)
    (15/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.577206512 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.216323539 seconds)
    (17/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.264563668 seconds)
    (18/309) benchmarking ("sort", Float64, false)...
    done (took 5.420723481 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.201705286 seconds)
    (20/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.163835487 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.16337513 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.189286349 seconds)
    (23/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.210223958 seconds)
    (24/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.998509442 seconds)
    (25/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.266880674 seconds)
    (26/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.263257845 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.78805608 seconds)
    (28/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.174287517 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.239808702 seconds)
    (30/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.537232545 seconds)
    (31/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.178278861 seconds)
    (32/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.175973858 seconds)
    (33/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.742103328 seconds)
    (34/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.18626962 seconds)
    (35/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.148787701 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.200036505 seconds)
    (37/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.967738561 seconds)
    (38/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.169283683 seconds)
    (39/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.766265295 seconds)
    (40/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.176692189 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.207141405 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.148016886 seconds)
    (43/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.573949719 seconds)
    (44/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.97745047 seconds)
    (45/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.152840555 seconds)
    (46/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.520381653 seconds)
    (47/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.270637723 seconds)
    (48/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.939530693 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.560195314 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.76876222 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.153834199 seconds)
    (52/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.152581755 seconds)
    (53/309) benchmarking ("sort", Float32, false)...
    done (took 5.147714511 seconds)
    (54/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.887045998 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.162400198 seconds)
    (56/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.188738561 seconds)
    (57/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.173108334 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.467021653 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.19053305 seconds)
    (60/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.190106211 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.274941263 seconds)
    (62/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.248246387 seconds)
    (63/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.481797924 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.432432065 seconds)
    (65/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.783291946 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.169587574 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.26802404 seconds)
    (68/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.30140489 seconds)
    (69/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.186148949 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.046009227 seconds)
    (71/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.755878489 seconds)
    (72/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.164477447 seconds)
    (73/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.583140435 seconds)
    (74/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.321904531 seconds)
    (75/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.347195178 seconds)
    (76/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.222264885 seconds)
    (77/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.68647855 seconds)
    (78/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.458681127 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.42139889 seconds)
    (80/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.418209898 seconds)
    (81/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.203657555 seconds)
    (82/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.507075804 seconds)
    (83/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.478279353 seconds)
    (84/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.353414896 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.912173119 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.780882673 seconds)
    (87/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.192560671 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.158221422 seconds)
    (89/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.272008279 seconds)
    (90/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.16544917 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.554952008 seconds)
    (92/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.640510103 seconds)
    (93/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.156348389 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.64541904 seconds)
    (95/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.321247838 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.846767535 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.610089769 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.178273106 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.174379952 seconds)
    (100/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.415581743 seconds)
    (101/309) benchmarking ("sort", Int64, false)...
    done (took 5.330303819 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.541875754 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.044362797 seconds)
    (104/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.170873539 seconds)
    (105/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.478382431 seconds)
    (106/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.379219776 seconds)
    (107/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.293654995 seconds)
    (108/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.604249637 seconds)
    (109/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.187090512 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.569861309 seconds)
    (111/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.964760592 seconds)
    (112/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.396742435 seconds)
    (113/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.41800203 seconds)
    (114/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.702396796 seconds)
    (115/309) benchmarking ("sort", Int8, false)...
    done (took 4.179341711 seconds)
    (116/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.390176484 seconds)
    (117/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.192923223 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.422798217 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.984077205 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.166580325 seconds)
    (121/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.504518489 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.179245997 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.103982881 seconds)
    (124/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.055329762 seconds)
    (125/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.256239676 seconds)
    (126/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.160979036 seconds)
    (127/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.185491149 seconds)
    (128/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.928640708 seconds)
    (129/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.582794016 seconds)
    (130/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.38020339 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.515903783 seconds)
    (132/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.190076585 seconds)
    (133/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.39557642 seconds)
    (134/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.888600076 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.16831568 seconds)
    (136/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.229273508 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.71637343 seconds)
    (138/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.520476292 seconds)
    (139/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.871590277 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.061201253 seconds)
    (141/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.97377778 seconds)
    (142/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.188704634 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.735950479 seconds)
    (144/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.551177899 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.084533052 seconds)
    (146/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.257047679 seconds)
    (147/309) benchmarking ("sort", Bool, false)...
    done (took 1.67784718 seconds)
    (148/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.18999329 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.433461487 seconds)
    (150/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.704000158 seconds)
    (151/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.270572075 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.001138855 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.221841575 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.909140759 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.431635052 seconds)
    (156/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.490179972 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.369323725 seconds)
    (158/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.364305414 seconds)
    (159/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.499435858 seconds)
    (160/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.184777013 seconds)
    (161/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.25908039 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.195690361 seconds)
    (163/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.274423404 seconds)
    (164/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.168695808 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.589590425 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.533189671 seconds)
    (167/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.710195986 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.516856158 seconds)
    (169/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.169581433 seconds)
    (170/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.241974984 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.981790145 seconds)
    (172/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.921540494 seconds)
    (173/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.20076735 seconds)
    (174/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.157388804 seconds)
    (175/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.931622446 seconds)
    (176/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.154539248 seconds)
    (177/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.179336501 seconds)
    (178/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.529474196 seconds)
    (179/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.200485966 seconds)
    (180/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.192191608 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.169464861 seconds)
    (182/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.184626896 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.277398646 seconds)
    (184/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.491724825 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.186992257 seconds)
    (186/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.755376647 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.488475829 seconds)
    (188/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.885960074 seconds)
    (189/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.203782997 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.16960525 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.158912563 seconds)
    (192/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.867173452 seconds)
    (193/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.271366083 seconds)
    (194/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.195757521 seconds)
    (195/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.530118238 seconds)
    (196/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.533369997 seconds)
    (197/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.302368305 seconds)
    (198/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.315866487 seconds)
    (199/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.257676692 seconds)
    (200/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.293689675 seconds)
    (201/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.186641703 seconds)
    (202/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.230079549 seconds)
    (203/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.722580274 seconds)
    (204/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.201348124 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.179814111 seconds)
    (206/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.216763081 seconds)
    (207/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.181082474 seconds)
    (208/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.374895501 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.380752991 seconds)
    (210/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.175818182 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.247541505 seconds)
    (212/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.255526812 seconds)
    (213/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.258048264 seconds)
    (214/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.724961491 seconds)
    (215/309) benchmarking ("sort", BigInt, false)...
    done (took 6.175964802 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.299996444 seconds)
    (217/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.295169359 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.266132628 seconds)
    (219/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.483928112 seconds)
    (220/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.178429805 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.168504306 seconds)
    (222/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.229912841 seconds)
    (223/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.197415057 seconds)
    (224/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.156617589 seconds)
    (225/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.704931323 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.200576622 seconds)
    (227/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.528153114 seconds)
    (228/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.480430486 seconds)
    (229/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.534038822 seconds)
    (230/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.180003912 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.013216657 seconds)
    (232/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.998798078 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.06010027 seconds)
    (234/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.162764073 seconds)
    (235/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.257749204 seconds)
    (236/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.810833487 seconds)
    (237/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.374171623 seconds)
    (238/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.172748809 seconds)
    (239/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.654339768 seconds)
    (240/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.38161741 seconds)
    (241/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.199397605 seconds)
    (242/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.538888977 seconds)
    (243/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.89594137 seconds)
    (244/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.277863203 seconds)
    (245/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.558414817 seconds)
    (246/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.233904895 seconds)
    (247/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.158775867 seconds)
    (248/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.40529161 seconds)
    (249/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.241415896 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.172373751 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.240125812 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.896766384 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.191642599 seconds)
    (254/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.717128321 seconds)
    (255/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.001342203 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.279141156 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.004203774 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.586975406 seconds)
    (259/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.505763894 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.560287544 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.595213009 seconds)
    (262/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.196754793 seconds)
    (263/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.200435042 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.578580766 seconds)
    (265/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.483140608 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.890777985 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.658087882 seconds)
    (268/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.380879961 seconds)
    (269/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.461027921 seconds)
    (270/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.193898558 seconds)
    (271/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.201243588 seconds)
    (272/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.237333891 seconds)
    (273/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.185171921 seconds)
    (274/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.201679691 seconds)
    (275/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.280376409 seconds)
    (276/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.921775958 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.564938789 seconds)
    (278/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.257532738 seconds)
    (279/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.258933854 seconds)
    (280/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.527577015 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.530651927 seconds)
    (282/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.780089979 seconds)
    (283/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.778741494 seconds)
    (284/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.293223354 seconds)
    (285/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.184193674 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.065495484 seconds)
    (287/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.029676103 seconds)
    (288/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.705921369 seconds)
    (289/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.264269377 seconds)
    (290/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.200133176 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.258071441 seconds)
    (292/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.806340997 seconds)
    (293/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.900145976 seconds)
    (294/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.269948585 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.28783272 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.985551751 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.24764664 seconds)
    (298/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.175337561 seconds)
    (299/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.28256109 seconds)
    (300/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.412214116 seconds)
    (301/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.16614156 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.161260959 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.218945122 seconds)
    (304/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.756897119 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.207453924 seconds)
    (306/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.175928547 seconds)
    (307/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.763057979 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.198806272 seconds)
    (309/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.239411317 seconds)
  done (took 865.728450215 seconds)
done (took 866.828672593 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.208540393 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.202048609 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.186334907 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.208047579 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.297879597 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.218218249 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.198007114 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.189188787 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.234078054 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.235499668 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.185089952 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.218554994 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.187462969 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.187017005 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.185802954 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.20101918 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.177908138 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.187166127 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.203897452 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.196793139 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.203754439 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.18532592 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.236091472 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.219565849 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.191292968 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.191307145 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.190564667 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.207173686 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.298378444 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.190764634 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.192069794 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.199508695 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.178643753 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.186807155 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.183959311 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.207658455 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.198218255 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.197754813 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.191663957 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.220194462 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.558106255 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.188360403 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.189586739 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.189183191 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.190351953 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.194247206 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.189335762 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.196610539 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.201963168 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.202615765 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.548689513 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.203650615 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.191484766 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.190238838 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.200166095 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.188853753 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.193214676 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.205044507 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.208415696 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.204721083 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.167903214 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.195130491 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.191593022 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.205536122 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.197425183 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.590790679 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.184785899 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.194504545 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.56686708 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.195447097 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.592211181 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.198064368 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.191624149 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.204339892 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.222165025 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.183834371 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.186174113 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.189987308 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.197350176 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.189698702 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.200422899 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.202884798 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.195683401 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.191441869 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.204773417 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.22286511 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.201661723 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.191519451 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.200146066 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.210160407 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.199057018 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.201168294 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.194965679 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.187821122 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.200592578 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.194768712 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.193452496 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.193913552 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.196339427 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.202165415 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.56962388 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.207512422 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.188457801 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.188483115 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.191710764 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.205677567 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.571631174 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.192352782 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.214908819 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.239886471 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.194026802 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.175629287 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.196040359 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.207404996 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.202669364 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.196440506 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.188003832 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.176728588 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.563273924 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.206300728 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.194127557 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.190496927 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.208979921 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.194513153 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.188988591 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.191152055 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.193911185 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.206817575 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.313993543 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.20397379 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.224871425 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.190630835 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.196641219 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.221326377 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.208521138 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.224690463 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.196256939 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.208748676 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.210144445 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.190122952 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.204982432 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.204406054 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.194972741 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.199022804 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.188619282 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.226401763 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.206495273 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.206825168 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.21564684 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.314700317 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.191967133 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.176975762 seconds)
done (took 202.732835379 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.252780484 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.189015042 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.273241721 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.191203488 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.289251063 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.287391228 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.18887971 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.188053704 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.188496093 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.581503956 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.189577232 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.188737034 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.190458361 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.18921613 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.272224909 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.191567813 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.189222037 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.533448332 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.191245444 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.261959089 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.183510881 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.18965864 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.192737211 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.574800703 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.185537976 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.187881832 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.261962614 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.191801824 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.538765938 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.185972763 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.192549193 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.541325578 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.281751671 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.209759641 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.201676911 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.199054599 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.290166811 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.208396974 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.273863534 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.273600929 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.275728799 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.230319849 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.187861885 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.194001673 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.194483448 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.193483337 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.190965565 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.219860109 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.187503575 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.192468716 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.562412654 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.203238494 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.201325504 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.190779382 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.190577134 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.212761958 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.191414706 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.193290259 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.282023783 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.192597237 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.254611126 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.574799174 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.612989836 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.19380325 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.193374293 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.191863735 seconds)
  done (took 139.024301166 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.259730463 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.267517007 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.30208216 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.194093803 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.24318204 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.306667601 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.195696392 seconds)
  done (took 9.893122804 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.199351605 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.194776362 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.243488031 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.24374458 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.193395404 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.340277901 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.1945823 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.206089507 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.192104685 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.246898456 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.196721772 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.195665004 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.201689921 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.196412711 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.242355865 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.205412463 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.309154802 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.195031915 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.195014235 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.346264885 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.193148665 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.202140188 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.246280021 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.207094788 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.196037094 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.199946157 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.763787777 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.194883523 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.192884799 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.196280165 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.192563889 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.232657276 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.195929596 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.195074601 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.19306434 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.311133486 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.194962574 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.193856004 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.197093879 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.192400438 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.19618334 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.195901284 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.197319276 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.193460933 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.196762388 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.220071692 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.197345176 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.196120421 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.196770293 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.197000078 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.246853958 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.197683226 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.194476216 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.194821061 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.252234689 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.204908811 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.196791162 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.193617527 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.197967019 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.195631409 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.347642092 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.244560883 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.197260682 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.244259156 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.198933761 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.19810641 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.197301892 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.197663946 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.251511511 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.198341571 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.245526297 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.195786898 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.350661319 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.219790101 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.202017138 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.199698429 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.200293689 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.198335451 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.193528472 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.202998913 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.195786969 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.198980728 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.203623159 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.195607707 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.195862534 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.299624964 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.306110162 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.196614108 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.210123179 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.205910293 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.196551322 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.250822503 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.198868274 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.196521078 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.249451985 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.313453196 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.251829914 seconds)
  done (took 139.770066871 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.20284113 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.207079916 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.200844829 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.214725081 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.199645199 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.198918328 seconds)
  done (took 8.352698729 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.201005215 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.199779305 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.199889441 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.200345534 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.199331583 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.200437683 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.199323581 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.200463205 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.202468266 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.199809008 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.201121882 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.200947919 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.200919975 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.199873576 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.199970471 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.19992803 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.200418843 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.197804406 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.200732257 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.199526495 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.295663514 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.200114851 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.199948927 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.201585226 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.204648964 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.200879999 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.208824011 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.201010211 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.201919872 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.208549445 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.203529626 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.201981 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.201798262 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.205218164 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.204496301 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.202338995 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.204341777 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.20331755 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.199093352 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.201824169 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.202508842 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.201319803 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.201936626 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.202568224 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.202177318 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.204836642 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.206510579 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.209294298 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.202367166 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.204210719 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.203101443 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.201861207 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.203206374 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.203005589 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.203838292 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.206897682 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.206040933 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.202394733 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.201550766 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.202893675 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.204339011 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.203508985 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.204429765 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.205661995 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.209477974 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.204791258 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.20399857 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.206582175 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.203140044 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.203351023 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.204264998 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.201391574 seconds)
  done (took 88.814377868 seconds)
done (took 386.975617683 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.489112515 seconds)
  done (took 7.621655261 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.426335022 seconds)
  done (took 7.561063941 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.266608959 seconds)
  done (took 21.409068443 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.242538019 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.29417218 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.213900333 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.197421249 seconds)
  done (took 26.082112999 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.489913215 seconds)
  done (took 7.623794887 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.197179133 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.195971136 seconds)
  done (took 13.528824004 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.468351762 seconds)
  done (took 7.602501161 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.377771871 seconds)
  done (took 7.518701936 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.196777395 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.197240685 seconds)
  done (took 13.766421766 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.183914691 seconds)
  done (took 7.320073968 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.93501498 seconds)
  done (took 8.071154008 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.207498398 seconds)
  done (took 7.344734482 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.252529986 seconds)
  done (took 7.388871887 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.986930483 seconds)
  done (took 9.123911117 seconds)
done (took 153.096893506 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.199321324 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.199741994 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.204282732 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.200210487 seconds)
  done (took 25.939993929 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.24044771 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.240229465 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.241548772 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.674168788 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.243522582 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.240241968 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.232487575 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.233161794 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.251522773 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.243383781 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.243736524 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.243708171 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.240991931 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.232786843 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.243203275 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.241853276 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.251922155 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.241982658 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.233671697 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.243527946 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.208916263 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.251871455 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.244195397 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.208420567 seconds)
  done (took 31.309075021 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.406015389 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.279351422 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.361070888 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.258421381 seconds)
  done (took 6.442450036 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.259477614 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.260958488 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.272148206 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.311032467 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.337422957 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.270903425 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.234056703 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.230191737 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.215726165 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.261426093 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.337414433 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.276876638 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.374220838 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.207721651 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.406342858 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.208546297 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.208048832 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.260801965 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.312267996 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.325833052 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.208859495 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.259570448 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.264188247 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.278113766 seconds)
  done (took 31.720837995 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.208107323 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.216394947 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.214959245 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.208744515 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.208254692 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.208971708 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.214675403 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.209167843 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.229639859 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.209889807 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.208168014 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.208508263 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.208538625 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.209379599 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.208691738 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.222255258 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.222588523 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.209278586 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.211979261 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.215214258 seconds)
  done (took 25.392767365 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.202399324 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.127639672 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.554432154 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.458080631 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.202359008 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.20788801 seconds)
  done (took 26.893387799 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.276482234 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.411008199 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.210394172 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.55377247 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.629769774 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.210897937 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.21110014 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.443188883 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.7381532 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.739678215 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.268674119 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.272989747 seconds)
  done (took 18.106477362 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.215337203 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.209691638 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.217722785 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.225118624 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.262634994 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.213840585 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.217623633 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.20337598 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.267944882 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.267521656 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.213492106 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.263347395 seconds)
  done (took 35.919535446 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.291578525 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.253649697 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.160466979 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.945078819 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.922913746 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.417685626 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.973736104 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.62264208 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.209987732 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.479956045 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.204491844 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.313538395 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.46163704 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.205621513 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.21186361 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.182819535 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434504801 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.686877668 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.207827845 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.066432485 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.236285316 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.218686735 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.246949125 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.239304865 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.41795223 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.183212599 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.468122215 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.983363365 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483174966 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.221813056 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.21728712 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.206509254 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.481673783 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856652962 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.303028384 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.216931829 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.906139555 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.752656137 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.192010883 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.166047451 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.948079815 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.214848252 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.218075621 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.20864048 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.141302979 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.207361262 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636993551 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.214459502 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.919195139 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.208523934 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.21940497 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.303206356 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.210976031 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.777704671 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212746891 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.213864256 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.206890618 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.215259134 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.782189283 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.544758862 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.226544948 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.147703774 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.588312599 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.086290368 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826299828 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.311494579 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.213535492 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.212571685 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.143346404 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.081938002 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.230742982 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356195516 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.234770564 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.858835341 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897526553 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.227842598 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.145115394 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.752355749 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.216605532 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.147839905 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.436458348 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.986568099 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.145602818 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.165205042 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.144503145 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918331904 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.2183572 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.573027173 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.217639084 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.626869139 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.221434141 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.228566955 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.234131932 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.432773769 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.093688676 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.209701801 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.990639901 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357020539 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.23240232 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.633157768 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.145755147 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.214573487 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.466008416 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.42084656 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.222816706 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.204188867 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402049413 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.215018701 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.23065992 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.210535749 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.226853512 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.770684652 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.226605193 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.548444739 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.232982957 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.987590583 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951397956 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.212242286 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.330956766 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.211602985 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.456898453 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.981715949 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.37163102 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.280272128 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.21423304 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.211066922 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.19447784 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.06729011 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.108371405 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.214436889 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.216309465 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.227035522 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.212481775 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.161220709 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.211065708 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.216589049 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.996714024 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.436295651 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.211956086 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.510025774 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.14569486 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359681219 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.221389358 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.435379023 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.378965847 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.216602852 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476073811 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.213487359 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.22168132 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.228371312 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.231916969 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.309556777 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.233875371 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.213096422 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.474696007 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.217036108 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.217870641 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.201637666 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.996666989 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.216698121 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.218201281 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.041256677 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782696281 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192450139 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.222617744 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101042386 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.227272899 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.280981827 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.220396735 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.223603855 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.97196421 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.026831165 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.219646703 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.216174374 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.440937022 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.225172791 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.188152804 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.301182324 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.402885891 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.782429777 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.233178473 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.148794556 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.926127908 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.906939755 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.21462381 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.403750988 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.214698533 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.225313887 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.225616251 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.72886425 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.77703834 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.222005194 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.111869844 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.226811287 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.227219917 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.22097501 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.215107852 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.949646174 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.576725758 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.223241202 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.232012256 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359280807 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.228965258 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.14972636 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.73289978 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.221516565 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.216633401 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.991764438 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.251145594 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.1095039 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686472762 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476457557 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.911985609 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.229374235 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.209909435 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.251435869 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.217562703 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.029388944 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.245700541 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.224035886 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.229996074 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.22804339 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.174051948 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.66054944 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.786011477 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919247226 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747627652 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133342852 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.224017016 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.105854352 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.641513852 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.152564247 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.873613867 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403817401 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.645590299 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.163311312 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408440049 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.389275218 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.964502026 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.232067211 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.445901686 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128836604 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.041061263 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.248933358 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.428688086 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.252290832 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.226168223 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.15179171 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.503531524 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.442181167 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.004299769 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.304591103 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639449929 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.03758261 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.016304442 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.218135176 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.549761575 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384188678 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.766681385 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.60551882 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.233125199 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.237637286 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68852525 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.228060482 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.744710838 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820658141 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.234051532 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.414579871 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.158604095 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.231744347 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.230860171 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.220024455 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.473304141 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.221496062 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.494194834 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.230646601 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.153849295 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.220796274 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739526627 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.078663281 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.227767079 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.219568659 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977051286 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.221682295 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504261944 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.228662817 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.950780227 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.228581686 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.153713797 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.155282312 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.912930745 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.222238587 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197298503 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.720577983 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.581372203 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.209058911 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.253613875 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068119121 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.477765135 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.234493673 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.79008606 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45284769 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.016777544 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.244179162 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.321019377 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.08709125 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.227828101 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.105223738 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.457116018 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.049870778 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.445769748 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.19738003 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.127049186 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.220699663 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.434417428 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.117969937 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.222069335 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46497916 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.933783825 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.239269779 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91541758 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.252852991 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.221286555 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.238111508 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.602023918 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.229771017 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.292958675 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.232848041 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.232854418 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.232140482 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387200477 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.227849105 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.230685194 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.236191277 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.316761109 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.598429577 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.962161679 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.001829432 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797479527 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950369785 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.797284727 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.240822612 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.223623086 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.222438937 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.15701613 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372575505 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.748518536 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.497632597 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352359304 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.672024118 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.246417398 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.104601739 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.244567722 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44142068 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.498667662 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.094152401 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.228127891 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.886241356 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.382258299 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.234131231 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.43579579 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726740394 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.789259198 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345965661 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.226866166 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.65134781 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.499700611 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.31487387 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.223658808 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.816831896 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.245904927 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.569151481 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.231348324 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.235406544 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378445303 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.234183201 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.876445216 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.235457964 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.385083459 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.999070982 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.262318325 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.485334184 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.698383414 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.242484543 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.804090981 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.908103457 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.49393538 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.295483571 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.236386043 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.327547652 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371684081 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.232739456 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.127603322 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.225607729 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069725606 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.935702693 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.235629123 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795817189 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.494314402 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.224250926 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.232108398 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.253565465 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.235853007 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.449399368 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939533603 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.450583252 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.235946072 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.22799296 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.795948027 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.798932578 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.244988507 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.160879919 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.230099829 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460962574 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.463664637 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.251838734 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.679658436 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.938450771 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.778827268 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.199506415 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.248595299 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.231377227 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.911535454 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80061043 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.971650702 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.724520216 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.886096935 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.238042333 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.507747016 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.232491043 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.241221164 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.507900799 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.231509471 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.230662437 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.243718931 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.802267999 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.975667476 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.256028579 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.169771502 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.169524123 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.454319169 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.865970716 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.164762622 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.239062538 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.407391056 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.229965904 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357503416 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.240871897 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.238021692 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.233868439 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.987236317 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502210416 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.234691657 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.230684893 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.153532609 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.24565844 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.240078538 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.455726157 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.235864087 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.903822322 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.581293772 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.485318913 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.228903578 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.219317056 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.233205653 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.229533251 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.945210375 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.19867353 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.755914375 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.801083004 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.233332049 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.245973721 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.233671427 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.446054332 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44161163 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.236878515 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.246940134 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.239398798 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.250845215 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.134595614 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.995803675 seconds)
  done (took 1525.113618867 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.231438478 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.24318943 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.245820982 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.294157646 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.267793619 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.29826644 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.259629798 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.332173085 seconds)
  done (took 51.338300679 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.23647593 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.389298618 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.261110073 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.233232375 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.245016145 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.240006 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.686947557 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.247887464 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.238831787 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.239242443 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.232897827 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.235083329 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.879762907 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.244649588 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.240419115 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.228974392 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.244372848 seconds)
  done (took 63.4965449 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.231192431 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.744922013 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.332490986 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.235006875 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.143440714 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.246177907 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.964239045 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.250958349 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.2456748 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.443920166 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.887602488 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.241002561 seconds)
  done (took 83.134358369 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.239735617 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.239789469 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.239869365 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.239655609 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.239887269 seconds)
  done (took 7.364976375 seconds)
done (took 1933.309540352 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.478192731 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.904882576 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.886232301 seconds)
  done (took 4.957393322 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.379096552 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.426793941 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.547763685 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.554188811 seconds)
  done (took 7.074755532 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.51111865 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.616652556 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.423667352 seconds)
  done (took 5.71750451 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.614227108 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.248554247 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.372233355 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.231866812 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.235263002 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.237684859 seconds)
  done (took 19.873008663 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.237231078 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.239011848 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.236426832 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.238286592 seconds)
  done (took 6.118210733 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.217359804 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.920425984 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.223544914 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.239681615 seconds)
  done (took 17.768113285 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.983261033 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.996751753 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.981114695 seconds)
  done (took 7.129171165 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.245482666 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.079132277 seconds)
  done (took 9.492886422 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.53057302 seconds)
  done (took 2.699484678 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.369057055 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.562796311 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.277707987 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.192794421 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.271588192 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.950711196 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.830117973 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.41881187 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.194918312 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.341732793 seconds)
  done (took 26.579523282 seconds)
done (took 120.291888451 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.979226086 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.231507697 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.437930164 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.952788076 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.461643653 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.457955187 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.661426844 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.917591379 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.495870985 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.457059949 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.957565155 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.463442617 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.39380471 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.238040526 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.394056421 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.234818861 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.499075457 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.023096726 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.678425473 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.848603192 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.662437058 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.59603523 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.788825771 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.644798001 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.521993705 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.388504416 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.171315828 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.483873847 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.849610546 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.188694126 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.389702816 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.013341664 seconds)
  done (took 186.652512486 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.234846081 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.233884419 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.23654986 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.233761616 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.25326192 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.24795574 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.236982637 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.234249213 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.24432388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.235084992 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.235613607 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.257299911 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.235482359 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.249006413 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.235325016 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.235792032 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.242668625 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.235513771 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.258224889 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.235852505 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.238133236 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.24885346 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.235809653 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.249824996 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.235566429 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.234732922 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.236555058 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.246336664 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.235800478 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.235380814 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.235745742 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.235757027 seconds)
  done (took 200.851489759 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.237301713 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.236311253 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.250424606 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.237284141 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.267739133 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.238480893 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.2373461 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.249325915 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.242103509 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.236090931 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.236817903 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.236575042 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.240208413 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.237166144 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.239858174 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.236219718 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.236271886 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.244566151 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.235991028 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.236248681 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.23742781 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.237869441 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.23710224 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.246176469 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.248498919 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.237621768 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.238183691 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.237486523 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.250607779 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.251293282 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.239432513 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.23821049 seconds)
  done (took 200.884846467 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.432997686 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.244861601 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.246026985 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.181815458 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.246412325 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.245068826 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.244596804 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.441938914 seconds)
  done (took 13.457652167 seconds)
done (took 603.014595582 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.494291808 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.205881963 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.440234076 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.266067777 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.994716859 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.26755912 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.267754946 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.430290098 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.152298322 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.431388334 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.482328776 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.264623814 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.625738508 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.264715624 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.510445715 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.362545144 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.107122941 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.22042891 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.57767567 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.741296731 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.51886465 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.712650479 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.429502271 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.156178369 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.627110735 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.712997502 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.93921344 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.105808781 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.266702329 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.581916227 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.849657483 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.1861793 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.322979207 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.305835526 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.358689122 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.340798467 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.16676861 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.302730086 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.445242309 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.480293137 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.764867971 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.98450016 seconds)
  done (took 86.841389742 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.235547369 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.233760668 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.233656377 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.235672504 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.236316757 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.233983412 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.2348347 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.234995599 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.23558128 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.235050243 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.235013026 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.236957912 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.235270128 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.237563155 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.234811705 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.235877955 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.236397401 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.237828839 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.235417604 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.235728875 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.236642864 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.234704212 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.236255464 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.234733347 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.2362114 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.236615492 seconds)
  done (took 33.302515614 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.249921993 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.496527446 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.655869913 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.254007214 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.249314763 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.252281235 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.325421552 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.250844883 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.251870418 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.252046098 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.415941355 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.253851283 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.286936111 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.68199321 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.251698438 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.252002683 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.250492724 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.250627132 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.504111195 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.26125513 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.328499307 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.251385802 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.326805779 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.261197568 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.253919822 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.251758945 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.255708885 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.773751638 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.253653174 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.418071869 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.029783523 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.329582552 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.758206024 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.668870355 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.026844318 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.259567368 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.252898719 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.422560845 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.254305344 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.252613677 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.326516664 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.253368661 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.669784161 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.879560296 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.268376827 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.252546186 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.799744274 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.42282849 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.493633045 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.260531756 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.691802707 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.255710146 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.254208121 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.254543589 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.492127071 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.259124004 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.253706259 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.828700864 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.273215509 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.328487602 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.254571859 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.253362292 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.512048665 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.25367027 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.503613941 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.255453148 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.262612705 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.253620491 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.670203347 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.261447471 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.900943618 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.268616269 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.254683841 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.419796783 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.502485016 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.823882849 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.257278864 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.516476179 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.772335819 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.32768947 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.257783066 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.764270639 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.331717633 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.258343269 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.25820778 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.257264508 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.254306294 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.300850799 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.326397937 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.825329899 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.893748573 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.841374883 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.345928233 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.262239884 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.254779238 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.82872915 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.271500246 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.255284633 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.665975093 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.911246924 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.27131355 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.263761126 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.882970548 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.273210279 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.331787717 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.260011227 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.676853582 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.257045631 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.301829746 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.256952696 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.26350641 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.260721334 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.332325712 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.258983713 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.257597292 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.870141852 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.443946938 seconds)
  done (took 166.32935801 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.250628996 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.249882874 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.250081159 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.249763464 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.249559265 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.255348274 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.250045437 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.250614648 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.25525603 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.249307328 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.248714655 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.250882785 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.25325814 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.252241965 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.279913731 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.257239536 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.86025283 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.249348872 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.251356886 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.264039441 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.038664025 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.257292148 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.250176501 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.2663851 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.251082762 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.251126278 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.267944217 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.253144506 seconds)
  done (took 149.697930424 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.258170155 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.808124843 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.264106928 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.385055619 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.282960057 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.255969084 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.383636403 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.317312344 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.258949617 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.256245416 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.255706952 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.550929472 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.260513947 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.757952408 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.442916873 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.390997011 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.758446534 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.260347481 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.256842506 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.257078293 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.38807221 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.26649656 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.553039197 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.807749846 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.261398966 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.813860723 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.25359042 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.259656845 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.258695833 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.813984383 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.26370281 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.554041542 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.333461576 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.316415987 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.814788064 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.768376371 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.771051279 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.40568685 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.25874771 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.257456315 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.257851775 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.248446393 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.811696503 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.261005442 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.259220025 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.805345133 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.275487204 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.259852387 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.269252188 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.258222267 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.315962945 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.318535472 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.558613969 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.818359736 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.333678801 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.280107947 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.386459095 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.645077474 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.26203941 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.761430839 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.247567802 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.81534617 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.263507153 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.249429911 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.260286131 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.264679689 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.406584594 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.388563257 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.76781028 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.267676085 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.767793016 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.412405139 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.259176609 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.259840799 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.263121249 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.815875226 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.767629771 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.411680171 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.390760002 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.450660927 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.251080698 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.260791838 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.249760746 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.335840232 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.26128295 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.81734665 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.769819428 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.270437712 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.264142693 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.263405413 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.263820574 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.434039779 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.819290693 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.337417034 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.762556768 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.579856263 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.56080817 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.263930862 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.319318765 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.262158234 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.562098821 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.265920425 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.317176541 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.710018396 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.561519128 seconds)
  done (took 151.152934286 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.496817832 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.427781507 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.353544051 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.371525864 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.848402071 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.821778326 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.443152257 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.380862189 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.36816605 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.498912682 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.385523363 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.348735263 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.425076806 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.334352208 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.967501283 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.326352231 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.350610743 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.382628262 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.353521764 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.275935326 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.894742146 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.541669652 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.429306119 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.114451002 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.351896183 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.000490159 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.804847707 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.816318935 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.436752168 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.517432825 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.794682824 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.355335518 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.189291778 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.90545576 seconds)
  done (took 61.50471488 seconds)
done (took 650.002654731 seconds)
SAVING RESULT...
DONE!
